{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 65924ec06e4e5146eaed","webpack:///./src/constants/selection_types_constants.js","webpack:///./src/models/mol_widget_3d_model.js","webpack:///./src/views/mol_widget_3d_view.js","webpack:///external \"backbone\"","webpack:///external \"jquery\"","webpack:///./src/constants/environment_constants.js","webpack:///./src/constants/shape_constants.js","webpack:///./src/main.js","webpack:///./src/utils/lib_utils.js","webpack:///./src/utils/molecule_utils.js","webpack:///./src/vendor/3Dmol.js","webpack:///./src/views/nbmolviz3d_react.jsx","webpack:///./~/process/browser.js","webpack:///external \"keymirror\"","webpack:///external \"react\""],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","selectionTypeConstants","ATOM","RESIDUE","CHAIN","_interopRequireDefault","obj","__esModule","default","_backbone","_backbone2","_selection_types_constants","_selection_types_constants2","MolWidget3DModel","Model","extend","defaults","atom_labels_shown","background_color","background_opacity","height","model_data","atoms","bonds","orbital","cube_file","iso_val","opacity","styles","selected_atom_indices","selection_type","shapes","width","process","_typeof","Symbol","iterator","constructor","_environment_constants","_environment_constants2","_lib_utils","_lib_utils2","_molecule_utils","_molecule_utils2","jQuery","window","$","$3Dmol","DEFAULT_VISUALIZATION_TYPE","DEFAULT_FONT_SIZE","ORBITAL_COLOR_POSITIVE","ORBITAL_COLOR_NEGATIVE","MolWidget3DView","View","initialize","env","NODE_ENV","DEVELOPMENT","nbmolviz3d","push","this","model","on","render","bind","event","modelDataChanged","keys","changed","indexOf","messages","mydiv","document","createElement","classList","add","style","get","position","el","querySelector","appendChild","glviewer","renderViewer","send","_this","createViewer","defaultcolors","rasmolElementColors","clear","modelData","addModel","keepH","modelDataToCDJSON","getModel","selectedAtoms","forEach","atom","modifiedAtom","serial","name","chain","resi","residue_index","resn","residue_name","i","libStyle","visualizationType","visualization_type","styleKey","color","colorStringToNumber","addLabel","fontSize","x","positions","y","z","setStyle","stick","shape","type","getShapeSpec","setSelectionTrait","volumeData","VolumeData","addIsosurface","isoval","setBackgroundColor","setClickable","onClick","zoomTo","zoom","glAtom","selectionType","selectedAtomIndices","newSelectedAtomIndices","addSelection","set","save","require","_keymirror","_keymirror2","environmentConstants","shapeConstants","ARROW","SPHERE","CYLINDER","Nbmolviz3dReact","undefined","_jquery","_jquery2","_mol_widget_3d_model","_mol_widget_3d_model2","_mol_widget_3d_view","_mol_widget_3d_view2","_nbmolviz3d_react","_nbmolviz3d_react2","jquery","_shape_constants","_shape_constants2","libUtils","colorString","length","colorInt","parseInt","substr","isNaN","callback","shapeSpec","assign","alpha","clickable","radius","start","end","center","Error","fromCap","toCap","moleculeUtils","map","l","elem","mass","mass_magnitude","bond","b","atom1_index","e","atom2_index","o","bond_order","a","clickedAtom","selectedAtomsOut","slice","clickedIndex","toggleOn","splice","isSameGroup","filter","atomSerial","atomA","atomB","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","apply","utf8Write","view","offset","string","byteLength","codePoint","charCodeAt","setUint8","utf8ByteCount","count","encode$1","setUint16","setUint32","Uint8Array","bytes","buffer","isFinite","Math","floor","setFloat64","toString","setInt8","setInt16","setInt32","size","isArray","Array","key","encodedSize","encodeMsgpack","ArrayBuffer","DataView","getView","ctor","typedArray","elemSize","byteOffset","getDataView","getUint8View","getInt8View","Int8Array","getInt32View","Int32Array","getFloat32View","Float32Array","decodeInt16","output","n","Int16Array","i2","encodeInt16","array","dv","decodeInt32","i4","encodeInt32","decodeFloat32","dvOut","dvIn","il","setFloat32","getFloat32","decodeInteger","intArray","divisor","invDiv","encodeInteger","floatArray","factor","round","decodeRun","fullLength","dataOffset","j","encodeRun","runLength","decodeDelta","encodeDelta","decodePacking","int16or8","upperLimit","lowerLimit","encodePacking","useInt8","ceil","decodeDeltaRun","encodeDeltaRun","decodeIntegerRun","encodeIntegerRun","decodeIntegerDelta","encodeIntegerDelta","decodeIntegerPacking","decodeIntegerDeltaPacking","unpacked","encodeIntegerDeltaPacking","decodeBytes","getInt32","param","subarray","encodeBytes","out","passInt8","int8","passInt32","int32","passString","stringBytes","runChar","charBytes","deltaRun","integerRun","float32","integerDeltaPacking16","encodeMmtf","inputDict","outputDict","PassThroughFields","bondAtomList","bondOrderList","xCoordList","yCoordList","zCoordList","bFactorList","atomIdList","altLocList","occupancyList","groupIdList","groupTypeList","secStructList","insCodeList","sequenceIndexList","chainIdList","chainNameList","decodeMsgpack","parse","bin","str","chunkSize","String","fromCharCode","join","dataView","getInt8","getUint8","getUint16","getUint32","getFloat64","getInt16","performDecoding","decodeMmtf","params","ignoreFields","AllFields","ignore","data","charCodeArray","replace","traverseMmtf","mmtfData","eventCallbacks","ol","k","kl","firstModelOnly","onModel","onChain","onGroup","onAtom","onBond","modelIndex","chainIndex","groupIndex","atomIndex","modelFirstAtomIndex","modelLastAtomIndex","chainsPerModel","modelChainCount","chainCount","chainGroupCount","groupsPerChain","chainId","chainName","groupCount","groupData","groupList","groupAtomCount","atomNameList","secStruct","insCode","sequenceIndex","atomCount","groupId","groupType","groupName","singleLetterCode","chemCompType","atomId","bFactor","altLoc","occupancy","element","elementList","atomName","formalCharge","formalChargeList","xCoord","yCoord","zCoord","groupBondAtomList","atomIndex1","atomIndex2","bondOrder","encode","decode","binOrDict","_fetch","pdbid","baseUrl","onLoad","onError","_onLoad","xhr","response","error","XMLHttpRequest","addEventListener","responseType","open","toUpperCase","fetch","fetchUrl","fetchReduced","fetchReducedUrl","EncodedFields","concat","version","traverse","f","t","r","s","u","code","1","TYPED_OK","Uint16Array","sources","prototype","arguments","source","shift","TypeError","hasOwnProperty","shrinkBuf","buf","fnTyped","arraySet","dest","src","src_offs","len","dest_offs","flattenChunks","chunks","pos","chunk","result","fnUntyped","setTyped","Buf8","Buf16","Buf32","2","buf2binstring","STR_APPLY_UIA_OK","STR_APPLY_OK","utils","__","_utf8len","q","string2buf","c2","m_pos","str_len","buf_len","binstring2buf","buf2string","max","c_len","utf16buf","utf8border","./common","3","adler32","adler","s1","s2","4","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","5","makeTable","table","crc32","crc","crcTable","6","GZheader","text","time","xflags","os","extra","extra_len","comment","hcrc","done","7","BAD","TYPE","strm","state","_in","last","_out","beg","dmax","wsize","whave","wnext","hold","bits","lcode","dcode","lmask","dmask","here","op","dist","from","from_source","input","next_in","avail_in","next_out","avail_out","lencode","distcode","lenbits","distbits","top","dolen","mode","msg","dodist","sane","8","ZSWAP32","InflateState","wrap","havedict","flags","check","total","head","wbits","ncode","nlen","ndist","have","next","lens","work","lendyn","distdyn","back","was","inflateResetKeep","total_in","total_out","HEAD","ENOUGH_LENS","ENOUGH_DISTS","inflateReset","inflateReset2","windowBits","inflateInit2","ret","inflateInit","DEF_WBITS","fixedtables","virgin","sym","lenfix","distfix","inflate_table","LENS","DISTS","updatewindow","copy","inflate","flush","put","left","here_bits","here_op","here_val","last_bits","last_op","last_val","opts","hbuf","order","TYPEDO","inf_leave","FLAGS","DICTID","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICT","CHECK","STORED","LEN_","TABLE","COPY_","COPY","LENLENS","CODES","CODELENS","LEN","inflate_fast","LIT","LENEXT","DIST","DISTEXT","MATCH","LENGTH","DONE","MEM","Z_MEM_ERROR","SYNC","data_type","inflateEnd","inflateGetHeader","MAX_WBITS","inflateInfo","../utils/common","./adler32","./crc32","./inffast","./inftrees","9","MAXBITS","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","fill","low","mask","min","root","curr","drop","used","huff","base","base_index","offs","extra_index","10","0","-1","-2","-3","-4","-5","-6","11","ZStream","/lib/inflate.js","options","inflator","Inflate","err","inflateRaw","raw","zlib_inflate","strings","zstream","gzheader","to","opt","ended","status","header","_mode","next_out_utf8","tail","utf8str","onEnd","onData","ungzip","./utils/common","./utils/strings","./zlib/constants","./zlib/gzheader","./zlib/inflate.js","./zlib/messages","./zlib/zstream","my","location","protocol","startsWith","lastIndexOf","endsWith","suffix","ajaxTransport","originalOptions","jqXHR","FormData","dataType","Blob","headers","url","async","username","password","statusText","getAllResponseHeaders","setRequestHeader","abort","config","GLViewer","viewers","download","query","viewer","pdbUri","uri","ajax","processData","txt","addMolData","fail","console","log","format","noComputeSecondaryStructure","match","alert","SurfaceType","VDW","MS","SAS","SES","mergeGeos","geometry","mesh","meshGeo","geometryGroups","multiLineString","syncSurface","navigator","userAgent","specStringToObject","massage","val","isNumeric","parseFloat","fields","split","fv","vstr","kvs","kv","getExtent","atomlist","ignoreSymmetries","xmin","ymin","zmin","xmax","ymax","zmax","xsum","ysum","zsum","cnt","includeSym","symmetries","getAtomProperty","prop","properties","getPropertyRange","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","clamp","degToRad","degreeToRadiansFactor","PI","deg","Quaternion","w","conjugate","inverse","normalize","sqrt","multiply","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","Vector2","subVectors","v","clone","Vector3","addVectors","sub","multiplyScalar","divideScalar","distanceTo","distanceToSquared","dx","dy","dz","applyMatrix4","elements","applyProjection","d","applyQuaternion","qx","qy","qz","t2","negate","dot","lengthSq","cross","crossVectors","getPositionFromMatrix","setEulerFromRotationMatrix","te","m11","m12","m13","m22","m23","m32","m33","asin","abs","atan2","rotateAboutVector","axis","ang","cosang","cos","sinang","sin","term1","term2","term3","rot","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","getInverse","matrix","throwOnInvertible","det","warn","getDeterminant","determinant","transpose","tmp","Matrix4","n14","n24","n34","n41","n42","n43","n44","matrix3FromTopLeft","setRotationFromEuler","ae","af","be","bf","setRotationFromQuaternion","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","lookAt","eye","target","up","multiplyMatrices","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","makeTranslation","getPosition","v1","setPosition","isReflected","compose","mRotation","mScale","translation","rotation","scale","makeScale","decompose","setFromRotationMatrix","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeFrustum","right","bottom","near","far","makePerspective","fov","aspect","tan","makeOrthographic","h","isEqual","isIdentity","Ray","origin","direction","ray","at","optionalTarget","recast","closestPointToPoint","point","directionDistance","distanceToPoint","isIntersectionCylinder","isIntersectionSphere","sphere","isIntersectionPlane","plane","denominator","normal","distanceToPlane","constant","intersectPlane","matrix4","equals","Sphere","translate","Cylinder","c1","cylinder","vector","Triangle","triangle","getNormal","norm","EventDispatcher","listeners","listener","removeEventListener","index","dispatchEvent","listenerArray","Color","g","setHex","hex","getHex","R","G","B","scaled","Object3D","Object3DIDCount","parent","children","matrixWorld","quaternion","eulerOrder","matrixAutoUpdate","matrixWorldNeedsUpdate","rotationAutoUpdate","useQuaternion","visible","object","scene","Scene","__addObject","remove","__removeObject","updateMatrix","updateMatrixWorld","force","child","setVisible","Geometry","BUFFERSIZE","geometryGroup","vertexArray","colorArray","normalArray","faceArray","radiusArray","lineArray","vertices","faceidx","lineidx","getNumVertices","getVertices","getCentroid","centroid","setNormals","faces","verts","norms","vA","vB","vC","setLineIndices","faceArr","lineArr","faceoffset","lineoffset","truncateArrayBuffers","reallocatemem","vertexArr","colorArr","normalArr","radiusArr","__inittedArrays","addGroup","geo","groups","radii","useOffset","GeometryIDCount","hasTangents","dynamic","verticesNeedUpdate","elementsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","buffersNeedUpdate","updateGeoGroup","addVertices","retGroup","addGeoGroup","setUpNormals","three","geoGroup","setUpWireframe","initTypedArrays","group","dispose","Raycaster","Infinity","w_0","v2","v3","matrixPosition","descSort","distance","intersectObject","raycaster","intersects","intersectionShape","precision","linePrecision","precisionSq","boundingSphere","normProj","cylProj","rayProj","closestDistSq","denom","discriminant","s_c","t_c","b_dot_c","b_sq","c_sq","radiusSq","line","bondLengthSq","lineProj","distanceToCenter","intersectObjects","objects","sort","Projector","_viewProjectionMatrix","projectVector","camera","matrixWorldInverse","projectionMatrix","unprojectVector","projectionMatrixInverse","Camera","ortho","updateProjectionMatrix","create","SpritePlugin","createProgram","shader","program","_gl","fragmentShader","createShader","FRAGMENT_SHADER","vertexShader","VERTEX_SHADER","prefix","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getShaderInfoLog","painterSortStable","_renderer","_precision","_sprite","init","renderer","context","getPrecision","vertexBuffer","createBuffer","elementBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","ShaderLib","sprite","attributes","uniforms","getAttribLocation","uv","uvOffset","getUniformLocation","uvScale","alignment","useScreenCoordinates","screenPosition","modelViewMatrix","fogType","fogDensity","fogNear","fogFar","fogColor","alphaTest","viewportWidth","viewportHeight","sprites","__webglSprites","nSprites","halfViewportWidth","halfViewportHeight","useProgram","enableVertexAttribArray","disable","CULL_FACE","enable","BLEND","vertexAttribPointer","FLOAT","uniformMatrix4fv","activeTexture","TEXTURE0","uniform1i","oldFogType","sceneFogType","fog","uniform3f","uniform1f","material","_modelViewMatrix","image","devicePixelRatio","scaleByViewport","uniform2f","uniform2fv","setDepthTest","depthTest","setDepthWrite","depthWrite","setTexture","drawElements","TRIANGLES","UNSIGNED_SHORT","Light","intensity","castShadow","onlyShadow","Material","MaterialIdCount","side","FrontSide","transparent","stencilTest","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","needsUpdate","setValues","values","newValue","currentValue","overdraw","LineBasicMaterial","parameters","linewidth","linecap","linejoin","vertexColors","shaderID","MeshLambertMaterial","ambient","emissive","wrapAround","wrapRGB","lightMap","specularMap","envMap","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","shading","SmoothShading","NoColors","skinning","combine","morphTargets","morphNormals","MeshDoubleLambertMaterial","DoubleSide","MeshOutlineMaterial","outlineColor","outlineWidth","outlinePushback","pushback","ImposterMaterial","imposter","SphereImposterMaterial","SphereImposterOutlineMaterial","StickImposterMaterial","StickImposterOutlineMaterial","InstancedMaterial","SpriteMaterial","Texture","sizeAttenuation","scaleByViewPort","SpriteAlignment","topLeft","topCenter","topRight","centerLeft","centerRight","bottomLeft","bottomCenter","bottomRight","TextureIdCount","mipmaps","mapping","UVMapping","wrapS","ClampToEdgeWrapping","wrapT","magFilter","LinearFilter","minFilter","LinearMipMapLinearFilter","anisotropy","RGBAFormat","UnsignedByteType","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","texture","BackSide","NoShading","FlatShading","FaceColors","VertexColors","MultiplyOperation","MixOperation","AddOperation","Line","random","LineStrip","LinePieces","Mesh","MeshBasicMaterial","Sprite","rotation3d","Renderer","enableAttribute","attribute","_enabledAttributes","disableAttributes","disableVertexAttribArray","setPolygonOffset","units","_oldPolygonOffset","POLYGON_OFFSET_FILL","setLineWidth","_oldLineWidth","lineWidth","getShader","buildProgram","pl","_programs","programInfo","usedTimes","prefix_vertex","prefix_fragment","fragdepth","glFragmentShader","glVertexShader","identifiers","uniformVar","attributeVar","_programs_counter","info","memory","programs","setProgram","lights","deallocateMaterial","initMaterial","refreshMaterial","p_uniforms","m_uniforms","_currentProgram","_currentMaterialId","_currentCamera","uniformMatrix3fv","normalMatrix","_normalMatrix","viewMatrix","_lightsNeedUpdate","setupLights","directionalLightColor","_lights","directional","colors","directionalLightDirection","loadMaterialUniforms","uniformVal","uniformLoc","uniform3fv","uniform4f","renderObjects","renderList","reverse","materialType","useBlending","overrideMaterial","webglObject","delta","setBlending","reflected","setMaterialFaces","renderBuffer","_outlineEnabled","outline","_outlineSphereImposterMaterial","_outlineStickImposterMaterial","_outlineMaterial","renderPlugins","plugins","_currentGeometryGroupHash","_oldBlending","_oldDepthWrite","_oldDepthTest","_oldDoubleSided","_oldFlipSided","_currentWidth","_currentHeight","addObject","gl","__webglInit","onGeometryDispose","_geometryGroupCounter","__webglVertexBuffer","createMeshBuffers","createLineBuffers","__webglActive","addBuffer","__webglObjects","updateObject","setBuffers","removeObject","removeInstances","removeInstancesDirect","objList","unrollBufferMaterial","globject","opaque","blankMaterial","blank","hint","__webglOffsetBuffer","__webglColorBuffer","__webglNormalBuffer","__webglRadiusBuffer","__webglFaceBuffer","__webglLineBuffer","geometries","objlist","setupMatrices","isPowerOfTwo","filterFallback","LINEAR","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","UNSIGNED_BYTE","RGBA","ll","light","zlights","dirColors","dirPositions","dirCount","dirLength","dirOffset","_direction","_vector3","initGL","_canvas","getContext","_alpha","premultipliedAlpha","_premultipliedAlpha","antialias","_antialias","stencil","_stencil","preserveDrawingBuffer","_preserveDrawingBuffer","setDefaultGLState","clearColor","clearDepth","clearStencil","DEPTH_TEST","depthFunc","LEQUAL","frontFace","CCW","cullFace","BACK","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","_clearColor","_clearAlpha","canvas","clearAlpha","domElement","self","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","autoUpdateObjects","autoUpdateScene","renderPluginsPost","textures","calls","points","_viewportWidth","_viewportHeight","_projScreenMatrix","distances","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","_extInstanced","getExtension","_extFragDepth","supportedExtensions","supportsAIA","Boolean","supportsImposters","setClearColorHex","enableOutline","disableOutline","setSize","viewport","drawingBufferWidth","drawingBufferHeight","depth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","doubleSided","flipSided","CW","depthMask","blending","blendEquationSeparate","blendFuncSeparate","ONE","addPostPlugin","plugin","deallocateGeometry","onTextureDispose","deallocateTexture","onMaterialDispose","deleteBuffer","deleteProgram","newPrograms","__webglTextureCube","deleteTexture","__webglTexture","ShaderUtils","updateBuffers","wireframeBit","geometryGroupHash","faceCount","lineCount","sphereGeometryGroup","vertexAttribDivisorANGLE","drawElementsInstancedANGLE","LINES","drawArrays","forceClear","__lights","initWebGLObjects","__webglObjectsImmediate","__webglFlares","__objectsAdded","__objectsRemoved","slot","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","glFormat","glType","mipmap","texImage2D","generateMipmap","__objects","idx","ai","Fog","uniforms_src","uniforms_clone","srcValue","stickimposterFragmentShader","basic","sphereimposter","lambert","instanced","sphereimposteroutline","stickimposter","stickimposteroutline","lambertdouble","ProteinSurface","origextent","INOUT","ISDONE","ISBOUND","ptranx","ptrany","ptranz","probeRadius","defaultScaleFactor","scaleFactor","pHeight","pWidth","pLength","cutRadius","vpBits","vpDistance","vpAtomID","pminx","pminy","pminz","pmaxx","pmaxy","pmaxz","vdwRadii","H","Li","Na","K","C","N","O","F","P","S","CL","BR","SE","ZN","CU","NI","X","getVDWIndex","depty","widxz","nb","getFacesAndVertices","atomsToShow","finalfaces","fa","fb","fc","which","initparm","extent","btype","volume","margin","boundingatom","Float64Array","txz","tdept","sradius","tradius","flagradius","indx","fillvoxels","fillAtom","cx","cy","cz","ox","oy","oz","mi","mj","mk","si","sj","sk","ii","jj","kk","nind","pWH","atom2","fillvoxelswaals","fillAtomWaals","buildboundary","ti","tj","tk","PointGrid","pt","ix","iy","iz","fastdistancemap","boundPoint","cutRSq","inarray","outarray","triple","fastoneshell","cutsf","cutoff","tx","ty","tz","square","bp","tnv","marchingcubeinit","stype","lim","marchingcube","MarchingCube","march","smooth","nX","nY","nZ","vlen","laplacianSmooth","ready","autoinit","nviewers","each","viewerdiv","datauri","css","bgcolor","CC","select","selectstylelist","surfaces","labels","stylere","surfre","reslabre","dataname","exec","selname","newsel","styleobj","applyStyles","sel","sty","addSurface","addResLabels","moldata","cache","color_","colorTab","white","silver","gray","grey","black","red","maroon","yellow","orange","olive","lime","green","aqua","cyan","teal","blue","navy","fuchsia","magenta","purple","trim","toLowerCase","getColorFromStyle","colorscheme","elementColors","scheme","gradient","range","valueToHex","colorfunc","ssColors","pyMOL","Jmol","defaultColor","He","HE","LI","NA","Mg","MG","Al","AL","Si","SI","Cl","Ca","CA","Ti","TI","Cr","CR","Mn","MN","Fe","FE","Ni","Cu","Zn","Br","Ag","AG","I","Ba","BA","Au","AU","rasmol","defaultColors","greenCarbon","cyanCarbon","magentaCarbon","yellowCarbon","whiteCarbon","orangeCarbon","purpleCarbon","blueCarbon","drawCartoon","defaultNum","defaultDiv","coilWidth","helixSheetWidth","nucleicAcidWidth","defaultThickness","subdivide","_points","DIV","p0","p1","p2","p3","v0","smoothen","skip","drawThinStrip","div","vertoffset","colori","drawShapeStrip","thickness","num","axisDIV","cs_shape","cs_bottom","cs_top","last_cs_bottom","last_cs_top","cs_ellipse","cs_rectangle","cs_parabola","pow","face_refs","v_offset","va_offset","f_offset","currentAtom","lastAtom","toNext","toSide","face","drawPlainStrip","p1v","p2v","a1v","a2v","face1","face2","face3","vs","diffAtoms","p1a","p1b","p2a","p2b","m1","m2","vsize","drawSmoothCurve","lineMaterial","drawStrip","isAlphaCarbon","inConnectedResidues","reschain","setGeo","cartoonMaterial","cartoonMesh","cartoonAtoms","OP2","O2P","O5'","O3'","C5'","C2'","O5*","O3*","C5*","C2*","N1","N3","purResns","DA","DG","A","pyrResns","DT","DC","U","T","naResns","atomList","gradientScheme","doNotSmoothen","cartoon","prev","currColor","nextColor","arrow","backbonePt","orientPt","prevOrientPt","terminalPt","termOrientPt","baseStartPt","baseEndPt","tubeStart","tubeEnd","drawingTube","shapeGeo","inSheet","inHelix","connected","ss","arrows","tubes","flushGeom","nextresn","inNucleicAcid","GLDraw","drawCylinder","midpoint","color1","color2","addBackbonePoints","rescode","startFix","backboneAtom","atomi","widthScalar","addArrowPoints","testStyle","sideVec","forwardVec","adjustment","upVec","ribbon","defaultDrawCartoon","quality","draw","getRotationMatrix","dir","dyz","sinA","cosA","sinB","cosB","dxy","basisVectors","nvecs","subdivisions","M","spacing","cylVertexCache","false","true","getVerticesForRadius","flat","verticesRows","heightSegments","widthSegments","phiStart","phiLength","thetaStart","thetaLength","polar","equator","verticesRow","toRow","xi","vertex","normals","drawnC","drawcaps","vobj","n_verts","fromRow","vi","v4","x1","x3","x4","y1","y3","y4","z1","z3","z4","nx1","nx2","nx3","nx4","ny1","ny2","ny3","ny4","nz1","nz2","nz3","nz4","v1offset","v2offset","v3offset","v4offset","ystart","yend","cap","drawCone","basis","ndir","vec","sphereVertexCache","sphereQuality","drawSphere","n1","n2","n3","n4","GLModel","mid","dontDuplicateAtoms","frames","hidden","molObj","renderedMolObj","lastColors","idMatrix","ElementColors","defaultSphereRadius","getRadiusFromStyle","drawAtomCross","geos","defaultlineWidth","hoverable","getSideBondV","j2","atom3","dir2","addLine","drawBondLines","mp","singleBond","bondStyles","bstyle","iswire","bondR","mpa","mpb","defaultStickRadius","drawAtomSphere","drawAtomInstanced","startv","drawSphereImposter","drawAtomImposter","drawStickImposter","negateColor","drawBondSticks","mp2","atomBondR","atomSingleBond","singleBonds","C1","capDrawn","drawCyl","style2","C2","cylinder1","sphere1","cylinder2","sphere2","mfromCap","mtoCap","cylinder1a","cylinder1b","cylinder2a","cylinder2b","mp3","cylinder1c","cylinder2c","numsinglebonds","differentradii","sphereGeometry","createMolObj","lineGeometries","crossGeometries","drawSphereFunc","stickGeometry","drawnCaps","testOpacities","opacities","hetflag","gradientscheme","Gradient","Sinebow","sphereMaterial","imposterMaterial","sticks","cylinderMaterial","crossMaterial","finalRet","transformedRet","getCrystData","cryst","getSymmetries","setSymmetries","list","getID","getFrames","forceRedraw","setFrame","framenum","addFrame","vibrate","numFrames","amplitude","vectors","newAtoms","newVector","starting","newAtom","unshift","setAtomDefaults","defaultAtomStyle","parsedAtoms","parseMolData","duplicateAssemblyAtoms","mData","addAtoms","setDontDuplicateAtoms","dup","setModelData","atomIsSelected","invert","propkey","isokay","valarr","aLength","expand","expandAtomList","retlen","squaredDistance","thresh","within","sel2","vResis","vAtoms","stack","pop","atom1","xd","yd","zd","amt","pb","newatoms","indexmap","olda","nindex","nbonds","neigh","removeAtoms","badatoms","baddies","validAtomSelectionSpecs","validAtomStyleSpecs","changedAtoms","setStyleHelper","atomArr","selected","that","setHoverable","hover_callback","unhover_callback","setColorByElement","sameObj","setColorByProperty","setColorByFunction","colorfun","toCDObject","includeStyles","atomJSON","JSON","stringify","firstAtom","secondAtom","globj","Date","removegl","hide","show","bylabel","label","mystyle","sum","setCoordinates","test","pako","parseCrd","temp","Se","validAtomSpecs","valueLength","counter","Parsers","GLShape","stylespec","ShapeIDCount","updateFromStyle","components","shapeObj","renderedShapeObj","linegeo","updateStyle","newspec","addCustom","customSpec","drawCustom","addSphere","sphereSpec","updateBoundingFromPoints","addCylinder","cylinderSpec","lineSpec","vstart","li","addArrow","arrowSpec","number","radiusRatio","drawArrow","volSpec","voxel","smoothness","vertnums","vals","bitdata","selectedRegion","coordinate","convert","inSelectedRegion","selectedOffset","gridindex","fulltable","unitCube","unit","maxv","minv","len1","len2","distance_from","addVolumetricData","fmt","finalizeGeo","updateColor","gg","spec","negDir","conebase","prev_x","prev_y","prev_z","b2","t1","t2b","t3","t3b","t4","t1offset","t2offset","t2boffset","t3offset","t3boffset","t4offset","fromi","toi","endi","fromoffset","tooffset","endoffset","addCustomGeo","splits","splitMesh","maxRadiusSq","MAXVERT","slices","vertSlice","vertIndex","currentSlice","nf","getAtomsFromSel","ms","models","addLineDashed","dashLength","gapLength","dashAmt","gapAmt","dash","gap","drawn","applyToModels","func","value1","value2","getMatWithStyle","mat","nomouse","bgColor","backgroundColor","camerax","_viewer","container","glDOM","clickables","hoverables","current_hover","WIDTH","HEIGHT","ASPECT","NEAR","FAR","CAMERA_Z","linkedViewers","padding","zIndex","orthographic","lookingAt","projector","mouseVector","rotationGroup","modelGroup","fogStart","slabNear","slabFar","cq","dq","animated","isDragging","mouseStartX","mouseStartY","touchDistanceStart","currentModelPos","cslabNear","cslabFar","nextSurfID","setSlabAndFog","nolink","other","setView","initializeScene","directionalLight","updateClickables","hoverable_atoms","handleClickSelection","mouseX","mouseY","mouse","handleHoverSelection","handleHoverContinue","calcTouchDistance","ev","xdiff","originalEvent","targetTouches","pageX","ydiff","pageY","getXY","changedTouches","screenXY2model","zpos","mouseButton","hoverTimeout","_handleMouseDown","preventDefault","_handleMouseScroll","mult","ctrlKey","detail","wheelDelta","_handleMouseMove","clearTimeout","setTimeout","newdist","shiftKey","rs","initContainer","append","setContainer","setProjection","proj","setViewStyle","setWidth","setHeight","resize","rotate","angle","rangle","arg","time1","exts","surfArr","finished","lastGL","smesh","tmeshes","tmesh","time2","pdbData","pdbline","allatoms","alltmp","isEmptyObject","maxD","maxDsq","dsq","setSlab","getSlab","Label","setContext","removeLabel","removeAllLabels","setLabelStyle","setLabelText","addShape","shapePosition","removeShape","removeAllShapes","dashed","addUnitCell","beta","gamma","mostFrames","modelNum","animate","interval","loop","reps","currFrame","inc","displayCount","displayMax","display","isAnimated","clearInterval","intervalID","setInterval","stopAnimate","addModels","multimodel","modelatoms","newModel","addModelsAsFrames","addAsOneMolecule","onemol","removeModel","removeAllModels","exportJSON","modelID","createModelFrom","extract","addStyle","getAtomsWithin","carveUpExtent","atomstoshow","index2atomlist","atomsToListIndex","copyExtent","splitExtentR","maxVolume","alist","blist","off","toshow","generateSurfaceMesh","VandF","surfaceColor","voldata","volscheme","getVal","col","atomid","offsetA","offsetB","offsetC","generateMeshSyncHelper","expandedExtent","extendedAtoms","vol","ps","addMesh","surfobj","surfid","shallowCopy","atomsel","allsel","focus","focusSele","symMatrices","addSurfaceHelper","RWB","totalVol","extents","seleExtent","sortFunc","distSq","ex","sele","d1","d2","reducedAtoms","sync","callSyncHelper","workers","numWorkers","Worker","SurfaceWorker","postMessage","rfunction","VandFs","vl","efunction","message","filename","lineno","worker","onmessage","onerror","modelsAtomList","modelsAtomsToShow","setSurfaceMaterialStyle","surf","removeSurface","removeAllSurfaces","jmolMoveTo","mapAtomProperties","props","numa","linkViewer","otherviewer","lo","hi","middle","ROYGB","q1","q3","LabelCount","getStyle","roundRect","ctx","drawBorder","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","getColor","stylealpha","useScreen","showBackground","font","fontColor","fontOpacity","borderThickness","backgroundOpacity","borderColor","borderOpacity","inFront","spriteAlignment","bold","metrics","measureText","textWidth","backgroundImage","img","backgroundWidth","backgroundHeight","clearRect","fillStyle","strokeStyle","drawImage","fillText","MarchingCubeInitializer","transform","getVertex","val1","val2","etable","edgeTable2","edgeTable","tritable","triTable2","triTable","ecode","ttable","numiter","jl","tps","flagvert","vertdeg","aoffset","boffset","coffset","wt","wt2","Uint32Array","parsers","assignBonds","grid","MAX_BOND_LENGTH","findConnections","otherPoints","areConnected","OFFSETS","assignPDBBonds","atomsarray","protatoms","hetatoms","lastResConnected","currentResi","aj","assignBackboneHBonds","maxlength","maxlengthSq","hbondOther","hbondDistanceSq","zdiff","computeSecondaryStructure","chres","valbefore","valafter","otherval","ssbegin","ssend","vasp","VASP","lattice","lines","xVec","yVec","zVec","atomSymbols","atomSpeciesNumber","vaspMode","atomCounter","atomSymbol","atomLen","coords","cube","CUBE","natoms","convFactor","tokens","xyz","XYZ","sdf","SDF","noH","bondCount","serialToIndex","cdjson","json","molecules","atomsInFile","bondsInFile","parseStyle","currentBond","beginIndex","endIndex","mcif","cif","splitRespectingQuotes","separator","sections","sectionStart","sectionEnd","noAssembly","doAssembly","copyMatrix","linesFiltered","trimDisabled","lineNum","_loop","sqr","fractionalToCartesian","conversionMatrix","parseTerm","term","negative","numerator","fractionParts","mmCIF","dataItemName","dataItem","restOfLine","dataBlock","dataItems","currentDataItem","field","currentIndex","_atom_site_id","_atom_site_label","_cell_length_a","_cell_length_b","_cell_length_c","alpha_deg","_cell_angle_alpha","beta_deg","_cell_angle_beta","gamma_deg","_cell_angle_gamma","cos_alpha","cos_beta","cos_gamma","sin_gamma","_atom_site_group_pdb","_atom_site_cartn_x","_atom_site_cartn_y","_atom_site_cartn_z","_atom_site_fract_x","_atom_site_fract_y","_atom_site_fract_z","_atom_site_auth_asym_id","_atom_site_auth_seq_id","_atom_site_auth_comp_id","_atom_site_auth_atom_id","_atom_site_type_symbol","_pdbx_struct_oper_list_id","matrix11","matrix12","matrix13","vector1","matrix21","matrix22","matrix23","vector2","matrix31","matrix32","matrix33","vector3","processSymmetries","_symmetry_equiv_pos_as_xyz","componentStrings","coord","terms","xTerm","yTerm","zTerm","coefficient","conversionMatrix4","conversionInverse","mol2","MOL2","mol_pos","search","atom_pos","charge","partialCharge","bonds_found","fromAtom","toAtom","bondTable","Be","Ne","Ar","Sc","V","Co","Ga","Ge","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Cd","In","Sn","Sb","Te","Xe","Cs","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Hg","Tl","Pb","Bi","Rn","bondLength","maxsq","distSquared","copyMatrices","newXYZ","bondsArr","isEmpty","getSinglePDB","sslookup","ignoreStruct","noSecondaryStructure","computeStruct","remainingLines","hasStruct","seenbonds","startChain","startResi","endChain","endResi","recordName","icode","res","fromindex","toindex","bi","newbo","starttime","getTime","pdb","PDB","pdbqt","PDBQT","pdbinfo","pqr","PQR","convertSS","mmtf","MMTF","bindata","numModels","assemblyIndex","bioAssemblyList","transforms","transformList","bondAtomListStart","matoms","startGroup","startAtom","atomCharge","atomChargeList","i1","a1","a2","prmtop","PRMTOP","getIndex","section","sectionList","includes","isInteger","getColEleSize","numberOfCol","elementSize","noOfCol","partialCharges","ALA:N","ALA:CA","ALA:CB","ALA:C","ALA:O","ARG:N","ARG:CA","ARG:CB","ARG:CG","ARG:CD","ARG:NE","ARG:CZ","ARG:NH1","ARG:NH2","ARG:C","ARG:O","ASN:N","ASN:CA","ASN:CB","ASN:CG","ASN:OD1","ASN:ND2","ASN:C","ASN:O","ASP:N","ASP:CA","ASP:CB","ASP:CG","ASP:OD1","ASP:OD2","ASP:C","ASP:O","CYS:N","CYS:CA","CYS:CB","CYS:SG","CYS:C","CYS:O","GLN:N","GLN:CA","GLN:CB","GLN:CG","GLN:CD","GLN:OE1","GLN:NE2","GLN:C","GLN:O","GLU:N","GLU:CA","GLU:CB","GLU:CG","GLU:CD","GLU:OE1","GLU:OE2","GLU:C","GLU:O","GLY:N","GLY:CA","GLY:C","GLY:O","HIS:N","HIS:CA","HIS:CB","HIS:CG","HIS:ND1","HIS:CD2","HIS:NE2","HIS:CE1","HIS:C","HIS:O","ILE:N","ILE:CA","ILE:CB","ILE:CG2","ILE:CG1","ILE:CD","ILE:C","ILE:O","LEU:N","LEU:CA","LEU:CB","LEU:CG","LEU:CD1","LEU:CD2","LEU:C","LEU:O","LYS:N","LYS:CA","LYS:CB","LYS:CG","LYS:CD","LYS:CE","LYS:NZ","LYS:C","LYS:O","MET:N","MET:CA","MET:CB","MET:CG","MET:SD","MET:CE","MET:C","MET:O","PHE:N","PHE:CA","PHE:CB","PHE:CG","PHE:CD1","PHE:CD2","PHE:CE1","PHE:CE2","PHE:CZ","PHE:C","PHE:O","PRO:N","PRO:CD","PRO:CA","PRO:CB","PRO:CG","PRO:C","PRO:O","SER:N","SER:CA","SER:CB","SER:OG","SER:C","SER:O","THR:N","THR:CA","THR:CB","THR:OG1","THR:CG2","THR:C","THR:O","TRP:N","TRP:CA","TRP:CB","TRP:CG","TRP:CD2","TRP:CE2","TRP:CE3","TRP:CD1","TRP:NE1","TRP:CZ2","TRP:CZ3","TRP:CH2","TRP:C","TRP:O","TYR:N","TYR:CA","TYR:CB","TYR:CG","TYR:CD1","TYR:CE1","TYR:CD2","TYR:CE2","TYR:CZ","TYR:OH","TYR:C","TYR:O","VAL:N","VAL:CA","VAL:CB","VAL:CG1","VAL:CG2","VAL:C","VAL:O","applyPartialCharges","keepexisting","mean","diff","variance","getCoordinates","atomicData","l_units","e_units","vol_scale","preConvertedData","atomsnum","headerlines","ccp4","intView","floatView","MAP","MACHST","NX","NY","NZ","MODE","NXSTART","NYSTART","NZSTART","MX","MY","MZ","xlen","ylen","zlen","MAPC","MAPR","MAPS","DMIN","DMAX","DMEAN","ISPG","NSYMBT","LSKFLG","originX","originY","originZ","ARMS","basisX","basisY","basisZ","nxyz","mapcrs","workerString","oEvent","atomData","URL","createObjectURL","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_React$Component","getPrototypeOf","renderNbmolviz","_this2","ref","Component","propTypes","PropTypes","isRequired","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","nextTick","args","title","browser","argv","versions","addListener","once","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask"],"mappings":"AAAAA,OAAOC,QACE,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAH,OAGA,IAAAD,GAAAK,EAAAD,IACAH,WACAK,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAR,EAAAC,QAAAD,IAAAC,QAAAE,GAGAH,EAAAO,QAAA,EAGAP,EAAAC,QAvBA,GAAAI,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,OAGAR,EAAA,KDOM,SAASH,EAAQC,EAASE,GAE/BH,EAAOC,QAAUE,EAAoB,IAKhC,SAASH,EAAQC,GAEtB,YAEAW,QAAOC,eAAeZ,EAAS,cAC7Ba,OAAO,GEzDV,IAAMC,IACJC,KAAM,OACNC,QAAS,UACTC,MAAO,QF8DRjB,cE3Dcc,GF+DT,SAASf,EAAQC,EAASE,GAE/B,YAcA,SAASgB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAZvFR,OAAOC,eAAeZ,EAAS,cAC7Ba,OAAO,GG3DV,IAAAS,GAAApB,EAAA,GHgEKqB,EAAaL,EAAuBI,GG/DzCE,EAAAtB,EAAA,GHmEKuB,EAA8BP,EAAuBM,GGjEpDE,EAAmBH,aAASI,MAAMC,QACtCC,UACEC,mBAAmB,EACnBC,iBAAkB,UAClBC,mBAAoB,EACpBC,OAAQ,QACRC,YAAcC,SAAWC,UACzBC,SACEC,UAAW,GACXC,QAAS,KACTC,QAAS,MAEXC,UACAC,yBACAC,eAAgBlB,aAAwBV,KACxC6B,UACAC,MAAO,UHwFV7C,cGpFc0B,GHwFT,SAAS3B,EAAQC,EAASE,IAEH,SAAS4C,GAAU,YAuC/C,SAAS5B,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GArCvFR,OAAOC,eAAeZ,EAAS,cAC7Ba,OAAO,GAGT,IAAIkC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU9B,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX6B,SAAyB7B,EAAI+B,cAAgBF,OAAS,eAAkB7B,IIvH3OG,EAAApB,EAAA,GJ0IKqB,EAAaL,EAAuBI,GIzIzC6B,EAAAjD,EAAA,GJ6IKkD,EAA0BlC,EAAuBiC,GI5ItDE,EAAAnD,EAAA,GJgJKoD,EAAcpC,EAAuBmC,GI/I1CE,EAAArD,EAAA,IJmJKsD,EAAmBtC,EAAuBqC,GIjJzCE,EAASvD,EAAQ,EAEvBwD,QAAOC,EAAIF,CACX,IAAMG,GAAS1D,EAAQ,IAEjB2D,EAA6B,QAC7BC,EAAoB,GACpBC,EAAyB,SACzBC,EAAyB,IAEzBC,EAAkB1C,aAAS2C,KAAKtC,QACpCuC,WAD2C,WAErCrB,EAAQsB,IAAIC,WAAajB,aAAqBkB,cAC3CZ,OAAOa,aACVb,OAAOa,eAGTb,OAAOa,WAAWC,KAAKC,OAGzBA,KAAKC,MAAMC,GAAG,SAAUF,KAAKG,OAAOC,KAAKJ,QAG3CG,OAb2C,SAapCE,GACL,GAAMC,IAAoBD,GAASnE,OAAOqE,KAAKF,EAAMG,SAASC,QAAQ,kBAEtET,MAAKU,YAELV,KAAKW,MAAQX,KAAKW,OAAS1B,OAAO2B,SAASC,cAAc,OACzDb,KAAKW,MAAMG,UAAUC,IAAI,cACzBf,KAAKW,MAAMK,MAAM5C,MAAQ4B,KAAKC,MAAMgB,IAAI,SACxCjB,KAAKW,MAAMK,MAAMxD,OAASwC,KAAKC,MAAMgB,IAAI,UACzCjB,KAAKW,MAAMK,MAAME,SAAW,WAEvBlB,KAAKmB,GAAGC,cAAc,gBACzBpB,KAAKmB,GAAGE,YAAYrB,KAAKW,OAG3BX,KAAKsB,SAAWtB,KAAKuB,aAAajB,GAE9BN,KAAKwB,MACPxB,KAAKwB,MAAOnB,MAAO,WAIvBkB,aAnC2C,SAmC9BjB,GAAkB,GAAAmB,GAAAzB,KACvBsB,EAAWtB,KAAKsB,UAAYnC,EAAOuC,aAAa1C,EAAOgB,KAAKW,QAChEgB,cAAexC,EAAOyC,qBAGxBN,GAASO,OAET,IAAMC,GAAY9B,KAAKC,MAAMgB,IAAI,aACR,iBAAda,GACTR,EAASS,SAASD,EAAW,OAC3BE,OAAO,IAEqB,YAArB,mBAAOF,GAAP,YAAAxD,EAAOwD,MAChBR,EAASS,SAAShD,aAAckD,kBAAkBH,GAAY,QAC5DE,OAAO,IAITV,EAASY,WAAWC,gBAAgBC,QAAQ,SAACC,GAC3C,GAAMC,GAAeD,CACrBC,GAAaD,KAAOP,EAAUpE,MAAM2E,EAAKE,QAAQC,KACjDF,EAAaG,MAAQX,EAAUpE,MAAM2E,EAAKE,QAAQE,MAClDH,EAAaI,KAAOZ,EAAUpE,MAAM2E,EAAKE,QAAQI,cACjDL,EAAaM,KAAOd,EAAUpE,MAAM2E,EAAKE,QAAQM,eAIrD,IAAM7E,GAASgC,KAAKC,MAAMgB,IAAI,SAC1Ba,GAAUpE,MACZoE,EAAUpE,MAAM0E,QAAQ,SAACC,EAAMS,GAC7B,GAAM9B,GAAQhD,EAAO8E,OACfC,KACAC,EAAoBhC,EAAMiC,oBAAsB7D,CAEtD2D,GAASC,MACT9G,OAAOqE,KAAKS,GAAOoB,QAAQ,SAACc,GAC1BH,EAASC,GAAmBE,GAAYlC,EAAMkC,KAG5CzB,EAAKxB,MAAMgB,IAAI,yBAAyBR,QAAQ4B,EAAKE,eACvDQ,EAASC,GAAmBG,MAAQ,SAGW,gBAAtCJ,GAASC,GAAmBG,QACrCJ,EAASC,GAAmBG,MAAQtE,aAASuE,oBAC3CL,EAASC,GAAmBG,QAI5B1B,EAAKxB,MAAMgB,IAAI,sBACjBK,EAAS+B,SAAShB,EAAKG,MACrBc,SAAUjE,EACV6B,UACEqC,EAAGlB,EAAKmB,UAAU,GAClBC,EAAGpB,EAAKmB,UAAU,GAClBE,EAAGrB,EAAKmB,UAAU,MAKxBlC,EAASqC,UAAWpB,OAAQF,EAAKE,QAAUQ,KAG7CzB,EAASqC,aAAcC,WAIzB5D,KAAKC,MAAMgB,IAAI,UAAUmB,QAAQ,SAACyB,GAC5BA,EAAMC,MACRxC,QAAeuC,EAAMC,MAAQjF,aAASkF,aAAaF,EAAOpC,EAAKuC,qBAKnE,IAAMpG,GAAUoC,KAAKC,MAAMgB,IAAI,UAC/B,IAAIrD,EAAQC,UAAW,CACrB,GAAMoG,GAAa,GAAI9E,GAAO+E,WAAWtG,EAAQC,UAAW,OAC5DyD,GAAS6C,cAAcF,GACrBG,OAAQxG,EAAQE,QAChBqF,MAAO7D,EACPvB,QAASH,EAAQG,UAEnBuD,EAAS6C,cAAcF,GACrBG,QAASxG,EAAQE,QACjBqF,MAAO5D,EACPxB,QAASH,EAAQG,UAiBrB,MAbAuD,GAAS+C,mBACPxF,aAASuE,oBAAoBpD,KAAKC,MAAMgB,IAAI,qBAC5CjB,KAAKC,MAAMgB,IAAI,uBAGjBK,EAASgD,iBAAiB,EAAMtE,KAAKuE,QAAQnE,KAAKJ,OAClDsB,EAASnB,SAELG,IACFgB,EAASkD,SACTlD,EAASmD,KAAK,GAAK,MAGdnD,GAGTiD,QA5I2C,SA4InCG,GACN,GAAMhH,GAAQsC,KAAKC,MAAMgB,IAAI,cAAcvD,MACrC2E,EAAO3E,EAAMgH,EAAOnC,QACpBoC,EAAgB3E,KAAKC,MAAMgB,IAAI,kBAC/B2D,EAAsB5E,KAAKC,MAAMgB,IAAI,yBACrC4D,EAAyB9F,aAAc+F,aAC3CpH,EACAkH,EACAvC,EACAsC,EAGF3E,MAAKC,MAAM8E,IAAI,wBAAyBF,GACxC7E,KAAKC,MAAM+E,SJ8IdzJ,cI1IciE,IJ2Ie1D,KAAKP,EAASE,EAAoB,MAI1D,SAASH,EAAQC,GK1UvBD,EAAAC,QAAA0J,QAAA,aLgVM,SAAS3J,EAAQC,GMhVvBD,EAAAC,QAAA0J,QAAA,WNsVM,SAAS3J,EAAQC,EAASE,GAE/B,YAUA,SAASgB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFR,OAAOC,eAAeZ,EAAS,cAC7Ba,OAAO,GO3VV,IAAA8I,GAAAzJ,EAAA,IPgWK0J,EAAc1I,EAAuByI,GO9VpCE,GAAuB,EAAAD,eAC3BtF,YAAa,MPqWdtE,cOlWc6J,GPsWT,SAAS9J,EAAQC,GAEtB,YAEAW,QAAOC,eAAeZ,EAAS,cAC7Ba,OAAO,GQjXV,IAAMiJ,IACJC,MAAO,QACPC,OAAQ,SACRC,SAAU,WRsXXjK,cQnXc8J,GRuXT,SAAS/J,EAAQC,EAASE,GAE/B,YAuBA,SAASgB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GArBvFR,OAAOC,eAAeZ,EAAS,cAC7Ba,OAAO,IAETb,EAAQkK,gBAAkBlK,EAAQiE,gBAAkBjE,EAAQ0B,iBAAmByI,MSnXhF,IAAAC,GAAAlK,EAAA,GTuXKmK,EAAWnJ,EAAuBkJ,GStXvCE,EAAApK,EAAA,GT0XKqK,EAAwBrJ,EAAuBoJ,GSzXpDE,EAAAtK,EAAA,GT6XKuK,EAAuBvJ,EAAuBsJ,GS5XnDE,EAAAxK,EAAA,ITgYKyK,EAAqBzJ,EAAuBwJ,ES9X7ChH,UACFA,OAAOkH,OAAPP,aACA3G,OAAOC,EAAP0G,cTsZDrK,ESlZQ0B,iBTkZmB6I,aAC3BvK,ESnZ0BiE,gBTmZAwG,aAC1BzK,ESpZ2CkK,gBToZjBS,cAIrB,SAAS5K,EAAQC,EAASE,GAE/B,YAUA,SAASgB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFR,OAAOC,eAAeZ,EAAS,cAC7Ba,OAAO,GUzbV,IAAAgK,GAAA3K,EAAA,GV8bK4K,EAAoB5J,EAAuB2J,GUzb1CE,GAOJlD,oBAPe,SAOKmD,GAClB,GAA2B,IAAvBA,EAAYC,QAAuC,IAAvBD,EAAYC,OAC1C,MAAOD,EAET,IAAuB,MAAnBA,EAAY,GACd,MAAOA,EAGT,IAAME,GAAWC,SAASH,EAAYI,OAAO,EAAGJ,EAAYC,OAAS,GAAI,GAEzE,OAAII,OAAMH,GACDF,EAGFE,GAQT1C,aA7Be,SA6BFF,EAAOgD,GAClB,GAAI1D,SACAU,GAAMV,QACRA,EAAQmD,EAASlD,oBAAoBS,EAAMV,OAG7C,IAAM2D,GAAY5K,OAAO6K,WACvBC,MAAO,GACPH,WACAI,WAAW,EACX9D,MAAO,MACP+D,OAAQrD,EAAMqD,QACbrD,GAASV,SAEZ,IAAIU,EAAMC,OAASuC,aAAef,MAChCwB,EAAUK,MAAQtD,EAAMsD,MACxBL,EAAUM,IAAMvD,EAAMuD,QACjB,IAAIvD,EAAMC,OAASuC,aAAed,OACvCuB,EAAUO,OAASxD,EAAMwD,WACpB,IAAIxD,EAAMC,OAASuC,aAAeb,SAMvC,KAAM,IAAI8B,OAAM,sBALhBR,GAAUS,SAAU,EACpBT,EAAUU,OAAQ,EAClBV,EAAUK,MAAQtD,EAAMsD,MACxBL,EAAUM,IAAMvD,EAAMuD,IAKxB,MAAON,IVqcVvL,cUjcc+K,GVqcT,SAAShL,EAAQC,EAASE,GAE/B,YAUA,SAASgB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFR,OAAOC,eAAeZ,EAAS,cAC7Ba,OAAO,GW5gBV,IAAAW,GAAAtB,EAAA,GXihBKuB,EAA8BP,EAAuBM,GW/gBpD0K,GAMJxF,kBANoB,SAMFH,GAChB,GAAMpE,GAAQoE,EAAUpE,MAAMgK,IAAI,SAAArF,GAAA,OAChCsF,EAAGtF,EAAKuF,KACRrE,EAAGlB,EAAKmB,UAAU,GAClBC,EAAGpB,EAAKmB,UAAU,GAClBE,EAAGrB,EAAKmB,UAAU,GAClBqE,KAAMxF,EAAKyF,kBAGPnK,EAAQmE,EAAUnE,MAAM+J,IAAI,SAAAK,GAAA,OAChCC,EAAGD,EAAKE,YACRC,EAAGH,EAAKI,YACRC,EAAGL,EAAKM,aAGV,QACEtM,IACEuM,EAAG5K,EACHsK,EAAGrK,MAcTmH,aAtCoB,SAsCPpH,EAAOyE,EAAeoG,EAAa5D,GAC9C,GAAI6D,GAAmBrG,EAAcsG,QAC/BC,EAAevG,EAAc1B,QAAQ8H,EAAYhG,QACjDoG,EAAWD,MAEjB,OAAI/D,KAAkB3H,aAAwBV,MACxCqM,EACFH,EAAiBzI,KAAKwI,EAAYhG,QAElCiG,EAAiBI,OAAOF,EAAc,GAGjCF,IAGLG,EACFjL,EAAM0E,QAAQ,SAACC,GACToF,EAAcoB,YAAYN,EAAalG,EAAMsC,IAC/C6D,EAAiBzI,KAAKsC,EAAKE,UAI/BiG,EAAmBA,EAAiBM,OAAO,SAACC,GAC1C,GAAM1G,GAAO3E,EAAMqL,EACnB,QAAQtB,EAAcoB,YAAYN,EAAalG,EAAMsC,KAIlD6D,IAUTK,YA5EoB,SA4ERG,EAAOC,EAAOtE,GACxB,GAAIA,IAAkB3H,aAAwBT,QAC5C,MAAOyM,GAAMrG,gBAAkBsG,EAAMtG,aAEvC,IAAIgC,IAAkB3H,aAAwBR,MAC5C,MAAOwM,GAAMvG,QAAUwG,EAAMxG,KAG/B,MAAM,IAAI6E,OAAM,kDX6hBnB/L,cWzhBckM,GX6hBT,SAASnM,EAAQC,EAASE,GAE/B,GAAIyN,GAAgCC,EAA8BC,EAAkCF,EAAgCC,EAA8BC,EAAkCnE,EAAYA,EAAYiE,EAAgCE,EAA+C9K,EAAwB,kBAATC,SAA8C,gBAAlBA,QAAOC,SAAoB,SAAS9B,GAAK,aAAcA,IAAM,SAASA,GAAK,MAAOA,IAAqB,kBAAT6B,SAAqB7B,EAAI+B,cAAcF,OAAO,eAAgB7B,KYznBlf,SAAU2M,EAAQC,GACE,WAAnBhL,EAAO/C,IAA0C,mBAAXD,GAAyBgO,EAAQ/N,IAC1B4N,GAAQ5N,GAAR2N,EAAA,EAAAE,EAAA,kBAAAF,KAAAK,MAAAhO,EAAA4N,GAAAD,IAAAxD,SAAA0D,IAAA9N,EAAAC,QAAA6N,MAF9C1D,OAIO,SAAUnK,GAAW,YAY3B,SAASiO,GAAUC,EAAMC,EAAQC,GAE/B,IAAI,GAAI7G,IADS2G,EAAKG,WACV,GAAGjC,EAAIgC,EAAOnD,OAAQ1D,EAAI6E,EAAG7E,IAAK,CAC5C,GAAI+G,GAAYF,EAAOG,WAAWhH,EAGlC,IAAI+G,EAAY,IACdJ,EAAKM,SAASL,IAAUG,IAAc,EAAI,IAAO,OAKnD,IAAIA,EAAY,KACdJ,EAAKM,SAASL,IAAUG,IAAc,EAAI,GAAO,KACjDJ,EAAKM,SAASL,IAAUG,IAAc,EAAI,GAAO,SAKnD,IAAIA,EAAY,MACdJ,EAAKM,SAASL,IAAUG,IAAc,GAAK,GAAO,KAClDJ,EAAKM,SAASL,IAAUG,IAAc,EAAK,GAAO,KAClDJ,EAAKM,SAASL,IAAUG,IAAc,EAAK,GAAO,SAHpD,CAQA,KAAIA,EAAY,SAOhB,KAAM,IAAIvC,OAAM,iBAAmBuC,EANjCJ,GAAKM,SAASL,IAAUG,IAAc,GAAK,EAAO,KAClDJ,EAAKM,SAASL,IAAUG,IAAc,GAAK,GAAO,KAClDJ,EAAKM,SAASL,IAAUG,IAAc,EAAK,GAAO,KAClDJ,EAAKM,SAASL,IAAUG,IAAc,EAAK,GAAO,OAOxD,QAASG,GAAcL,GAErB,IAAI,GADAM,GAAQ,EACJnH,EAAI,EAAG6E,EAAIgC,EAAOnD,OAAQ1D,EAAI6E,EAAG7E,IAAK,CAC5C,GAAI+G,GAAYF,EAAOG,WAAWhH,EAClC,IAAI+G,EAAY,IACdI,GAAS,MAGX,IAAIJ,EAAY,KACdI,GAAS,MAGX,IAAIJ,EAAY,MACdI,GAAS,MADX,CAIA,KAAIJ,EAAY,SAIhB,KAAM,IAAIvC,OAAM,iBAAmBuC,EAHjCI,IAAS,GAKb,MAAOA,GAUT,QAASC,GAAS9N,EAAOqN,EAAMC,GAC7B,GAAI5F,GAAA,mBAAc1H,GAAd,YAAAkC,EAAclC,EAGlB,IAAa,WAAT0H,EAAmB,CACrB,GAAI0C,GAASwD,EAAc5N,EAE3B,IAAIoK,EAAS,GAGX,MAFAiD,GAAKM,SAASL,EAAiB,IAATlD,GACtBgD,EAAUC,EAAMC,EAAS,EAAGtN,GACrB,EAAIoK,CAGb,IAAIA,EAAS,IAIX,MAHAiD,GAAKM,SAASL,EAAQ,KACtBD,EAAKM,SAASL,EAAS,EAAGlD,GAC1BgD,EAAUC,EAAMC,EAAS,EAAGtN,GACrB,EAAIoK,CAGb,IAAIA,EAAS,MAIX,MAHAiD,GAAKM,SAASL,EAAQ,KACtBD,EAAKU,UAAUT,EAAS,EAAGlD,GAC3BgD,EAAUC,EAAMC,EAAS,EAAGtN,GACrB,EAAIoK,CAGb,IAAIA,EAAS,WAIX,MAHAiD,GAAKM,SAASL,EAAQ,KACtBD,EAAKW,UAAUV,EAAS,EAAGlD,GAC3BgD,EAAUC,EAAMC,EAAS,EAAGtN,GACrB,EAAIoK,EAIf,GAAIpK,YAAiBiO,YAAY,CAC/B,GAAI7D,GAASpK,EAAMwN,WACfU,EAAQ,GAAID,YAAWZ,EAAKc,OAEhC,IAAI/D,EAAS,IAIX,MAHAiD,GAAKM,SAASL,EAAQ,KACtBD,EAAKM,SAASL,EAAS,EAAGlD,GAC1B8D,EAAMvF,IAAI3I,EAAOsN,EAAS,GACnB,EAAIlD,CAGb,IAAIA,EAAS,MAIX,MAHAiD,GAAKM,SAASL,EAAQ,KACtBD,EAAKU,UAAUT,EAAS,EAAGlD,GAC3B8D,EAAMvF,IAAI3I,EAAOsN,EAAS,GACnB,EAAIlD,CAGb,IAAIA,EAAS,WAIX,MAHAiD,GAAKM,SAASL,EAAQ,KACtBD,EAAKW,UAAUV,EAAS,EAAGlD,GAC3B8D,EAAMvF,IAAI3I,EAAOsN,EAAS,GACnB,EAAIlD,EAIf,GAAa,WAAT1C,EAAmB,CACrB,IAAK0G,SAASpO,GACV,KAAM,IAAIkL,OAAM,sBAAwBlL,EAI5C,IAAIqO,KAAKC,MAAMtO,KAAWA,EAGxB,MAFAqN,GAAKM,SAASL,EAAQ,KACtBD,EAAKkB,WAAWjB,EAAS,EAAGtN,GACrB,CAIT,IAAIA,GAAQ,EAAG,CAEb,GAAIA,EAAQ,IAEV,MADAqN,GAAKM,SAASL,EAAQtN,GACf,CAGT,IAAIA,EAAQ,IAGV,MAFAqN,GAAKM,SAASL,EAAQ,KACtBD,EAAKM,SAASL,EAAS,EAAGtN,GACnB,CAGT,IAAIA,EAAQ,MAGV,MAFAqN,GAAKM,SAASL,EAAQ,KACtBD,EAAKU,UAAUT,EAAS,EAAGtN,GACpB,CAGT,IAAIA,EAAQ,WAGV,MAFAqN,GAAKM,SAASL,EAAQ,KACtBD,EAAKW,UAAUV,EAAS,EAAGtN,GACpB,CAET,MAAM,IAAIkL,OAAM,oBAAsBlL,EAAMwO,SAAS,KAGvD,GAAIxO,OAEF,MADAqN,GAAKoB,QAAQnB,EAAQtN,GACd,CAGT,IAAIA,QAGF,MAFAqN,GAAKM,SAASL,EAAQ,KACtBD,EAAKoB,QAAQnB,EAAS,EAAGtN,GAClB,CAGT,IAAIA,UAGF,MAFAqN,GAAKM,SAASL,EAAQ,KACtBD,EAAKqB,SAASpB,EAAS,EAAGtN,GACnB,CAGT,IAAIA,eAGF,MAFAqN,GAAKM,SAASL,EAAQ,KACtBD,EAAKsB,SAASrB,EAAS,EAAGtN,GACnB,CAET,MAAM,IAAIkL,OAAM,yBAA2BlL,GAAOwO,SAAS,IAAIjE,OAAO,IAIxE,GAAc,OAAVvK,EAEF,MADAqN,GAAKM,SAASL,EAAQ,KACf,CAIT,IAAa,YAAT5F,EAEF,MADA2F,GAAKM,SAASL,EAAQtN,EAAQ,IAAO,KAC9B,CAIT,IAAa,WAAT0H,EAAmB,CACrB,GAAI0C,GAAQwE,EAAO,EACfC,EAAUC,MAAMD,QAAQ7O,EAE5B,IAAI6O,EACFzE,EAASpK,EAAMoK,WAEZ,CACH,GAAIjG,GAAOrE,OAAOqE,KAAKnE,EACvBoK,GAASjG,EAAKiG,OAGhB,GAAIwE,EAgBJ,IAfIxE,EAAS,IACXiD,EAAKM,SAASL,EAAQlD,GAAUyE,EAAU,IAAO,MACjDD,EAAO,GAEAxE,EAAS,OAChBiD,EAAKM,SAASL,EAAQuB,EAAU,IAAO,KACvCxB,EAAKU,UAAUT,EAAS,EAAGlD,GAC3BwE,EAAO,GAEAxE,EAAS,aAChBiD,EAAKM,SAASL,EAAQuB,EAAU,IAAO,KACvCxB,EAAKW,UAAUV,EAAS,EAAGlD,GAC3BwE,EAAO,GAGLC,EACF,IAAK,GAAInI,GAAI,EAAGA,EAAI0D,EAAQ1D,IAC1BkI,GAAQd,EAAS9N,EAAM0G,GAAI2G,EAAMC,EAASsB,OAI5C,KAAK,GAAIlI,GAAI,EAAGA,EAAI0D,EAAQ1D,IAAK,CAC/B,GAAIqI,GAAM5K,EAAKuC,EACfkI,IAAQd,EAASiB,EAAK1B,EAAMC,EAASsB,GACrCA,GAAQd,EAAS9N,EAAM+O,GAAM1B,EAAMC,EAASsB,GAIhD,MAAOA,GAET,KAAM,IAAI1D,OAAM,gBAAkBxD,GAGpC,QAASsH,GAAYhP,GACnB,GAAI0H,GAAA,mBAAc1H,GAAd,YAAAkC,EAAclC,EAGlB,IAAa,WAAT0H,EAAmB,CACrB,GAAI0C,GAASwD,EAAc5N,EAC3B,IAAIoK,EAAS,GACX,MAAO,GAAIA,CAEb,IAAIA,EAAS,IACX,MAAO,GAAIA,CAEb,IAAIA,EAAS,MACX,MAAO,GAAIA,CAEb,IAAIA,EAAS,WACX,MAAO,GAAIA,EAIf,GAAIpK,YAAiBiO,YAAY,CAC/B,GAAI7D,GAASpK,EAAMwN,UACnB,IAAIpD,EAAS,IACX,MAAO,GAAIA,CAEb,IAAIA,EAAS,MACX,MAAO,GAAIA,CAEb,IAAIA,EAAS,WACX,MAAO,GAAIA,EAIf,GAAa,WAAT1C,EAAmB,CAGrB,GAAI2G,KAAKC,MAAMtO,KAAWA,EAAO,MAAO,EAGxC,IAAIA,GAAQ,EAAG,CAEb,GAAIA,EAAQ,IAAM,MAAO,EAEzB,IAAIA,EAAQ,IAAO,MAAO,EAE1B,IAAIA,EAAQ,MAAS,MAAO,EAE5B,IAAIA,EAAQ,WAAa,MAAO,EAChC,MAAM,IAAIkL,OAAM,oBAAsBlL,EAAMwO,SAAS,KAGvD,GAAIxO,OAAgB,MAAO,EAE3B,IAAIA,QAAgB,MAAO,EAE3B,IAAIA,UAAkB,MAAO,EAE7B,IAAIA,eAAsB,MAAO,EACjC,MAAM,IAAIkL,OAAM,uBAAyBlL,EAAMwO,SAAS,IAAIjE,OAAO,IAIrE,GAAa,YAAT7C,GAAgC,OAAV1H,EAAgB,MAAO,EAGjD,IAAa,WAAT0H,EAAmB,CACrB,GAAI0C,GAAQwE,EAAO,CACnB,IAAIE,MAAMD,QAAQ7O,GAAQ,CACxBoK,EAASpK,EAAMoK,MACf,KAAK,GAAI1D,GAAI,EAAGA,EAAI0D,EAAQ1D,IAC1BkI,GAAQI,EAAYhP,EAAM0G,QAGzB,CACH,GAAIvC,GAAOrE,OAAOqE,KAAKnE,EACvBoK,GAASjG,EAAKiG,MACd,KAAK,GAAI1D,GAAI,EAAGA,EAAI0D,EAAQ1D,IAAK,CAC/B,GAAIqI,GAAM5K,EAAKuC,EACfkI,IAAQI,EAAYD,GAAOC,EAAYhP,EAAM+O,KAGjD,GAAI3E,EAAS,GACX,MAAO,GAAIwE,CAEb,IAAIxE,EAAS,MACX,MAAO,GAAIwE,CAEb,IAAIxE,EAAS,WACX,MAAO,GAAIwE,CAEb,MAAM,IAAI1D,OAAM,8BAAgCd,EAAOoE,SAAS,KAElE,KAAM,IAAItD,OAAM,gBAAkBxD,GAGpC,QAASuH,GAAcjP,GACrB,GAAImO,GAAS,GAAIe,aAAYF,EAAYhP,IACrCqN,EAAO,GAAI8B,UAAShB,EAExB,OADAL,GAAS9N,EAAOqN,EAAM,GACf,GAAIY,YAAWE,GA8CxB,QAASiB,GAASC,EAAMC,EAAYC,GAChC,MAAOD,GAAa,GAAID,GACpBC,EAAWnB,OACXmB,EAAWE,WACXF,EAAW9B,YAAe+B,GAAY,IACtCjG,OAGR,QAASmG,GAAaH,GAClB,MAAOF,GAASD,SAAUG,GAS9B,QAASI,GAAcJ,GACnB,MAAOF,GAASnB,WAAYqB,GAShC,QAASK,GAAaL,GAClB,MAAOF,GAASQ,UAAWN,GAS/B,QAASO,GAAcP,GACnB,MAAOF,GAASU,WAAYR,EAAY,GAG5C,QAASS,GAAgBT,GACrB,MAAOF,GAASY,aAAcV,EAAY,GAW9C,QAASW,GAAa/B,EAAOgC,GACzB,GAAIC,GAAIjC,EAAM9D,OAAS,CAClB8F,KAASA,EAAS,GAAIE,YAAYD,GACvC,KAAK,GAAIzJ,GAAI,EAAG2J,EAAK,EAAG3J,EAAIyJ,IAAKzJ,EAAG2J,GAAM,EACtCH,EAAQxJ,GAAMwH,EAAOmC,IAAQ,EAAInC,EAAOmC,EAAK,IAAO,CAExD,OAAOH,GASX,QAASI,GAAaC,EAAOL,GACzB,GAAIC,GAAII,EAAMnG,MACT8F,KAASA,EAAS,GAAIjC,YAAY,EAAIkC,GAE3C,KAAK,GADDK,GAAKf,EAAaS,GACbxJ,EAAI,EAAGA,EAAIyJ,IAAKzJ,EACrB8J,EAAG9B,SAAU,EAAIhI,EAAG6J,EAAO7J,GAE/B,OAAOgJ,GAAcQ,GAUzB,QAASO,GAAavC,EAAOgC,GACzB,GAAIC,GAAIjC,EAAM9D,OAAS,CAClB8F,KAASA,EAAS,GAAIJ,YAAYK,GACvC,KAAK,GAAIzJ,GAAI,EAAGgK,EAAK,EAAGhK,EAAIyJ,IAAKzJ,EAAGgK,GAAM,EACtCR,EAAQxJ,GACJwH,EAAOwC,IAAY,GAAKxC,EAAOwC,EAAK,IAAO,GAC3CxC,EAAOwC,EAAK,IAAQ,EAAIxC,EAAOwC,EAAK,IAAQ,CAGpD,OAAOR,GASX,QAASS,GAAaJ,EAAOL,GACzB,GAAIC,GAAII,EAAMnG,MACT8F,KAASA,EAAS,GAAIjC,YAAY,EAAIkC,GAE3C,KAAK,GADDK,GAAKf,EAAaS,GACbxJ,EAAI,EAAGA,EAAIyJ,IAAKzJ,EACrB8J,EAAG7B,SAAU,EAAIjI,EAAG6J,EAAO7J,GAE/B,OAAOgJ,GAAcQ,GAGzB,QAASU,GAAe1C,EAAOgC,GAC3B,GAAIC,GAAIjC,EAAM9D,MACT8F,KAASA,EAAS,GAAIF,cAAcG,EAAI,GAG7C,KAAK,GAFDU,GAAQpB,EAAaS,GACrBY,EAAOrB,EAAavB,GACfxH,EAAI,EAAGgK,EAAK,EAAGK,EAAKZ,EAAI,EAAGzJ,EAAIqK,IAAMrK,EAAGgK,GAAM,EACnDG,EAAMG,WAAYN,EAAII,EAAKG,WAAYP,IAAM,EAEjD,OAAOR,GAeX,QAASgB,GAAeC,EAAUC,EAASlB,GACvC,GAAIC,GAAIgB,EAAS/G,OACbiH,EAAS,EAAED,CACVlB,KAASA,EAAS,GAAIF,cAAcG,GACzC,KAAK,GAAIzJ,GAAI,EAAGA,EAAIyJ,IAAKzJ,EAErBwJ,EAAQxJ,GAAMyK,EAAUzK,GAAM2K,CAElC,OAAOnB,GAGX,QAASoB,GAAeC,EAAYC,EAAQtB,GACxC,GAAIC,GAAIoB,EAAWnH,MACd8F,KAASA,EAAS,GAAIJ,YAAYK,GACvC,KAAK,GAAIzJ,GAAI,EAAGA,EAAIyJ,IAAKzJ,EACrBwJ,EAAQxJ,GAAM2H,KAAKoD,MAAOF,EAAY7K,GAAM8K,EAEhD,OAAOtB,GAeX,QAASwB,GAAWnB,EAAOL,GACvB,GAAIxJ,GAAGqK,CACP,KAAKb,EAAQ,CAET,GAAIyB,GAAa,CACjB,KAAKjL,EAAI,EAAGqK,EAAKR,EAAMnG,OAAQ1D,EAAIqK,EAAIrK,GAAG,EACtCiL,GAAcpB,EAAO7J,EAAI,EAG7BwJ,GAAS,GAAIK,GAAMlO,YAAasP,GAEpC,GAAIC,GAAa,CACjB,KAAKlL,EAAI,EAAGqK,EAAKR,EAAMnG,OAAQ1D,EAAIqK,EAAIrK,GAAG,EAGtC,IAAK,GAFD1G,GAAQuQ,EAAO7J,GACf0D,EAASmG,EAAO7J,EAAI,GACfmL,EAAI,EAAGA,EAAIzH,IAAUyH,EAC1B3B,EAAQ0B,GAAe5R,IACrB4R,CAGV,OAAO1B,GAGX,QAAS4B,GAAWvB,GAChB,GAAqB,IAAjBA,EAAMnG,OAAe,MAAO,IAAI0F,YAAW,EAC/C,IAAIpJ,GAAGqK,EAEHY,EAAa,CACjB,KAAKjL,EAAI,EAAGqK,EAAKR,EAAMnG,OAAQ1D,EAAIqK,IAAMrK,EACjC6J,EAAO7J,EAAI,KAAQ6J,EAAO7J,KAC1BiL,GAAc,EAGtB,IAAIzB,GAAS,GAAIJ,YAAY6B,GACzBrE,EAAS,EACTyE,EAAY,CAChB,KAAKrL,EAAI,EAAGqK,EAAKR,EAAMnG,OAAQ1D,EAAIqK,IAAMrK,EACjC6J,EAAO7J,EAAI,KAAQ6J,EAAO7J,IAC1BwJ,EAAQ5C,GAAWiD,EAAO7J,EAAI,GAC9BwJ,EAAQ5C,EAAS,GAAMyE,EACvBA,EAAY,EACZzE,GAAU,KAERyE,CAKV,OAFA7B,GAAQ5C,GAAWiD,EAAOA,EAAMnG,OAAS,GACzC8F,EAAQ5C,EAAS,GAAMyE,EAChB7B,EAeX,QAAS8B,GAAazB,EAAOL,GACzB,GAAIC,GAAII,EAAMnG,MACT8F,KAASA,EAAS,GAAIK,GAAMlO,YAAa8N,IAC1CA,IAAID,EAAQ,GAAMK,EAAO,GAC7B,KAAK,GAAI7J,GAAI,EAAGA,EAAIyJ,IAAKzJ,EACrBwJ,EAAQxJ,GAAM6J,EAAO7J,GAAMwJ,EAAQxJ,EAAI,EAE3C,OAAOwJ,GAGX,QAAS+B,GAAa1B,EAAOL,GACzB,GAAIC,GAAII,EAAMnG,MACT8F,KAASA,EAAS,GAAIK,GAAMlO,YAAa8N,IAC9CD,EAAQ,GAAMK,EAAO,EACrB,KAAK,GAAI7J,GAAI,EAAGA,EAAIyJ,IAAKzJ,EACrBwJ,EAAQxJ,GAAM6J,EAAO7J,GAAM6J,EAAO7J,EAAI,EAE1C,OAAOwJ,GAWX,QAASgC,GAAeC,EAAUjC,GAC9B,GAGIxJ,GAAGmL,EAHHO,EAAaD,YAAoBvC,WAAY,IAAO,MACpDyC,GAAcD,EAAa,EAC3BjC,EAAIgC,EAAS/H,MAEjB,KAAK8F,EAAQ,CACT,GAAIyB,GAAa,CACjB,KAAKjL,EAAI,EAAGA,EAAIyJ,IAAKzJ,EACbyL,EAAUzL,GAAM0L,GAAcD,EAAUzL,GAAM2L,KAC5CV,CAGVzB,GAAS,GAAIJ,YAAY6B,GAI7B,IAFAjL,EAAI,EACJmL,EAAI,EACGnL,EAAIyJ,GAAG,CAEV,IADA,GAAInQ,GAAQ,GACLmS,EAAUzL,KAAQ0L,GAAcD,EAAUzL,KAAQ2L,KACrDrS,GAASmS,EAAUzL,KACjBA,EACoB,IAAlByL,EAAUzL,MAIlB1G,GAASmS,EAAUzL,KACjBA,EACFwJ,EAAQ2B,GAAM7R,IACZ6R,EAEN,MAAO3B,GASX,QAASoC,GAAenB,EAAUoB,GAC9B,GAEI7L,GAFA0L,EAAaG,EAAU,IAAO,MAC9BF,GAAcD,EAAa,EAE3BjC,EAAIgB,EAAS/G,OACbwE,EAAO,CACX,KAAKlI,EAAI,EAAGA,EAAIyJ,IAAKzJ,EAAG,CACpB,GAAI1G,GAAQmR,EAAUzK,EACR,KAAV1G,IACE4O,EAEFA,GADM5O,IAAUoS,GAAcpS,IAAUqS,EAChC,EACFrS,EAAQ,EACNqO,KAAKmE,KAAMxS,EAAQoS,GAEnB/D,KAAKmE,KAAMxS,EAAQqS,GAGnC,GAAInC,GAASqC,EAAU,GAAI3C,WAAWhB,GAAS,GAAIwB,YAAYxB,GAC3DiD,EAAI,CACR,KAAKnL,EAAI,EAAGA,EAAIyJ,IAAKzJ,EAAG,CACpB,GAAI1G,GAAQmR,EAAUzK,EACtB,IAAI1G,GAAS,EACT,KAAOA,GAASoS,GACZlC,EAAQ2B,GAAMO,IACZP,EACF7R,GAASoS,MAGb,MAAOpS,GAASqS,GACZnC,EAAQ2B,GAAMQ,IACZR,EACF7R,GAASqS,CAGjBnC,GAAQ2B,GAAM7R,IACZ6R,EAEN,MAAO3B,GAKX,QAASuC,GAAgBlC,EAAOL,GAC5B,MAAO8B,GAAaN,EAAWnB,GAASL,GAG5C,QAASwC,GAAgBnC,GACrB,MAAOuB,GAAWG,EAAa1B,IAkBnC,QAASoC,GAAkBxB,EAAUC,EAASlB,GAC1C,MAAOgB,GACHQ,EAAWP,EAAUtB,EAAcK,IAAYkB,EAASlB,GAIhE,QAAS0C,GAAkBrB,EAAYC,GACnC,MAAOM,GAAWR,EAAeC,EAAYC,IAKjD,QAASqB,GAAoB1B,EAAUC,EAASlB,GAC5C,MAAOgB,GACHc,EAAab,EAAUtB,EAAcK,IAAYkB,EAASlB,GAIlE,QAAS4C,GAAoBvB,EAAYC,EAAQtB,GAC7C,MAAO+B,GAAaX,EAAeC,EAAYC,GAAUtB,GAK7D,QAAS6C,GAAsBZ,EAAUf,EAASlB,GAC9C,MAAOgB,GACHgB,EAAeC,EAAUtC,EAAcK,IAAYkB,EAASlB,GAIpE,QAAS8C,GAA2Bb,EAAUf,EAASlB,GACnD,GAAI+C,GAAWf,EAAeC,EAAUtC,EAAcK,GACtD,OAAO2C,GAAoBI,EAAU7B,EAASrB,EAAgBkD,IAGlE,QAASC,GAA2B3B,EAAYC,EAAQe,GACpD,MAAOD,GAAeQ,EAAoBvB,EAAYC,GAAUe,GAKpE,QAASY,GAAajF,GAClB,GAAIsC,GAAKf,EAAavB,GAClBxG,EAAO8I,EAAG4C,SAAU,GACpBxE,EAAO4B,EAAG4C,SAAU,GACpBC,EAAQnF,EAAMoF,SAAU,EAAG,IAC3BpF,EAAQA,EAAMoF,SAAU,GAC5B,QAAS5L,EAAMwG,EAAOU,EAAMyE,GAGhC,QAASE,GAAa7L,EAAMkH,EAAMyE,EAAOnF,GACrC,GAAIC,GAAS,GAAIe,aAAa,GAAKhB,EAAMV,YACrCgG,EAAM,GAAIvF,YAAYE,GACtBqC,EAAK,GAAIrB,UAAUhB,EAKvB,OAJAqC,GAAG7B,SAAU,EAAGjH,GAChB8I,EAAG7B,SAAU,EAAGC,GACZyE,GAAQG,EAAI7K,IAAK0K,EAAO,GAC5BG,EAAI7K,IAAKuF,EAAO,IACTsF,EAGX,QAASC,GAAUC,GACf,GAAI9E,GAAO8E,EAAKtJ,OACZ8D,EAAQwB,EAAcgE,EAC1B,OAAOH,GAAa,EAAG3E,EAAMtF,OAAW4E,GAG5C,QAASyF,GAAWC,GAChB,GAAIhF,GAAOgF,EAAMxJ,OACb8D,EAAQyC,EAAaiD,EACzB,OAAOL,GAAa,EAAG3E,EAAMtF,OAAW4E,GAG5C,QAAS2F,GAAYC,EAAa1J,GAC9B,GAAIwE,GAAOkF,EAAY1J,OAASA,EAC5BiJ,EAAQ1C,GAAcvG,IACtB8D,EAAQwB,EAAcoE,EAC1B,OAAOP,GAAa,EAAG3E,EAAMyE,EAAOnF,GAGxC,QAAS6F,GAASC,GACd,GAAIpF,GAAOoF,EAAU5J,OACjB8D,EAAQyC,EAAamB,EAAWkC,GACpC,OAAOT,GAAa,EAAG3E,EAAMtF,OAAW4E,GAG5C,QAAS+F,GAAUL,GACf,GAAIhF,GAAOgF,EAAMxJ,OACb8D,EAAQyC,EAAa+B,EAAgBkB,GACzC,OAAOL,GAAa,EAAG3E,EAAMtF,OAAW4E,GAG5C,QAASgG,GAAYC,EAAS3C,GAC1B,GAAI5C,GAAOuF,EAAQ/J,OACfiJ,EAAQ1C,GAAca,IACtBtD,EAAQyC,EAAaiC,EAAkBuB,EAAS3C,GACpD,OAAO+B,GAAa,EAAG3E,EAAMyE,EAAOnF,GAGxC,QAASkG,GAAuBD,EAAS3C,GACrC,GAAI5C,GAAOuF,EAAQ/J,OACfiJ,EAAQ1C,GAAca,IACtBtD,EAAQoC,EAAa4C,EAA2BiB,EAAS3C,GAC7D,OAAO+B,GAAa,GAAI3E,EAAMyE,EAAOnF,GAGzC,QAASmG,GAAYC,GAEjB,GAAIC,KAqFJ,OAlFAC,IAAkBxO,QAAS,SAAUI,GACPkD,SAAtBgL,EAAWlO,KACXmO,EAAYnO,GAASkO,EAAWlO,MAQpCkO,EAAUG,eACVF,EAAWE,aAAed,EAAWW,EAAUG,eAI/CH,EAAUI,gBACVH,EAAWG,cAAgBjB,EAAUa,EAAUI,gBAOnDH,EAAWI,WAAaP,EAAuBE,EAAUK,WAAY,KACrEJ,EAAWK,WAAaR,EAAuBE,EAAUM,WAAY,KACrEL,EAAWM,WAAaT,EAAuBE,EAAUO,WAAY,KAGjEP,EAAUQ,cACVP,EAAWO,YAAcV,EAAuBE,EAAUQ,YAAa,MAIvER,EAAUS,aACVR,EAAWQ,WAAad,EAAUK,EAAUS,aAI5CT,EAAUU,aACVT,EAAWS,WAAajB,EAASO,EAAUU,aAI3CV,EAAUW,gBACVV,EAAWU,cAAgBf,EAAYI,EAAUW,cAAe,MAOpEV,EAAWW,YAAcjB,EAAUK,EAAUY,aAG7CX,EAAWY,cAAgBxB,EAAWW,EAAUa,eAG5Cb,EAAUc,gBACVb,EAAWa,cAAgB3B,EAAUa,EAAUc,cAAe,IAI9Dd,EAAUe,cACVd,EAAWc,YAActB,EAASO,EAAUe,cAI5Cf,EAAUgB,oBACVf,EAAWe,kBAAoBrB,EAAUK,EAAUgB,oBAOvDf,EAAWgB,YAAc1B,EAAYS,EAAUiB,YAAa,GAGxDjB,EAAUkB,gBACVjB,EAAWiB,cAAgB3B,EAAYS,EAAUkB,cAAe,IAG7DjB,EAqBX,QAASkB,GAActH,GAarB,QAAS7C,GAAIlB,GAEX,IAAK,GADDpK,MACK0G,EAAI,EAAGA,EAAI0D,EAAQ1D,IAAK,CAC/B,GAAIqI,GAAM2G,GACV1V,GAAM+O,GAAO2G,IAEf,MAAO1V,GAQT,QAAS2V,GAAIvL,GACX,GAAIpK,GAAQmO,EAAOmF,SAAShG,EAAQA,EAASlD,EAE7C,OADAkD,IAAUlD,EACHpK,EAQT,QAAS4V,GAAIxL,GACX,GAAImG,GAAQpC,EAAOmF,SAAShG,EAAQA,EAASlD,EAC7CkD,IAAUlD,CAGV,IAAIyL,GAAY,KAChB,IAAGzL,EAASyL,EAAU,CAEpB,IAAI,GADAjW,MACI8G,EAAI,EAAGA,EAAI6J,EAAMnG,OAAQ1D,GAAKmP,EACpCjW,EAAE+D,KAAKmS,OAAOC,aAAa5I,MACzB,KAAMoD,EAAM+C,SAAS5M,EAAGA,EAAImP,IAGhC,OAAOjW,GAAEoW,KAAK,IAEd,MAAOF,QAAOC,aAAa5I,MAAM,KAAMoD,GAS3C,QAASA,GAAMnG,GAEb,IAAK,GADDpK,GAAQ,GAAI8O,OAAM1E,GACb1D,EAAI,EAAGA,EAAI0D,EAAQ1D,IAC1B1G,EAAM0G,GAAKgP,GAEb,OAAO1V,GAOT,QAAS0V,KACP,GACI1V,GAAOoK,EADP1C,EAAOyG,EAAOb,EAGlB,IAAsB,KAAV,IAAP5F,GAEH,MADA4F,KACO5F,CAGT,IAAsB,OAAV,IAAPA,GAGH,MAFA0C,GAAgB,GAAP1C,EACT4F,IACOhC,EAAIlB,EAGb,IAAsB,OAAV,IAAP1C,GAGH,MAFA0C,GAAgB,GAAP1C,EACT4F,IACOiD,EAAMnG,EAGf,IAAsB,OAAV,IAAP1C,GAGH,MAFA0C,GAAgB,GAAP1C,EACT4F,IACOsI,EAAIxL,EAGb,IAAsB,OAAV,IAAP1C,GAGH,MAFA1H,GAAQiW,EAASC,QAAQ5I,GACzBA,IACOtN,CAET,QAAQ0H,GAER,IAAK,KAEH,MADA4F,KACO,IAGT,KAAK,KAEH,MADAA,MACO,CAET,KAAK,KAEH,MADAA,MACO,CAET,KAAK,KAGH,MAFAlD,GAAS6L,EAASE,SAAS7I,EAAS,GACpCA,GAAU,EACHqI,EAAIvL,EAEb,KAAK,KAGH,MAFAA,GAAS6L,EAASG,UAAU9I,EAAS,GACrCA,GAAU,EACHqI,EAAIvL,EAEb,KAAK,KAGH,MAFAA,GAAS6L,EAASI,UAAU/I,EAAS,GACrCA,GAAU,EACHqI,EAAIvL,EAoBb,KAAK,KAGH,MAFApK,GAAQiW,EAAShF,WAAW3D,EAAS,GACrCA,GAAU,EACHtN,CAET,KAAK,KAGH,MAFAA,GAAQiW,EAASK,WAAWhJ,EAAS,GACrCA,GAAU,EACHtN,CAET,KAAK,KAGH,MAFAA,GAAQmO,EAAOb,EAAS,GACxBA,GAAU,EACHtN,CAET,KAAK,KAGH,MAFAA,GAAQiW,EAASG,UAAU9I,EAAS,GACpCA,GAAU,EACHtN,CAET,KAAK,KAGH,MAFAA,GAAQiW,EAASI,UAAU/I,EAAS,GACpCA,GAAU,EACHtN,CAST,KAAK,KAGH,MAFAA,GAAQiW,EAASC,QAAQ5I,EAAS,GAClCA,GAAU,EACHtN,CAET,KAAK,KAGH,MAFAA,GAAQiW,EAASM,SAASjJ,EAAS,GACnCA,GAAU,EACHtN,CAET,KAAK,KAGH,MAFAA,GAAQiW,EAAS7C,SAAS9F,EAAS,GACnCA,GAAU,EACHtN,CAmCT,KAAK,KAGH,MAFAoK,GAAS6L,EAASE,SAAS7I,EAAS,GACpCA,GAAU,EACHsI,EAAIxL,EAEb,KAAK,KAGH,MAFAA,GAAS6L,EAASG,UAAU9I,EAAS,GACrCA,GAAU,EACHsI,EAAIxL,EAEb,KAAK,KAGH,MAFAA,GAAS6L,EAASI,UAAU/I,EAAS,GACrCA,GAAU,EACHsI,EAAIxL,EAEb,KAAK,KAGH,MAFAA,GAAS6L,EAASG,UAAU9I,EAAS,GACrCA,GAAU,EACHiD,EAAMnG,EAEf,KAAK,KAGH,MAFAA,GAAS6L,EAASI,UAAU/I,EAAS,GACrCA,GAAU,EACHiD,EAAMnG,EAEf,KAAK,KAGH,MAFAA,GAAS6L,EAASG,UAAU9I,EAAS,GACrCA,GAAU,EACHhC,EAAIlB,EAEb,KAAK,KAGH,MAFAA,GAAS6L,EAASI,UAAU/I,EAAS,GACrCA,GAAU,EACHhC,EAAIlB,GAGb,KAAM,IAAIc,OAAM,kBAAoBxD,EAAK8G,SAAS,KAzQpD,GAAIlB,GAAS,EACT2I,EAAW,GAAI9G,UAAShB,EAAOA,OA4QnC,OAAOuH,KA+GT,QAASc,GAAiB9O,EAAMwG,EAAOU,EAAMyE,GAEzC,OAAQ3L,GACJ,IAAK,GACD,MAAOkJ,GAAe1C,EAC1B,KAAK,GACD,MAAOyB,GAAazB,EACxB,KAAK,GACD,MAAO+B,GAAa/B,EACxB,KAAK,GACD,MAAOuC,GAAavC,EACxB,KAAK,GAED,MAAOwB,GAAcxB,EACzB,KAAK,GAED,MAAOwD,GAAWjB,EAAavC,GAAS,GAAID,YAAYW,GAC5D,KAAK,GACD,MAAO8C,GAAWjB,EAAavC,GACnC,KAAK,GACD,MAAOuE,GAAgBhC,EAAavC,GACxC,KAAK,GACD,MAAOyE,GAAkBlC,EAAavC,GAASuC,EAAa4C,GAAS,GACzE,KAAK,IACD,MAAOL,GAA2B/C,EAAa/B,GAASuC,EAAa4C,GAAS,GAClF,KAAK,IACD,MAAOnC,GAAejB,EAAa/B,GAASuC,EAAa4C,GAAS,GACtE,KAAK,IACD,MAAON,GAAsB9C,EAAa/B,GAASuC,EAAa4C,GAAS,GAC7E,KAAK,IACD,MAAON,GAAsBpD,EAAazB,GAASuC,EAAa4C,GAAS,GAC7E,KAAK,IACD,MAAOnB,GAAejC,EAAa/B,GACvC,KAAK,IACD,MAAOgE,GAAevC,EAAazB,KAc/C,QAASuI,GAAYnC,EAAWoC,GAE5BA,EAASA,KACT,IAAIC,GAAeD,EAAOC,aACtBpC,IAcJ,OAZAqC,IAAU5Q,QAAS,SAAUI,GACzB,GAAIyQ,KAASF,GAAeA,EAAatS,QAAS+B,QAC9C0Q,EAAOxC,EAAWlO,EACjByQ,IAAmBvN,SAATwN,IACPA,YAAgB7I,YAChBsG,EAAYnO,GAASoQ,EAAgBrJ,MAAO,KAAMgG,EAAa2D,IAE/DvC,EAAYnO,GAAS0Q,KAK1BvC,EAqBX,QAASwB,GAAcgB,GACnB,MAAOjB,QAAOC,aAAa5I,MAAO,KAAM4J,GAAgBC,QAAQ,MAAO,IAkF3E,QAASC,GAAcC,EAAUC,EAAgBT,GAE7CA,EAASA,KAET,IA+BI1K,GAAGoL,EAAI1Q,EAAGmL,EAAGwF,EAAGC,EA/BhBC,EAAiBb,EAAOa,eAGxBC,EAAUL,EAAeK,QACzBC,EAAUN,EAAeM,QACzBC,EAAUP,EAAeO,QACzBC,EAASR,EAAeQ,OACxBC,EAAST,EAAeS,OAGxBC,EAAa,EACbC,EAAa,EACbC,EAAa,EACbC,EAAY,EAEZC,EAAsB,EACtBC,KAGA1C,EAAgB0B,EAAS1B,cACzBJ,EAAgB8B,EAAS9B,cACzBC,EAAc6B,EAAS7B,YACvBC,EAAoB4B,EAAS5B,kBAC7BP,EAAamC,EAASnC,WACtBD,EAAcoC,EAASpC,YACvBE,EAAakC,EAASlC,WACtBC,EAAgBiC,EAASjC,cACzBR,EAAeyC,EAASzC,aACxBC,EAAgBwC,EAASxC,aAM7B,KAAK1I,EAAI,EAAGoL,EAAKF,EAASiB,eAAe/N,OAAQ4B,EAAIoL,KAE7CG,GAAkBM,EAAa,KAFoB7L,EAAG,CAI1D,GAAIoM,GAAkBlB,EAASiB,eAAgBN,EAS/C,KAPIL,GACAA,GACIa,WAAYD,EACZP,WAAYA,IAIfnR,EAAI,EAAGA,EAAI0R,IAAmB1R,EAAG,CAElC,GAAI4R,GAAkBpB,EAASqB,eAAgBT,EAC/C,IAAIL,EAAS,CACT,GAAIe,GAAUzC,EACVmB,EAAS3B,YAAYjC,SAAuB,EAAbwE,EAA6B,EAAbA,EAAiB,IAEhEW,EAAY,IACZjD,KACAiD,EAAY1C,EACRP,EAAclC,SAAuB,EAAbwE,EAA6B,EAAbA,EAAiB,KAGjEL,GACIiB,WAAYJ,EACZR,WAAYA,EACZD,WAAYA,EACZW,QAASA,EACTC,UAAWA,IAInB,IAAK5G,EAAI,EAAGA,EAAIyG,IAAmBzG,EAAG,CAElC,GAAI8G,GAAYzB,EAAS0B,UAAW1B,EAAS/B,cAAe4C,IACxDc,EAAiBF,EAAUG,aAAa1O,MAC5C,IAAIsN,EAAS,CACT,GAAIqB,GAAY,IACZ3D,KACA2D,EAAY3D,EAAe2C,GAE/B,IAAIiB,GAAU,IACV9B,GAAS7B,cACT2D,EAAUlD,OAAOC,aAAcV,EAAa0C,IAEhD,IAAIkB,GAAgB,IAChB3D,KACA2D,EAAgB3D,EAAmByC,IAEvCL,GACIwB,UAAWL,EACXd,WAAYA,EACZD,WAAYA,EACZD,WAAYA,EACZsB,QAASjC,EAAShC,YAAa6C,GAC/BqB,UAAWlC,EAAS/B,cAAe4C,GACnCsB,UAAWV,EAAUU,UACrBC,iBAAkBX,EAAUW,iBAC5BC,aAAcZ,EAAUY,aACxBR,UAAWA,EACXC,QAASA,EACTC,cAAeA,IAIvB,IAAK5B,EAAI,EAAGA,EAAIwB,IAAkBxB,EAAG,CAEjC,GAAIM,EAAQ,CACR,GAAI6B,GAAS,IACTzE,KACAyE,EAASzE,EAAYiD,GAEzB,IAAIyB,GAAU,IACV3E,KACA2E,EAAU3E,EAAakD,GAE3B,IAAI0B,GAAS,IACT1E,KACA0E,EAAS5D,OAAOC,aAAcf,EAAYgD,IAE9C,IAAI2B,GAAY,IACZ1E,KACA0E,EAAY1E,EAAe+C,IAE/BL,GACIK,UAAWA,EACXD,WAAYA,EACZD,WAAYA,EACZD,WAAYA,EACZ2B,OAAQA,EACRI,QAASjB,EAAUkB,YAAaxC,GAChCyC,SAAUnB,EAAUG,aAAczB,GAClC0C,aAAcpB,EAAUqB,iBAAkB3C,GAC1C4C,OAAQ/C,EAASvC,WAAYqD,GAC7BkC,OAAQhD,EAAStC,WAAYoD,GAC7BmC,OAAQjD,EAASrC,WAAYmD,GAC7ByB,QAASA,EACTC,OAAQA,EACRC,UAAWA,IAInB3B,GAAa,EAGjB,GAAIJ,EAAQ,CAER,GAAIwC,GAAoBzB,EAAUlE,YAClC,KAAK4C,EAAI,EAAGC,EAAKqB,EAAUjE,cAActK,OAAQiN,EAAIC,IAAMD,EACvDO,GACIyC,WAAYrC,EAAYa,EAAiBuB,EAAuB,EAAJ/C,GAC5DiD,WAAYtC,EAAYa,EAAiBuB,EAAuB,EAAJ/C,EAAQ,GACpEkD,UAAW5B,EAAUjE,cAAe2C,KAKhDU,GAAc,EAGlBD,GAAc,EAMlB,GAHAG,EAAsBC,EAAqB,EAC3CA,EAAqBF,EAAY,EAE7BJ,GAEInD,EACA,IAAK4C,EAAI,EAAGC,EAAK7C,EAAarK,OAAQiN,EAAIC,EAAID,GAAK,EAAG,CAClD,GAAIgD,GAAa5F,EAAc4C,GAC3BiD,EAAa7F,EAAc4C,EAAI,IAC7BgD,GAAcpC,GAAuBoC,GAAcnC,GACnDoC,GAAcrC,GAAuBqC,GAAcpC,IAErDN,GACIyC,WAAYA,EACZC,WAAYA,EACZC,UAAW7F,EAAgBA,EAAe2C,EAAI,GAAM,OAOxEQ,GAAc,GAuCtB,QAAS2C,GAAQtD,GACb,MAAOjI,GAAeoF,EAAY6C,IAgBtC,QAASuD,GAAQC,EAAWhE,GAEpBgE,YAAqBxL,eACrBwL,EAAY,GAAIzM,YAAYyM,GAGhC,IAAIpG,EASJ,OANIA,GAFAoG,YAAqBzM,YAETwH,EAAeiF,GAGfA,EAGTjE,EAAYnC,EAAWoC,GAiBlC,QAASiE,GAAQC,EAAOC,EAASC,EAAQC,GAErC,QAASC,KACL,IACI,GAAI9D,GAAWuD,EAAQQ,EAAIC,SAC3BJ,GAAQ5D,GACX,MAAOiE,GACJJ,EAASI,IANjB,GAAIF,GAAM,GAAIG,eASdH,GAAII,iBAAkB,OAAQL,GAAS,GACvCC,EAAII,iBAAkB,QAASN,GAAS,GACxCE,EAAIK,aAAe,cACnBL,EAAIM,KAAM,MAAOV,EAAUD,EAAMY,eACjCP,EAAI7V,OAoBR,QAASqW,GAAOb,EAAOE,EAAQC,GAC3BJ,EAAQC,EAAOc,GAAUZ,EAAQC,GAqBrC,QAASY,IAAcf,EAAOE,EAAQC,GAClCJ,EAAQC,EAAOgB,GAAiBd,EAAQC,GA79C5C,GAAIvG,KACA,cAAe,eACf,WAAY,aAAc,cAAe,QACzC,iBAAkB,cAClB,sBAAuB,aAAc,QAAS,QAC9C,kBAAmB,kBAAmB,aAAc,YACpD,WAAY,WAAY,YAAa,YAAa,YAClD,iBAAkB,kBAGlBqH,IAEA,aAAc,aAAc,aAC5B,cAAe,gBACf,cAEA,cAAe,aAAc,aAAc,gBAC3C,gBAAiB,cAAe,oBAChC,gBACA,eAAgB,iBAGhBjF,GAAYpC,GAAkBsH,OAAQD,IAg0CtCE,GAAU,SAOVlB,GAAU,6BAOVa,GAAWb,GAAU,QAOrBe,GAAkBf,GAAU,UAqHhC1b,GAAQqb,OAASA,EACjBrb,EAAQsb,OAASA,EACjBtb,EAAQ6c,SAAW/E,EACnB9X,EAAQsc,MAAQA,EAChBtc,EAAQwc,aAAeA,GACvBxc,EAAQ4c,QAAUA,GAClB5c,EAAQuc,SAAWA,GACnBvc,EAAQyc,gBAAkBA,GAC1Bzc,EAAQ8P,cAAgBA,EACxB9P,EAAQkV,WAAaA,EACrBlV,EAAQsW,cAAgBA,EACxBtW,EAAQsX,WAAaA,IAES,SAAUwF,GAAG,GAAoB,WAAjB/Z,EAAO/C,IAAoC,mBAATD,GAAsBA,EAAOC,QAAQ8c,QAAS,CAA2ClP,KAAAD,EAAA,EAAAE,EAAA,kBAAAF,KAAAK,MAAAhO,EAAA4N,GAAAD,IAAAxD,SAAA0D,IAAA9N,EAAAC,QAAA6N,MAAqL,WAAqC,MAAQ,SAASlB,GAAEoQ,EAAE/L,EAAEgM,GAAG,QAASC,GAAEpQ,EAAEqQ,GAAG,IAAIlM,EAAEnE,GAAG,CAAC,IAAIkQ,EAAElQ,GAAG,CAAC,GAAIE,GAAkB,kBAATrD,IAAqBA,CAAQ,KAAIwT,GAAGnQ,EAAE,MAAOrD,GAAEmD,GAAE,EAAI,IAAGtF,EAAE,MAAOA,GAAEsF,GAAE,EAAI,IAAIiQ,GAAE,GAAI/Q,OAAM,uBAAuBc,EAAE,IAAK,MAAMiQ,GAAEK,KAAK,mBAAmBL,EAAE,GAAI1Q,GAAE4E,EAAEnE,IAAI7M,WAAY+c,GAAElQ,GAAG,GAAGtM,KAAK6L,EAAEpM,QAAQ,SAAS2M,GAAG,GAAIqE,GAAE+L,EAAElQ,GAAG,GAAGF,EAAG,OAAOsQ,GAAEjM,EAAEA,EAAErE,IAAIP,EAAEA,EAAEpM,QAAQ2M,EAAEoQ,EAAE/L,EAAEgM,GAAG,MAAOhM,GAAEnE,GAAG7M,QAAkD,IAAI,GAA1CuH,GAAkB,kBAATmC,IAAqBA,EAAgBmD,EAAE,EAAEA,EAAEmQ,EAAE/R,OAAO4B,IAAIoQ,EAAED,EAAEnQ,GAAI,OAAOoQ,KAAKG,GAAG,SAAS1T,EAAQ3J,EAAOC,GACn2B,YAGA,IAAIqd,GAAmC,mBAAfvO,aACgB,mBAAhBwO,cACe,mBAAf3M,WAGxB3Q,GAAQwL,OAAS,SAAUrK,GAEzB,IADA,GAAIoc,GAAU5N,MAAM6N,UAAUtQ,MAAM3M,KAAKkd,UAAW,GAC7CF,EAAQtS,QAAQ,CACrB,GAAIyS,GAASH,EAAQI,OACrB,IAAKD,EAAL,CAEA,GAAsB,YAAlB,mBAAOA,GAAP,YAAA3a,EAAO2a,IACT,KAAM,IAAIE,WAAUF,EAAS,qBAG/B,KAAK,GAAIhd,KAAKgd,GACRA,EAAOG,eAAend,KACxBS,EAAIT,GAAKgd,EAAOhd,KAKtB,MAAOS,IAKTnB,EAAQ8d,UAAY,SAAUC,EAAKtO,GACjC,MAAIsO,GAAI9S,SAAWwE,EAAesO,EAC9BA,EAAI5J,SAAmB4J,EAAI5J,SAAS,EAAG1E,IAC3CsO,EAAI9S,OAASwE,EACNsO,GAIT,IAAIC,IACFC,SAAU,SAAUC,EAAMC,EAAKC,EAAUC,EAAKC,GAC5C,GAAIH,EAAIhK,UAAY+J,EAAK/J,SAEvB,WADA+J,GAAK1U,IAAI2U,EAAIhK,SAASiK,EAAUA,EAASC,GAAMC,EAIjD,KAAK,GAAI/W,GAAE,EAAGA,EAAE8W,EAAK9W,IACnB2W,EAAKI,EAAY/W,GAAK4W,EAAIC,EAAW7W,IAIzCgX,cAAe,SAASC,GACtB,GAAIjX,GAAG6E,EAAGiS,EAAKI,EAAKC,EAAOC,CAI3B,KADAN,EAAM,EACD9W,EAAE,EAAG6E,EAAEoS,EAAOvT,OAAQ1D,EAAE6E,EAAG7E,IAC9B8W,GAAOG,EAAOjX,GAAG0D,MAMnB,KAFA0T,EAAS,GAAI7P,YAAWuP,GACxBI,EAAM,EACDlX,EAAE,EAAG6E,EAAEoS,EAAOvT,OAAQ1D,EAAE6E,EAAG7E,IAC9BmX,EAAQF,EAAOjX,GACfoX,EAAOnV,IAAIkV,EAAOD,GAClBA,GAAOC,EAAMzT,MAGf,OAAO0T,KAIPC,GACFX,SAAU,SAAUC,EAAMC,EAAKC,EAAUC,EAAKC,GAC5C,IAAK,GAAI/W,GAAE,EAAGA,EAAE8W,EAAK9W,IACnB2W,EAAKI,EAAY/W,GAAK4W,EAAIC,EAAW7W,IAIzCgX,cAAe,SAASC,GACtB,SAAU7B,OAAO3O,SAAUwQ,IAO/Bxe,GAAQ6e,SAAW,SAAUla,GACvBA,GACF3E,EAAQ8e,KAAQhQ,WAChB9O,EAAQ+e,MAAQzB,YAChBtd,EAAQgf,MAAQrO,WAChB3Q,EAAQwL,OAAOxL,EAASge,KAExBhe,EAAQ8e,KAAQnP,MAChB3P,EAAQ+e,MAAQpP,MAChB3P,EAAQgf,MAAQrP,MAChB3P,EAAQwL,OAAOxL,EAAS4e,KAI5B5e,EAAQ6e,SAASxB,QAEX4B,GAAG,SAASvV,EAAQ3J,EAAOC,GAEjC,YAmFA,SAASkf,GAAcnB,EAAKM,GAE1B,GAAIA,EAAM,QACHN,EAAI5J,UAAYgL,IAAuBpB,EAAI5J,UAAYiL,GAC1D,MAAOzI,QAAOC,aAAa5I,MAAM,KAAMqR,EAAMvB,UAAUC,EAAKM,GAKhE,KAAK,GADDM,GAAS,GACJpX,EAAE,EAAGA,EAAI8W,EAAK9W,IACrBoX,GAAUhI,OAAOC,aAAamH,EAAIxW,GAEpC,OAAOoX,GA5FT,GAAIU,GAAQ3V,EAAQ,YAQhB0V,GAAe,EACfD,GAAmB,CAEvB,KAAMxI,OAAOC,aAAa5I,MAAM,MAAO,IAAO,MAAMsR,GAAMF,GAAe,EACzE,IAAMzI,OAAOC,aAAa5I,MAAM,KAAM,GAAIc,YAAW,IAAO,MAAMwQ,GAAMH,GAAmB,EAO3F,IAAK,GADDI,GAAW,GAAIF,GAAMP,KAAK,KACrBU,EAAE,EAAGA,EAAE,IAAKA,IACnBD,EAASC,GAAMA,GAAK,IAAM,EAAIA,GAAK,IAAM,EAAIA,GAAK,IAAM,EAAIA,GAAK,IAAM,EAAIA,GAAK,IAAM,EAAI,CAE5FD,GAAS,KAAKA,EAAS,KAAK,EAI5Bvf,EAAQyf,WAAa,SAAUhJ,GAC7B,GAAIsH,GAAKtd,EAAGif,EAAIC,EAAOpY,EAAGqY,EAAUnJ,EAAIxL,OAAQ4U,EAAU,CAG1D,KAAKF,EAAQ,EAAGA,EAAQC,EAASD,IAC/Blf,EAAIgW,EAAIlI,WAAWoR,GACE,SAAZ,MAAJlf,IAA2Bkf,EAAM,EAAIC,IACxCF,EAAKjJ,EAAIlI,WAAWoR,EAAM,GACJ,SAAZ,MAALD,KACHjf,EAAI,OAAYA,EAAI,OAAW,KAAOif,EAAK,OAC3CC,MAGJE,GAAWpf,EAAI,IAAO,EAAIA,EAAI,KAAQ,EAAIA,EAAI,MAAU,EAAI,CAO9D,KAHAsd,EAAM,GAAIsB,GAAMP,KAAKe,GAGhBtY,EAAE,EAAGoY,EAAQ,EAAGpY,EAAIsY,EAASF,IAChClf,EAAIgW,EAAIlI,WAAWoR,GACE,SAAZ,MAAJlf,IAA2Bkf,EAAM,EAAIC,IACxCF,EAAKjJ,EAAIlI,WAAWoR,EAAM,GACJ,SAAZ,MAALD,KACHjf,EAAI,OAAYA,EAAI,OAAW,KAAOif,EAAK,OAC3CC,MAGAlf,EAAI,IAENsd,EAAIxW,KAAO9G,EACFA,EAAI,MAEbsd,EAAIxW,KAAO,IAAQ9G,IAAM,EACzBsd,EAAIxW,KAAO,IAAY,GAAJ9G,GACVA,EAAI,OAEbsd,EAAIxW,KAAO,IAAQ9G,IAAM,GACzBsd,EAAIxW,KAAO,IAAQ9G,IAAM,EAAI,GAC7Bsd,EAAIxW,KAAO,IAAY,GAAJ9G,IAGnBsd,EAAIxW,KAAO,IAAQ9G,IAAM,GACzBsd,EAAIxW,KAAO,IAAQ9G,IAAM,GAAK,GAC9Bsd,EAAIxW,KAAO,IAAQ9G,IAAM,EAAI,GAC7Bsd,EAAIxW,KAAO,IAAY,GAAJ9G,EAIvB,OAAOsd,IAqBT/d,EAAQkf,cAAgB,SAASnB,GAC/B,MAAOmB,GAAcnB,EAAKA,EAAI9S,SAKhCjL,EAAQ8f,cAAgB,SAASrJ,GAE/B,IAAK,GADDsH,GAAM,GAAIsB,GAAMP,KAAKrI,EAAIxL,QACpB1D,EAAE,EAAG8W,EAAIN,EAAI9S,OAAQ1D,EAAI8W,EAAK9W,IACrCwW,EAAIxW,GAAKkP,EAAIlI,WAAWhH,EAE1B,OAAOwW,IAKT/d,EAAQ+f,WAAa,SAAUhC,EAAKiC,GAClC,GAAIzY,GAAG8M,EAAK5T,EAAGwf,EACX5B,EAAM2B,GAAOjC,EAAI9S,OAKjBiV,EAAW,GAAIvQ,OAAU,EAAJ0O,EAEzB,KAAKhK,EAAI,EAAG9M,EAAE,EAAGA,EAAE8W,GAGjB,GAFA5d,EAAIsd,EAAIxW,KAEJ9G,EAAI,IAAQyf,EAAS7L,KAAS5T,MAIlC,IAFAwf,EAAQV,EAAS9e,GAEbwf,EAAQ,EAAKC,EAAS7L,KAAS,MAAQ9M,GAAK0Y,EAAM,MAAtD,CAKA,IAFAxf,GAAe,IAAVwf,EAAc,GAAiB,IAAVA,EAAc,GAAO,EAExCA,EAAQ,GAAK1Y,EAAI8W,GACtB5d,EAAKA,GAAK,EAAiB,GAAXsd,EAAIxW,KACpB0Y,GAIEA,GAAQ,EAAKC,EAAS7L,KAAS,MAE/B5T,EAAI,MACNyf,EAAS7L,KAAS5T,GAElBA,GAAK,MACLyf,EAAS7L,KAAS,MAAW5T,GAAK,GAAM,KACxCyf,EAAS7L,KAAS,MAAc,KAAJ5T,GAIhC,MAAOye,GAAcgB,EAAU7L,IAUjCrU,EAAQmgB,WAAa,SAASpC,EAAKiC,GACjC,GAAIvB,EAOJ,KALAuB,EAAMA,GAAOjC,EAAI9S,OACb+U,EAAMjC,EAAI9S,SAAU+U,EAAMjC,EAAI9S,QAGlCwT,EAAMuB,EAAI,EACHvB,GAAO,GAA2B,OAAV,IAAXV,EAAIU,KAAyBA,GAIjD,OAAIA,GAAM,EAAYuB,EAIV,IAARvB,EAAoBuB,EAEhBvB,EAAMc,EAASxB,EAAIU,IAAQuB,EAAOvB,EAAMuB,KAG/CI,WAAW,IAAIC,GAAG,SAAS3W,EAAQ3J,EAAOC,GAC7C,YAMA,SAASsgB,GAAQC,EAAOxC,EAAKM,EAAKI,GAKhC,IAJA,GAAI+B,GAAc,MAARD,EAAiB,EACvBE,EAAOF,IAAU,GAAM,MAAS,EAChCvP,EAAI,EAEO,IAARqN,GAAW,CAIhBrN,EAAIqN,EAAM,IAAO,IAAOA,EACxBA,GAAOrN,CAEP,GACEwP,GAAMA,EAAKzC,EAAIU,KAAS,EACxBgC,EAAMA,EAAKD,EAAK,UACPxP,EAEXwP,IAAM,MACNC,GAAM,MAGR,MAAQD,GAAMC,GAAM,GAAM,EAI5B1gB,EAAOC,QAAUsgB,OAEXI,GAAG,SAAShX,EAAQ3J,EAAOC,GACjCD,EAAOC,SAGL2gB,WAAoB,EACpBC,gBAAoB,EACpBC,aAAoB,EACpBC,aAAoB,EACpBC,SAAoB,EACpBC,QAAoB,EACpBC,QAAoB,EAKpBC,KAAoB,EACpBC,aAAoB,EACpBC,YAAoB,EACpBC,WACAC,kBACAC,gBAEAC,eAIAC,iBAA0B,EAC1BC,aAA0B,EAC1BC,mBAA0B,EAC1BC,yBAGAC,WAA0B,EAC1BC,eAA0B,EAC1BC,MAA0B,EAC1BC,QAA0B,EAC1BC,mBAA0B,EAG1BC,SAA0B,EAC1BC,OAA0B,EAE1BC,UAA0B,EAG1BC,WAA0B,QAItBC,GAAG,SAAS5Y,EAAQ3J,EAAOC,GACjC,YAQA,SAASuiB,KAGP,IAAK,GAFD9hB,GAAG+hB,KAEExR,EAAG,EAAGA,EAAI,IAAKA,IAAK,CAC3BvQ,EAAIuQ,CACJ,KAAK,GAAIkH,GAAG,EAAGA,EAAI,EAAGA,IACpBzX,EAAQ,EAAFA,EAAQ,WAAcA,IAAM,EAAOA,IAAM,CAEjD+hB,GAAMxR,GAAKvQ,EAGb,MAAO+hB,GAOT,QAASC,GAAMC,EAAK3E,EAAKM,EAAKI,GAC5B,GAAI1B,GAAI4F,EACJ9W,EAAM4S,EAAMJ,CAEhBqE,MAEA,KAAK,GAAInb,GAAIkX,EAAKlX,EAAIsE,EAAKtE,IACzBmb,EAAOA,IAAQ,EAAK3F,EAAmB,KAAhB2F,EAAM3E,EAAIxW,IAGnC,OAAQmb,MAbV,GAAIC,GAAWJ,GAiBfxiB,GAAOC,QAAUyiB,OAEXG,GAAG,SAASlZ,EAAQ3J,EAAOC,GACjC,YAGA,SAAS6iB,KAEPpe,KAAKqe,KAAa,EAElBre,KAAKse,KAAa,EAElBte,KAAKue,OAAa,EAElBve,KAAKwe,GAAa,EAElBxe,KAAKye,MAAa,KAElBze,KAAK0e,UAAa,EAWlB1e,KAAKwC,KAAa,GAIlBxC,KAAK2e,QAAa,GAIlB3e,KAAK4e,KAAa,EAElB5e,KAAK6e,MAAa,EAGpBvjB,EAAOC,QAAU6iB,OAEXU,GAAG,SAAS7Z,EAAQ3J,EAAOC,GACjC,YAGA,IAAIwjB,GAAM,GACNC,EAAO,EAqCX1jB,GAAOC,QAAU,SAAsB0jB,EAAM9X,GAC3C,GAAI+X,GACAC,EACAC,EACAC,EACAC,EACAlY,EAEAmY,EAEAC,EACAC,EACAC,EACAzgB,EACA0gB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAtG,EACAuG,EACAC,EACAC,EAGAC,EAAOhU,CAGX4S,GAAQD,EAAKC,MAEbC,EAAMF,EAAKsB,QACXD,EAAQrB,EAAKqB,MACblB,EAAOD,GAAOF,EAAKuB,SAAW,GAC9BnB,EAAOJ,EAAKwB,SACZnU,EAAS2S,EAAK3S,OACdgT,EAAMD,GAAQlY,EAAQ8X,EAAKyB,WAC3BtZ,EAAMiY,GAAQJ,EAAKyB,UAAY,KAE/BnB,EAAOL,EAAMK,KAEbC,EAAQN,EAAMM,MACdC,EAAQP,EAAMO,MACdC,EAAQR,EAAMQ,MACdzgB,EAASigB,EAAMjgB,OACf0gB,EAAOT,EAAMS,KACbC,EAAOV,EAAMU,KACbC,EAAQX,EAAMyB,QACdb,EAAQZ,EAAM0B,SACdb,GAAS,GAAKb,EAAM2B,SAAW,EAC/Bb,GAAS,GAAKd,EAAM4B,UAAY,CAMhCC,GACA,EAAG,CACGnB,EAAO,KACTD,GAAQW,EAAMnB,MAAUS,EACxBA,GAAQ,EACRD,GAAQW,EAAMnB,MAAUS,EACxBA,GAAQ,GAGVK,EAAOJ,EAAMF,EAAOI,EAEpBiB,GACA,OAAS,CAKP,GAJAd,EAAKD,IAAS,GACdN,KAAUO,EACVN,GAAQM,EACRA,EAAMD,IAAS,GAAM,IACV,IAAPC,EAIF5T,EAAO+S,KAAiB,MAAPY,MAEd,MAAS,GAALC,GAwKJ,IAAkB,KAAR,GAALA,GAAgB,CACxBD,EAAOJ,GAAc,MAAPI,IAA8BN,GAAS,GAAKO,GAAM,GAChE,SAASc,GAEN,GAAS,GAALd,EAAS,CAEhBhB,EAAM+B,KAAOjC,CACb,MAAM+B,GAGN9B,EAAKiC,IAAM,8BACXhC,EAAM+B,KAAOlC,CACb,MAAMgC,GAnLNnH,EAAa,MAAPqG,EACNC,GAAM,GACFA,IACEN,EAAOM,IACTP,GAAQW,EAAMnB,MAAUS,EACxBA,GAAQ,GAEVhG,GAAO+F,GAAS,GAAKO,GAAM,EAC3BP,KAAUO,EACVN,GAAQM,GAGNN,EAAO,KACTD,GAAQW,EAAMnB,MAAUS,EACxBA,GAAQ,EACRD,GAAQW,EAAMnB,MAAUS,EACxBA,GAAQ,GAEVK,EAAOH,EAAMH,EAAOK,EAEpBmB,GACA,OAAS,CAMP,GALAjB,EAAKD,IAAS,GACdN,KAAUO,EACVN,GAAQM,EACRA,EAAMD,IAAS,GAAM,MAEZ,GAALC,GA+HC,IAAkB,KAAR,GAALA,GAAgB,CACxBD,EAAOH,GAAc,MAAPG,IAA8BN,GAAS,GAAKO,GAAM,GAChE,SAASiB,GAGTlC,EAAKiC,IAAM,wBACXhC,EAAM+B,KAAOlC,CACb,MAAMgC,GAzHN,GAZAZ,EAAc,MAAPF,EACPC,GAAM,GACFN,EAAOM,IACTP,GAAQW,EAAMnB,MAAUS,EACxBA,GAAQ,EACJA,EAAOM,IACTP,GAAQW,EAAMnB,MAAUS,EACxBA,GAAQ,IAGZO,GAAQR,GAAS,GAAKO,GAAM,EAExBC,EAAOZ,EAAM,CACfN,EAAKiC,IAAM,gCACXhC,EAAM+B,KAAOlC,CACb,MAAMgC,GAOR,GAJApB,KAAUO,EACVN,GAAQM,EAERA,EAAKb,EAAOC,EACRa,EAAOD,EAAI,CAEb,GADAA,EAAKC,EAAOD,EACRA,EAAKT,GACHP,EAAMkC,KAAM,CACdnC,EAAKiC,IAAM,gCACXhC,EAAM+B,KAAOlC,CACb,MAAMgC,GA2BV,GAFAX,EAAO,EACPC,EAAcphB,EACA,IAAVygB,GAEF,GADAU,GAAQZ,EAAQU,EACZA,EAAKtG,EAAK,CACZA,GAAOsG,CACP,GACE5T,GAAO+S,KAAUpgB,EAAOmhB,aACfF,EACXE,GAAOf,EAAOc,EACdE,EAAc/T,OAGb,IAAIoT,EAAQQ,GAGf,GAFAE,GAAQZ,EAAQE,EAAQQ,EACxBA,GAAMR,EACFQ,EAAKtG,EAAK,CACZA,GAAOsG,CACP,GACE5T,GAAO+S,KAAUpgB,EAAOmhB,aACfF,EAEX,IADAE,EAAO,EACHV,EAAQ9F,EAAK,CACfsG,EAAKR,EACL9F,GAAOsG,CACP,GACE5T,GAAO+S,KAAUpgB,EAAOmhB,aACfF,EACXE,GAAOf,EAAOc,EACdE,EAAc/T,QAMlB,IADA8T,GAAQV,EAAQQ,EACZA,EAAKtG,EAAK,CACZA,GAAOsG,CACP,GACE5T,GAAO+S,KAAUpgB,EAAOmhB,aACfF,EACXE,GAAOf,EAAOc,EACdE,EAAc/T,EAGlB,KAAOsN,EAAM,GACXtN,EAAO+S,KAAUgB,EAAYD,KAC7B9T,EAAO+S,KAAUgB,EAAYD,KAC7B9T,EAAO+S,KAAUgB,EAAYD,KAC7BxG,GAAO,CAELA,KACFtN,EAAO+S,KAAUgB,EAAYD,KACzBxG,EAAM,IACRtN,EAAO+S,KAAUgB,EAAYD,WAI9B,CACHA,EAAOf,EAAOc,CACd,GACE7T,GAAO+S,KAAU/S,EAAO8T,KACxB9T,EAAO+S,KAAU/S,EAAO8T,KACxB9T,EAAO+S,KAAU/S,EAAO8T,KACxBxG,GAAO,QACAA,EAAM,EACXA,KACFtN,EAAO+S,KAAU/S,EAAO8T,KACpBxG,EAAM,IACRtN,EAAO+S,KAAU/S,EAAO8T,OAehC,OAkBJ,aAEKjB,EAAMC,GAAQC,EAAOjY,EAG9BwS,GAAMgG,GAAQ,EACdT,GAAOvF,EACPgG,GAAQhG,GAAO,EACf+F,IAAS,GAAKC,GAAQ,EAGtBX,EAAKsB,QAAUpB,EACfF,EAAKwB,SAAWpB,EAChBJ,EAAKuB,SAAYrB,EAAMC,EAAO,GAAKA,EAAOD,GAAO,GAAKA,EAAMC,GAC5DH,EAAKyB,UAAarB,EAAOjY,EAAM,KAAOA,EAAMiY,GAAQ,KAAOA,EAAOjY,GAClE8X,EAAMS,KAAOA,EACbT,EAAMU,KAAOA,QAITyB,GAAG,SAASpc,EAAQ3J,EAAOC,GACjC,YA8FA,SAAS+lB,GAAQvG,GACf,OAAWA,IAAM,GAAM,MACbA,IAAM,EAAK,SACP,MAAJA,IAAe,KACX,IAAJA,IAAa,IAIzB,QAASwG,KACPvhB,KAAKihB,KAAO,EACZjhB,KAAKof,MAAO,EACZpf,KAAKwhB,KAAO,EACZxhB,KAAKyhB,UAAW,EAChBzhB,KAAK0hB,MAAQ,EACb1hB,KAAKuf,KAAO,EACZvf,KAAK2hB,MAAQ,EACb3hB,KAAK4hB,MAAQ,EAEb5hB,KAAK6hB,KAAO,KAGZ7hB,KAAK8hB,MAAQ,EACb9hB,KAAKwf,MAAQ,EACbxf,KAAKyf,MAAQ,EACbzf,KAAK0f,MAAQ,EACb1f,KAAKf,OAAS,KAGde,KAAK2f,KAAO,EACZ3f,KAAK4f,KAAO,EAGZ5f,KAAKwG,OAAS,EACdxG,KAAK0J,OAAS,EAGd1J,KAAKye,MAAQ,EAGbze,KAAK2gB,QAAU,KACf3gB,KAAK4gB,SAAW,KAChB5gB,KAAK6gB,QAAU,EACf7gB,KAAK8gB,SAAW,EAGhB9gB,KAAK+hB,MAAQ,EACb/hB,KAAKgiB,KAAO,EACZhiB,KAAKiiB,MAAQ,EACbjiB,KAAKkiB,KAAO,EACZliB,KAAKmiB,KAAO,KAEZniB,KAAKoiB,KAAO,GAAIxH,GAAMN,MAAM,KAC5Bta,KAAKqiB,KAAO,GAAIzH,GAAMN,MAAM,KAO5Bta,KAAKsiB,OAAS,KACdtiB,KAAKuiB,QAAU,KACfviB,KAAKohB,KAAO,EACZphB,KAAKwiB,KAAO,EACZxiB,KAAKyiB,IAAM,EAGb,QAASC,GAAiBzD,GACxB,GAAIC,EAEJ,OAAKD,IAASA,EAAKC,OACnBA,EAAQD,EAAKC,MACbD,EAAK0D,SAAW1D,EAAK2D,UAAY1D,EAAM0C,MAAQ,EAC/C3C,EAAKiC,IAAM,GACPhC,EAAMsC,OACRvC,EAAKnD,MAAqB,EAAboD,EAAMsC,MAErBtC,EAAM+B,KAAO4B,EACb3D,EAAME,KAAO,EACbF,EAAMuC,SAAW,EACjBvC,EAAMK,KAAO,MACbL,EAAM2C,KAAO,KACb3C,EAAMS,KAAO,EACbT,EAAMU,KAAO,EAEbV,EAAMyB,QAAUzB,EAAMoD,OAAS,GAAI1H,GAAML,MAAMuI,IAC/C5D,EAAM0B,SAAW1B,EAAMqD,QAAU,GAAI3H,GAAML,MAAMwI,IAEjD7D,EAAMkC,KAAO,EACblC,EAAMsD,QAEC/F,GArB4BI,EAwBrC,QAASmG,GAAa/D,GACpB,GAAIC,EAEJ,OAAKD,IAASA,EAAKC,OACnBA,EAAQD,EAAKC,MACbA,EAAMM,MAAQ,EACdN,EAAMO,MAAQ,EACdP,EAAMQ,MAAQ,EACPgD,EAAiBzD,IALWpC,EASrC,QAASoG,GAAchE,EAAMiE,GAC3B,GAAI1B,GACAtC,CAGJ,OAAKD,IAASA,EAAKC,OACnBA,EAAQD,EAAKC,MAGTgE,EAAa,GACf1B,EAAO,EACP0B,GAAcA,IAGd1B,GAAQ0B,GAAc,GAAK,EACvBA,EAAa,KACfA,GAAc,KAKdA,IAAeA,EAAa,GAAKA,EAAa,IACzCrG,GAEY,OAAjBqC,EAAMjgB,QAAmBigB,EAAM4C,QAAUoB,IAC3ChE,EAAMjgB,OAAS,MAIjBigB,EAAMsC,KAAOA,EACbtC,EAAM4C,MAAQoB,EACPF,EAAa/D,KA1BepC,EA6BrC,QAASsG,GAAalE,EAAMiE,GAC1B,GAAIE,GACAlE,CAEJ,OAAKD,IAGLC,EAAQ,GAAIqC,GAIZtC,EAAKC,MAAQA,EACbA,EAAMjgB,OAAS,KACfmkB,EAAMH,EAAchE,EAAMiE,GACtBE,IAAQ3G,IACVwC,EAAKC,MAAQ,MAERkE,GAbavG,EAgBtB,QAASwG,GAAYpE,GACnB,MAAOkE,GAAalE,EAAMqE,IAkB5B,QAASC,GAAYrE,GAEnB,GAAIsE,GAAQ,CACV,GAAIC,EAOJ,KALAC,EAAS,GAAI9I,GAAML,MAAM,KACzBoJ,EAAU,GAAI/I,GAAML,MAAM,IAG1BkJ,EAAM,EACCA,EAAM,KAAOvE,EAAMkD,KAAKqB,KAAS,CACxC,MAAOA,EAAM,KAAOvE,EAAMkD,KAAKqB,KAAS,CACxC,MAAOA,EAAM,KAAOvE,EAAMkD,KAAKqB,KAAS,CACxC,MAAOA,EAAM,KAAOvE,EAAMkD,KAAKqB,KAAS,CAMxC,KAJAG,EAAcC,EAAO3E,EAAMkD,KAAM,EAAG,IAAKsB,EAAU,EAAGxE,EAAMmD,MAAOzC,KAAM,IAGzE6D,EAAM,EACCA,EAAM,IAAMvE,EAAMkD,KAAKqB,KAAS,CAEvCG,GAAcE,EAAO5E,EAAMkD,KAAM,EAAG,GAAMuB,EAAS,EAAGzE,EAAMmD,MAAOzC,KAAM,IAGzE4D,IAAS,EAGXtE,EAAMyB,QAAU+C,EAChBxE,EAAM2B,QAAU,EAChB3B,EAAM0B,SAAW+C,EACjBzE,EAAM4B,SAAW,EAkBnB,QAASiD,GAAa9E,EAAMvF,EAAKtS,EAAK4c,GACpC,GAAI7D,GACAjB,EAAQD,EAAKC,KAqCjB,OAlCqB,QAAjBA,EAAMjgB,SACRigB,EAAMM,MAAQ,GAAKN,EAAM4C,MACzB5C,EAAMQ,MAAQ,EACdR,EAAMO,MAAQ,EAEdP,EAAMjgB,OAAS,GAAI2b,GAAMP,KAAK6E,EAAMM,QAIlCwE,GAAQ9E,EAAMM,OAChB5E,EAAMpB,SAAS0F,EAAMjgB,OAAOya,EAAKtS,EAAM8X,EAAMM,MAAON,EAAMM,MAAO,GACjEN,EAAMQ,MAAQ,EACdR,EAAMO,MAAQP,EAAMM,QAGpBW,EAAOjB,EAAMM,MAAQN,EAAMQ,MACvBS,EAAO6D,IACT7D,EAAO6D,GAGTpJ,EAAMpB,SAAS0F,EAAMjgB,OAAOya,EAAKtS,EAAM4c,EAAM7D,EAAMjB,EAAMQ,OACzDsE,GAAQ7D,EACJ6D,GAEFpJ,EAAMpB,SAAS0F,EAAMjgB,OAAOya,EAAKtS,EAAM4c,EAAMA,EAAM,GACnD9E,EAAMQ,MAAQsE,EACd9E,EAAMO,MAAQP,EAAMM,QAGpBN,EAAMQ,OAASS,EACXjB,EAAMQ,QAAUR,EAAMM,QAASN,EAAMQ,MAAQ,GAC7CR,EAAMO,MAAQP,EAAMM,QAASN,EAAMO,OAASU,KAG7C,EAGT,QAAS8D,GAAQhF,EAAMiF,GACrB,GAAIhF,GACAoB,EAAOhU,EACP6V,EACAgC,EACAjC,EAAMkC,EACNzE,EACAC,EACAT,EAAKE,EACL2E,EACA5D,GACAC,GAEAgE,GAAWC,GAASC,GAEpBC,GAAWC,GAASC,GACpB9K,GACAwJ,GAEAuB,GAEApY,GATA0T,GAAO,EAMP2E,GAAO,GAAIhK,GAAMP,KAAK,GAKtBwK,IACD,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAGjE,KAAK5F,IAASA,EAAKC,QAAUD,EAAK3S,SAC5B2S,EAAKqB,OAA2B,IAAlBrB,EAAKuB,SACvB,MAAO3D,EAGTqC,GAAQD,EAAKC,MACTA,EAAM+B,OAASjC,IAAQE,EAAM+B,KAAO6D,GAIxCX,EAAMlF,EAAKwB,SACXnU,EAAS2S,EAAK3S,OACd8X,EAAOnF,EAAKyB,UACZyB,EAAOlD,EAAKsB,QACZD,EAAQrB,EAAKqB,MACb4B,EAAOjD,EAAKuB,SACZb,EAAOT,EAAMS,KACbC,EAAOV,EAAMU,KAGbT,EAAM+C,EACN7C,EAAO+E,EACPhB,GAAM3G,CAENsI,GACA,OACE,OAAQ7F,EAAM+B,MACd,IAAK4B,GACH,GAAmB,IAAf3D,EAAMsC,KAAY,CACpBtC,EAAM+B,KAAO6D,CACb,OAGF,KAAOlF,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGV,GAAkB,EAAbV,EAAMsC,MAAsB,QAAT7B,EAAiB,CACvCT,EAAMyC,MAAQ,EAEdiD,GAAK,GAAY,IAAPjF,EACViF,GAAK,GAAMjF,IAAS,EAAK,IACzBT,EAAMyC,MAAQ3D,EAAMkB,EAAMyC,MAAOiD,GAAM,EAAG,GAI1CjF,EAAO,EACPC,EAAO,EAEPV,EAAM+B,KAAO+D,CACb,OAMF,GAJA9F,EAAMwC,MAAQ,EACVxC,EAAM2C,OACR3C,EAAM2C,KAAKhD,MAAO,KAED,EAAbK,EAAMsC,UACA,IAAP7B,IAA2B,IAAMA,GAAQ,IAAM,GAAI,CACtDV,EAAKiC,IAAM,yBACXhC,EAAM+B,KAAOlC,EACb,OAEF,IAAY,GAAPY,KAA4B/B,EAAY,CAC3CqB,EAAKiC,IAAM,6BACXhC,EAAM+B,KAAOlC,EACb,OAOF,GAJAY,KAAU,EACVC,GAAQ,EAERhG,IAAc,GAAP+F,GAA0B,EACb,IAAhBT,EAAM4C,MACR5C,EAAM4C,MAAQlI,OAEX,IAAIA,GAAMsF,EAAM4C,MAAO,CAC1B7C,EAAKiC,IAAM,sBACXhC,EAAM+B,KAAOlC,EACb,OAEFG,EAAMK,KAAO,GAAK3F,GAElBqF,EAAKnD,MAAQoD,EAAMyC,MAAQ,EAC3BzC,EAAM+B,KAAc,IAAPtB,EAAesF,EAASjG,EAErCW,EAAO,EACPC,EAAO,CAEP,MACF,KAAKoF,GAEH,KAAOpF,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAIV,GADAV,EAAMwC,MAAQ/B,GACK,IAAdT,EAAMwC,SAAkB9D,EAAY,CACvCqB,EAAKiC,IAAM,6BACXhC,EAAM+B,KAAOlC,EACb,OAEF,GAAkB,MAAdG,EAAMwC,MAAgB,CACxBzC,EAAKiC,IAAM,2BACXhC,EAAM+B,KAAOlC,EACb,OAEEG,EAAM2C,OACR3C,EAAM2C,KAAKxD,KAASsB,GAAQ,EAAK,GAEjB,IAAdT,EAAMwC,QAERkD,GAAK,GAAY,IAAPjF,EACViF,GAAK,GAAMjF,IAAS,EAAK,IACzBT,EAAMyC,MAAQ3D,EAAMkB,EAAMyC,MAAOiD,GAAM,EAAG,IAI5CjF,EAAO,EACPC,EAAO,EAEPV,EAAM+B,KAAOiE,CAEf,KAAKA,GAEH,KAAOtF,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGNV,EAAM2C,OACR3C,EAAM2C,KAAKvD,KAAOqB,GAEF,IAAdT,EAAMwC,QAERkD,GAAK,GAAY,IAAPjF,EACViF,GAAK,GAAMjF,IAAS,EAAK,IACzBiF,GAAK,GAAMjF,IAAS,GAAM,IAC1BiF,GAAK,GAAMjF,IAAS,GAAM,IAC1BT,EAAMyC,MAAQ3D,EAAMkB,EAAMyC,MAAOiD,GAAM,EAAG,IAI5CjF,EAAO,EACPC,EAAO,EAEPV,EAAM+B,KAAOkE,CAEf,KAAKA,GAEH,KAAOvF,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGNV,EAAM2C,OACR3C,EAAM2C,KAAKtD,OAAiB,IAAPoB,EACrBT,EAAM2C,KAAKrD,GAAMmB,GAAQ,GAET,IAAdT,EAAMwC,QAERkD,GAAK,GAAY,IAAPjF,EACViF,GAAK,GAAMjF,IAAS,EAAK,IACzBT,EAAMyC,MAAQ3D,EAAMkB,EAAMyC,MAAOiD,GAAM,EAAG,IAI5CjF,EAAO,EACPC,EAAO,EAEPV,EAAM+B,KAAOmE,CAEf,KAAKA,GACH,GAAkB,KAAdlG,EAAMwC,MAAgB,CAExB,KAAO9B,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGVV,EAAM1Y,OAASmZ,EACXT,EAAM2C,OACR3C,EAAM2C,KAAKnD,UAAYiB,GAEP,IAAdT,EAAMwC,QAERkD,GAAK,GAAY,IAAPjF,EACViF,GAAK,GAAMjF,IAAS,EAAK,IACzBT,EAAMyC,MAAQ3D,EAAMkB,EAAMyC,MAAOiD,GAAM,EAAG,IAI5CjF,EAAO,EACPC,EAAO,MAGAV,GAAM2C,OACb3C,EAAM2C,KAAKpD,MAAQ,KAErBS,GAAM+B,KAAOoE,CAEf,KAAKA,GACH,GAAkB,KAAdnG,EAAMwC,QACRsC,EAAO9E,EAAM1Y,OACTwd,EAAO9B,IAAQ8B,EAAO9B,GACtB8B,IACE9E,EAAM2C,OACRjI,GAAMsF,EAAM2C,KAAKnD,UAAYQ,EAAM1Y,OAC9B0Y,EAAM2C,KAAKpD,QAEdS,EAAM2C,KAAKpD,MAAQ,GAAIvT,OAAMgU,EAAM2C,KAAKnD,YAE1C9D,EAAMpB,SACJ0F,EAAM2C,KAAKpD,MACX6B,EACA6B,EAGA6B,EAEApK,KAMc,IAAdsF,EAAMwC,QACRxC,EAAMyC,MAAQ3D,EAAMkB,EAAMyC,MAAOrB,EAAO0D,EAAM7B,IAEhDD,GAAQ8B,EACR7B,GAAQ6B,EACR9E,EAAM1Y,QAAUwd,GAEd9E,EAAM1Y,QAAU,KAAMue,EAE5B7F,GAAM1Y,OAAS,EACf0Y,EAAM+B,KAAOqE,CAEf,KAAKA,GACH,GAAkB,KAAdpG,EAAMwC,MAAgB,CACxB,GAAa,IAATQ,EAAc,KAAM6C,EACxBf,GAAO,CACP,GAEEpK,IAAM0G,EAAM6B,EAAO6B,KAEf9E,EAAM2C,MAAQjI,IACbsF,EAAM1Y,OAAS,QAClB0Y,EAAM2C,KAAKrf,MAAQ0P,OAAOC,aAAayH,WAElCA,IAAOoK,EAAO9B,EAOvB,IALkB,IAAdhD,EAAMwC,QACRxC,EAAMyC,MAAQ3D,EAAMkB,EAAMyC,MAAOrB,EAAO0D,EAAM7B,IAEhDD,GAAQ8B,EACR7B,GAAQ6B,EACJpK,GAAO,KAAMmL,OAEV7F,GAAM2C,OACb3C,EAAM2C,KAAKrf,KAAO,KAEpB0c,GAAM1Y,OAAS,EACf0Y,EAAM+B,KAAOsE,CAEf,KAAKA,GACH,GAAkB,KAAdrG,EAAMwC,MAAgB,CACxB,GAAa,IAATQ,EAAc,KAAM6C,EACxBf,GAAO,CACP,GACEpK,IAAM0G,EAAM6B,EAAO6B,KAEf9E,EAAM2C,MAAQjI,IACbsF,EAAM1Y,OAAS,QAClB0Y,EAAM2C,KAAKlD,SAAWzM,OAAOC,aAAayH,WAErCA,IAAOoK,EAAO9B,EAMvB,IALkB,IAAdhD,EAAMwC,QACRxC,EAAMyC,MAAQ3D,EAAMkB,EAAMyC,MAAOrB,EAAO0D,EAAM7B,IAEhDD,GAAQ8B,EACR7B,GAAQ6B,EACJpK,GAAO,KAAMmL,OAEV7F,GAAM2C,OACb3C,EAAM2C,KAAKlD,QAAU,KAEvBO,GAAM+B,KAAOuE,CAEf,KAAKA,GACH,GAAkB,IAAdtG,EAAMwC,MAAgB,CAExB,KAAO9B,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGV,GAAID,KAAwB,MAAdT,EAAMyC,OAAiB,CACnC1C,EAAKiC,IAAM,sBACXhC,EAAM+B,KAAOlC,EACb,OAGFY,EAAO,EACPC,EAAO,EAGLV,EAAM2C,OACR3C,EAAM2C,KAAKjD,KAASM,EAAMwC,OAAS,EAAK,EACxCxC,EAAM2C,KAAKhD,MAAO,GAEpBI,EAAKnD,MAAQoD,EAAMyC,MAAQ,EAC3BzC,EAAM+B,KAAOjC,CACb,MACF,KAAKiG,GAEH,KAAOrF,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGVX,EAAKnD,MAAQoD,EAAMyC,MAAQL,EAAQ3B,GAEnCA,EAAO,EACPC,EAAO,EAEPV,EAAM+B,KAAOwE,CAEf,KAAKA,GACH,GAAuB,IAAnBvG,EAAMuC,SASR,MAPAxC,GAAKwB,SAAW0D,EAChBlF,EAAKyB,UAAY0D,EACjBnF,EAAKsB,QAAU4B,EACflD,EAAKuB,SAAW0B,EAChBhD,EAAMS,KAAOA,EACbT,EAAMU,KAAOA,EAENjD,CAETsC,GAAKnD,MAAQoD,EAAMyC,MAAQ,EAC3BzC,EAAM+B,KAAOjC,CAEf,KAAKA,GACH,GAAIkF,IAAU3H,GAAW2H,IAAU1H,EAAW,KAAMuI,EAEtD,KAAKD,GACH,GAAI5F,EAAME,KAAM,CAEdO,KAAiB,EAAPC,EACVA,GAAe,EAAPA,EAERV,EAAM+B,KAAOyE,EACb,OAGF,KAAO9F,EAAO,GAAG,CACf,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EASV,OANAV,EAAME,KAAe,EAAPO,EAEdA,KAAU,EACVC,GAAQ,EAGQ,EAAPD,GACT,IAAK,GAGHT,EAAM+B,KAAO0E,CACb,MACF,KAAK,GAKH,GAJApC,EAAYrE,GAGZA,EAAM+B,KAAO2E,GACT1B,IAAU1H,EAAS,CAErBmD,KAAU,EACVC,GAAQ,CAER,MAAMmF,GAER,KACF,KAAK,GAGH7F,EAAM+B,KAAO4E,CACb,MACF,KAAK,GACH5G,EAAKiC,IAAM,qBACXhC,EAAM+B,KAAOlC,GAGfY,KAAU,EACVC,GAAQ,CAER,MACF,KAAK+F,GAMH,IAJAhG,KAAiB,EAAPC,EACVA,GAAe,EAAPA,EAGDA,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGV,IAAY,MAAPD,MAAqBA,IAAS,GAAM,OAAS;AAChDV,EAAKiC,IAAM,+BACXhC,EAAM+B,KAAOlC,EACb,OAUF,GARAG,EAAM1Y,OAAgB,MAAPmZ,EAIfA,EAAO,EACPC,EAAO,EAEPV,EAAM+B,KAAO6E,EACT5B,IAAU1H,EAAW,KAAMuI,EAEjC,KAAKe,GACH5G,EAAM+B,KAAO8E,CAEf,KAAKA,GAEH,GADA/B,EAAO9E,EAAM1Y,OACH,CAGR,GAFIwd,EAAO9B,IAAQ8B,EAAO9B,GACtB8B,EAAOI,IAAQJ,EAAOI,GACb,IAATJ,EAAc,KAAMe,EAExBnK,GAAMpB,SAASlN,EAAQgU,EAAO6B,EAAM6B,EAAMG,GAE1CjC,GAAQ8B,EACR7B,GAAQ6B,EACRI,GAAQJ,EACRG,GAAOH,EACP9E,EAAM1Y,QAAUwd,CAChB,OAGF9E,EAAM+B,KAAOjC,CACb,MACF,KAAK6G,GAEH,KAAOjG,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAmBV,GAhBAV,EAAM8C,MAAe,GAAPrC,GAA0B,IAExCA,KAAU,EACVC,GAAQ,EAERV,EAAM+C,OAAgB,GAAPtC,GAA0B,EAEzCA,KAAU,EACVC,GAAQ,EAERV,EAAM6C,OAAgB,GAAPpC,GAA0B,EAEzCA,KAAU,EACVC,GAAQ,EAGJV,EAAM8C,KAAO,KAAO9C,EAAM+C,MAAQ,GAAI,CACxChD,EAAKiC,IAAM,sCACXhC,EAAM+B,KAAOlC,EACb,OAIFG,EAAMgD,KAAO,EACbhD,EAAM+B,KAAO+E,CAEf,KAAKA,GACH,KAAO9G,EAAMgD,KAAOhD,EAAM6C,OAAO,CAE/B,KAAOnC,EAAO,GAAG,CACf,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGVV,EAAMkD,KAAKyC,GAAM3F,EAAMgD,SAAmB,EAAPvC,EAEnCA,KAAU,EACVC,GAAQ,EAGV,KAAOV,EAAMgD,KAAO,IAClBhD,EAAMkD,KAAKyC,GAAM3F,EAAMgD,SAAW,CAapC,IAPAhD,EAAMyB,QAAUzB,EAAMoD,OACtBpD,EAAM2B,QAAU,EAEhB8D,IAAQ/E,KAAMV,EAAM2B,SACpBuC,GAAMQ,EAAcqC,EAAO/G,EAAMkD,KAAM,EAAG,GAAIlD,EAAMyB,QAAS,EAAGzB,EAAMmD,KAAMsC,IAC5EzF,EAAM2B,QAAU8D,GAAK/E,KAEjBwD,GAAK,CACPnE,EAAKiC,IAAM,2BACXhC,EAAM+B,KAAOlC,EACb,OAGFG,EAAMgD,KAAO,EACbhD,EAAM+B,KAAOiF,EAEf,KAAKA,IACH,KAAOhH,EAAMgD,KAAOhD,EAAM8C,KAAO9C,EAAM+C,OAAO,CAC5C,KACEhC,GAAOf,EAAMyB,QAAQhB,GAAS,GAAKT,EAAM2B,SAAW,GACpDwD,GAAYpE,KAAS,GACrBqE,GAAWrE,KAAS,GAAM,IAC1BsE,GAAkB,MAAPtE,KAENoE,IAAczE,IANZ,CAQP,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGV,GAAI2E,GAAW,GAEb5E,KAAU0E,GACVzE,GAAQyE,GAERnF,EAAMkD,KAAKlD,EAAMgD,QAAUqC,OAExB,CACH,GAAiB,KAAbA,GAAiB,CAGnB,IADAhY,GAAI8X,GAAY,EACTzE,EAAOrT,IAAG,CACf,GAAa,IAAT2V,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAOV,GAHAD,KAAU0E,GACVzE,GAAQyE,GAEW,IAAfnF,EAAMgD,KAAY,CACpBjD,EAAKiC,IAAM,4BACXhC,EAAM+B,KAAOlC,EACb,OAEFnF,GAAMsF,EAAMkD,KAAKlD,EAAMgD,KAAO,GAC9B8B,EAAO,GAAY,EAAPrE,GAEZA,KAAU,EACVC,GAAQ,MAGL,IAAiB,KAAb2E,GAAiB,CAGxB,IADAhY,GAAI8X,GAAY,EACTzE,EAAOrT,IAAG,CACf,GAAa,IAAT2V,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAIVD,KAAU0E,GACVzE,GAAQyE,GAERzK,GAAM,EACNoK,EAAO,GAAY,EAAPrE,GAEZA,KAAU,EACVC,GAAQ,MAGL,CAGH,IADArT,GAAI8X,GAAY,EACTzE,EAAOrT,IAAG,CACf,GAAa,IAAT2V,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAIVD,KAAU0E,GACVzE,GAAQyE,GAERzK,GAAM,EACNoK,EAAO,IAAa,IAAPrE,GAEbA,KAAU,EACVC,GAAQ,EAGV,GAAIV,EAAMgD,KAAO8B,EAAO9E,EAAM8C,KAAO9C,EAAM+C,MAAO,CAChDhD,EAAKiC,IAAM,4BACXhC,EAAM+B,KAAOlC,EACb,OAEF,KAAOiF,KACL9E,EAAMkD,KAAKlD,EAAMgD,QAAUtI,IAMjC,GAAIsF,EAAM+B,OAASlC,GAAO,KAG1B,IAAwB,IAApBG,EAAMkD,KAAK,KAAY,CACzBnD,EAAKiC,IAAM,uCACXhC,EAAM+B,KAAOlC,EACb,OAeF,GATAG,EAAM2B,QAAU,EAEhB8D,IAAQ/E,KAAMV,EAAM2B,SACpBuC,GAAMQ,EAAcC,EAAM3E,EAAMkD,KAAM,EAAGlD,EAAM8C,KAAM9C,EAAMyB,QAAS,EAAGzB,EAAMmD,KAAMsC,IAGnFzF,EAAM2B,QAAU8D,GAAK/E,KAGjBwD,GAAK,CACPnE,EAAKiC,IAAM,8BACXhC,EAAM+B,KAAOlC,EACb,OAcF,GAXAG,EAAM4B,SAAW,EAGjB5B,EAAM0B,SAAW1B,EAAMqD,QACvBoC,IAAQ/E,KAAMV,EAAM4B,UACpBsC,GAAMQ,EAAcE,EAAO5E,EAAMkD,KAAMlD,EAAM8C,KAAM9C,EAAM+C,MAAO/C,EAAM0B,SAAU,EAAG1B,EAAMmD,KAAMsC,IAG/FzF,EAAM4B,SAAW6D,GAAK/E,KAGlBwD,GAAK,CACPnE,EAAKiC,IAAM,wBACXhC,EAAM+B,KAAOlC,EACb,OAIF,GADAG,EAAM+B,KAAO2E,GACT1B,IAAU1H,EAAW,KAAMuI,EAEjC,KAAKa,IACH1G,EAAM+B,KAAOkF,EAEf,KAAKA,IACH,GAAIjE,GAAQ,GAAKkC,GAAQ,IAAK,CAE5BnF,EAAKwB,SAAW0D,EAChBlF,EAAKyB,UAAY0D,EACjBnF,EAAKsB,QAAU4B,EACflD,EAAKuB,SAAW0B,EAChBhD,EAAMS,KAAOA,EACbT,EAAMU,KAAOA,EAEbwG,EAAanH,EAAMI,GAEnB8E,EAAMlF,EAAKwB,SACXnU,EAAS2S,EAAK3S,OACd8X,EAAOnF,EAAKyB,UACZyB,EAAOlD,EAAKsB,QACZD,EAAQrB,EAAKqB,MACb4B,EAAOjD,EAAKuB,SACZb,EAAOT,EAAMS,KACbC,EAAOV,EAAMU,KAGTV,EAAM+B,OAASjC,IACjBE,EAAMsD,QAER,OAGF,IADAtD,EAAMsD,KAAO,EAEXvC,GAAOf,EAAMyB,QAAQhB,GAAS,GAAKT,EAAM2B,SAAU,GACnDwD,GAAYpE,KAAS,GACrBqE,GAAWrE,KAAS,GAAM,IAC1BsE,GAAkB,MAAPtE,KAEPoE,IAAazE,IANV,CAQP,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGV,GAAI0E,IAAgC,KAAV,IAAVA,IAAuB,CAIrC,IAHAE,GAAYH,GACZI,GAAUH,GACVI,GAAWH,GAETtE,GAAOf,EAAMyB,QAAQ+D,KACX/E,GAAS,GAAM6E,GAAYC,IAAW,IAAoCD,KACpFH,GAAYpE,KAAS,GACrBqE,GAAWrE,KAAS,GAAM,IAC1BsE,GAAkB,MAAPtE,KAENuE,GAAYH,IAAczE,IAPxB,CASP,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAIVD,KAAU6E,GACV5E,GAAQ4E,GAERtF,EAAMsD,MAAQgC,GAQhB,GALA7E,KAAU0E,GACVzE,GAAQyE,GAERnF,EAAMsD,MAAQ6B,GACdnF,EAAM1Y,OAAS+d,GACC,IAAZD,GAAe,CAIjBpF,EAAM+B,KAAOoF,EACb,OAEF,GAAc,GAAV/B,GAAc,CAEhBpF,EAAMsD,QACNtD,EAAM+B,KAAOjC,CACb,OAEF,GAAc,GAAVsF,GAAc,CAChBrF,EAAKiC,IAAM,8BACXhC,EAAM+B,KAAOlC,EACb,OAEFG,EAAMT,MAAkB,GAAV6F,GACdpF,EAAM+B,KAAOqF,EAEf,KAAKA,IACH,GAAIpH,EAAMT,MAAO,CAGf,IADAlS,GAAI2S,EAAMT,MACHmB,EAAOrT,IAAG,CACf,GAAa,IAAT2V,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGVV,EAAM1Y,QAAUmZ,GAAS,GAAKT,EAAMT,OAAQ,EAE5CkB,KAAUT,EAAMT,MAChBmB,GAAQV,EAAMT,MAEdS,EAAMsD,MAAQtD,EAAMT,MAGtBS,EAAMuD,IAAMvD,EAAM1Y,OAClB0Y,EAAM+B,KAAOsF,EAEf,KAAKA,IACH,KACEtG,GAAOf,EAAM0B,SAASjB,GAAS,GAAKT,EAAM4B,UAAW,GACrDuD,GAAYpE,KAAS,GACrBqE,GAAWrE,KAAS,GAAM,IAC1BsE,GAAkB,MAAPtE,KAENoE,IAAczE,IANZ,CAQP,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGV,GAAyB,KAAV,IAAV0E,IAAuB,CAI1B,IAHAE,GAAYH,GACZI,GAAUH,GACVI,GAAWH,GAETtE,GAAOf,EAAM0B,SAAS8D,KACZ/E,GAAS,GAAM6E,GAAYC,IAAW,IAAoCD,KACpFH,GAAYpE,KAAS,GACrBqE,GAAWrE,KAAS,GAAM,IAC1BsE,GAAkB,MAAPtE,KAENuE,GAAYH,IAAczE,IAPxB,CASP,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAIVD,KAAU6E,GACV5E,GAAQ4E,GAERtF,EAAMsD,MAAQgC,GAOhB,GAJA7E,KAAU0E,GACVzE,GAAQyE,GAERnF,EAAMsD,MAAQ6B,GACA,GAAVC,GAAc,CAChBrF,EAAKiC,IAAM,wBACXhC,EAAM+B,KAAOlC,EACb,OAEFG,EAAMxV,OAAS6a,GACfrF,EAAMT,MAAoB,GAAX6F,GACfpF,EAAM+B,KAAOuF,EAEf,KAAKA,IACH,GAAItH,EAAMT,MAAO,CAGf,IADAlS,GAAI2S,EAAMT,MACHmB,EAAOrT,IAAG,CACf,GAAa,IAAT2V,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGVV,EAAMxV,QAAUiW,GAAS,GAAKT,EAAMT,OAAQ,EAE5CkB,KAAUT,EAAMT,MAChBmB,GAAQV,EAAMT,MAEdS,EAAMsD,MAAQtD,EAAMT,MAGtB,GAAIS,EAAMxV,OAASwV,EAAMK,KAAM,CAC7BN,EAAKiC,IAAM,gCACXhC,EAAM+B,KAAOlC,EACb,OAIFG,EAAM+B,KAAOwF,EAEf,KAAKA,IACH,GAAa,IAATrC,EAAc,KAAMW,EAExB,IADAf,EAAO3E,EAAO+E,EACVlF,EAAMxV,OAASsa,EAAM,CAEvB,GADAA,EAAO9E,EAAMxV,OAASsa,EAClBA,EAAO9E,EAAMO,OACXP,EAAMkC,KAAM,CACdnC,EAAKiC,IAAM,gCACXhC,EAAM+B,KAAOlC,EACb,OAkBAiF,EAAO9E,EAAMQ,OACfsE,GAAQ9E,EAAMQ,MACdU,GAAOlB,EAAMM,MAAQwE,GAGrB5D,GAAOlB,EAAMQ,MAAQsE,EAEnBA,EAAO9E,EAAM1Y,SAAUwd,EAAO9E,EAAM1Y,QACxC6Z,GAAcnB,EAAMjgB,WAGpBohB,IAAc/T,EACd8T,GAAO+D,EAAMjF,EAAMxV,OACnBsa,EAAO9E,EAAM1Y,MAEXwd,GAAOI,IAAQJ,EAAOI,GAC1BA,GAAQJ,EACR9E,EAAM1Y,QAAUwd,CAChB,GACE1X,GAAO6X,KAAS9D,GAAYD,cACnB4D,EACU,KAAjB9E,EAAM1Y,SAAgB0Y,EAAM+B,KAAOkF,GACvC,MACF,KAAKE,IACH,GAAa,IAATjC,EAAc,KAAMW,EACxBzY,GAAO6X,KAASjF,EAAM1Y,OACtB4d,IACAlF,EAAM+B,KAAOkF,EACb,MACF,KAAKT,IACH,GAAIxG,EAAMsC,KAAM,CAEd,KAAO5B,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KAEAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAcV,GAXAP,GAAQ+E,EACRnF,EAAK2D,WAAavD,EAClBH,EAAM0C,OAASvC,EACXA,IACFJ,EAAKnD,MAAQoD,EAAMyC,MAEdzC,EAAMwC,MAAQ1D,EAAMkB,EAAMyC,MAAOrV,EAAQ+S,EAAM8E,EAAM9E,GAAQxD,EAAQqD,EAAMyC,MAAOrV,EAAQ+S,EAAM8E,EAAM9E,IAG7GA,EAAO+E,GAEFlF,EAAMwC,MAAQ/B,EAAO2B,EAAQ3B,MAAWT,EAAMyC,MAAO,CACxD1C,EAAKiC,IAAM,uBACXhC,EAAM+B,KAAOlC,EACb,OAGFY,EAAO,EACPC,EAAO,EAITV,EAAM+B,KAAOyF,EAEf,KAAKA,IACH,GAAIxH,EAAMsC,MAAQtC,EAAMwC,MAAO,CAE7B,KAAO9B,EAAO,IAAI,CAChB,GAAa,IAATsC,EAAc,KAAM6C,EACxB7C,KACAvC,GAAQW,EAAM6B,MAAWvC,EACzBA,GAAQ,EAGV,GAAID,KAAwB,WAAdT,EAAM0C,OAAqB,CACvC3C,EAAKiC,IAAM,yBACXhC,EAAM+B,KAAOlC,EACb,OAGFY,EAAO,EACPC,EAAO,EAITV,EAAM+B,KAAO0F,EAEf,KAAKA,IACHvD,GAAM1G,CACN,MAAMqI,EACR,KAAKhG,IACHqE,GAAMtG,CACN,MAAMiI,EACR,KAAK6B,IACH,MAAOC,EACT,KAAKC,IAEL,QACE,MAAOjK,GAsBX,MARAoC,GAAKwB,SAAW0D,EAChBlF,EAAKyB,UAAY0D,EACjBnF,EAAKsB,QAAU4B,EACflD,EAAKuB,SAAW0B,EAChBhD,EAAMS,KAAOA,EACbT,EAAMU,KAAOA,GAGTV,EAAMM,OAAUH,IAASJ,EAAKyB,WAAaxB,EAAM+B,KAAOlC,KACvCG,EAAM+B,KAAOyE,IAASxB,IAAU5H,KAC/CyH,EAAa9E,EAAMA,EAAK3S,OAAQ2S,EAAKwB,SAAUpB,EAAOJ,EAAKyB,YAC7DxB,EAAM+B,KAAO2F,GACNC,IAGX1H,GAAOF,EAAKuB,SACZnB,GAAQJ,EAAKyB,UACbzB,EAAK0D,UAAYxD,EACjBF,EAAK2D,WAAavD,EAClBH,EAAM0C,OAASvC,EACXH,EAAMsC,MAAQnC,IAChBJ,EAAKnD,MAAQoD,EAAMyC,MAChBzC,EAAMwC,MAAQ1D,EAAMkB,EAAMyC,MAAOrV,EAAQ+S,EAAMJ,EAAKwB,SAAWpB,GAAQxD,EAAQqD,EAAMyC,MAAOrV,EAAQ+S,EAAMJ,EAAKwB,SAAWpB,IAE/HJ,EAAK8H,UAAY7H,EAAMU,MAAQV,EAAME,KAAO,GAAK,IAC9BF,EAAM+B,OAASjC,EAAO,IAAM,IAC5BE,EAAM+B,OAAS2E,IAAQ1G,EAAM+B,OAAS6E,EAAQ,IAAM,IACzD,IAAR3G,GAAsB,IAATE,GAAe6E,IAAU5H,IAAa8G,KAAQ3G,IAC/D2G,GAAMrG,GAEDqG,IAGT,QAAS4D,GAAW/H,GAElB,IAAKA,IAASA,EAAKC,MACjB,MAAOrC,EAGT,IAAIqC,GAAQD,EAAKC,KAKjB,OAJIA,GAAMjgB,SACRigB,EAAMjgB,OAAS,MAEjBggB,EAAKC,MAAQ,KACNzC,EAGT,QAASwK,GAAiBhI,EAAM4C,GAC9B,GAAI3C,EAGJ,OAAKD,IAASA,EAAKC,OACnBA,EAAQD,EAAKC,MACY,KAAP,EAAbA,EAAMsC,MAA0B3E,GAGrCqC,EAAM2C,KAAOA,EACbA,EAAKhD,MAAO,EACLpC,IAP4BI,EA77CrC,GA2QI6G,GAAQC,EA3QR/I,EAAQ3V,EAAQ,mBAChB4W,EAAU5W,EAAQ,aAClB+Y,EAAU/Y,EAAQ,WAClBmhB,EAAenhB,EAAQ,aACvB2e,EAAgB3e,EAAQ,cAExBghB,EAAQ,EACRpC,EAAO,EACPC,EAAQ,EAWRxH,EAAkB,EAClBC,EAAkB,EAClBC,EAAkB,EAMlBC,EAAkB,EAClBC,EAAkB,EAClBC,EAAkB,EAElBE,KACAC,KACA+J,KACA9J,KAIAa,EAAc,EAOXiF,EAAO,EACPmC,EAAQ,EACRE,EAAO,EACPC,EAAK,EACLC,EAAQ,EACRC,EAAQ,EACRC,EAAO,EACPC,EAAU,EACVC,EAAO,EACPP,EAAS,GACTQ,EAAO,GACHzG,EAAO,GACP8F,EAAS,GACTa,EAAS,GACTG,EAAQ,GACRC,EAAO,GACPF,EAAQ,GACRG,EAAU,GACVE,GAAW,GACPN,GAAO,GACPO,GAAM,GACNG,GAAS,GACTC,GAAO,GACPC,GAAU,GACVC,GAAQ,GACRJ,GAAM,GACdX,GAAQ,GACRgB,GAAS,GACTC,GAAO,GACP5H,GAAM,GACN6H,GAAM,GACNE,GAAO,GAMVhE,GAAc,IACdC,GAAe,IAGfmE,GAAY,GAEZ5D,GAAY4D,GAiLZ1D,IAAS,CA+rCbjoB,GAAQynB,aAAeA,EACvBznB,EAAQ0nB,cAAgBA,EACxB1nB,EAAQmnB,iBAAmBA,EAC3BnnB,EAAQ8nB,YAAcA,EACtB9nB,EAAQ4nB,aAAeA,EACvB5nB,EAAQ0oB,QAAUA,EAClB1oB,EAAQyrB,WAAaA,EACrBzrB,EAAQ0rB,iBAAmBA,EAC3B1rB,EAAQ4rB,YAAc,uCAanBC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,YAAY,EAAEC,aAAa,IAAIC,GAAG,SAASxiB,EAAQ3J,EAAOC,GAC3G,YAGA,IAAIqf,GAAQ3V,EAAQ,mBAEhByiB,EAAU,GACV5E,EAAc,IACdC,EAAe,IAGfkD,EAAQ,EACRpC,EAAO,EACPC,EAAQ,EAER6D,GACF,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACrD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAG3DC,GACF,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGtDC,GACF,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IACtD,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAClD,KAAM,MAAO,MAAO,MAAO,EAAG,GAG5BC,GACF,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAGtBxsB,GAAOC,QAAU,SAAuBuI,EAAMse,EAAM2F,EAAYC,EAAOjK,EAAOkK,EAAa5F,EAAMsC,GAE/F,GAYIuD,GACAC,EACAC,EACAC,EACAlG,EAIA/a,EAMAid,EAAWC,EAASC,EA1BpB3E,EAAO+E,EAAK/E,KAGZhG,EAAM,EACN6J,EAAM,EACN6E,EAAM,EAAG/M,EAAM,EACfgN,EAAO,EACPC,EAAO,EACPC,EAAO,EACPrE,EAAO,EACPsE,EAAO,EACPC,EAAO,EAMPC,EAAO,KACPC,EAAa,EAGb5e,EAAQ,GAAI2Q,GAAMN,MAAMoN,EAAQ,GAChCoB,EAAO,GAAIlO,GAAMN,MAAMoN,EAAQ,GAC/BjJ,EAAQ,KACRsK,EAAc,CAoClB,KAAKnP,EAAM,EAAGA,GAAO8N,EAAS9N,IAC5B3P,EAAM2P,GAAO,CAEf,KAAK6J,EAAM,EAAGA,EAAMuE,EAAOvE,IACzBxZ,EAAMmY,EAAK2F,EAAatE,KAK1B,KADA8E,EAAO3I,EACFrE,EAAMmM,EAASnM,GAAO,GACN,IAAftR,EAAMsR,GADkBA,KAM9B,GAHIgN,EAAOhN,IACTgN,EAAOhN,GAEG,IAARA,EAaF,MATAwC,GAAMkK,KAAkB,SAMxBlK,EAAMkK,KAAkB,SAExBtD,EAAK/E,KAAO,EACL,CAET,KAAK0I,EAAM,EAAGA,EAAM/M,GACC,IAAftR,EAAMqe,GADaA,KASzB,IANIC,EAAOD,IACTC,EAAOD,GAITlE,EAAO,EACFxK,EAAM,EAAGA,GAAO8N,EAAS9N,IAG5B,GAFAwK,IAAS,EACTA,GAAQna,EAAM2P,GACVwK,EAAO,EACT,QAGJ,IAAIA,EAAO,IAAMtgB,IAASmiB,GAAiB,IAAR1K,GACjC,QAKF,KADAuN,EAAK,GAAK,EACLlP,EAAM,EAAGA,EAAM8N,EAAS9N,IAC3BkP,EAAKlP,EAAM,GAAKkP,EAAKlP,GAAO3P,EAAM2P,EAIpC,KAAK6J,EAAM,EAAGA,EAAMuE,EAAOvE,IACM,IAA3BrB,EAAK2F,EAAatE,KACpBpB,EAAKyG,EAAK1G,EAAK2F,EAAatE,OAAWA,EAmE3C,IA7BI3f,IAASmiB,GACX2C,EAAOnK,EAAQ4D,EACfjb,EAAM,IAEGtD,IAAS+f,GAClB+E,EAAOjB,EACPkB,GAAc,IACdpK,EAAQmJ,EACRmB,GAAe,IACf3hB,EAAM,MAGNwhB,EAAOf,EACPpJ,EAAQqJ,EACR1gB,MAIFuhB,EAAO,EACPlF,EAAM,EACN7J,EAAM0O,EACNnG,EAAO8F,EACPO,EAAOD,EACPE,EAAO,EACPL,KACAM,EAAO,GAAKH,EACZF,EAAOK,EAAO,EAGT5kB,IAAS+f,GAAQ6E,EAAO5F,GAC1Bhf,IAASggB,GAAS4E,EAAO3F,EAC1B,MAAO,EAKT,KAFA,GAAIjgB,GAAE,IAEG,CACPA,IAEAuhB,EAAYzK,EAAM6O,EACdpG,EAAKoB,GAAOrc,GACdkd,EAAU,EACVC,EAAWlC,EAAKoB,IAETpB,EAAKoB,GAAOrc,GACnBkd,EAAU7F,EAAMsK,EAAc1G,EAAKoB,IACnCc,EAAWqE,EAAKC,EAAaxG,EAAKoB,MAGlCa,EAAU,GACVC,EAAW,GAIb2D,EAAO,GAAMtO,EAAM6O,EACnBN,EAAO,GAAKK,EACZF,EAAMH,CACN,GACEA,IAAQD,EACRnK,EAAMoE,GAAQwG,GAAQF,GAAQN,GAAS9D,GAAa,GAAOC,GAAW,GAAMC,EAAU,QACtE,IAAT4D,EAIT,KADAD,EAAO,GAAMtO,EAAM,EACZ+O,EAAOT,GACZA,IAAS,CAWX,IATa,IAATA,GACFS,GAAQT,EAAO,EACfS,GAAQT,GAERS,EAAO,EAITlF,IACqB,MAAfxZ,EAAM2P,GAAY,CACtB,GAAIA,IAAQ2B,EAAO,KACnB3B,GAAMwI,EAAK2F,EAAa1F,EAAKoB,IAI/B,GAAI7J,EAAM2O,IAASI,EAAON,KAAUD,EAAK,CAYvC,IAVa,IAATK,IACFA,EAAOF,GAITpG,GAAQmG,EAGRE,EAAO5O,EAAM6O,EACbrE,EAAO,GAAKoE,EACLA,EAAOC,EAAOlN,IACnB6I,GAAQna,EAAMue,EAAOC,KACjBrE,GAAQ,KACZoE,IACApE,IAAS,CAKX,IADAsE,GAAQ,GAAKF,EACR1kB,IAAS+f,GAAQ6E,EAAO5F,GAC1Bhf,IAASggB,GAAS4E,EAAO3F,EAC1B,MAAO,EAITqF,GAAMO,EAAON,EAIbtK,EAAMqK,GAAQG,GAAQ,GAAOC,GAAQ,GAAOrG,EAAO8F,EAAc,GAiBrE,MAVa,KAATU,IAIF5K,EAAMoE,EAAOwG,GAAU/O,EAAM6O,GAAS,GAAO,IAAM,GAAK,GAK1D9D,EAAK/E,KAAO2I,EACL,KAGNnB,kBAAkB,IAAI4B,IAAI,SAAS/jB,EAAQ3J,EAAOC,GACrD,YAEAD,GAAOC,SACLif,EAAQ,kBACR7B,EAAQ,aACRsQ,EAAQ,GACRC,KAAQ,aACRC,KAAQ,eACRC,KAAQ,aACRC,KAAQ,sBACRC,KAAQ,eACRC,KAAQ,6BAGJC,IAAI,SAASvkB,EAAQ3J,EAAOC,GAClC,YAGA,SAASkuB,KAEPzpB,KAAKsgB,MAAQ,KACbtgB,KAAKugB,QAAU,EAEfvgB,KAAKwgB,SAAW,EAEhBxgB,KAAK2iB,SAAW,EAEhB3iB,KAAKsM,OAAS,KACdtM,KAAKygB,SAAW,EAEhBzgB,KAAK0gB,UAAY,EAEjB1gB,KAAK4iB,UAAY,EAEjB5iB,KAAKkhB,IAAM,GAEXlhB,KAAKkf,MAAQ,KAEblf,KAAK+mB,UAAY,EAEjB/mB,KAAK8b,MAAQ,EAGfxgB,EAAOC,QAAUkuB,OAEXC,mBAAmB,SAASzkB,EAAQ3J,EAAOC,GACjD,YAkVA,SAAS0oB,GAAQ3D,EAAOqJ,GACtB,GAAIC,GAAW,GAAIC,GAAQF,EAK3B,IAHAC,EAAS7pB,KAAKugB,GAAO,GAGjBsJ,EAASE,IAAO,KAAMF,GAAS1I,GAEnC,OAAO0I,GAAS1P,OAYlB,QAAS6P,GAAWzJ,EAAOqJ,GAGzB,MAFAA,GAAUA,MACVA,EAAQK,KAAM,EACP/F,EAAQ3D,EAAOqJ,GAtWxB,GAAIM,GAAehlB,EAAQ,qBACvB2V,EAAQ3V,EAAQ,kBAChBilB,EAAUjlB,EAAQ,mBAClBjJ,EAAIiJ,EAAQ,oBACZic,EAAMjc,EAAQ,mBACdklB,EAAUllB,EAAQ,kBAClBmlB,EAAWnlB,EAAQ,mBAEnB2F,EAAW1O,OAAO6c,UAAUnO,SAgF5Bif,EAAU,SAASF,GAErB3pB,KAAK2pB,QAAU/O,EAAM7T,QACnBkL,UAAW,MACXiR,WAAY,EACZmH,GAAI,IACHV,MAEH,IAAIW,GAAMtqB,KAAK2pB,OAIXW,GAAIN,KAAQM,EAAIpH,YAAc,GAAOoH,EAAIpH,WAAa,KACxDoH,EAAIpH,YAAcoH,EAAIpH,WACC,IAAnBoH,EAAIpH,aAAoBoH,EAAIpH,mBAI7BoH,EAAIpH,YAAc,GAAOoH,EAAIpH,WAAa,KACzCyG,GAAWA,EAAQzG,aACvBoH,EAAIpH,YAAc,IAKfoH,EAAIpH,WAAa,IAAQoH,EAAIpH,WAAa,IAGf,KAAR,GAAjBoH,EAAIpH,cACPoH,EAAIpH,YAAc,IAItBljB,KAAK8pB,IAAS,EACd9pB,KAAKkhB,IAAS,GACdlhB,KAAKuqB,OAAS,EACdvqB,KAAK+Z,UAEL/Z,KAAKif,KAAS,GAAIkL,GAClBnqB,KAAKif,KAAKyB,UAAY,CAEtB,IAAI8J,GAAUP,EAAa9G,aACzBnjB,KAAKif,KACLqL,EAAIpH,WAGN,IAAIsH,IAAWxuB,EAAEygB,KACf,KAAM,IAAInV,OAAM4Z,EAAIsJ,GAGtBxqB,MAAKyqB,OAAS,GAAIL,GAElBH,EAAahD,iBAAiBjnB,KAAKif,KAAMjf,KAAKyqB,QA+BhDZ,GAAQ9Q,UAAUhZ,KAAO,SAASmT,EAAM+N,GACtC,GAEIuJ,GAAQE,EACRC,EAAeC,EAAMC,EAHrB5L,EAAOjf,KAAKif,KACZhN,EAAYjS,KAAK2pB,QAAQ1X,SAI7B,IAAIjS,KAAKuqB,MAAS,OAAO,CACzBG,GAASzJ,MAAWA,EAAQA,EAASA,KAAS,EAAQjlB,EAAEsgB,SAAWtgB,EAAEkgB,WAGjD,gBAAThJ,GAET+L,EAAKqB,MAAQ4J,EAAQ7O,cAAcnI,GACF,yBAAxBtI,EAAS9O,KAAKoX,GACvB+L,EAAKqB,MAAQ,GAAIjW,YAAW6I,GAE5B+L,EAAKqB,MAAQpN,EAGf+L,EAAKsB,QAAU,EACftB,EAAKuB,SAAWvB,EAAKqB,MAAM9Z,MAE3B,GAAG,CASD,GARuB,IAAnByY,EAAKyB,YACPzB,EAAK3S,OAAS,GAAIsO,GAAMP,KAAKpI,GAC7BgN,EAAKwB,SAAW,EAChBxB,EAAKyB,UAAYzO,GAGnBuY,EAASP,EAAahG,QAAQhF,EAAMjjB,EAAEkgB,YAElCsO,IAAWxuB,EAAE0gB,cAAgB8N,IAAWxuB,EAAEygB,KAG5C,MAFAzc,MAAK8qB,MAAMN,GACXxqB,KAAKuqB,OAAQ,GACN,CAGLtL,GAAKwB,WACgB,IAAnBxB,EAAKyB,WAAmB8J,IAAWxuB,EAAE0gB,eAAmC,IAAlBuC,EAAKuB,UAAmBkK,IAAU1uB,EAAEsgB,UAAYoO,IAAU1uB,EAAEogB,gBAE5F,WAApBpc,KAAK2pB,QAAQU,IAEfM,EAAgBT,EAAQxO,WAAWuD,EAAK3S,OAAQ2S,EAAKwB,UAErDmK,EAAO3L,EAAKwB,SAAWkK,EACvBE,EAAUX,EAAQ5O,WAAW2D,EAAK3S,OAAQqe,GAG1C1L,EAAKwB,SAAWmK,EAChB3L,EAAKyB,UAAYzO,EAAY2Y,EACzBA,GAAQhQ,EAAMpB,SAASyF,EAAK3S,OAAQ2S,EAAK3S,OAAQqe,EAAeC,EAAM,GAE1E5qB,KAAK+qB,OAAOF,IAGZ7qB,KAAK+qB,OAAOnQ,EAAMvB,UAAU4F,EAAK3S,OAAQ2S,EAAKwB,mBAI5CxB,EAAKuB,SAAW,GAAMgK,IAAWxuB,EAAE0gB,aAO7C,OALI8N,KAAWxuB,EAAE0gB,eACfgO,EAAQ1uB,EAAEsgB,UAIRoO,IAAU1uB,EAAEsgB,UACdkO,EAASP,EAAajD,WAAWhnB,KAAKif,MACtCjf,KAAK8qB,MAAMN,GACXxqB,KAAKuqB,OAAQ,EACNC,IAAWxuB,EAAEygB,MAIlBiO,IAAU1uB,EAAEogB,eACdpc,KAAK8qB,MAAM9uB,EAAEygB,MACbwC,EAAKyB,UAAY,GACV,IAgBXmJ,EAAQ9Q,UAAUgS,OAAS,SAAS9Q,GAClCja,KAAK+Z,OAAOha,KAAKka,IAcnB4P,EAAQ9Q,UAAU+R,MAAQ,SAASN,GAE7BA,IAAWxuB,EAAEygB,OACS,WAApBzc,KAAK2pB,QAAQU,GAGfrqB,KAAKka,OAASla,KAAK+Z,OAAO3H,KAAK,IAE/BpS,KAAKka,OAASU,EAAMd,cAAc9Z,KAAK+Z,SAG3C/Z,KAAK+Z,UACL/Z,KAAK8pB,IAAMU,EACXxqB,KAAKkhB,IAAMlhB,KAAKif,KAAKiC,KAgFvB3lB,EAAQsuB,QAAUA,EAClBtuB,EAAQ0oB,QAAUA,EAClB1oB,EAAQwuB,WAAaA,EACrBxuB,EAAQyvB,OAAU/G,IAEfgH,iBAAiB,EAAEC,kBAAkB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,oBAAoB,EAAEC,kBAAkB,GAAGC,iBAAiB,aAAa,qBAS5JpsB,EAAU,SAASF,GAEf,GAAIusB,GAAKvsB,EAAA,UAGT,OAAOusB,IAERvsB,QAQA,UAAY2B,SAAS6qB,SAASC,UAC7BxsB,EAAE+B,IAAI,8CAOLiR,OAAO6G,UAAU4S,aAClBzZ,OAAO6G,UAAU4S,WAAa,SAAU3Z,GACpC,MAAoC,KAA7BhS,KAAK4rB,YAAY5Z,EAAK,KAKhCE,OAAO6G,UAAU8S,WAClB3Z,OAAO6G,UAAU8S,SAAW,SAASC,GACjC,MAAO9rB,MAAKS,QAAQqrB,EAAQ9rB,KAAKwG,OAASslB,EAAOtlB,eAezDtH,EAAE6sB,cACa,UACA,SAASpC,EAASqC,EAAiBC,GAE/B,GAAIhtB,OAAOitB,WACEvC,EAAQwC,UAAiC,UAApBxC,EAAQwC,UAA2BxC,EAAQzW,OAAUjU,OAAOqM,aAAeqe,EAAQzW,eAAgB5H,cAAiBrM,OAAOmtB,MAAQzC,EAAQzW,eAAgBkZ,QACzL,OAEI5qB,KAAO,SAAS6qB,EAASxlB,GAErB,GAAIwQ,GAAM,GAAIG,gBAAkB8U,EAAM3C,EAAQ2C,IAAKxoB,EAAO6lB,EAAQ7lB,KAAMyoB,EAAQ5C,EAAQ4C,QAAS,EAEjGJ,EAAWxC,EAAQjS,cAAgB,OAAQxE,EAAOyW,EAAQzW,MAC/C,KAAMsZ,EAAW7C,EAAQ6C,UACzB,KAAMC,EAAW9C,EAAQ8C,UACzB,IAEXpV,GAAII,iBAAiB,OAAQ,WACzB,GAAIvE,KACJA,GAAKyW,EAAQwC,UAAY9U,EAAIC,SAE7BzQ,EAASwQ,EAAImT,OAAQnT,EAAIqV,WACjBxZ,EACAmE,EAAIsV,2BAGhBtV,EAAIM,KAAK7T,EAAMwoB,EAAKC,EAAOC,EACnBC,EAGR,KAAM,GAAI3pB,KAAKupB,GACXhV,EAAIuV,iBAAiB9pB,EAAGupB,EAAQvpB,GAGpCuU,GAAIK,aAAeyU,EACnB9U,EAAI7V,KAAK0R,IAEb2Z,MAAQ,WACJZ,EAAMY,YA4BrC1tB,EAAOuC,aAAe,SAASsU,EAAS8W,GAIpC,GAFuB,WAApB5tB,EAAE4E,KAAKkS,KACNA,EAAU9W,EAAE,IAAI8W,IAChBA,EAAJ,CAEA8W,EAASA,KAGT,KACI,MAAO,IAAI3tB,GAAO4tB,SAAS/W,EAAS8W,GAExC,MAAM5kB,GACF,KAAM,0BAA0BA,EAGpC,MAAO,QAQX/I,EAAO6tB,WAsBP7tB,EAAO8tB,SAAW,SAASC,EAAOC,EAAQxD,EAAS9iB,GAC/C,GACI/C,GAAO,GACPspB,EAAS,GACTrxB,EAAIoxB,EAAOprB,UAEf,IAA2B,UAAvBmrB,EAAMvmB,OAAO,EAAG,GAAgB,CAChCymB,EAASzD,GAAWA,EAAQyD,OAASzD,EAAQyD,OAAS,6BACtDF,EAAQA,EAAMvmB,OAAO,GAAGiR,aACxB,IAAIyV,GAAMD,EAASF,EAAQ,OAE3BhuB,GAAEouB,MAAMhB,IAAIe,EACRvpB,KAAM,MACNqoB,SAAU,SACVzU,aAAc,cACd6V,aAAa,IAAQ1O,KACjB,SAASuE,EAAKoK,EAAKlW,GACfvb,EAAE0xB,WAAWrK,EAAK,QAClB+J,EAAO3oB,SACP2oB,EAAOhtB,SACJ0G,GAAUA,EAAS9K,KACvB2xB,KAAK,SAASxlB,EAAEslB,GACfG,QAAQC,IAAIJ,SAGvB,CACD,GAA2B,SAAvBN,EAAMvmB,OAAO,EAAG,GAAe,CAQ/B,GAPAymB,EAASzD,GAAWA,EAAQyD,OAASzD,EAAQyD,OAAS,iCACtDtpB,EAAO6lB,GAAWA,EAAQkE,OAASlE,EAAQkE,OAAS,MACjDlE,GAA0D,mBAAxCA,GAAQmE,8BAEzBnE,EAAQmE,6BAA8B,GAE1CZ,EAAQA,EAAMvmB,OAAO,GAAGiR,eACnBsV,EAAMa,MAAM,yBACS,WAAvBC,OAAM,eAGLX,GADA1D,GAAWA,EAAQkE,OACbT,EAASF,EAAQ,IAAMvD,EAAQkE,OAE/BT,EAASF,EAAQ,WAExB,IAA0B,QAAtBA,EAAMvmB,OAAO,EAAG,GAAc,CAGrC,GAFA7C,EAAO,MACPopB,EAAQA,EAAMvmB,OAAO,IAChBumB,EAAMa,MAAM,YACc,WAA5BC,OAAM,oBAETX,GAAM,0DAA4DH,EAChE,sBAGPhuB,EAAE+B,IAAIosB,EAAK,SAASjK,GACjBrnB,EAAE0xB,WAAWrK,EAAKtf,EAAM6lB,GACxBwD,EAAO3oB,SACP2oB,EAAOhtB,SACJ0G,GAAUA,EAAS9K,KAEtB2xB,KAAK,SAASxlB,GAChBylB,QAAQC,IAAI,YAAYP,EAAI,YAAYnlB,EAAEwkB,cAI/C,MAAO3wB,IAQVoD,EAAO8uB,aACHC,IAAM,EACNC,GAAK,EACLC,IAAM,EACNC,IAAO,GAWXlvB,EAAOmvB,UAAY,SAASC,EAAUC,GAElC,GAAIC,GAAUD,EAAKD,QAEH7oB,UAAZ+oB,GAGJF,EAASG,eAAe3uB,KAAM0uB,EAAQC,eAAe,KAIzDvvB,EAAOwvB,gBAAkB,SAAStW,GAC9B,MAAOA,GAAEzN,WACAwI,QAAQ,gBAAiB,IACzBA,QAAQ,cAAe,KAQpCjU,EAAOyvB,aAAc,GAIlB3vB,OAAO4vB,UAAUC,UAAUruB,QAAQ,UAAY,GAC1CxB,OAAO4vB,UAAUC,UAAUruB,QAAQ,aAAe,KACtDtB,EAAOyvB,aAAc,GAkBzBzvB,EAAO4vB,mBAAqB,SAAS/c,GACjC,GAAmB,YAAhB,mBAAOA,GAAP,YAAA1T,EAAO0T,IACN,MAAOA,EAEN,IAAmB,mBAATA,IAA+B,MAAPA,EACnC,MAAOA,EAGXA,GAAMA,EAAIoB,QAAQ,MAAM,IAExB,IAAI4b,GAAU,SAASC,GACnB,MAAG/vB,GAAEgwB,UAAUD,GAETxkB,KAAKC,MAAMykB,WAAWF,KAASvoB,SAASuoB,GACjCE,WAAWF,GAEbA,EAAIxuB,QAAQ,MAAQ,EACjB0uB,WAAWF,GAGXvoB,SAASuoB,GAIP,SAARA,GAGQ,UAARA,GAGDA,GAGP7L,IACJ,IAAW,QAARpR,EAAe,MAAOoR,EAEzB,KAAI,GADAgM,GAASpd,EAAIqd,MAAM,KACfvsB,EAAI,EAAGA,EAAIssB,EAAO5oB,OAAQ1D,IAAK,CACnC,GAAIwsB,GAAKF,EAAOtsB,GAAGusB,MAAM,KACrBhX,EAAIiX,EAAG,GACPL,KACAM,EAAOD,EAAG,EACd,IAAGC,EAEC,GADAA,EAAOA,EAAKnc,QAAQ,KAAK,KACtBmc,EAAK9uB,QAAQ,UAGZ,IAAI,GADA+uB,GAAMD,EAAKF,MAAM,KACbphB,EAAI,EAAGA,EAAIuhB,EAAIhpB,OAAQyH,IAAK,CAChC,GAAIwhB,GAAKD,EAAIvhB,GAAGohB,MAAM,IAAI,EAC1BJ,GAAIQ,EAAG,IAAMT,EAAQS,EAAG,QAK5BR,GAFIM,EAAK9uB,QAAQ,UAEX8uB,EAAKF,MAAM,KAGXL,EAAQO,EAGtBnM,GAAI/K,GAAK4W,EAGjB,MAAO7L,IASPjkB,EAAOuwB,UAAY,SAASC,EAAUC,GAClC,GAAIC,GAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EACtDC,GAAcX,CAMlB,IAJAC,EAAOC,EAAOC,EAAO,KACrBC,EAAOC,EAAOC,QACdC,EAAOC,EAAOC,EAAOC,EAAM,EAEH,IAApBX,EAASnpB,OACT,QAAW,EAAG,EAAG,IAAO,EAAG,EAAG,IAAO,EAAG,EAAG,GAC/C,KAAK,GAAI1D,GAAI,EAAGA,EAAI6sB,EAASnpB,OAAQ1D,IAAK,CACtC,GAAIT,GAAOstB,EAAS7sB,EACpB,IAAoB,mBAATT,IAAyBmI,SAASnI,EAAKkB,IACzCiH,SAASnI,EAAKoB,IAAO+G,SAASnI,EAAKqB,KAE5C4sB,IACAH,GAAQ9tB,EAAKkB,EACb6sB,GAAQ/tB,EAAKoB,EACb4sB,GAAQhuB,EAAKqB,EAEbmsB,EAAQA,EAAOxtB,EAAKkB,EAAKssB,EAAOxtB,EAAKkB,EACrCusB,EAAQA,EAAOztB,EAAKoB,EAAKqsB,EAAOztB,EAAKoB,EACrCssB,EAAQA,EAAO1tB,EAAKqB,EAAKqsB,EAAO1tB,EAAKqB,EACrCssB,EAAQA,EAAO3tB,EAAKkB,EAAKysB,EAAO3tB,EAAKkB,EACrC0sB,EAAQA,EAAO5tB,EAAKoB,EAAKwsB,EAAO5tB,EAAKoB,EACrCysB,EAAQA,EAAO7tB,EAAKqB,EAAKwsB,EAAO7tB,EAAKqB,EAEjCrB,EAAKmuB,YAAcD,GACnB,IAAK,GAAIhkB,GAAI,EAAGA,EAAIlK,EAAKmuB,WAAWhqB,OAAQ+F,IACxC+jB,IACAH,GAAQ9tB,EAAKmuB,WAAWjkB,GAAGhJ,EAC3B6sB,GAAQ/tB,EAAKmuB,WAAWjkB,GAAG9I,EAC3B4sB,GAAQhuB,EAAKmuB,WAAWjkB,GAAG7I,EAC3BmsB,EAAQA,EAAOxtB,EAAKmuB,WAAWjkB,GAAGhJ,EAAKssB,EAAOxtB,EAAKmuB,WAAWjkB,GAAGhJ,EACjEusB,EAAQA,EAAOztB,EAAKmuB,WAAWjkB,GAAG9I,EAAKqsB,EAAOztB,EAAKmuB,WAAWjkB,GAAG9I,EACjEssB,EAAQA,EAAO1tB,EAAKmuB,WAAWjkB,GAAG7I,EAAKqsB,EAAO1tB,EAAKmuB,WAAWjkB,GAAG7I,EACjEssB,EAAQA,EAAO3tB,EAAKmuB,WAAWjkB,GAAGhJ,EAAKysB,EAAO3tB,EAAKmuB,WAAWjkB,GAAGhJ,EACjE0sB,EAAQA,EAAO5tB,EAAKmuB,WAAWjkB,GAAG9I,EAAKwsB,EAAO5tB,EAAKmuB,WAAWjkB,GAAG9I,EACjEysB,EAAQA,EAAO7tB,EAAKmuB,WAAWjkB,GAAG7I,EAAKwsB,EAAO7tB,EAAKmuB,WAAWjkB,GAAG7I,EAK7E,QAAWmsB,EAAMC,EAAMC,IAAUC,EAAMC,EAAMC,IACnCC,EAAOG,EAAKF,EAAOE,EAAKD,EAAOC,KAM7CnxB,EAAOsxB,gBAAkB,SAASpuB,EAAMquB,GACpC,GAAIzB,GAAM,IAOV,OANI5sB,GAAKsuB,YACoC,mBAA1BtuB,GAAKsuB,WAAWD,GAC/BzB,EAAM5sB,EAAKsuB,WAAWD,GACM,mBAAfruB,GAAKquB,KAClBzB,EAAM5sB,EAAKquB,IAERzB,GASX9vB,EAAOyxB,iBAAmB,SAAUjB,EAAUe,GAI1C,IAAK,GAHDpI,GAAMuI,OAAOC,kBACbvV,EAAMsV,OAAOE,kBAERjuB,EAAI,EAAGyJ,EAAIojB,EAASnpB,OAAQ1D,EAAIyJ,EAAGzJ,IAAK,CAC7C,GAAIT,GAAOstB,EAAS7sB,GAChBmsB,EAAM9vB,EAAOsxB,gBAAgBpuB,EAAMquB,EAE7B,OAAPzB,IACKA,EAAM3G,IACNA,EAAM2G,GACNA,EAAM1T,IACNA,EAAM0T,IAWlB,MAPKzkB,UAAS8d,IAAS9d,SAAS+Q,GAEtB/Q,SAAS8d,GAET9d,SAAS+Q,KACfA,EAAM+M,GAFNA,EAAM/M,EAFN+M,EAAM/M,EAAM,GAMP+M,EAAK/M,IAMdrS,EAAA,EAAAE,EAAA,kBAAAF,KAAApN,KAAAP,EAAAE,EAAAF,EAAAD,GAAA4N,IAAAxD,SAAA0D,IAAA9N,EAAAC,QAAA6N,GAQJ,IAAIjK,GAASA,KACbA,GAAOsL,MAEHumB,MAAQ,SAASztB,EAAG+kB,EAAK/M,GACrB,MAAO9Q,MAAK6d,IAAK7d,KAAK8Q,IAAKhY,EAAG+kB,GAAO/M,IAGzC0V,SAAW,WACR,GAAIC,GAAwBzmB,KAAK0mB,GAAK,GAEtC,OAAO,UAASC,GACZ,MAAOA,GAAMF,OAUxB/xB,EAAOkyB,WAAa,SAAS9tB,EAAGE,EAAGC,EAAG4tB,GAElCtxB,KAAKuD,EAAIA,GAAK,EACdvD,KAAKyD,EAAIA,GAAK,EACdzD,KAAK0D,EAAIA,GAAK,EACd1D,KAAKsxB,EAAW5rB,SAAN4rB,EAAmBA,EAAI,GAIrCnyB,EAAOkyB,WAAWtY,WAEdta,YAAcU,EAAOkyB,WAErBtsB,IAAM,SAASxB,EAAGE,EAAGC,EAAG4tB,GAOpB,MALAtxB,MAAKuD,EAAIA,EACTvD,KAAKyD,EAAIA,EACTzD,KAAK0D,EAAIA,EACT1D,KAAKsxB,EAAIA,EAEFtxB,MAGXgkB,KAAO,SAASjJ,GAOZ,MALA/a,MAAKuD,EAAIwX,EAAExX,EACXvD,KAAKyD,EAAIsX,EAAEtX,EACXzD,KAAK0D,EAAIqX,EAAErX,EACX1D,KAAKsxB,EAAIvW,EAAEuW,EAEJtxB,MAGXuxB,UAAY,WAMR,MAJAvxB,MAAKuD,MACLvD,KAAKyD,MACLzD,KAAK0D,MAEE1D,MAGXwxB,QAAU,WAEN,MAAOxxB,MAAKuxB,YAAYE,aAG5BjrB,OAAS,WAEL,MAAOiE,MAAKinB,KAAK1xB,KAAKuD,EAAIvD,KAAKuD,EAAIvD,KAAKyD,EAAIzD,KAAKyD,EAAIzD,KAAK0D,EAAI1D,KAAK0D,EAAI1D,KAAKsxB,EAAItxB,KAAKsxB,IAGzFG,UAAY,WAER,GAAI9pB,GAAI3H,KAAKwG,QAgBb,OAdU,KAANmB,GACA3H,KAAKuD,EAAI,EACTvD,KAAKyD,EAAI,EACTzD,KAAK0D,EAAI,EACT1D,KAAKsxB,EAAI,IAET3pB,EAAI,EAAIA,EAER3H,KAAKuD,GAAKoE,EACV3H,KAAKyD,GAAKkE,EACV3H,KAAK0D,GAAKiE,EACV3H,KAAKsxB,GAAK3pB,GAGP3H,MAIX2xB,SAAW,SAAS5W,GAEhB,MAAO/a,MAAK4xB,oBAAoB5xB,KAAM+a,IAG1C6W,oBAAsB,SAAStpB,EAAGN,GAE9B,GAAI6pB,GAAMvpB,EAAE/E,EAAGuuB,EAAMxpB,EAAE7E,EAAGsuB,EAAMzpB,EAAE5E,EAAGsuB,EAAM1pB,EAAEgpB,EACzCW,EAAMjqB,EAAEzE,EAAG2uB,EAAMlqB,EAAEvE,EAAG0uB,EAAMnqB,EAAEtE,EAAG0uB,EAAMpqB,EAAEspB,CAE7CtxB,MAAKuD,EAAIsuB,EAAMO,EAAMJ,EAAMC,EAAMH,EAAMK,EAAMJ,EAAMG,EACnDlyB,KAAKyD,EAAIquB,EAAMM,EAAMJ,EAAME,EAAMH,EAAME,EAAMJ,EAAMM,EACnDnyB,KAAK0D,EAAIquB,EAAMK,EAAMJ,EAAMG,EAAMN,EAAMK,EAAMJ,EAAMG,EACnDjyB,KAAKsxB,EAAIU,EAAMI,EAAMP,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,IAO3DhzB,EAAOkzB,QAAU,SAAS9uB,EAAGE,GAEzBzD,KAAKuD,EAAIA,GAAK,EACdvD,KAAKyD,EAAIA,GAAK,GAGlBtE,EAAOkzB,QAAQtZ,WAEXta,YAAcU,EAAOkzB,QAErBttB,IAAM,SAASxB,EAAGE,GAKd,MAHAzD,MAAKuD,EAAIA,EACTvD,KAAKyD,EAAIA,EAEFzD,MAGXsyB,WAAa,SAAShqB,EAAGN,GAKvB,MAHAhI,MAAKuD,EAAI+E,EAAE/E,EAAIyE,EAAEzE,EACjBvD,KAAKyD,EAAI6E,EAAE7E,EAAIuE,EAAEvE,EAEVzD,MAGTgkB,KAAO,SAASuO,GAKZ,MAHAvyB,MAAKuD,EAAIgvB,EAAEhvB,EACXvD,KAAKyD,EAAI8uB,EAAE9uB,EAEJzD,MAGXwyB,MAAQ,WAEJ,MAAO,IAAIrzB,GAAOkzB,QAAQryB,KAAKuD,EAAGvD,KAAKyD,KAO/CtE,EAAOszB,QAAU,SAASlvB,EAAGE,EAAGC,GAC5B1D,KAAKuD,EAAIA,GAAK,EACdvD,KAAKyD,EAAIA,GAAK,EACdzD,KAAK0D,EAAIA,GAAK,GAGlBvE,EAAOszB,QAAQ1Z,WAEXta,YAAcU,EAAOszB,QAErB1tB,IAAM,SAASxB,EAAGE,EAAGC,GAMjB,MAJA1D,MAAKuD,EAAIA,EACTvD,KAAKyD,EAAIA,EACTzD,KAAK0D,EAAIA,EAEF1D,MAGXgkB,KAAO,SAASuO,GAMZ,MAJAvyB,MAAKuD,EAAIgvB,EAAEhvB,EACXvD,KAAKyD,EAAI8uB,EAAE9uB,EACXzD,KAAK0D,EAAI6uB,EAAE7uB,EAEJ1D,MAGXe,IAAM,SAASwxB,GAMX,MAJAvyB,MAAKuD,GAAKgvB,EAAEhvB,EACZvD,KAAKyD,GAAK8uB,EAAE9uB,EACZzD,KAAK0D,GAAK6uB,EAAE7uB,EAEL1D,MAGX0yB,WAAa,SAASpqB,EAAGN,GAMrB,MAJAhI,MAAKuD,EAAI+E,EAAE/E,EAAIyE,EAAEzE,EACjBvD,KAAKyD,EAAI6E,EAAE7E,EAAIuE,EAAEvE,EACjBzD,KAAK0D,EAAI4E,EAAE5E,EAAIsE,EAAEtE,EAEV1D,MAGX2yB,IAAM,SAASJ,GAMX,MAJAvyB,MAAKuD,GAAKgvB,EAAEhvB,EACZvD,KAAKyD,GAAK8uB,EAAE9uB,EACZzD,KAAK0D,GAAK6uB,EAAE7uB,EAEL1D,MAGXsyB,WAAa,SAAShqB,EAAGN,GAMrB,MAJAhI,MAAKuD,EAAI+E,EAAE/E,EAAIyE,EAAEzE,EACjBvD,KAAKyD,EAAI6E,EAAE7E,EAAIuE,EAAEvE,EACjBzD,KAAK0D,EAAI4E,EAAE5E,EAAIsE,EAAEtE,EAEV1D,MAGX4yB,eAAiB,SAASpa,GAMtB,MAJAxY,MAAKuD,GAAKiV,EACVxY,KAAKyD,GAAK+U,EACVxY,KAAK0D,GAAK8U,EAEHxY,MAGX6yB,aAAe,SAASra,GAcpB,MAZU,KAANA,GACAxY,KAAKuD,GAAKiV,EACVxY,KAAKyD,GAAK+U,EACVxY,KAAK0D,GAAK8U,IAIVxY,KAAKuD,EAAI,EACTvD,KAAKyD,EAAI,EACTzD,KAAK0D,EAAI,GAGN1D,MAIXub,IAAM,SAAS/C,GAMX,MAJAxY,MAAKuD,EAAIkH,KAAK8Q,IAAIvb,KAAKuD,EAAEiV,EAAEjV,GAC3BvD,KAAKyD,EAAIgH,KAAK8Q,IAAIvb,KAAKyD,EAAE+U,EAAE/U,GAC3BzD,KAAK0D,EAAI+G,KAAK8Q,IAAIvb,KAAK0D,EAAE8U,EAAE9U,GAEpB1D,MAIXsoB,IAAM,SAAS9P,GAMX,MAJAxY,MAAKuD,EAAIkH,KAAK6d,IAAItoB,KAAKuD,EAAEiV,EAAEjV,GAC3BvD,KAAKyD,EAAIgH,KAAK6d,IAAItoB,KAAKyD,EAAE+U,EAAE/U,GAC3BzD,KAAK0D,EAAI+G,KAAK6d,IAAItoB,KAAK0D,EAAE8U,EAAE9U,GAEpB1D,MAEX8yB,WAAY,SAASP,GACjB,MAAO9nB,MAAKinB,KAAK1xB,KAAK+yB,kBAAkBR,KAG5CQ,kBAAmB,SAASR,GACxB,GAAIS,GAAKhzB,KAAKuD,EAAIgvB,EAAEhvB,EAChB0vB,EAAKjzB,KAAKyD,EAAI8uB,EAAE9uB,EAChByvB,EAAKlzB,KAAK0D,EAAI6uB,EAAE7uB,CAEpB,OAAOsvB,GAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GAGpCC,aAAe,SAASp3B,GAEpB,GAAIwH,GAAIvD,KAAKuD,EAAGE,EAAIzD,KAAKyD,EAAGC,EAAI1D,KAAK0D,EAEjCwE,EAAInM,EAAEq3B,QAMV,OAJApzB,MAAKuD,EAAI2E,EAAE,GAAG3E,EAAI2E,EAAE,GAAGzE,EAAIyE,EAAE,GAAGxE,EAAIwE,EAAE,IACtClI,KAAKyD,EAAIyE,EAAE,GAAG3E,EAAI2E,EAAE,GAAGzE,EAAIyE,EAAE,GAAGxE,EAAIwE,EAAE,IACtClI,KAAK0D,EAAIwE,EAAE,GAAG3E,EAAI2E,EAAE,GAAGzE,EAAIyE,EAAE,IAAIxE,EAAIwE,EAAE,IAEhClI,MAGXqzB,gBAAkB,SAASt3B,GAIvB,GAAIwH,GAAIvD,KAAKuD,EAAGE,EAAIzD,KAAKyD,EAAGC,EAAI1D,KAAK0D,EAEjCwE,EAAInM,EAAEq3B,SACNE,EAAMprB,EAAE,GAAG3E,EAAI2E,EAAE,GAAGzE,EAAIyE,EAAE,IAAIxE,EAAIwE,EAAE,GAMxC,OAJAlI,MAAKuD,GAAK2E,EAAE,GAAG3E,EAAI2E,EAAE,GAAGzE,EAAIyE,EAAE,GAAGxE,EAAIwE,EAAE,KAAOorB,EAC9CtzB,KAAKyD,GAAKyE,EAAE,GAAG3E,EAAI2E,EAAE,GAAGzE,EAAIyE,EAAE,GAAGxE,EAAIwE,EAAE,KAAOorB,EAC9CtzB,KAAK0D,GAAKwE,EAAE,GAAG3E,EAAI2E,EAAE,GAAGzE,EAAIyE,EAAE,IAAIxE,EAAIwE,EAAE,KAAOorB,EAExCtzB,MAGXuzB,gBAAkB,SAASxY,GAGvB,GAAIxX,GAAIvD,KAAKuD,EACTE,EAAIzD,KAAKyD,EACTC,EAAI1D,KAAK0D,EAET8vB,EAAKzY,EAAExX,EACPkwB,EAAK1Y,EAAEtX,EACPiwB,EAAK3Y,EAAErX,EAQP4U,GAPKyC,EAAEuW,KAQXhZ,GAAE/U,EAAI,GAAGE,EAAIiwB,EAAKhwB,EAAI+vB,GACtBnb,EAAE7U,EAAI,GAAGC,EAAI8vB,EAAKjwB,EAAImwB,GACtBpb,EAAE5U,EAAI,GAAGH,EAAIkwB,EAAKhwB,EAAI+vB,EAGtB,IAAIG,KASJ,OARAA,GAAGpwB,EAAI+U,EAAE7U,EAAIiwB,EAAKpb,EAAE5U,EAAI+vB,EACxBE,EAAGlwB,EAAI6U,EAAE5U,EAAI8vB,EAAKlb,EAAE/U,EAAImwB,EACxBC,EAAGjwB,EAAI4U,EAAE/U,EAAIkwB,EAAKnb,EAAE7U,EAAI+vB,EAExBxzB,KAAKuD,EAAIA,EAAIwX,EAAEuW,EAAEhZ,EAAE/U,EAAIowB,EAAGpwB,EAC1BvD,KAAKyD,EAAIA,EAAIsX,EAAEuW,EAAEhZ,EAAE7U,EAAIkwB,EAAGlwB,EAC1BzD,KAAK0D,EAAIA,EAAIqX,EAAEuW,EAAEhZ,EAAE5U,EAAIiwB,EAAGjwB,EAEnB1D,MAGX4zB,OAAS,WAEL,MAAO5zB,MAAK4yB,oBAGhBiB,IAAM,SAAStB,GAEX,MAAOvyB,MAAKuD,EAAIgvB,EAAEhvB,EAAIvD,KAAKyD,EAAI8uB,EAAE9uB,EAAIzD,KAAK0D,EAAI6uB,EAAE7uB,GAGpD8C,OAAS,WAEL,MAAOiE,MAAKinB,KAAK1xB,KAAKuD,EAAEvD,KAAKuD,EAAIvD,KAAKyD,EAAEzD,KAAKyD,EAAIzD,KAAK0D,EAAE1D,KAAK0D,IAGjEowB,SAAW,WAEP,MAAQ9zB,MAAKuD,EAAEvD,KAAKuD,EAAIvD,KAAKyD,EAAEzD,KAAKyD,EAAIzD,KAAK0D,EAAE1D,KAAK0D,GAGxD+tB,UAAY,WAER,MAAOzxB,MAAK6yB,aAAc7yB,KAAKwG,WAGnCutB,MAAQ,SAAUxB,GAEd,GAAIhvB,GAAIvD,KAAKuD,EAAGE,EAAIzD,KAAKyD,EAAGC,EAAI1D,KAAK0D,CAMrC,OAJA1D,MAAKuD,EAAIE,EAAI8uB,EAAE7uB,EAAIA,EAAI6uB,EAAE9uB,EACzBzD,KAAKyD,EAAIC,EAAI6uB,EAAEhvB,EAAIA,EAAIgvB,EAAE7uB,EACzB1D,KAAK0D,EAAIH,EAAIgvB,EAAE9uB,EAAIA,EAAI8uB,EAAEhvB,EAElBvD,MAGXg0B,aAAe,SAAS1rB,EAAGN,GAMvB,MAJAhI,MAAKuD,EAAI+E,EAAE7E,EAAIuE,EAAEtE,EAAI4E,EAAE5E,EAAIsE,EAAEvE,EAC7BzD,KAAKyD,EAAI6E,EAAE5E,EAAIsE,EAAEzE,EAAI+E,EAAE/E,EAAIyE,EAAEtE,EAC7B1D,KAAK0D,EAAI4E,EAAE/E,EAAIyE,EAAEvE,EAAI6E,EAAE7E,EAAIuE,EAAEzE,EAEtBvD,MAGXi0B,sBAAwB,SAASl4B,GAM7B,MAJAiE,MAAKuD,EAAIxH,EAAEq3B,SAAS,IACpBpzB,KAAKyD,EAAI1H,EAAEq3B,SAAS,IACpBpzB,KAAK0D,EAAI3H,EAAEq3B,SAAS,IAEbpzB,MAGXk0B,2BAA6B,SAAUn4B,EAAG8oB,GAItC,GAAIsP,GAAKp4B,EAAEq3B,SACPgB,EAAMD,EAAG,GAAIE,EAAMF,EAAG,GAAIG,EAAMH,EAAG,GACtBI,GAAPJ,EAAG,GAAUA,EAAG,IAAIK,EAAML,EAAG,GACtBM,GAAPN,EAAG,GAAUA,EAAG,IAAIO,EAAMP,EAAG,GAuBvC,OArBezuB,UAAVmf,GAAiC,QAAVA,GAExB7kB,KAAKyD,EAAIgH,KAAKkqB,KAAMx1B,EAAOsL,KAAKumB,MAAOsD,KAAS,IAE3C7pB,KAAKmqB,IAAKN,GAAQ,QAEnBt0B,KAAKuD,EAAIkH,KAAKoqB,OAASL,EAAKE,GAC5B10B,KAAK0D,EAAI+G,KAAKoqB,OAASR,EAAKD,KAI5Bp0B,KAAKuD,EAAIkH,KAAKoqB,MAAOJ,EAAKF,GAC1Bv0B,KAAK0D,EAAI,IAMbiqB,QAAQpW,MAAM,kEAAoEsN,GAG/E7kB,MAIX80B,kBAAoB,SAASC,EAAMC,GAE/BD,EAAKtD,WACL,IAAIwD,GAASxqB,KAAKyqB,IAAIF,GAClBG,EAAS1qB,KAAK2qB,IAAIJ,GAGlBK,EAAQr1B,KAAKwyB,QAAQI,eAAeqC,GACpCK,EAASP,EAAKvC,QAAQuB,MAAM/zB,MAAO4yB,eAAeuC,GAClDI,EAAQR,EAAKvC,QAAQI,eAAemC,EAAKvC,QAAQqB,IAAI7zB,OAAO4yB,eAAe,EAAEqC,GAE7EO,EAAMH,EAAMt0B,IAAIu0B,GAAOv0B,IAAIw0B,EAM/B,OAJAv1B,MAAKuD,EAAIiyB,EAAIjyB,EACbvD,KAAKyD,EAAI+xB,EAAI/xB,EACbzD,KAAK0D,EAAI8xB,EAAI9xB,EAEN1D,MAGXwyB,MAAQ,WACJ,MAAO,IAAIrzB,GAAOszB,QAAQzyB,KAAKuD,EAAGvD,KAAKyD,EAAGzD,KAAK0D,KASvDvE,EAAOs2B,QAAU,SAASC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAE9Dl2B,KAAKozB,SAAW,GAAIhnB,cAAa,GAEjCpM,KAAK+E,IACQW,SAARgwB,EAAqBA,EAAM,EAAGC,GAAO,EAAGC,GAAO,EAChDC,GAAO,EAAYnwB,SAARowB,EAAqBA,EAAM,EAAGC,GAAO,EAChDC,GAAO,EAAGC,GAAO,EAAYvwB,SAARwwB,EAAqBA,EAAM,IAKxD/2B,EAAOs2B,QAAQ1c,WAEXta,YAAcU,EAAOs2B,QAErB1wB,IAAM,SAAS2wB,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GACnD,GAAI/B,GAAKn0B,KAAKozB,QAMd,OAJAe,GAAG,GAAKuB,EAAKvB,EAAG,GAAKwB,EAAKxB,EAAG,GAAKyB,EAClCzB,EAAG,GAAK0B,EAAK1B,EAAG,GAAK2B,EAAK3B,EAAG,GAAK4B,EAClC5B,EAAG,GAAK6B,EAAK7B,EAAG,GAAK8B,EAAK9B,EAAG,GAAK+B,EAE3Bl2B,MAGXm2B,SAAW,WAOP,MANAn2B,MAAK+E,IACD,EAAE,EAAE,EACJ,EAAE,EAAE,EACJ,EAAE,EAAE,GAGD/E,MAGXgkB,KAAO,SAASjoB,GACZ,GAAIq6B,GAAKr6B,EAAEq3B,QAEXpzB,MAAK+E,IACDqxB,EAAG,GAAIA,EAAG,GAAIA,EAAG,GACjBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GACjBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAIzBxD,eAAgB,SAAWpa,GACvB,GAAI2b,GAAKn0B,KAAKozB,QAMd,OAJAe,GAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EACjC2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EACjC2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAE1BxY,MAGXq2B,WAAY,SAAWC,EAAQC,GAG3B,GAAIH,GAAKE,EAAOlD,SACZe,EAAKn0B,KAAKozB,QAEde,GAAI,GAAQiC,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACxCjC,EAAI,IAAQiC,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACxCjC,EAAI,GAAQiC,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACvCjC,EAAI,IAAQiC,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACxCjC,EAAI,GAAQiC,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACxCjC,EAAI,IAAQiC,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACvCjC,EAAI,GAAQiC,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACvCjC,EAAI,IAAQiC,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACvCjC,EAAI,GAAQiC,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,EAEvC,IAAII,GAAMJ,EAAI,GAAMjC,EAAI,GAAMiC,EAAI,GAAMjC,EAAI,GAAMiC,EAAI,GAAMjC,EAAI,EAIhE,IAAa,IAARqC,EAAY,CAEb,GAAItV,GAAM,6DAEV,IAAKqV,EAED,KAAM,IAAIjvB,OAAO4Z,EAUrB,OANIyM,SAAQ8I,KAAMvV,GAIlBlhB,KAAKm2B,WAEEn2B,KAMX,MAFAA,MAAK4yB,eAAgB,EAAM4D,GAEpBx2B,MAIX02B,eAAgB,WACZ,GAAI36B,GAAIiE,KAAKozB,SAMTuD,EACE56B,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,EACtB,OAAO46B,IAGXC,UAAW,WACP,GAAIC,GAAK96B,EAAIiE,KAAKozB,QAMlB,OAJAyD,GAAM96B,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAK86B,EAChCA,EAAM96B,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAK86B,EAChCA,EAAM96B,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAK86B,EAEzB72B,MAGXwyB,MAAO,WACH,GAAI2B,GAAKn0B,KAAKozB,QAEd,OAAO,IAAIj0B,GAAOs2B,QAEdtB,EAAG,GAAIA,EAAG,GAAIA,EAAG,GACjBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GACjBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,MAS7Bh1B,EAAO23B,QAAU,SAASpB,EAAKC,EAAKC,EAAKmB,EAAKlB,EAAKC,EAAKC,EAAKiB,EAAKhB,EAAKC,EAAKC,EAAKe,EAAKC,EAAKC,EAAKC,EAAKC,GAEjG,GAAmB,mBAAT1B,IAAwC,mBAATD,GAErC11B,KAAKozB,SAAW,GAAIhnB,cAAaspB,OAC9B,CACH,GAAIvB,GAAKn0B,KAAKozB,SAAW,GAAIhnB,cAAc,GAE3C+nB,GAAG,GAAezuB,SAARgwB,EAAsBA,EAAM,EAAGvB,EAAG,GAAKwB,GAAO,EAAGxB,EAAG,GAAKyB,GAAO,EAAGzB,EAAG,IAAM4C,GAAO,EAC7F5C,EAAG,GAAK0B,GAAO,EAAG1B,EAAG,GAAezuB,SAARowB,EAAsBA,EAAM,EAAG3B,EAAG,GAAK4B,GAAO,EAAG5B,EAAG,IAAM6C,GAAO,EAC7F7C,EAAG,GAAK6B,GAAO,EAAG7B,EAAG,GAAK8B,GAAO,EAAG9B,EAAG,IAAgBzuB,SAARwwB,EAAsBA,EAAM,EAAG/B,EAAG,IAAM8C,GAAO,EAC9F9C,EAAG,GAAK+C,GAAO,EAAG/C,EAAG,GAAKgD,GAAO,EAAGhD,EAAG,IAAMiD,GAAO,EAAGjD,EAAG,IAAgBzuB,SAAR2xB,EAAsBA,EAAM,IAItGl4B,EAAO23B,QAAQ/d,WAEXta,YAAcU,EAAO23B,QAErB/xB,IAAK,SAAW2wB,EAAKC,EAAKC,EAAKmB,EAAKlB,EAAKC,EAAKC,EAAKiB,EAAKhB,EAAKC,EAAKC,EAAKe,EAAKC,EAAKC,EAAKC,EAAKC,GACvF,GAAIlD,GAAKn0B,KAAKozB,QAOd,OALAe,GAAG,GAAKuB,EAAKvB,EAAG,GAAKwB,EAAKxB,EAAG,GAAKyB,EAAKzB,EAAG,IAAM4C,EAChD5C,EAAG,GAAK0B,EAAK1B,EAAG,GAAK2B,EAAK3B,EAAG,GAAK4B,EAAK5B,EAAG,IAAM6C,EAChD7C,EAAG,GAAK6B,EAAK7B,EAAG,GAAK8B,EAAK9B,EAAG,IAAM+B,EAAK/B,EAAG,IAAM8C,EACjD9C,EAAG,GAAK+C,EAAK/C,EAAG,GAAKgD,EAAKhD,EAAG,IAAMiD,EAAKjD,EAAG,IAAMkD,EAE1Cr3B,MAGXm2B,SAAU,WAUN,MATAn2B,MAAK+E,IAED,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAIN/E,MAGXgkB,KAAM,SAAWjoB,GACb,GAAIq6B,GAAKr6B,EAAEq3B,QAWX,OATApzB,MAAK+E,IAEDqxB,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,IACxBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,IACxBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAKA,EAAG,IACzBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAKA,EAAG,KAItBp2B,MAGXs3B,mBAAoB,WAChB,GAAInD,GAAKn0B,KAAKozB,QACd,OAAO,IAAIj0B,GAAOs2B,QAAQtB,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,MAGjFoD,qBAAsB,SAAWhF,EAAG1N,GAEhC,GAAIsP,GAAKn0B,KAAKozB,SAEV7vB,EAAIgvB,EAAEhvB,EAAGE,EAAI8uB,EAAE9uB,EAAGC,EAAI6uB,EAAE7uB,EACxB4E,EAAImC,KAAKyqB,IAAK3xB,GAAKyE,EAAIyC,KAAK2qB,IAAK7xB,GACjCvH,EAAIyO,KAAKyqB,IAAKzxB,GAAK6vB,EAAI7oB,KAAK2qB,IAAK3xB,GACjCyE,EAAIuC,KAAKyqB,IAAKxxB,GAAK2U,EAAI5N,KAAK2qB,IAAK1xB,EAErC,IAAegC,SAAVmf,GAAiC,QAAVA,EAAkB,CAE1C,GAAI2S,GAAKlvB,EAAIJ,EAAGuvB,EAAKnvB,EAAI+P,EAAGqf,EAAK1vB,EAAIE,EAAGyvB,EAAK3vB,EAAIqQ,CAEjD8b,GAAG,GAAKn4B,EAAIkM,EACZisB,EAAG,IAAOn4B,EAAIqc,EACd8b,EAAG,GAAKb,EAERa,EAAG,GAAKsD,EAAKC,EAAKpE,EAClBa,EAAG,GAAKqD,EAAKG,EAAKrE,EAClBa,EAAG,IAAOnsB,EAAIhM,EAEdm4B,EAAG,GAAKwD,EAAKH,EAAKlE,EAClBa,EAAG,GAAKuD,EAAKD,EAAKnE,EAClBa,EAAG,IAAM7rB,EAAItM,MAKb2xB,SAAQpW,MAAM,mDAAqDsN,EAEvE,OAAO7kB,OAIX43B,0BAA2B,SAAW7c,GAClC,GAAIoZ,GAAKn0B,KAAKozB,SAEV7vB,EAAIwX,EAAExX,EAAGE,EAAIsX,EAAEtX,EAAGC,EAAIqX,EAAErX,EAAG4tB,EAAIvW,EAAEuW,EACjCuG,EAAKt0B,EAAIA,EAAGu0B,EAAKr0B,EAAIA,EAAGs0B,EAAKr0B,EAAIA,EACjCs0B,EAAKz0B,EAAIs0B,EAAII,EAAK10B,EAAIu0B,EAAII,EAAK30B,EAAIw0B,EACnCI,EAAK10B,EAAIq0B,EAAIM,EAAK30B,EAAIs0B,EAAIM,EAAK30B,EAAIq0B,EACnCO,EAAKhH,EAAIuG,EAAIU,EAAKjH,EAAIwG,EAAIU,EAAKlH,EAAIyG,CAcvC,OAZA5D,GAAG,GAAK,GAAMgE,EAAKE,GACnBlE,EAAG,GAAK8D,EAAKO,EACbrE,EAAG,GAAK+D,EAAKK,EAEbpE,EAAG,GAAK8D,EAAKO,EACbrE,EAAG,GAAK,GAAM6D,EAAKK,GACnBlE,EAAG,GAAKiE,EAAKE,EAEbnE,EAAG,GAAK+D,EAAKK,EACbpE,EAAG,GAAKiE,EAAKE,EACbnE,EAAG,IAAM,GAAM6D,EAAKG,GAEbn4B,MAGXy4B,OAAQ,WACJ,GAAIl1B,GAAI,GAAIpE,GAAOszB,QACfhvB,EAAI,GAAItE,GAAOszB,QACf/uB,EAAI,GAAIvE,GAAOszB,OAEnB,OAAO,UAAWiG,EAAKC,EAAQC,GAE3B,GAAIzE,GAAKn0B,KAAKozB,QA0Bd,OAxBA1vB,GAAE4uB,WAAYoG,EAAKC,GAASlH,YAER,IAAf/tB,EAAE8C,WAEH9C,EAAEA,EAAI,GAIVH,EAAEywB,aAAc4E,EAAIl1B,GAAI+tB,YAEJ,IAAfluB,EAAEiD,WAEH9C,EAAEH,GAAK,KACPA,EAAEywB,aAAc4E,EAAIl1B,GAAI+tB,aAI5BhuB,EAAEuwB,aAActwB,EAAGH,GAGnB4wB,EAAG,GAAK5wB,EAAEA,EAAG4wB,EAAG,GAAK1wB,EAAEF,EAAG4wB,EAAG,GAAKzwB,EAAEH,EACpC4wB,EAAG,GAAK5wB,EAAEE,EAAG0wB,EAAG,GAAK1wB,EAAEA,EAAG0wB,EAAG,GAAKzwB,EAAED,EACpC0wB,EAAG,GAAK5wB,EAAEG,EAAGywB,EAAG,GAAK1wB,EAAEC,EAAGywB,EAAG,IAAMzwB,EAAEA,EAE9B1D,SAKf64B,iBAAkB,SAAWvwB,EAAGN,GAC5B,GAAIwvB,GAAKlvB,EAAE8qB,SACPsE,EAAK1vB,EAAEorB,SACPe,EAAKn0B,KAAKozB,SAEV0F,EAAMtB,EAAG,GAAIuB,EAAMvB,EAAG,GAAIwB,EAAMxB,EAAG,GAAIyB,EAAMzB,EAAG,IAChD0B,EAAM1B,EAAG,GAAI2B,EAAM3B,EAAG,GAAI4B,EAAM5B,EAAG,GAAI6B,EAAM7B,EAAG,IAChD8B,EAAM9B,EAAG,GAAI+B,EAAM/B,EAAG,GAAIgC,EAAMhC,EAAG,IAAKiC,EAAMjC,EAAG,IACjDkC,EAAMlC,EAAG,GAAImC,EAAMnC,EAAG,GAAIoC,EAAMpC,EAAG,IAAKqC,EAAMrC,EAAG,IAEjDsC,EAAMpC,EAAG,GAAIqC,EAAMrC,EAAG,GAAIsC,EAAMtC,EAAG,GAAIuC,EAAMvC,EAAG,IAChDwC,EAAMxC,EAAG,GAAIyC,EAAMzC,EAAG,GAAI0C,EAAM1C,EAAG,GAAI2C,EAAM3C,EAAG,IAChD4C,EAAM5C,EAAG,GAAI6C,EAAM7C,EAAG,GAAI8C,EAAM9C,EAAG,IAAK+C,EAAM/C,EAAG,IACjDgD,EAAMhD,EAAG,GAAIiD,EAAMjD,EAAG,GAAIkD,EAAMlD,EAAG,IAAKmD,EAAMnD,EAAG,GAsBrD,OApBAvD,GAAG,GAAK2E,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAClDvG,EAAG,GAAK2E,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAAMtB,EAAM0B,EAClDxG,EAAG,GAAK2E,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAAMvB,EAAM2B,EAClDzG,EAAG,IAAM2E,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAAMxB,EAAM4B,EAEnD1G,EAAG,GAAK+E,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAClDvG,EAAG,GAAK+E,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAClDxG,EAAG,GAAK+E,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAClDzG,EAAG,IAAM+E,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAEnD1G,EAAG,GAAKmF,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EAClDvG,EAAG,GAAKmF,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAClDxG,EAAG,IAAMmF,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EACnDzG,EAAG,IAAMmF,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAEnD1G,EAAG,GAAKuF,EAAMI,EAAMH,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EAClDvG,EAAG,GAAKuF,EAAMK,EAAMJ,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EAClDxG,EAAG,IAAMuF,EAAMM,EAAML,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EACnDzG,EAAG,IAAMuF,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAE5C76B,MAGX4yB,eAAgB,SAAWpa,GACvB,GAAI2b,GAAKn0B,KAAKozB,QAOd,OALAe,GAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAAG2b,EAAG,KAAO3b,EAC9C2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAAG2b,EAAG,KAAO3b,EAC9C2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAAG2b,EAAG,KAAO3b,EAAG2b,EAAG,KAAO3b,EAC/C2b,EAAG,IAAM3b,EAAG2b,EAAG,IAAM3b,EAAG2b,EAAG,KAAO3b,EAAG2b,EAAG,KAAO3b,EAExCxY,MAGX86B,gBAAiB,SAAWv3B,EAAGE,EAAGC,GAW9B,MATA1D,MAAK+E,IAED,EAAG,EAAG,EAAGxB,EACT,EAAG,EAAG,EAAGE,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAG,GAIN1D,MAIX42B,UAAW,WACP,GACIC,GADA1C,EAAKn0B,KAAKozB,QAWd,OARAyD,GAAM1C,EAAG,GAAIA,EAAG,GAAKA,EAAG,GAAIA,EAAG,GAAK0C,EACpCA,EAAM1C,EAAG,GAAIA,EAAG,GAAKA,EAAG,GAAIA,EAAG,GAAK0C,EACpCA,EAAM1C,EAAG,GAAIA,EAAG,GAAKA,EAAG,GAAIA,EAAG,GAAK0C,EAEpCA,EAAM1C,EAAG,GAAIA,EAAG,GAAKA,EAAG,IAAKA,EAAG,IAAM0C,EACtCA,EAAM1C,EAAG,GAAIA,EAAG,GAAKA,EAAG,IAAKA,EAAG,IAAM0C,EACtCA,EAAM1C,EAAG,IAAKA,EAAG,IAAMA,EAAG,IAAKA,EAAG,IAAM0C,EAEjC72B,MAGX+6B,YAAa,WACT,GAAIC,GAAK,GAAI77B,GAAOszB,OAEpB,OAAO,YAEH9E,QAAQ8I,KAAM,8GAEd,IAAItC,GAAKn0B,KAAKozB,QACd,OAAO4H,GAAGj2B,IAAKovB,EAAG,IAAKA,EAAG,IAAKA,EAAG,SAK1C8G,YAAa,SAAW1I,GACpB,GAAI4B,GAAKn0B,KAAKozB,QAMd,OAJAe,GAAG,IAAM5B,EAAEhvB,EACX4wB,EAAG,IAAM5B,EAAE9uB,EACX0wB,EAAG,IAAM5B,EAAE7uB,EAEJ1D,MAGXq2B,WAAY,SAAWt6B,EAAGw6B,GAEtB,GAAIpC,GAAKn0B,KAAKozB,SACVgD,EAAKr6B,EAAEq3B,SAEPsC,EAAMU,EAAG,GAAIT,EAAMS,EAAG,GAAIR,EAAMQ,EAAG,GAAIW,EAAMX,EAAG,IAChDP,EAAMO,EAAG,GAAIN,EAAMM,EAAG,GAAIL,EAAMK,EAAG,GAAIY,EAAMZ,EAAG,IAChDJ,EAAMI,EAAG,GAAIH,EAAMG,EAAG,GAAIF,EAAME,EAAG,IAAKa,EAAMb,EAAG,IACjDc,EAAMd,EAAG,GAAIe,EAAMf,EAAG,GAAIgB,EAAMhB,EAAG,IAAKiB,EAAMjB,EAAG,GAErDjC,GAAG,GAAK4B,EAAIkB,EAAIE,EAAMH,EAAId,EAAIiB,EAAMH,EAAIf,EAAImB,EAAMtB,EAAImB,EAAIG,EAAMrB,EAAIE,EAAIoB,EAAMvB,EAAII,EAAImB,EACtFlD,EAAG,GAAK4C,EAAIb,EAAIiB,EAAMvB,EAAIqB,EAAIE,EAAMJ,EAAId,EAAImB,EAAMzB,EAAIsB,EAAIG,EAAMxB,EAAIK,EAAIoB,EAAM1B,EAAIO,EAAImB,EACtFlD,EAAG,GAAKyB,EAAIoB,EAAIG,EAAMJ,EAAIhB,EAAIoB,EAAMJ,EAAIjB,EAAIsB,EAAMzB,EAAIqB,EAAII,EAAMxB,EAAIE,EAAIuB,EAAM1B,EAAII,EAAIsB,EACtFlD,EAAG,IAAM4C,EAAIhB,EAAIE,EAAML,EAAIoB,EAAIf,EAAMc,EAAIjB,EAAII,EAAMP,EAAIqB,EAAId,EAAMN,EAAIE,EAAImB,EAAMtB,EAAII,EAAIkB,EACvF9C,EAAG,GAAK6C,EAAId,EAAIgB,EAAMnB,EAAIkB,EAAIC,EAAMF,EAAIhB,EAAIoB,EAAMvB,EAAIoB,EAAIG,EAAMrB,EAAIC,EAAIqB,EAAMxB,EAAIK,EAAImB,EACtFlD,EAAG,GAAKyB,EAAIqB,EAAIC,EAAMH,EAAIb,EAAIgB,EAAMH,EAAIf,EAAIoB,EAAM1B,EAAIuB,EAAIG,EAAMxB,EAAII,EAAIqB,EAAM3B,EAAIQ,EAAImB,EACtFlD,EAAG,GAAK4C,EAAIhB,EAAImB,EAAMtB,EAAIoB,EAAIE,EAAMH,EAAIlB,EAAIuB,EAAM1B,EAAIsB,EAAII,EAAMxB,EAAIC,EAAIwB,EAAM3B,EAAIK,EAAIsB,EACtFlD,EAAG,IAAMyB,EAAIoB,EAAIhB,EAAMe,EAAIhB,EAAIC,EAAMe,EAAIlB,EAAIK,EAAMR,EAAIsB,EAAId,EAAMN,EAAIC,EAAIoB,EAAMvB,EAAIK,EAAIkB,EACvF9C,EAAG,GAAK2B,EAAImB,EAAIC,EAAMF,EAAIf,EAAIiB,EAAMF,EAAIhB,EAAImB,EAAMtB,EAAIoB,EAAIE,EAAMrB,EAAIE,EAAIqB,EAAMxB,EAAII,EAAIoB,EACtFlD,EAAG,GAAK4C,EAAId,EAAIiB,EAAMvB,EAAIsB,EAAIC,EAAMH,EAAIf,EAAImB,EAAMzB,EAAIuB,EAAIE,EAAMxB,EAAIK,EAAIqB,EAAM3B,EAAIO,EAAIoB,EACtFlD,EAAG,IAAMwB,EAAIqB,EAAIE,EAAMH,EAAIjB,EAAIoB,EAAMH,EAAIlB,EAAIsB,EAAMzB,EAAIsB,EAAIG,EAAMxB,EAAIE,EAAIwB,EAAM3B,EAAII,EAAIuB,EACvFlD,EAAG,IAAM4C,EAAIjB,EAAIE,EAAML,EAAIqB,EAAIhB,EAAMe,EAAIlB,EAAII,EAAMP,EAAIsB,EAAIf,EAAMN,EAAIE,EAAIoB,EAAMvB,EAAII,EAAImB,EACvF9C,EAAG,GAAK4B,EAAIE,EAAIiB,EAAMpB,EAAII,EAAIgB,EAAMnB,EAAIC,EAAImB,EAAMtB,EAAIK,EAAIiB,EAAMrB,EAAIE,EAAIoB,EAAMvB,EAAII,EAAImB,EACtFjD,EAAG,GAAKwB,EAAIO,EAAIgB,EAAMtB,EAAIK,EAAIiB,EAAMtB,EAAII,EAAImB,EAAMzB,EAAIQ,EAAIiB,EAAMxB,EAAIK,EAAIoB,EAAM1B,EAAIO,EAAImB,EACtFjD,EAAG,IAAMyB,EAAIE,EAAIoB,EAAMvB,EAAII,EAAImB,EAAMtB,EAAIC,EAAIsB,EAAMzB,EAAIK,EAAIoB,EAAMxB,EAAIE,EAAIuB,EAAM1B,EAAII,EAAIsB,EACvFjD,EAAG,IAAMwB,EAAII,EAAIC,EAAMJ,EAAIE,EAAIE,EAAMJ,EAAIC,EAAII,EAAMP,EAAIK,EAAIE,EAAMN,EAAIE,EAAIK,EAAMR,EAAII,EAAII,CAEvF,IAAIM,GAAMJ,EAAI,GAAMjC,EAAI,GAAMiC,EAAI,GAAMjC,EAAI,GAAMiC,EAAI,GAAMjC,EAAI,GAAMiC,EAAI,GAAMjC,EAAI,GAEpF,IAAa,IAARqC,EAAY,CAEb,GAAItV,GAAM,6DAEV,IAAKqV,EAED,KAAM,IAAIjvB,OAAO4Z,EAUrB,OANIyM,SAAQ8I,KAAMvV,GAIlBlhB,KAAKm2B,WAEEn2B,KAKX,MAFAA,MAAK4yB,eAAgB,EAAI4D,GAElBx2B,MAGXk7B,YAAa,WACT,MAAOl7B,MAAKs3B,qBAAqBZ,iBAAmB,GAGxDyE,QAAS,WACL,GAAIC,GAAY,GAAIj8B,GAAO23B,QACvBuE,EAAS,GAAIl8B,GAAO23B,OAExB,OAAO,UAAWwE,EAAaC,EAAUC,GAErC,GAAIrH,GAAKn0B,KAAKozB,QAad,OAXAgI,GAAUjF,WACViF,EAAUxD,0BAA2B2D,GAErCF,EAAOI,UAAWD,EAAMj4B,EAAGi4B,EAAM/3B,EAAG+3B,EAAM93B,GAE1C1D,KAAK64B,iBAAkBuC,EAAWC,GAElClH,EAAG,IAAMmH,EAAY/3B,EACrB4wB,EAAG,IAAMmH,EAAY73B,EACrB0wB,EAAG,IAAMmH,EAAY53B,EAEd1D,SAKf07B,UAAW,WACP,GAAIn4B,GAAI,GAAIpE,GAAOszB,QACfhvB,EAAI,GAAItE,GAAOszB,QACf/uB,EAAI,GAAIvE,GAAOszB,QACf6D,EAAS,GAAIn3B,GAAO23B,OAExB,OAAO,UAAWwE,EAAaC,EAAUC,GAErC,GAAIrH,GAAKn0B,KAAKozB,QAqCd,OAlCA7vB,GAAEwB,IAAKovB,EAAG,GAAIA,EAAG,GAAIA,EAAG,IACxB1wB,EAAEsB,IAAKovB,EAAG,GAAIA,EAAG,GAAIA,EAAG,IACxBzwB,EAAEqB,IAAKovB,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAExBmH,EAAgBA,YAAuBn8B,GAAOszB,QAAY6I,EAAc,GAAIn8B,GAAOszB,QACnF8I,EAAaA,YAAoBp8B,GAAOkyB,WAAekK,EAAW,GAAIp8B,GAAOkyB,WAC7EmK,EAAUA,YAAiBr8B,GAAOszB,QAAY+I,EAAQ,GAAIr8B,GAAOszB,QAEjE+I,EAAMj4B,EAAIA,EAAEiD,SACZg1B,EAAM/3B,EAAIA,EAAE+C,SACZg1B,EAAM93B,EAAIA,EAAE8C,SAEZ80B,EAAY/3B,EAAI4wB,EAAG,IACnBmH,EAAY73B,EAAI0wB,EAAG,IACnBmH,EAAY53B,EAAIywB,EAAG,IAInBmC,EAAOtS,KAAMhkB,MAEbs2B,EAAOlD,SAAS,IAAMoI,EAAMj4B,EAC5B+yB,EAAOlD,SAAS,IAAMoI,EAAMj4B,EAC5B+yB,EAAOlD,SAAS,IAAMoI,EAAMj4B,EAE5B+yB,EAAOlD,SAAS,IAAMoI,EAAM/3B,EAC5B6yB,EAAOlD,SAAS,IAAMoI,EAAM/3B,EAC5B6yB,EAAOlD,SAAS,IAAMoI,EAAM/3B,EAE5B6yB,EAAOlD,SAAS,IAAMoI,EAAM93B,EAC5B4yB,EAAOlD,SAAS,IAAMoI,EAAM93B,EAC5B4yB,EAAOlD,SAAS,KAAOoI,EAAM93B,EAE7B63B,EAASI,sBAAuBrF,IAEvBgF,EAAaC,EAAUC,OAKxCA,MAAO,SAAWjJ,GACd,GAAI4B,GAAKn0B,KAAKozB,SACV7vB,EAAIgvB,EAAEhvB,EAAGE,EAAI8uB,EAAE9uB,EAAGC,EAAI6uB,EAAE7uB,CAO5B,OALAywB,GAAG,IAAM5wB,EAAG4wB,EAAG,IAAM1wB,EAAG0wB,EAAG,IAAMzwB,EACjCywB,EAAG,IAAM5wB,EAAG4wB,EAAG,IAAM1wB,EAAG0wB,EAAG,IAAMzwB,EACjCywB,EAAG,IAAM5wB,EAAG4wB,EAAG,IAAM1wB,EAAG0wB,EAAG,KAAOzwB,EAClCywB,EAAG,IAAM5wB,EAAG4wB,EAAG,IAAM1wB,EAAG0wB,EAAG,KAAOzwB,EAE3B1D,MAGX47B,kBAAoB,WAEhB,GAAIzH,GAAKn0B,KAAKozB,SAEVyI,EAAW1H,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACtD2H,EAAW3H,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACtD4H,EAAW5H,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAE3D,OAAO1pB,MAAKinB,KAAKjnB,KAAK8Q,IAAIsgB,EAAUpxB,KAAK8Q,IAAIugB,EAAUC,MAI3DC,YAAa,SAAW5X,EAAM6X,EAAOC,EAAQnb,EAAKob,EAAMC,GACpD,GAAIjI,GAAKn0B,KAAKozB,SAEV7vB,EAAI,EAAI44B,GAASF,EAAQ7X,GACzB3gB,EAAI,EAAI04B,GAASpb,EAAMmb,GAEvB5zB,GAAM2zB,EAAQ7X,IAAW6X,EAAQ7X,GACjCpc,GAAM+Y,EAAMmb,IAAanb,EAAMmb,GAC/BlgC,IAAQogC,EAAMD,IAAWC,EAAMD,GAC/B7I,KAAU8I,EAAMD,GAASC,EAAMD,EAOnC,OALAhI,GAAG,GAAK5wB,EAAI4wB,EAAG,GAAK,EAAIA,EAAG,GAAK7rB,EAAI6rB,EAAG,IAAM,EAC7CA,EAAG,GAAK,EAAIA,EAAG,GAAK1wB,EAAI0wB,EAAG,GAAKnsB,EAAImsB,EAAG,IAAM,EAC7CA,EAAG,GAAK,EAAIA,EAAG,GAAK,EAAIA,EAAG,IAAMn4B,EAAGm4B,EAAG,IAAMb,EAC7Ca,EAAG,GAAK,EAAIA,EAAG,GAAK,EAAIA,EAAG,OAAaA,EAAG,IAAM,EAE1Cn0B,MAGXq8B,gBAAiB,SAAWC,EAAKC,EAAQJ,EAAMC,GAC3C,GAAInM,GAAOkM,EAAO1xB,KAAK+xB,IAAKr9B,EAAOsL,KAAKwmB,SAAgB,GAANqL,IAC9CxM,GAASG,EACTJ,EAAOC,EAAOyM,EACdvM,EAAOC,EAAOsM,CAElB,OAAOv8B,MAAKg8B,YAAanM,EAAMG,EAAMF,EAAMG,EAAMkM,EAAMC,IAI3DK,iBAAkB,SAAWrY,EAAM6X,EAAOlb,EAAKmb,EAAQC,EAAMC,GAEzD,GAAIjI,GAAKn0B,KAAKozB,SACV9B,EAAI,GAAQ2K,EAAQ7X,GACpBsY,EAAI,GAAQ3b,EAAMmb,GAClBjgC,EAAI,GAAQmgC,EAAMD,GAElB54B,GAAM04B,EAAQ7X,GAASkN,EACvB7tB,GAAMsd,EAAMmb,GAAWQ,EACvBh5B,GAAM04B,EAAMD,GAASlgC,CAOzB,OALAk4B,GAAI,GAAM,EAAI7C,EAAM6C,EAAI,GAAM,EAAMA,EAAI,GAAM,EAAMA,EAAI,KAAS5wB,EACjE4wB,EAAI,GAAM,EAAMA,EAAI,GAAM,EAAIuI,EAAMvI,EAAI,GAAM,EAAMA,EAAI,KAAS1wB,EACjE0wB,EAAI,GAAM,EAAMA,EAAI,GAAM,EAAMA,EAAI,OAAal4B,EAAGk4B,EAAI,KAASzwB,EACjEywB,EAAI,GAAM,EAAMA,EAAI,GAAM,EAAMA,EAAI,IAAO,EAAKA,EAAI,IAAO,EAEpDn0B,MAIX28B,QAAU,SAAU5gC,GAChB,GAAIq6B,GAAKr6B,EAAEq3B,SACPe,EAAKn0B,KAAKozB,QAEd,OAAIe,GAAG,IAAMiC,EAAG,IAAMjC,EAAG,IAAMiC,EAAG,IAAMjC,EAAG,IAAMiC,EAAG,IAAMjC,EAAG,KAAOiC,EAAG,KACnEjC,EAAG,IAAMiC,EAAG,IAAMjC,EAAG,IAAMiC,EAAG,IAAMjC,EAAG,IAAMiC,EAAG,IAAMjC,EAAG,KAAOiC,EAAG,KACnEjC,EAAG,IAAMiC,EAAG,IAAMjC,EAAG,IAAMiC,EAAG,IAAMjC,EAAG,KAAOiC,EAAG,KAAOjC,EAAG,KAAOiC,EAAG,KACrEjC,EAAG,IAAMiC,EAAG,IAAMjC,EAAG,IAAMiC,EAAG,IAAMjC,EAAG,KAAOiC,EAAG,KAAOjC,EAAG,KAAOiC,EAAG,KAQ7E5D,MAAO,WACH,GAAI2B,GAAKn0B,KAAKozB,QAEd,OAAO,IAAIj0B,GAAO23B,QAEd3C,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,IACxBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,IACxBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAKA,EAAG,IACzBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAKA,EAAG,MAKjCyI,WAAY,WACR,GAAIzI,GAAKn0B,KAAKozB,QAEd,OAAa,IAATe,EAAG,IAAoB,GAATA,EAAG,IAAoB,GAATA,EAAG,IAAqB,GAAVA,EAAG,KACpC,GAATA,EAAG,IAAoB,GAATA,EAAG,IAAoB,GAATA,EAAG,IAAqB,GAAVA,EAAG,KACpC,GAATA,EAAG,IAAoB,GAATA,EAAG,IAAqB,GAAVA,EAAG,KAAsB,GAAVA,EAAG,KACrC,GAATA,EAAG,IAAoB,GAATA,EAAG,IAAqB,GAAVA,EAAG,KAAsB,GAAVA,EAAG,MAU1Dh1B,EAAO09B,IAAM,SAASC,EAAQC,GAE1B/8B,KAAK88B,OAAqBp3B,SAAXo3B,EACXA,EAAS,GAAI39B,GAAOszB,QAExBzyB,KAAK+8B,UAA2Br3B,SAAdq3B,EACdA,EAAY,GAAI59B,GAAOszB,SAK/BtzB,EAAO09B,IAAI9jB,WAEPta,YAAcU,EAAO09B,IAErB93B,IAAM,SAAS+3B,EAAQC,GAKnB,MAHA/8B,MAAK88B,OAAO9Y,KAAK8Y,GACjB98B,KAAK+8B,UAAU/Y,KAAK+Y,GAEb/8B,MAIXgkB,KAAO,SAASgZ,GAKZ,MAHAh9B,MAAK88B,OAAO9Y,KAAKgZ,EAAIF,QACrB98B,KAAK+8B,UAAU/Y,KAAKgZ,EAAID,WAEjB/8B,MAIXi9B,GAAK,SAAS3kB,EAAG4kB,GAEb,GAAIhjB,GAASgjB,GAAkB,GAAI/9B,GAAOszB,OAE1C,OAAOvY,GAAO8J,KAAKhkB,KAAK+8B,WAAWnK,eAAeta,GAAGvX,IAAIf,KAAK88B,SAIlEK,OAAS,WAEL,GAAInC,GAAK,GAAI77B,GAAOszB,OAEpB,OAAO,UAASna,GAGZ,MAFAtY,MAAK88B,OAAO9Y,KAAKhkB,KAAKi9B,GAAG3kB,EAAG0iB,IAErBh7B,SAKfo9B,oBAAsB,SAASC,EAAOH,GAElC,GAAIhjB,GAASgjB,GAAkB,GAAI/9B,GAAOszB,OAC1CvY,GAAOoY,WAAW+K,EAAOr9B,KAAK88B,OAC9B,IAAIQ,GAAoBpjB,EAAO2Z,IAAI7zB,KAAK+8B,UAGxC,OAAO7iB,GAAO8J,KAAKhkB,KAAK+8B,WAAWnK,eAAe0K,GAAmBv8B,IAAIf,KAAK88B,SAIlFS,gBAAkB,SAASF,GAEvB,GAAIrC,GAAK,GAAI77B,GAAOszB,OAEpB,OAAO,UAAS4K,GACZ,GAAIC,GAAoBtC,EAAG1I,WAAW+K,EAAOr9B,KAAK88B,QAAQjJ,IAAI7zB,KAAK+8B,UAEnE,OADA/B,GAAGhX,KAAKhkB,KAAK+8B,WAAWnK,eAAe0K,GAAmBv8B,IAAIf,KAAK88B,QAC5D9B,EAAGlI,WAAWuK,OAK7BG,uBAAyB,aAIzBC,qBAAuB,SAASC,GAC7B,MAAQ19B,MAAKu9B,gBAAgBG,EAAOr2B,SAAWq2B,EAAOx2B,QAIzDy2B,oBAAsB,SAASC,GAE3B,GAAIC,GAAcD,EAAME,OAAOjK,IAAI7zB,KAAK+8B,UAGxC,OAAoB,KAAhBc,GAGuC,IAAvCD,EAAML,gBAAgBv9B,KAAK88B,SAOnCiB,gBAAkB,SAASH,GAExB,GAAIC,GAAcD,EAAME,OAAOjK,IAAI7zB,KAAK+8B,UACxC,KAAoB,IAAhBc,EAAJ,CAUA,GAAIvlB,KAAOtY,KAAK88B,OAAOjJ,IAAI+J,EAAME,QAAUF,EAAMI,UAAYH,CAE7D,OAAOvlB,GATP,GAA2C,IAAvCslB,EAAML,gBAAgBv9B,KAAK88B,QAC3B,MAAO,KAYdmB,eAAiB,SAASL,EAAOV,GAE9B,GAAI5kB,GAAItY,KAAK+9B,gBAAgBH,EAE7B,IAAUl4B,SAAN4S,EAGJ,MAAOtY,MAAKi9B,GAAG3kB,EAAG4kB,IAIrB/J,aAAe,SAAS+K,GAMrB,MAJAl+B,MAAK+8B,UAAUh8B,IAAIf,KAAK88B,QAAQ3J,aAAa+K,GAC7Cl+B,KAAK88B,OAAO3J,aAAa+K,GACzBl+B,KAAK+8B,UAAUpK,IAAI3yB,KAAK88B,QAEjB98B,MAIVm+B,OAAS,SAASnB,GAEf,MAAOA,GAAIF,OAAOqB,OAAOn+B,KAAK88B,SAAWE,EAAID,UAAUoB,OAAOn+B,KAAK+8B,YAItEvK,MAAQ,WAEL,OAAO,GAAIrzB,GAAO09B,KAAM7Y,KAAKhkB,QAYpCb,EAAOi/B,OAAS,SAAS/2B,EAAQH,GAE7BlH,KAAKqH,OAAqB3B,SAAX2B,EACXA,EAAS,GAAIlI,GAAOszB,QAExBzyB,KAAKkH,OAAqBxB,SAAXwB,EACXA,EAAS,GAIjB/H,EAAOi/B,OAAOrlB,WAEVta,YAAcU,EAAOi/B,OAErBr5B,IAAM,SAASsC,EAAQH,GAKnB,MAHAlH,MAAKqH,OAAO2c,KAAK3c,GACjBrH,KAAKkH,OAASA,EAEPlH,MAIXgkB,KAAO,SAAS0Z,GAKZ,MAHA19B,MAAKqH,OAAO2c,KAAK0Z,EAAOr2B,QACxBrH,KAAKkH,OAASw2B,EAAOx2B,OAEdlH,MAIXmzB,aAAe,SAASmD,GAKpB,MAHAt2B,MAAKqH,OAAO8rB,aAAamD,GACzBt2B,KAAKkH,OAASlH,KAAKkH,OAASovB,EAAOsF,oBAE5B57B,MAIXq+B,UAAY,SAAS30B,GAIjB,MAFA1J,MAAKqH,OAAOtG,IAAI2I,GAET1J,MAIXm+B,OAAS,SAAST,GAEd,MAAOA,GAAOr2B,OAAO82B,OAAOn+B,KAAKqH,SAAYq2B,EAAOx2B,SAAWlH,KAAKkH,QAIxEsrB,MAAQ,WAEJ,OAAO,GAAIrzB,GAAOi/B,QAASpa,KAAKhkB,QASxCb,EAAOm/B,SAAW,SAASC,EAAItjB,EAAI/T,GAE/BlH,KAAKu+B,GAAa74B,SAAP64B,EACPA,EAAK,GAAIp/B,GAAOszB,QAEpBzyB,KAAKib,GAAavV,SAAPuV,EACPA,EAAK,GAAI9b,GAAOszB,QAEpBzyB,KAAK+8B,WAAY,GAAI59B,GAAOszB,SAAUH,WAAWtyB,KAAKib,GAAIjb,KAAKu+B,IAAI9M,YAEnEzxB,KAAKkH,OAAqBxB,SAAXwB,EACXA,EAAS,GAIjB/H,EAAOm/B,SAASvlB,WAEZta,YAAcU,EAAOm/B,SAErBta,KAAO,SAASwa,GAOZ,MALAx+B,MAAKu+B,GAAGva,KAAKwa,EAASD,IACtBv+B,KAAKib,GAAG+I,KAAKwa,EAASvjB,IACtBjb,KAAK+8B,UAAU/Y,KAAKwa,EAASzB,WAC7B/8B,KAAKkH,OAASs3B,EAASt3B,OAEhBlH,MAIX8zB,SAAW,WAEP,GAAI2K,GAAS,GAAIt/B,GAAOszB,OAExB,OAAO,YACH,MAAOgM,GAAOnM,WAAWtyB,KAAKib,GAAIjb,KAAKu+B,IAAIzK,eAKnDX,aAAe,SAASmD,GAQpB,MANAt2B,MAAK+8B,UAAUh8B,IAAIf,KAAKu+B,IAAIpL,aAAamD,GACzCt2B,KAAKu+B,GAAGpL,aAAamD,GACrBt2B,KAAKib,GAAGkY,aAAamD,GACrBt2B,KAAK+8B,UAAUpK,IAAI3yB,KAAKu+B,IAAI9M,YAC5BzxB,KAAKkH,OAASlH,KAAKkH,OAASovB,EAAOsF,oBAE5B57B,OASfb,EAAOu/B,SAAW,SAASp2B,EAAGN,EAAGhM,GAE7BgE,KAAKsI,EAAW5C,SAAN4C,EACNA,EAAI,GAAInJ,GAAOszB,QAEnBzyB,KAAKgI,EAAWtC,SAANsC,EACNA,EAAI,GAAI7I,GAAOszB,QAEnBzyB,KAAKhE,EAAW0J,SAAN1J,EACNA,EAAI,GAAImD,GAAOszB,SAIvBtzB,EAAOu/B,SAAS3lB,WAEZta,YAAcU,EAAOu/B,SAErB1a,KAAO,SAAS2a,GAMZ,MAJA3+B,MAAKsI,EAAE0b,KAAK2a,EAASr2B,GACrBtI,KAAKgI,EAAEgc,KAAK2a,EAAS32B,GACrBhI,KAAKhE,EAAEgoB,KAAK2a,EAAS3iC,GAEdgE,MAIXmzB,aAAe,SAASmD,GAMpB,MAJAt2B,MAAKsI,EAAE6qB,aAAamD,GACpBt2B,KAAKgI,EAAEmrB,aAAamD,GACpBt2B,KAAKhE,EAAEm3B,aAAamD,GAEbt2B,MAIX4+B,UAAY,WAER,GAAI5D,GAAK,GAAI77B,GAAOszB,OAEpB,OAAO,YAEH,GAAIoM,GAAO7+B,KAAKsI,EAAEkqB,OAOlB,OANAqM,GAAKlM,IAAI3yB,KAAKgI,GACdgzB,EAAG1I,WAAWtyB,KAAKhE,EAAGgE,KAAKgI,GAE3B62B,EAAK9K,MAAMiH,GACX6D,EAAKpN,YAEEoN,OAgBnB1/B,EAAO2/B,gBAAkB,WAErB,GAAIC,KAEJ/+B,MAAKyX,iBAAmB,SAAS3T,EAAMk7B,GACXt5B,SAApBq5B,EAAUj7B,KACVi7B,EAAUj7B,OAEVi7B,EAAUj7B,GAAMrD,QAAQu+B,SACxBD,EAAUj7B,GAAM/D,KAAKi/B,IAG7Bh/B,KAAKi/B,oBAAsB,SAASn7B,EAAMk7B,GAEtC,GAAIE,GAAQH,EAAUj7B,GAAMrD,QAAQu+B,EAEhCE,SACAH,EAAUj7B,GAAM8E,OAAOs2B,EAAO,IAItCl/B,KAAKm/B,cAAgB,SAAS9+B,GAE1B,GAAI++B,GAAgBL,EAAU1+B,EAAMyD,KAEpC,IAAsB4B,SAAlB05B,EAA6B,CAC7B/+B,EAAMs4B,OAAS34B,IAEf,KAAK,GAAI8C,GAAI,EAAG6E,EAAIy3B,EAAc54B,OAAQ1D,EAAI6E,EAAG7E,IAC7Cs8B,EAAct8B,GAAGhH,KAAKkE,KAAMK,MAQ5ClB,EAAOkgC,MAAQ,SAAUl8B,GAErB,MAAK6V,WAAUxS,OAAS,GAChBxG,KAAKuY,EAAIS,UAAU,IAAM;AACzBhZ,KAAKs/B,EAAItmB,UAAU,IAAM,EACzBhZ,KAAKgI,EAAIgR,UAAU,IAAM,EAElBhZ,MAGRA,KAAK+E,IAAI5B,IAIpBhE,EAAOkgC,MAAMtmB,WAETta,YAAaU,EAAOkgC,MAEpB9mB,EAAG,EAAK+mB,EAAG,EAAKt3B,EAAG,EAEnBjD,IAAM,SAASkqB,GAEP,MAAIA,aAAe9vB,GAAOkgC,MACfpQ,EAAIuD,aAES,gBAARvD,GACZjvB,KAAKu/B,OAAOtQ,GAEQ,YAAf,mBAAOA,GAAP,YAAA3wB,EAAO2wB,KAAoB,KAAOA,IAAO,KAAOA,IAAO,KAAOA,KACnEjvB,KAAKuY,EAAI0W,EAAI1W,EACbvY,KAAKs/B,EAAIrQ,EAAIqQ,EACbt/B,KAAKgI,EAAIinB,EAAIjnB,KAIzBu3B,OAAQ,SAASC,GAQT,MANAA,GAAM/0B,KAAKC,MAAM80B,GAEjBx/B,KAAKuY,GAAKinB,GAAO,GAAK,KAAO,IAC7Bx/B,KAAKs/B,GAAKE,GAAO,EAAI,KAAO,IAC5Bx/B,KAAKgI,GAAW,IAANw3B,GAAa,IAEhBx/B,MAGfy/B,OAAQ,WACJ,GAAIC,GAAIj1B,KAAKoD,MAAa,IAAP7N,KAAKuY,GACpBonB,EAAIl1B,KAAKoD,MAAa,IAAP7N,KAAKs/B,GACpBM,EAAIn1B,KAAKoD,MAAa,IAAP7N,KAAKgI,EACxB,OAAO03B,IAAG,GAAKC,GAAK,EAAIC,GAG5BpN,MAAQ,WACA,MAAO,IAAIrzB,GAAOkgC,MAAMr/B,KAAKuY,EAAGvY,KAAKs/B,EAAGt/B,KAAKgI,IAGrDgc,KAAO,SAAS7gB,GAKZ,MAJAnD,MAAKuY,EAAIpV,EAAMoV,EACfvY,KAAKs/B,EAAIn8B,EAAMm8B,EACft/B,KAAKgI,EAAI7E,EAAM6E,EAERhI,MAIX6/B,OAAS,WACL,GAAIzc,KAKJ,OAJAA,GAAI7K,EAAI9N,KAAKoD,MAAa,IAAP7N,KAAKuY,GACxB6K,EAAIkc,EAAI70B,KAAKoD,MAAa,IAAP7N,KAAKs/B,GACxBlc,EAAIpb,EAAIyC,KAAKoD,MAAa,IAAP7N,KAAKgI,GACxBob,EAAI9a,EAAI,EACD8a,IAOfjkB,EAAO2gC,SAAW,WAEd9/B,KAAKpE,GAAKuD,EAAO4gC,kBAEjB//B,KAAKwC,KAAO,GAEZxC,KAAKggC,OAASt6B,OACd1F,KAAKigC,YAELjgC,KAAKkB,SAAW,GAAI/B,GAAOszB,QAC3BzyB,KAAKu7B,SAAW,GAAIp8B,GAAOszB,QAC3BzyB,KAAKs2B,OAAS,GAAIn3B,GAAO23B,QACzB92B,KAAKkgC,YAAc,GAAI/gC,GAAO23B,QAC9B92B,KAAKmgC,WAAa,GAAIhhC,GAAOkyB,WAC7BrxB,KAAKogC,WAAa,MAElBpgC,KAAK44B,GAAK,GAAIz5B,GAAOszB,QAAQ,EAAG,EAAG,GACnCzyB,KAAKw7B,MAAQ,GAAIr8B,GAAOszB,QAAQ,EAAG,EAAG,GAEtCzyB,KAAKqgC,kBAAmB,EACxBrgC,KAAKsgC,wBAAyB,EAC9BtgC,KAAKugC,oBAAqB,EAC1BvgC,KAAKwgC,eAAgB,EAErBxgC,KAAKygC,SAAU,GAInBthC,EAAO2gC,SAAS/mB,WAEZta,YAAcU,EAAO2gC,SAErBrH,OAAS,SAASgG,GAEdz+B,KAAKs2B,OAAOmC,OAAOgG,EAAQz+B,KAAKkB,SAAUlB,KAAK44B,IAE3C54B,KAAKugC,qBAEDvgC,KAAKwgC,iBAAkB,EACvBxgC,KAAKmgC,WAAWnc,KAAKhkB,KAAKs2B,OAAOoF,YAAY,IAE7C17B,KAAKu7B,SAASrH,2BAA2Bl0B,KAAKs2B,OAAQt2B,KAAKogC,cAKvEr/B,IAAM,SAAS2/B,GACX,GAAIA,IAAW1gC,KAEX,WADA2tB,SAAQpW,MAAM,sCAIlBmpB,GAAOV,OAAShgC,KAChBA,KAAKigC,SAASlgC,KAAK2gC,EAMnB,KAFA,GAAIC,GAAQ3gC,KAEY0F,SAAjBi7B,EAAMX,QACTW,EAAQA,EAAMX,MAEJt6B,UAAVi7B,GAAuBA,YAAiBxhC,GAAOyhC,OAC/CD,EAAME,YAAYH,IAI1BI,OAAS,SAASJ,GAEd,GAAIxB,GAAQl/B,KAAKigC,SAASx/B,QAAQigC,EAElC,IAAIxB,OAAc,CAEdwB,EAAOV,OAASt6B,OAChB1F,KAAKigC,SAASr3B,OAAOs2B,EAAO,EAM5B,KAFA,GAAIyB,GAAQ3gC,KAEY0F,SAAjBi7B,EAAMX,QACTW,EAAQA,EAAMX,MAEJt6B,UAAVi7B,GAAuBA,YAAiBxhC,GAAOyhC,OAC/CD,EAAMI,eAAeL,KAKjCM,aAAe,WAEXhhC,KAAKs2B,OAAO2E,YAAYj7B,KAAKkB,UAEzBlB,KAAKwgC,iBAAkB,EACvBxgC,KAAKs2B,OAAOiB,qBAAqBv3B,KAAKu7B,SAAUv7B,KAAKogC,YAErDpgC,KAAKs2B,OAAOsB,0BAA0B53B,KAAKmgC,YAG1B,IAAjBngC,KAAKw7B,MAAMj4B,GAA4B,IAAjBvD,KAAKw7B,MAAM/3B,GAA4B,IAAjBzD,KAAKw7B,MAAM93B,GACvD1D,KAAKs2B,OAAOkF,MAAMx7B,KAAKw7B,OAE3Bx7B,KAAKsgC,wBAAyB,GAIlCW,kBAAoB,SAASC,GAErBlhC,KAAKqgC,oBAAqB,GAC1BrgC,KAAKghC,eAELhhC,KAAKsgC,0BAA2B,GAAQY,KAAU,IAE9Bx7B,SAAhB1F,KAAKggC,OACLhgC,KAAKkgC,YAAYlc,KAAKhkB,KAAKs2B,QAE3Bt2B,KAAKkgC,YAAYrH,iBAAiB74B,KAAKggC,OAAOE,YAAalgC,KAAKs2B,SAIxEt2B,KAAKsgC,wBAAyB,CAG9B,KAAK,GAAIx9B,GAAI,EAAGA,EAAI9C,KAAKigC,SAASz5B,OAAQ1D,IACtC9C,KAAKigC,SAASn9B,GAAGm+B,mBAAkB,IAI3CzO,MAAQ,SAASkO,GAEEh7B,SAAXg7B,IACAA,EAAS,GAAIvhC,GAAO2gC,UAExBY,EAAOl+B,KAAOxC,KAAKwC,KAEnBk+B,EAAO9H,GAAG5U,KAAKhkB,KAAK44B,IACpB8H,EAAOx/B,SAAS8iB,KAAKhkB,KAAKkB,UAC1Bw/B,EAAOnF,SAASvX,KAAKhkB,KAAKu7B,UAC1BmF,EAAON,WAAapgC,KAAKogC,WACzBM,EAAOlF,MAAMxX,KAAKhkB,KAAKw7B,OAEvBkF,EAAOH,mBAAqBvgC,KAAKugC,mBACjCG,EAAOpK,OAAOtS,KAAKhkB,KAAKs2B,QACxBoK,EAAOR,YAAYlc,KAAKhkB,KAAKkgC,aAC7BQ,EAAOP,WAAWnc,KAAKhkB,KAAKmgC,YAC5BO,EAAOL,iBAAmBrgC,KAAKqgC,iBAC/BK,EAAOJ,uBAAyBtgC,KAAKsgC,uBAErCI,EAAOF,cAAgBxgC,KAAKwgC,cAE5BE,EAAOD,QAAUzgC,KAAKygC,OAEtB,KAAK,GAAI39B,GAAI,EAAGA,EAAI9C,KAAKigC,SAASz5B,OAAQ1D,IAAK,CAC3C,GAAIq+B,GAAQnhC,KAAKigC,SAASn9B,EAC1B49B,GAAO3/B,IAAIogC,EAAM3O,SAGrB,MAAOkO,IAIXU,WAAY,SAASnS,GACjBjvB,KAAKygC,QAAUxR,CACf,KAAK,GAAInsB,GAAI,EAAGA,EAAI9C,KAAKigC,SAASz5B,OAAQ1D,IAAK,CAC3C,GAAIq+B,GAAQnhC,KAAKigC,SAASn9B,EAC1Bq+B,GAAMC,WAAWnS,MAK7B9vB,EAAO4gC,gBAAkB,EAIzB5gC,EAAOkiC,SAAY,WAEf,GAAIC,GAAa,MAIbC,EAAgB,SAAS3lC,GACzBoE,KAAKpE,GAAKA,GAAM,EAEhBoE,KAAKwhC,YAAc,KACnBxhC,KAAKyhC,WAAa,KAClBzhC,KAAK0hC,YAAc,KACnB1hC,KAAK2hC,UAAY,KACjB3hC,KAAK4hC,YAAc,KAEnB5hC,KAAK6hC,UAAY,KACjB7hC,KAAK8hC,SAAW,EAChB9hC,KAAK+hC,QAAU,EACf/hC,KAAKgiC,QAAU,EAInBT,GAAcxoB,UAAUkpB,eAAiB,WACrC,MAAOjiC,MAAK8hC,UAGhBP,EAAcxoB,UAAUmpB,YAAc,WAClC,MAAOliC,MAAKwhC,aAIhBD,EAAcxoB,UAAUopB,YAAc,WAKlC,IAAK,GAFDz4B,GAAQnG,EAAGE,EAAGC,EADd0+B,EAAW,GAAIjjC,GAAOszB,QAGjB3vB,EAAI,EAAGA,EAAI9C,KAAK8hC,WAAYh/B,EACjC4G,EAAW,EAAF5G,EAETS,EAAIvD,KAAKwhC,YAAY93B,GAASjG,EAAIzD,KAAKwhC,YAAY93B,EAAO,GAAIhG,EAAI1D,KAAKwhC,YAAY93B,EAAO,GAE1F04B,EAAS7+B,GAAKA,EAAG6+B,EAAS3+B,GAAKA,EAAG2+B,EAAS1+B,GAAKA,CAMpD,OAFA0+B,GAASvP,aAAa7yB,KAAK8hC,UAEpBM,GAIXb,EAAcxoB,UAAUspB,WAAa,WAEjC,GAAIC,GAAQtiC,KAAK2hC,UACbY,EAAQviC,KAAKwhC,YACbgB,EAAQxiC,KAAK0hC,WAEjB,IAAM1hC,KAAK8hC,UAAc9hC,KAAK+hC,QAQ9B,IAAK,GAJDz5B,GAAGN,EAAGhM,EAEVymC,EAAIC,EAAIC,EAAI9D,EAEH/7B,EAAI,EAAGA,EAAIw/B,EAAM97B,OAAS,IAAK1D,EAEpCwF,EAAmB,EAAfg6B,EAAU,EAAJx/B,GACVkF,EAAuB,EAAnBs6B,EAAU,EAAJx/B,EAAQ,GAClB9G,EAAuB,EAAnBsmC,EAAU,EAAJx/B,EAAQ,GAElB2/B,EAAK,GAAItjC,GAAOszB,QAAQ8P,EAAMj6B,GAAIi6B,EAAMj6B,EAAE,GAAIi6B,EAAMj6B,EAAE,IACtDo6B,EAAK,GAAIvjC,GAAOszB,QAAQ8P,EAAMv6B,GAAIu6B,EAAMv6B,EAAE,GAAIu6B,EAAMv6B,EAAE,IACtD26B,EAAK,GAAIxjC,GAAOszB,QAAQ8P,EAAMvmC,GAAIumC,EAAMvmC,EAAE,GAAIumC,EAAMvmC,EAAE,IAEtDymC,EAAGnQ,WAAWmQ,EAAIC,GAClBC,EAAGrQ,WAAWqQ,EAAID,GAClBC,EAAG5O,MAAM0O,GAGT5D,EAAO8D,EACP9D,EAAKpN,YAEL+Q,EAAMl6B,IAAMu2B,EAAKt7B,EAAGi/B,EAAMx6B,IAAM62B,EAAKt7B,EAAGi/B,EAAMxmC,IAAM6iC,EAAKt7B,EACzDi/B,EAAMl6B,EAAI,IAAMu2B,EAAKp7B,EAAG++B,EAAMx6B,EAAI,IAAM62B,EAAKp7B,EAAG++B,EAAMxmC,EAAI,IAAM6iC,EAAKp7B,EACrE++B,EAAMl6B,EAAI,IAAMu2B,EAAKn7B,EAAG8+B,EAAMx6B,EAAI,IAAM62B,EAAKn7B,EAAG8+B,EAAMxmC,EAAI,IAAM6iC,EAAKn7B,GAW7E69B,EAAcxoB,UAAU6pB,eAAiB,WAErC,GAAM5iC,KAAK+hC,QAAX,CAGA,GAAIc,GAAU7iC,KAAK2hC,UAAWmB,EAAU9iC,KAAK6hC,UAAY,GAAIhpB,aAAyB,EAAb7Y,KAAK+hC,QAC9E/hC,MAAKgiC,QAAuB,EAAbhiC,KAAK+hC,OAGpB,KAAK,GAFDgB,GAEKjgC,EAAI,EAAGA,EAAI9C,KAAK+hC,QAAU,IAAKj/B,EAAG,CAEvCigC,EAAe,EAAFjgC,CACb,IAAIkgC,GAAwB,EAAXD,EACbz6B,EAAIu6B,EAAQE,GAAa/6B,EAAI66B,EAAQE,EAAW,GAAI/mC,EAAI6mC,EAAQE,EAAW,EAE/ED,GAAQE,GAAc16B,EAAGw6B,EAAQE,EAAW,GAAKh7B,EACjD86B,EAAQE,EAAW,GAAK16B,EAAGw6B,EAAQE,EAAW,GAAKhnC,EACnD8mC,EAAQE,EAAW,GAAKh7B,EAAG86B,EAAQE,EAAW,GAAKhnC,KAK3DulC,EAAcxoB,UAAUkqB,qBAAuB,SAASzU,EAAM0U,GAE1D1U,EAAQA,KAAS,CAEjB,IAAI2U,GAAYnjC,KAAKwhC,YACjB4B,EAAWpjC,KAAKyhC,WAChB4B,EAAYrjC,KAAK0hC,YACjBmB,EAAU7iC,KAAK2hC,UACfmB,EAAU9iC,KAAK6hC,UACfyB,EAAYtjC,KAAK4hC,WAGrB5hC,MAAKwhC,YAAc2B,EAAUzzB,SAAS,EAAgB,EAAd1P,KAAK8hC,UAC7C9hC,KAAKyhC,WAAa2B,EAAS1zB,SAAS,EAAgB,EAAd1P,KAAK8hC,UAEvCtT,GACAxuB,KAAK0hC,YAAc2B,EAAU3zB,SAAS,EAAgB,EAAd1P,KAAK8hC,UAC7C9hC,KAAK2hC,UAAYkB,EAAQnzB,SAAS,EAAE1P,KAAK+hC,SAEtC/hC,KAAKgiC,QAAU,EACdhiC,KAAK6hC,UAAYiB,EAAQpzB,SAAS,EAAE1P,KAAKgiC,SAEzChiC,KAAK6hC,UAAY,GAAIhpB,aAAY,KAIrC7Y,KAAK0hC,YAAc,GAAIt1B,cAAa,GACpCpM,KAAK2hC,UAAY,GAAI9oB,aAAY,GACjC7Y,KAAK6hC,UAAY,GAAIhpB,aAAY,IAEjCyqB,IACAtjC,KAAK4hC,YAAc0B,EAAU5zB,SAAS,EAAG1P,KAAK8hC,WAG/CoB,IAEIljC,KAAK0hC,cAAa1hC,KAAK0hC,YAAc,GAAIt1B,cAAapM,KAAK0hC,cAC3D1hC,KAAK2hC,YAAW3hC,KAAK2hC,UAAY,GAAI9oB,aAAY7Y,KAAK2hC,YACtD3hC,KAAK6hC,YAAW7hC,KAAK6hC,UAAY,GAAIhpB,aAAY7Y,KAAK6hC,YACtD7hC,KAAKwhC,cAAaxhC,KAAKwhC,YAAc,GAAIp1B,cAAapM,KAAKwhC,cAC3DxhC,KAAKyhC,aAAYzhC,KAAKyhC,WAAa,GAAIr1B,cAAapM,KAAKyhC,aACzDzhC,KAAK4hC,cAAa5hC,KAAK4hC,YAAc,GAAIx1B,cAAapM,KAAK4hC,eAElE5hC,KAAKujC,iBAAkB,EAI3B,IAAIC,GAAW,SAASC,GACpB,GAAIrgB,GAAM,GAAIme,GAAckC,EAAI/U,eAAeloB,OAsB/C,OArBAi9B,GAAI/U,eAAe3uB,KAAKqjB,GACxBqgB,EAAIC,OAASD,EAAI/U,eAAeloB,OAEhC4c,EAAIoe,YAAc,GAAIp1B,cAAwB,EAAXk1B,GACnCle,EAAIqe,WAAa,GAAIr1B,cAAwB,EAAXk1B,GAM9BmC,EAAIjV,OACJpL,EAAIse,YAAc,GAAIt1B,cAAwB,EAAXk1B,GACnCle,EAAIue,UAAY,GAAI9oB,aAAuB,EAAXyoB,GAChCle,EAAIye,UAAY,GAAIhpB,aAAuB,EAAXyoB,IAEhCmC,EAAIE,QACJvgB,EAAIwe,YAAc,GAAIx1B,cAAak1B,IAEvCle,EAAIwgB,UAAYH,EAAI/5B,OAGb0Z,GAGPie,EAAW,SAAS7S,EAAMmV,EAAMj6B,GAEhCvK,EAAO2/B,gBAAgBhjC,KAAKkE,MAE5BA,KAAKpE,GAAKuD,EAAO0kC,kBAEjB7jC,KAAKwC,KAAO,GAEZxC,KAAK8jC,aAAc,EAEnB9jC,KAAK+jC,SAAU,EACf/jC,KAAKwuB,KAAQA,KAAS,EACtBxuB,KAAK2jC,MAAQA,IAAS,EACtB3jC,KAAK0J,OAASA,IAAU,EAGxB1J,KAAKgkC,oBAAqB,EAC1BhkC,KAAKikC,oBAAqB,EAC1BjkC,KAAKkkC,mBAAoB,EACzBlkC,KAAKmkC,kBAAmB,EAExBnkC,KAAKokC,mBAAoB,EAEzBpkC,KAAK0uB,kBACL1uB,KAAK0jC,OAAS,EA2ElB,OAvEArC,GAAStoB,WAELta,YAAc4iC,EAIdgD,eAAiB,SAASC,GAEtBA,EAAcA,GAAe,CAE7B,IAAIC,GAAWvkC,KAAK0jC,OAAS,EAAI1jC,KAAK0uB,eAAgB1uB,KAAK0jC,OAAS,GAAM,IAK1E,SAHKa,GAAYA,EAASzC,SAAWwC,EAAcC,EAAS/C,YAAYh7B,OAAO,KAC3E+9B,EAAWf,EAASxjC,OAEjBukC,GAIXC,YAAc,WACV,MAAOhB,GAASxjC,OAGpBykC,aAAe,SAASC,GAEpBA,EAAQA,IAAS,CAEjB,KAAK,GAAIpF,GAAI,EAAGA,EAAIt/B,KAAK0jC,OAAQpE,IAAK,CAElC,GAAIqF,GAAW3kC,KAAK0uB,eAAe4Q,EAEnCqF,GAAStC,WAAWqC,KAM5BE,eAAiB,WACb,IAAK,GAAItF,GAAI,EAAGA,EAAIt/B,KAAK0jC,OAAQpE,IAAK,CAClC,GAAIqF,GAAW3kC,KAAK0uB,eAAe4Q,EAEnCqF,GAAS/B,mBAMjBiC,gBAAkB,WAEd,IAAK,GAAIvF,GAAI,EAAGA,EAAIt/B,KAAK0jC,OAAQpE,IAAK,CAElC,GAAIwF,GAAQ9kC,KAAK0uB,eAAe4Q,EAE5BwF,GAAMvB,mBAAoB,GAM9BuB,EAAM7B,qBAAqBjjC,KAAKwuB,MAAM,KAM9CuW,QAAU,WACN/kC,KAAKm/B,eAAgBr7B,KAAO,cAK7Bu9B,KAIXnlC,OAAOC,eAAegD,EAAOkiC,SAAStoB,UAAW,YAG7C9X,IAAM,WAEF,IAAK,GADD6gC,GAAW,EACNxC,EAAI,EAAGA,EAAIt/B,KAAK0jC,OAAQpE,IAC7BwC,GAAY9hC,KAAK0uB,eAAe4Q,GAAGwC,QAEvC,OAAOA,MAKf3iC,EAAO0kC,gBAAkB,EAKzB1kC,EAAO6lC,UAAa,WAEhB,GAAIA,GAAY,SAASlI,EAAQC,EAAWX,EAAKD,GAE7Cn8B,KAAKg9B,IAAM,GAAI79B,GAAO09B,IAAIC,EAAQC,GAE9B/8B,KAAKg9B,IAAID,UAAUjJ,WAAa,GAChC9zB,KAAKg9B,IAAID,UAAUtL,YAEvBzxB,KAAKm8B,KAAOA,GAAQ,EACpBn8B,KAAKo8B,IAAMA,GAAO6I,KAIlBvH,EAAS,GAAIv+B,GAAOi/B,OACpBI,EAAW,GAAIr/B,GAAOm/B,SACtBK,EAAW,GAAIx/B,GAAOu/B,SACtBwG,EAAM,GAAI/lC,GAAOszB,QACjBuI,EAAK,GAAI77B,GAAOszB,QAChB0S,EAAK,GAAIhmC,GAAOszB,QAChB2S,EAAK,GAAIjmC,GAAOszB,QAIhB4S,GAFW,GAAIlmC,GAAO09B,IACL,GAAI19B,GAAOszB,QACX,GAAItzB,GAAOszB,SAI5B6S,GAFgB,GAAInmC,GAAO23B,QAEhB,SAASxuB,EAAGN,GACvB,MAAOM,GAAEi9B,SAAWv9B,EAAEu9B,WAItBvU,EAAQ,SAASztB,GACjB,MAAOkH,MAAK6d,IAAI7d,KAAK8Q,IAAIhY,MAAQ,IAIjCiiC,EAAkB,SAASV,EAAO79B,EAAWw+B,EAAWC,GAIxD,GAFAL,EAAepR,sBAAsB6Q,EAAM5E,aAEPx6B,SAAhCuB,EAAU0+B,kBACV,MAAOD,EACX,IAAIC,GAAoB1+B,EAAU0+B,kBAC9BC,EAAYH,EAAUI,aAC1BD,IAAad,EAAM5E,YAAYtE,mBAC/B,IAAIkK,GAAcF,EAAUA,CAG5B,IAAiClgC,SAA7BuB,EAAU8+B,gBAAgC9+B,EAAU8+B,yBAA0B5mC,GAAOi/B,SACrFV,EAAO1Z,KAAK/c,EAAU8+B,gBACtBrI,EAAOvK,aAAa2R,EAAM5E,cACrBuF,EAAUzI,IAAIS,qBAAqBC,IAC5C,MAAOgI,EAMP,IAAI5iC,GAAGqK,EACH0xB,EAAMmH,EAAUC,EAASC,EACzBX,EAAUY,EAAeC,EAAOC,EAChC7tB,EAAGF,EAAGguB,EAAKC,CAEf,KAAKzjC,EAAI,EAAGqK,EAAKw4B,EAAkBhH,SAASn4B,OAAQ1D,EAAIqK,EAAIrK,IAExD,GAAI6iC,EAAkBhH,SAAS77B,YAAc3D,GAAOu/B,SAAU,CAU1D,GARAC,EAAS3a,KAAK2hB,EAAkBhH,SAAS77B,IACzC67B,EAASxL,aAAa2R,EAAM5E,aAE5BrB,EAAOF,EAASC,YAEhBoH,EAAWP,EAAUzI,IAAID,UAAUlJ,IAAIgL,GAGnCmH,GAAY,EACZ,QAMJ,IAJAd,EAAI5S,WAAWqM,EAASr2B,EAAGm9B,EAAUzI,IAAIF,QAEzCyI,EAAY1G,EAAKhL,IAAIqR,GAAQc,EAEzBT,EAAW,EACX,QAGJvK,GAAGhX,KAAKyhB,EAAUzI,IAAID,WAAWnK,eAAe2S,GAAUxkC,IAAI0kC,EAAUzI,IAAIF,QAC5E9B,EAAGrI,IAAIgM,EAASr2B,GAEhB68B,EAAGnhB,KAAK2a,EAAS32B,GAAG2qB,IAAIgM,EAASr2B,GACjC88B,EAAGphB,KAAK2a,EAAS3iC,GAAG22B,IAAIgM,EAASr2B,EACjC,IAAIk+B,GAAUrB,EAAGtR,IAAIuR,GACjBqB,EAAOtB,EAAGrR,WACV4S,EAAOtB,EAAGtR,UAMd,IAFAxb,GAAMmuB,EAAKzL,EAAGnH,IAAIuR,GAAMoB,EAAQxL,EAAGnH,IAAIsR,KAAUsB,EAAKC,EAAOF,EAAQA,GAEjEluB,EAAI,GAAKA,EAAI,EACb,QAIJ,IAFAE,GAAMwiB,EAAGnH,IAAIsR,GAAM7sB,EAAEkuB,GAAYC,EAE3BjuB,EAAI,GAAKA,EAAI,GAAMA,EAAIF,EAAI,EAC7B,QAGAotB,GAAW3lC,MAAMkH,UAAYA,EACZs+B,SAAWA,IAKxC,IAAKziC,EAAI,EAAGqK,EAAKw4B,EAAkBnH,SAASh4B,OAAQ1D,EAAIqK,EAAIrK,IAExD,GAAI6iC,EAAkBnH,SAAS17B,YAAc3D,GAAOm/B,SAAS,CAczD,GAZAE,EAASxa,KAAK2hB,EAAkBnH,SAAS17B,IACzC07B,EAASrL,aAAa2R,EAAM5E,aAE5BgF,EAAI5S,WAAWkM,EAASD,GAAIkH,EAAUzI,IAAIF,QAE1CmJ,EAAUf,EAAIrR,IAAI2K,EAASzB,WAC3BmJ,EAAUhB,EAAIrR,IAAI4R,EAAUzI,IAAID,WAEhCiJ,EAAWhV,EAAMyU,EAAUzI,IAAID,UAAUlJ,IAAI2K,EAASzB,YAEtDqJ,EAAQ,EAAIJ,EAASA,EAEP,IAAVI,EACA,QAEJE,IAAON,EAASE,EAAUD,GAAWG,EACrCG,GAAOL,EAAUF,EAASC,GAAWG,EAErCpL,EAAGhX,KAAKwa,EAASzB,WAAWnK,eAAe0T,GAAKvlC,IAAIy9B,EAASD,IAC7D4G,EAAGnhB,KAAKyhB,EAAUzI,IAAID,WAAWnK,eAAe2T,GAAKxlC,IAAI0kC,EAAUzI,IAAIF,QAEvEqJ,EAAgBf,EAAG9S,WAAW0I,EAAImK,GAAIrR,UACtC,IAAI6S,GAAWnI,EAASt3B,OAAOs3B,EAASt3B,MAOxC,IAAIi/B,GAAiBQ,EAAS,CAkB1B,GAfAN,GAAgBL,EAASC,EAAUC,IAAUF,EAASC,EAAUC,GACxDE,GAAOlB,EAAIpR,WAAamS,EAAQA,EAAUU,GAI9CruB,EAAIitB,EADJc,GAAgB,EACD57B,KAAKinB,KAAKyU,IAEPD,EAAUF,EAASC,EAAWx7B,KAAKinB,KAAK2U,IAAkBD,EAIhF5tB,EAAIwtB,EAAS1tB,EAAI2tB,EAIbztB,EAAI,GAAKA,EAAEA,EAAIgmB,EAAS1K,YAAcxb,EAAI,EAC1C,QAGAotB,GAAW3lC,MAAMkH,UAAYA,EACZs+B,SAAWA,KAS5C,IAAKziC,EAAI,EAAGqK,EAAKw4B,EAAkBiB,KAAKpgC,OAAQ1D,EAAIqK,EAAIrK,GAAK,EAAG,CAE5Dk4B,EAAGhX,KAAK2hB,EAAkBiB,KAAK9jC,IAC/Bk4B,EAAG7H,aAAa2R,EAAM5E,aACtBiF,EAAGnhB,KAAK2hB,EAAkBiB,KAAK9jC,EAAE,IACjCqiC,EAAGhS,aAAa2R,EAAM5E,aAEtBkF,EAAG9S,WAAW6S,EAAInK,EAClB,IAAI6L,GAAezB,EAAGtR,UACtBsR,GAAG3T,YAEHyT,EAAI5S,WAAW0I,EAAIyK,EAAUzI,IAAIF,OAEjC,IAAIgK,GAAW5B,EAAIrR,IAAIuR,EACvBc,GAAUhB,EAAIrR,IAAI4R,EAAUzI,IAAID,WAEhCiJ,EAAWhV,EAAMyU,EAAUzI,IAAID,UAAUlJ,IAAIuR,IAE7CgB,EAAQ,EAAIJ,EAASA,EAEP,IAAVI,IAGJE,GAAON,EAASE,EAAUY,GAAYV,EACtCG,GAAOL,EAAUF,EAASc,GAAYV,EAEtCpL,EAAGj6B,IAAIqkC,EAAGxS,eAAe0T,IACzBnB,EAAGnhB,KAAKyhB,EAAUzI,IAAID,WAAWnK,eAAe2T,GAAKxlC,IAAI0kC,EAAUzI,IAAIF,QAEvEqJ,EAAgBf,EAAG9S,WAAW6S,EAAInK,GAAIlH,WAElCqS,EAAgBL,GAAeQ,EAAIA,EAAMO,GACzCnB,EAAW3lC,MAAMkH,UAAYA,EACZs+B,SAAWgB,KAIpC,IAAKzjC,EAAI,EAAGqK,EAAKw4B,EAAkBjI,OAAOl3B,OAAQ1D,EAAIqK,EAAIrK,IAEtD,GAAI6iC,EAAkBjI,OAAO56B,YAAc3D,GAAOi/B,SAE9CV,EAAO1Z,KAAK2hB,EAAkBjI,OAAO56B,IACrC46B,EAAOvK,aAAa2R,EAAM5E,aAEtBuF,EAAUzI,IAAIS,qBAAqBC,IAAS,CAE5C1C,EAAG1I,WAAWoL,EAAOr2B,OAAQo+B,EAAUzI,IAAIF,OAI3C,IAAIiK,GAAmB/L,EAAGnH,IAAI4R,EAAUzI,IAAID,UAK5C,OAHAsJ,GAAeU,EAAiBA,GAAoB/L,EAAGlH,WAAa4J,EAAOx2B,OAAOw2B,EAAOx2B,QAGrF6/B,EAAmB,EACZrB,GAIPH,EADAc,GAAgB,EACLU,EAKAA,EAAmBt8B,KAAKinB,KAAK2U,GAE5CX,EAAW3lC,MAAMkH,UAAYA,EACZs+B,SAAWA,IACrBG,IA4BvB,OArBAV,GAAUjsB,UAAU6sB,UAAY,KAChCZ,EAAUjsB,UAAU8sB,cAAgB,GAEpCb,EAAUjsB,UAAUhU,IAAM,SAAS+3B,EAAQC,GAEvC/8B,KAAKg9B,IAAIj4B,IAAI+3B,EAAQC,IAIzBiI,EAAUjsB,UAAUiuB,iBAAmB,SAASlC,EAAOmC,GAGnD,IAAK,GAFDvB,MAEK5iC,EAAI,EAAG6E,EAAIs/B,EAAQzgC,OAAQ1D,EAAI6E,EAAG7E,IACvC0iC,EAAgBV,EAAOmC,EAAQnkC,GAAI9C,KAAM0lC,EAI7C,OAFAA,GAAWwB,KAAK5B,GAETI,GAIJV,KAQX7lC,EAAOgoC,UAAY,WAEf,GACAC,IADkB,GAAIjoC,GAAO23B,QACL,GAAI33B,GAAO23B,QAEnC92B,MAAKqnC,cAAgB,SAAW5I,EAAQ6I,GAMpC,MAJAA,GAAOC,mBAAmBlR,WAAYiR,EAAOpH,aAE7CkH,EAAsBvO,iBAAkByO,EAAOE,iBAAkBF,EAAOC,oBAEjE9I,EAAOpL,gBAAiB+T,IAInCpnC,KAAKynC,gBAAkB,SAAWhJ,EAAQ6I,GAMtC,MAJAA,GAAOI,wBAAwBrR,WAAWiR,EAAOE,kBAEjDJ,EAAsBvO,iBAAiByO,EAAOpH,YAAaoH,EAAOI,yBAE3DjJ,EAAOpL,gBAAiB+T,KAUvCjoC,EAAOwoC,OAAS,SAASrL,EAAKC,EAAQJ,EAAMC,EAAKwL,GAE7CzoC,EAAO2gC,SAAShkC,KAAKkE,MAErBA,KAAKs8B,IAAc52B,SAAR42B,EAAoBA,EAAM,GACrCt8B,KAAKu8B,OAAoB72B,SAAX62B,EAAuBA,EAAS,EAC9Cv8B,KAAKm8B,KAAgBz2B,SAATy2B,EAAqBA,EAAO,GACxCn8B,KAAKo8B,IAAc12B,SAAR02B,EAAoBA,EAAM,IAErCp8B,KAAKwnC,iBAAmB,GAAIroC,GAAO23B,QACnC92B,KAAK0nC,wBAA0B,GAAIvoC,GAAO23B,QAC1C92B,KAAKunC,mBAAqB,GAAIpoC,GAAO23B,OAErC,IAAIzvB,GAASrH,KAAKkB,SAASwC,CAC3B1D,MAAKi8B,MAAQ50B,EAASoD,KAAK+xB,IAAI/xB,KAAK0mB,GAAK,IAAMmL,GAC/Ct8B,KAAKokB,MAAQpkB,KAAKi8B,MAClBj8B,KAAK+gB,IAAM/gB,KAAKi8B,MAAQj8B,KAAKu8B,OAC7Bv8B,KAAKk8B,QAAUl8B,KAAK+gB,IAEpB/gB,KAAK4nC,QAAUA,EAEf5nC,KAAK6nC,0BAKT1oC,EAAOwoC,OAAO5uB,UAAY7c,OAAO4rC,OAAO3oC,EAAO2gC,SAAS/mB,WAExD5Z,EAAOwoC,OAAO5uB,UAAU0f,OAAS,SAASgG,GAGtCz+B,KAAKs2B,OAAOmC,OAAOz4B,KAAKkB,SAAUu9B,EAAQz+B,KAAK44B,IAE3C54B,KAAKugC,qBAEDvgC,KAAKwgC,iBAAkB,EACvBxgC,KAAKu7B,SAASrH,2BAA4Bl0B,KAAKs2B,OAAQt2B,KAAKogC,YAE5DpgC,KAAKmgC,WAAWnc,KAAMhkB,KAAKs2B,OAAOoF,YAAa,MAM3Dv8B,EAAOwoC,OAAO5uB,UAAU8uB,uBAAyB,WAE1C7nC,KAAK4nC,MACJ5nC,KAAKwnC,iBAAiB/K,iBAAkBz8B,KAAKokB,KAAMpkB,KAAKi8B,MAAOj8B,KAAK+gB,IAAK/gB,KAAKk8B,OAAQl8B,KAAKm8B,KAAMn8B,KAAKo8B,KAEtGp8B,KAAKwnC,iBAAiBnL,gBAAiBr8B,KAAKs8B,IAAKt8B,KAAKu8B,OAAQv8B,KAAKm8B,KAAMn8B,KAAKo8B,KAGlFp8B,KAAK0nC,wBAAwBrR,WAAWr2B,KAAKwnC,mBAWjDroC,EAAO4oC,aAAe,WAwPlB,QAASC,GAAgBC,EAAQrC,GAE7B,GAAIsC,GAAUC,EAAIH,gBAEdI,EAAiBD,EAAIE,aAAcF,EAAIG,iBACvCC,EAAeJ,EAAIE,aAAcF,EAAIK,eAErCC,EAAS,aAAe7C,EAAY,WAQxC,OANAuC,GAAIO,aAAcN,EAAgBK,EAASR,EAAOG,gBAClDD,EAAIO,aAAcH,EAAcE,EAASR,EAAOM,cAEhDJ,EAAIQ,cAAeP,GACnBD,EAAIQ,cAAeJ,GAEZJ,EAAIS,mBAAmBR,EAAgBD,EAAIU,iBAAqBV,EAAIS,mBAAmBL,EAAaJ,EAAIU,iBAO/GV,EAAIW,aAAcZ,EAASE,GAC3BD,EAAIW,aAAcZ,EAASK,GAE3BJ,EAAIY,YAAab,GAEXC,EAAIa,oBAAoBd,EAASC,EAAIc,cACnCtb,QAAQpW,MAAM,+BAEf2wB,IAbCva,QAAQpW,MAAM4wB,EAAIe,iBAAiBd,IACnCza,QAAQpW,MAAM,+BACP,MAenB,QAAS4xB,GAAoB7gC,EAAGN,GAE5B,MAAKM,GAAE5E,IAAMsE,EAAEtE,EAEJsE,EAAEtE,EAAI4E,EAAE5E,EAIRsE,EAAEpM,GAAK0M,EAAE1M,GAhSxB,GAAIusC,GAAKiB,EAAWC,EAAYC,IAEhCtpC,MAAKupC,KAAO,SAAWC,GAEnBrB,EAAMqB,EAASC,QACfL,EAAYI,EAEZH,EAAaG,EAASE,eAEtBJ,EAAQxH,SAAW,GAAI11B,cAAc,IACrCk9B,EAAQhH,MAAW,GAAIzpB,aAAa,EAEpC,IAAI/V,GAAI,CAERwmC,GAAQxH,SAAUh/B,QAAYwmC,EAAQxH,SAAUh/B,QAChDwmC,EAAQxH,SAAUh/B,KAAQ,EAAIwmC,EAAQxH,SAAUh/B,KAAQ,EAExDwmC,EAAQxH,SAAUh/B,KAAQ,EAAIwmC,EAAQxH,SAAUh/B,QAChDwmC,EAAQxH,SAAUh/B,KAAQ,EAAIwmC,EAAQxH,SAAUh/B,KAAQ,EAExDwmC,EAAQxH,SAAUh/B,KAAQ,EAAIwmC,EAAQxH,SAAUh/B,KAAQ,EACxDwmC,EAAQxH,SAAUh/B,KAAQ,EAAIwmC,EAAQxH,SAAUh/B,KAAQ,EAExDwmC,EAAQxH,SAAUh/B,QAAYwmC,EAAQxH,SAAUh/B,KAAQ,EACxDwmC,EAAQxH,SAAUh/B,KAAQ,EAAIwmC,EAAQxH,SAAUh/B,KAAQ,EAExDA,EAAI,EAEJwmC,EAAQhH,MAAOx/B,KAAQ,EAAGwmC,EAAQhH,MAAOx/B,KAAQ,EAAGwmC,EAAQhH,MAAOx/B,KAAQ,EAC3EwmC,EAAQhH,MAAOx/B,KAAQ,EAAGwmC,EAAQhH,MAAOx/B,KAAQ,EAAGwmC,EAAQhH,MAAOx/B,KAAQ,EAE3EwmC,EAAQK,aAAgBxB,EAAIyB,eAC5BN,EAAQO,cAAgB1B,EAAIyB,eAE5BzB,EAAI2B,WAAY3B,EAAI4B,aAAcT,EAAQK,cAC1CxB,EAAI6B,WAAY7B,EAAI4B,aAAcT,EAAQxH,SAAUqG,EAAI8B,aAExD9B,EAAI2B,WAAY3B,EAAI+B,qBAAsBZ,EAAQO,eAClD1B,EAAI6B,WAAY7B,EAAI+B,qBAAsBZ,EAAQhH,MAAO6F,EAAI8B,aAE7DX,EAAQpB,QAAUF,EAAe7oC,EAAOgrC,UAAUC,OAAQf,GAE1DC,EAAQe,cACRf,EAAQgB,YAERhB,EAAQe,WAAWnpC,SAAqBinC,EAAIoC,kBAAoBjB,EAAQpB,QAAS,YACjFoB,EAAQe,WAAWG,GAAqBrC,EAAIoC,kBAAoBjB,EAAQpB,QAAS,MAEjFoB,EAAQgB,SAASG,SAAuBtC,EAAIuC,mBAAoBpB,EAAQpB,QAAS,YACjFoB,EAAQgB,SAASK,QAAuBxC,EAAIuC,mBAAoBpB,EAAQpB,QAAS,WAEjFoB,EAAQgB,SAAS/O,SAAuB4M,EAAIuC,mBAAoBpB,EAAQpB,QAAS,YACjFoB,EAAQgB,SAAS9O,MAAuB2M,EAAIuC,mBAAoBpB,EAAQpB,QAAS,SACjFoB,EAAQgB,SAASM,UAAuBzC,EAAIuC,mBAAoBpB,EAAQpB,QAAS,aAEjFoB,EAAQgB,SAASnnC,MAAuBglC,EAAIuC,mBAAoBpB,EAAQpB,QAAS,SACjFoB,EAAQgB,SAAS5iC,IAAuBygC,EAAIuC,mBAAoBpB,EAAQpB,QAAS,OACjFoB,EAAQgB,SAASvsC,QAAuBoqC,EAAIuC,mBAAoBpB,EAAQpB,QAAS,WAEjFoB,EAAQgB,SAASO,qBAAuB1C,EAAIuC,mBAAoBpB,EAAQpB,QAAS,wBACjFoB,EAAQgB,SAASQ,eAAuB3C,EAAIuC,mBAAoBpB,EAAQpB,QAAS,kBACjFoB,EAAQgB,SAASS,gBAAuB5C,EAAIuC,mBAAoBpB,EAAQpB,QAAS,mBACjFoB,EAAQgB,SAAS9C,iBAAuBW,EAAIuC,mBAAoBpB,EAAQpB,QAAS,oBAEjFoB,EAAQgB,SAASU,QAAuB7C,EAAIuC,mBAAoBpB,EAAQpB,QAAS,WACjFoB,EAAQgB,SAASW,WAAuB9C,EAAIuC,mBAAoBpB,EAAQpB,QAAS,cACjFoB,EAAQgB,SAASY,QAAuB/C,EAAIuC,mBAAoBpB,EAAQpB,QAAS,WACjFoB,EAAQgB,SAASa,OAAuBhD,EAAIuC,mBAAoBpB,EAAQpB,QAAS,UACjFoB,EAAQgB,SAASc,SAAuBjD,EAAIuC,mBAAoBpB,EAAQpB,QAAS,YAEjFoB,EAAQgB,SAASe,UAAuBlD,EAAIuC,mBAAoBpB,EAAQpB,QAAS,cAIrFloC,KAAKG,OAAS,SAAWwgC,EAAO2G,EAAQgE,EAAeC,GAEnD,GAAIC,GAAU7K,EAAM8K,eAChBC,EAAWF,EAAQhlC,MAEvB,IAAOklC,EAAP,CAEA,GAAIrB,GAAaf,EAAQe,WACrBC,EAAWhB,EAAQgB,SAInBqB,EAAoC,GAAhBL,EACpBM,EAAsC,GAAjBL,CAIzBpD,GAAI0D,WAAYvC,EAAQpB,SAExBC,EAAI2D,wBAAyBzB,EAAWnpC,UACxCinC,EAAI2D,wBAAyBzB,EAAWG,IAExCrC,EAAI4D,QAAS5D,EAAI6D,WACjB7D,EAAI8D,OAAQ9D,EAAI+D,OAEhB/D,EAAI2B,WAAY3B,EAAI4B,aAAcT,EAAQK,cAC1CxB,EAAIgE,oBAAqB9B,EAAWnpC,SAAU,EAAGinC,EAAIiE,OAAO,EAAO,GAAO,GAC1EjE,EAAIgE,oBAAqB9B,EAAWG,GAAI,EAAGrC,EAAIiE,OAAO,EAAO,GAAO,GAEpEjE,EAAI2B,WAAY3B,EAAI+B,qBAAsBZ,EAAQO,eAElD1B,EAAIkE,iBAAkB/B,EAAS9C,kBAAkB,EAAOF,EAAOE,iBAAiBpU,UAEhF+U,EAAImE,cAAenE,EAAIoE,UACvBpE,EAAIqE,UAAWlC,EAAS5iC,IAAK,EAE7B,IAAI+kC,GAAa,EACbC,EAAe,EACfC,EAAMhM,EAAMgM,GAEXA,IAEDxE,EAAIyE,UAAWtC,EAASc,SAAUuB,EAAIxpC,MAAMoV,EAAGo0B,EAAIxpC,MAAMm8B,EAAGqN,EAAIxpC,MAAM6E,GAEtEmgC,EAAI0E,UAAWvC,EAASY,QAASyB,EAAIxQ,MACrCgM,EAAI0E,UAAWvC,EAASa,OAAQwB,EAAIvQ,KAEpC+L,EAAIqE,UAAWlC,EAASU,QAAS,GACjCyB,EAAa,EACbC,EAAe,IAOfvE,EAAIqE,UAAWlC,EAASU,QAAS,GACjCyB,EAAa,EACbC,EAAe,EAOnB,IAAI5pC,GAAGsnC,EAAQ0C,EAA0B9hC,EAAMggC,EAASxP,IAExD,KAAK14B,EAAI,EAAGA,EAAI4oC,EAAU5oC,IAEtBsnC,EAASoB,EAAS1oC,GAClBgqC,EAAW1C,EAAO0C,SAEX1C,EAAO3J,SAAgC,IAArBqM,EAAS/uC,UAE3B+uC,EAASjC,qBAOZT,EAAO1mC,GAAM0mC,EAAOlpC,SAASwC,GAL7B0mC,EAAO2C,iBAAiBlU,iBAAkByO,EAAOC,mBAAoB6C,EAAOlK,aAC5EkK,EAAO1mC,GAAM0mC,EAAO2C,iBAAiB3Z,SAAU,KAcvD,KAJAoY,EAAQtE,KAAMiC,GAITrmC,EAAI,EAAGA,EAAI4oC,EAAU5oC,IAKtB,GAHAsnC,EAASoB,EAAS1oC,GAClBgqC,EAAW1C,EAAO0C,SAEX1C,EAAO3J,SAAgC,IAArBqM,EAAS/uC,SAE7B+uC,EAASplC,KAAOolC,EAASplC,IAAIslC,OAASF,EAASplC,IAAIslC,MAAM5uC,MAAQ,CAElE+pC,EAAI0E,UAAWvC,EAASe,UAAWyB,EAASzB,UAC5C,IAAI/Z,GAAIwb,EAASplC,IAAIslC,MAAM5uC,MACvBs+B,EAAIoQ,EAASplC,IAAIslC,MAAMxvC,MAE3Bg+B,GAAO,GAAMlK,EAAE8X,EAAU6D,iBAAiB3B,EAC1C9P,EAAO,GAAMkB,EAAE0M,EAAU6D,iBAAiB1B,EAErCuB,EAASjC,wBAAyB,GAEnC1C,EAAIqE,UAAWlC,EAASO,qBAAsB,GAC9C1C,EAAIyE,UACAtC,EAASQ,gBACLV,EAAOlpC,SAASqC,EAAI6lC,EAAU6D,iBAAqBtB,GAAuBA,GAC5EC,EAAuBxB,EAAOlpC,SAASuC,EAAI2lC,EAAU6D,kBAAuBrB,EAC9EnhC,KAAK8Q,IAAK,EAAG9Q,KAAK6d,IAAK,EAAG8hB,EAAOlpC,SAASwC,OAK9CykC,EAAIqE,UAAWlC,EAASO,qBAAsB,GAC9C1C,EAAIkE,iBAAkB/B,EAASS,iBAAiB,EAAOX,EAAO2C,iBAAiB3Z,WAK/E4X,EAFCrK,EAAMgM,KAAOG,EAASH,IAEbD,EAIA,EAITD,IAAezB,IAEhB7C,EAAIqE,UAAWlC,EAASU,QAASA,GACjCyB,EAAazB,GAIjBhgC,EAAO,GAAM8hC,EAASI,gBAAkB3B,EAAiB,GAEzD/P,EAAO,IAAOxwB,EAAOo/B,EAAO5O,MAAMj4B,EAClCi4B,EAAO,IAAOxwB,EAAOo/B,EAAO5O,MAAM/3B,EAElC0kC,EAAIgF,UAAW7C,EAASK,QAASmC,EAASnC,QAAQpnC,EAAGupC,EAASnC,QAAQlnC,GACtE0kC,EAAIgF,UAAW7C,EAASG,SAAUqC,EAASrC,SAASlnC,EAAGupC,EAASrC,SAAShnC,GACzE0kC,EAAIgF,UAAW7C,EAASM,UAAWkC,EAASlC,UAAUrnC,EAAGupC,EAASlC,UAAUnnC,GAE5E0kC,EAAI0E,UAAWvC,EAASvsC,QAAS+uC,EAAS/uC,SAC1CoqC,EAAIyE,UAAWtC,EAASnnC,MAAO2pC,EAAS3pC,MAAMoV,EAAGu0B,EAAS3pC,MAAMm8B,EAAGwN,EAAS3pC,MAAM6E,GAElFmgC,EAAI0E,UAAWvC,EAAS/O,SAAU6O,EAAO7O,UACzC4M,EAAIiF,WAAY9C,EAAS9O,MAAOA,GAGhC4N,EAAUiE,aAAcP,EAASQ,WACjClE,EAAUmE,cAAeT,EAASU,YAClCpE,EAAUqE,WAAYX,EAASplC,IAAK,GAEpCygC,EAAIuF,aAAcvF,EAAIwF,UAAW,EAAGxF,EAAIyF,eAAgB,GAQhEzF,EAAI8D,OAAQ9D,EAAI6D,cAsDxB7sC,EAAO0uC,MAAQ,SAASrO,EAAKsO,GAEzB3uC,EAAO2gC,SAAShkC,KAAKkE,MAErBA,KAAKmD,MAAQ,GAAIhE,GAAOkgC,MAAMG,GAC9Bx/B,KAAKkB,SAAW,GAAI/B,GAAOszB,QAAS,EAAG,EAAG,GAC1CzyB,KAAK24B,OAAS,GAAIx5B,GAAO2gC,SAEzB9/B,KAAK8tC,UAA4BpoC,SAAdooC,EAA4BA,EAAY,EAE3D9tC,KAAK+tC,YAAa,EAClB/tC,KAAKguC,YAAa,GAItB7uC,EAAO0uC,MAAM90B,UAAY7c,OAAO4rC,OAAO3oC,EAAO2gC,SAAS/mB,WAKvD5Z,EAAO8uC,SAAW,WAEd9uC,EAAO2/B,gBAAgBhjC,KAAMkE,MAE7BA,KAAKpE,GAAKuD,EAAO+uC,kBAEjBluC,KAAKwC,KAAO,GAGZxC,KAAKmuC,KAAOhvC,EAAOivC,UAEnBpuC,KAAKjC,QAAU,EACfiC,KAAKquC,aAAc,EAEnBruC,KAAKstC,WAAY,EACjBttC,KAAKwtC,YAAa,EAElBxtC,KAAKsuC,aAAc,EAEnBtuC,KAAKuuC,eAAgB,EACrBvuC,KAAKwuC,oBAAsB,EAC3BxuC,KAAKyuC,mBAAqB,EAE1BzuC,KAAKqrC,UAAY,EAEjBrrC,KAAKygC,SAAU,EAEfzgC,KAAK0uC,aAAc,GAKvBvvC,EAAO8uC,SAASl1B,UAAU41B,UAAY,SAAWC,GAE7C,GAAgBlpC,SAAXkpC,EAEL,IAAM,GAAIzjC,KAAOyjC,GAAS,CAEtB,GAAIC,GAAWD,EAAQzjC,EAEvB,IAAkBzF,SAAbmpC,GAOL,GAAK1jC,IAAOnL,MAAO,CAEf,GAAI8uC,GAAe9uC,KAAMmL,EAEpB2jC,aAAwB3vC,GAAOkgC,OAASwP,YAAoB1vC,GAAOkgC,MAEpEyP,EAAa9qB,KAAM6qB,GAEXC,YAAwB3vC,GAAOkgC,MAEvCyP,EAAa/pC,IAAK8pC,GAEVC,YAAwB3vC,GAAOszB,SAAWoc,YAAoB1vC,GAAOszB,QAE7Eqc,EAAa9qB,KAAM6qB,GAInB7uC,KAAMmL,GAAQ0jC,OAvBlBlhB,SAAQ8I,KAAM,qBAAwBtrB,EAAM,+BAiCxDhM,EAAO8uC,SAASl1B,UAAUyZ,MAAQ,SAAWsa,GAyBzC,MAvBkBpnC,UAAbonC,IAAyBA,EAAW,GAAI3tC,GAAO8uC,UAEpDnB,EAAStqC,KAAOxC,KAAKwC,KAErBsqC,EAASqB,KAAOnuC,KAAKmuC,KAErBrB,EAAS/uC,QAAUiC,KAAKjC,QACxB+uC,EAASuB,YAAcruC,KAAKquC,YAE5BvB,EAASQ,UAAYttC,KAAKstC,UAC1BR,EAASU,WAAaxtC,KAAKwtC,WAC3BV,EAASwB,YAActuC,KAAKsuC,YAE5BxB,EAASyB,cAAgBvuC,KAAKuuC,cAC9BzB,EAAS0B,oBAAsBxuC,KAAKwuC,oBACpC1B,EAAS2B,mBAAqBzuC,KAAKyuC,mBAEnC3B,EAASzB,UAAYrrC,KAAKqrC,UAE1ByB,EAASiC,SAAW/uC,KAAK+uC,SAEzBjC,EAASrM,QAAUzgC,KAAKygC,QAEjBqM,GAIX3tC,EAAO8uC,SAASl1B,UAAUgsB,QAAU,WAEhC/kC,KAAKm/B,eAAiBr7B,KAAM,aAIhC3E,EAAO+uC,gBAAkB,EAIzB/uC,EAAO6vC,kBAAoB,SAASC,GAEhC9vC,EAAO8uC,SAASnyC,KAAKkE,MAErBA,KAAKmD,MAAQ,GAAIhE,GAAOkgC,MAAM,UAE9Br/B,KAAKkvC,UAAY,EACjBlvC,KAAKmvC,QAAU,QACfnvC,KAAKovC,SAAW,QAEhBpvC,KAAKqvC,cAAe,EAEpBrvC,KAAK2sC,KAAM,EACX3sC,KAAKsvC,SAAW,QAChBtvC,KAAK2uC,UAAUM,IAInB9vC,EAAO6vC,kBAAkBj2B,UAAY7c,OAAO4rC,OAAO3oC,EAAO8uC,SAASl1B,WAEnE5Z,EAAO6vC,kBAAkBj2B,UAAUyZ,MAAQ,WAEvC,GAAIsa,GAAW,GAAI3tC,GAAO6vC,iBAK1B,OAHA7vC,GAAO8uC,SAASl1B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GAE3CA,EAAS3pC,MAAM6gB,KAAKhkB,KAAKmD,OAClB2pC,GAKX3tC,EAAOowC,oBAAsB,SAASN,GAElC9vC,EAAO8uC,SAASnyC,KAAKkE,MAErBA,KAAKmD,MAAQ,GAAIhE,GAAOkgC,MAAM,UAC9Br/B,KAAKwvC,QAAU,GAAIrwC,GAAOkgC,MAAM,SAChCr/B,KAAKyvC,SAAW,GAAItwC,GAAOkgC,MAAM,GAGjCr/B,KAAK0vC,YAAa,EAClB1vC,KAAK2vC,QAAU,GAAIxwC,GAAOszB,QAAQ,EAAE,EAAE,GAEtCzyB,KAAK0H,IAAM,KAEX1H,KAAK4vC,SAAW,KAEhB5vC,KAAK6vC,YAAc,KAEnB7vC,KAAK8vC,OAAS,KACd9vC,KAAK+vC,aAAe,EACpB/vC,KAAKgwC,gBAAkB,IAEvBhwC,KAAK2sC,KAAM,EAEX3sC,KAAKiwC,WAAY,EACjBjwC,KAAKkwC,mBAAqB,EAC1BlwC,KAAKmwC,iBAAmB,QACxBnwC,KAAKowC,kBAAoB,QAEzBpwC,KAAKqwC,QAAUlxC,EAAOmxC,cACtBtwC,KAAKsvC,SAAW,UAChBtvC,KAAKqvC,aAAelwC,EAAOoxC,SAE3BvwC,KAAKwwC,UAAW,EAEhBxwC,KAAK2uC,UAAUM,IAInB9vC,EAAOowC,oBAAoBx2B,UAAY7c,OAAO4rC,OAAO3oC,EAAO8uC,SAASl1B,WAErE5Z,EAAOowC,oBAAoBx2B,UAAUyZ,MAAQ,SAASsa,GAkClD,MAhCyB,mBAAbA,KAA2BA,EAAW,GAAI3tC,GAAOowC,qBAE7DpwC,EAAO8uC,SAASl1B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GAE3CA,EAAS3pC,MAAM6gB,KAAKhkB,KAAKmD,OACzB2pC,EAAS0C,QAAQxrB,KAAKhkB,KAAKwvC,SAC3B1C,EAAS2C,SAASzrB,KAAKhkB,KAAKyvC,UAE5B3C,EAAS4C,WAAa1vC,KAAK0vC,WAC3B5C,EAAS6C,QAAQ3rB,KAAKhkB,KAAK2vC,SAE3B7C,EAASplC,IAAM1H,KAAK0H,IAEpBolC,EAAS8C,SAAW5vC,KAAK4vC,SAEzB9C,EAAS+C,YAAc7vC,KAAK6vC,YAE5B/C,EAASgD,OAAS9vC,KAAK8vC,OACvBhD,EAAS2D,QAAUzwC,KAAKywC,QACxB3D,EAASiD,aAAe/vC,KAAK+vC,aAC7BjD,EAASkD,gBAAkBhwC,KAAKgwC,gBAEhClD,EAASH,IAAM3sC,KAAK2sC,IAEpBG,EAASuD,QAAUrwC,KAAKqwC,QACxBvD,EAASwC,SAAWtvC,KAAKsvC,SACzBxC,EAASuC,aAAervC,KAAKqvC,aAE7BvC,EAAS0D,SAAWxwC,KAAKwwC,SACzB1D,EAAS4D,aAAe1wC,KAAK0wC,aAC7B5D,EAAS6D,aAAe3wC,KAAK2wC,aAEtB7D,GAMX3tC,EAAOyxC,0BAA4B,SAAS3B,GAExC9vC,EAAOowC,oBAAoBzzC,KAAKkE,KAAMivC,GAEtCjvC,KAAKsvC,SAAW,gBAChBtvC,KAAKmuC,KAAOhvC,EAAO0xC,YAIvB1xC,EAAOyxC,0BAA0B73B,UAAY7c,OAAO4rC,OAAO3oC,EAAOowC,oBAAoBx2B,WAEtF5Z,EAAOyxC,0BAA0B73B,UAAUyZ,MAAQ,WAE/C,GAAIsa,GAAW,GAAI3tC,GAAOyxC,yBAI1B,OAFAzxC,GAAOowC,oBAAoBx2B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GAE/CA,GAMX3tC,EAAO2xC,oBAAsB,SAAS7B,GAClC9vC,EAAO8uC,SAASnyC,KAAKkE,MACrBivC,EAAaA,MACbjvC,KAAK2sC,KAAM,EACX3sC,KAAKsvC,SAAW,UAChBtvC,KAAKiwC,WAAU,EACfjwC,KAAK+wC,aAAc9B,EAAW9rC,OAAS,GAAIhE,GAAOkgC,MAAM,EAAI,EAAI,GAChEr/B,KAAKgxC,aAAc/B,EAAW7wC,OAAS,GACvC4B,KAAKixC,gBAAiBhC,EAAWiC,UAAY,GAIjD/xC,EAAO2xC,oBAAoB/3B,UAAY7c,OAAO4rC,OAAO3oC,EAAO8uC,SAASl1B,WAErE5Z,EAAO2xC,oBAAoB/3B,UAAUyZ,MAAQ,SAASsa,GAMlD,MALyB,mBAAbA,KAA2BA,EAAW,GAAI3tC,GAAO2xC,qBAC7D3xC,EAAO8uC,SAASl1B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GAC3CA,EAASH,IAAM3sC,KAAK2sC,IACpBG,EAASwC,SAAWtvC,KAAKsvC,SACzBxC,EAASmD,UAAYjwC,KAAKiwC,UACnBnD,GAMX3tC,EAAOgyC,iBAAmB,SAASlC,GAEjC9vC,EAAO8uC,SAASnyC,KAAKkE,MAErBA,KAAKmD,MAAQ,GAAIhE,GAAOkgC,MAAM,UAC9Br/B,KAAKwvC,QAAU,GAAIrwC,GAAOkgC,MAAM,SAChCr/B,KAAKyvC,SAAW,GAAItwC,GAAOkgC,MAAM,GACjCr/B,KAAKoxC,UAAW,EAGhBpxC,KAAK0vC,YAAa,EAClB1vC,KAAK2vC,QAAU,GAAIxwC,GAAOszB,QAAQ,EAAE,EAAE,GAEtCzyB,KAAK0H,IAAM,KAEX1H,KAAK4vC,SAAW,KAEhB5vC,KAAK6vC,YAAc,KAEnB7vC,KAAK8vC,OAAS,KACd9vC,KAAK+vC,aAAe,EACpB/vC,KAAKgwC,gBAAkB,IAEvBhwC,KAAK2sC,KAAM,EAEX3sC,KAAKiwC,WAAY,EACjBjwC,KAAKkwC,mBAAqB,EAC1BlwC,KAAKmwC,iBAAmB,QACxBnwC,KAAKowC,kBAAoB,QAEzBpwC,KAAKqwC,QAAUlxC,EAAOmxC,cACtBtwC,KAAKsvC,SAAW,KAChBtvC,KAAKqvC,aAAelwC,EAAOoxC,SAE3BvwC,KAAKwwC,UAAW,EAEhBxwC,KAAK2uC,UAAUM,IAIjB9vC,EAAOgyC,iBAAiBp4B,UAAY7c,OAAO4rC,OAAO3oC,EAAO8uC,SAASl1B,WAElE5Z,EAAOgyC,iBAAiBp4B,UAAUyZ,MAAQ,WAExC,GAAIsa,GAAW,GAAI3tC,GAAOgyC,gBAgC1B,OA9BAhyC,GAAO8uC,SAASl1B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GAE3CA,EAAS3pC,MAAM6gB,KAAKhkB,KAAKmD,OACzB2pC,EAAS0C,QAAQxrB,KAAKhkB,KAAKwvC,SAC3B1C,EAAS2C,SAASzrB,KAAKhkB,KAAKyvC,UAE5B3C,EAAS4C,WAAa1vC,KAAK0vC,WAC3B5C,EAAS6C,QAAQ3rB,KAAKhkB,KAAK2vC,SAE3B7C,EAASplC,IAAM1H,KAAK0H,IAEpBolC,EAAS8C,SAAW5vC,KAAK4vC,SAEzB9C,EAAS+C,YAAc7vC,KAAK6vC,YAE5B/C,EAASgD,OAAS9vC,KAAK8vC,OACvBhD,EAAS2D,QAAUzwC,KAAKywC,QACxB3D,EAASiD,aAAe/vC,KAAK+vC,aAC7BjD,EAASkD,gBAAkBhwC,KAAKgwC,gBAEhClD,EAASH,IAAM3sC,KAAK2sC,IAEpBG,EAASuD,QAAUrwC,KAAKqwC,QACxBvD,EAASwC,SAAWtvC,KAAKsvC,SACzBxC,EAASuC,aAAervC,KAAKqvC,aAE7BvC,EAAS0D,SAAWxwC,KAAKwwC,SACzB1D,EAAS4D,aAAe1wC,KAAK0wC,aAC7B5D,EAAS6D,aAAe3wC,KAAK2wC,aAEtB7D,GAKT3tC,EAAOkyC,uBAAyB,SAASpC,GAErC9vC,EAAOgyC,iBAAiBr1C,KAAKkE,MAE7BA,KAAKsvC,SAAW,iBAChBtvC,KAAK2uC,UAAUM,IAInB9vC,EAAOkyC,uBAAuBt4B,UAAY7c,OAAO4rC,OAAO3oC,EAAOgyC,iBAAiBp4B,WAEhF5Z,EAAOkyC,uBAAuBt4B,UAAUyZ,MAAQ,WAE5C,GAAIsa,GAAW,GAAI3tC,GAAOkyC,sBAE1B,OADAlyC,GAAOgyC,iBAAiBp4B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GAC5CA,GAIX3tC,EAAOmyC,8BAAgC,SAASrC,GAE5C9vC,EAAOgyC,iBAAiBr1C,KAAKkE,MAC7BivC,EAAaA,MAEbjvC,KAAKsvC,SAAW,wBAChBtvC,KAAK+wC,aAAc9B,EAAW9rC,OAAS,GAAIhE,GAAOkgC,MAAM,EAAI,EAAI,GAChEr/B,KAAKgxC,aAAc/B,EAAW7wC,OAAS,GACvC4B,KAAKixC,gBAAiBhC,EAAWiC,UAAY,EAE7ClxC,KAAK2uC,UAAUM,IAInB9vC,EAAOmyC,8BAA8Bv4B,UAAY7c,OAAO4rC,OAAO3oC,EAAOgyC,iBAAiBp4B,WAEvF5Z,EAAOmyC,8BAA8Bv4B,UAAUyZ,MAAQ,WAEnD,GAAIsa,GAAW,GAAI3tC,GAAOmyC,6BAK1B,OAJAnyC,GAAOgyC,iBAAiBp4B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GACnDA,EAASiE,aAAe/wC,KAAK+wC,aAC7BjE,EAASkE,aAAehxC,KAAKgxC,aAC7BlE,EAASmE,gBAAkBjxC,KAAKixC,gBACzBnE,GAIX3tC,EAAOoyC,sBAAwB,SAAStC,GAEpC9vC,EAAOgyC,iBAAiBr1C,KAAKkE,MAE7BA,KAAKsvC,SAAW,gBAChBtvC,KAAK2uC,UAAUM,IAInB9vC,EAAOoyC,sBAAsBx4B,UAAY7c,OAAO4rC,OAAO3oC,EAAOgyC,iBAAiBp4B,WAE/E5Z,EAAOoyC,sBAAsBx4B,UAAUyZ,MAAQ,WAE3C,GAAIsa,GAAW,GAAI3tC,GAAOqyC,4BAE1B,OADAryC,GAAOgyC,iBAAiBp4B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GAC5CA,GAIX3tC,EAAOqyC,6BAA+B,SAASvC,GAE3C9vC,EAAOgyC,iBAAiBr1C,KAAKkE,MAC7BivC,EAAaA,MAEbjvC,KAAKsvC,SAAW,uBAChBtvC,KAAK+wC,aAAc9B,EAAW9rC,OAAS,GAAIhE,GAAOkgC,MAAM,EAAI,EAAI,GAChEr/B,KAAKgxC,aAAc/B,EAAW7wC,OAAS,GACvC4B,KAAKixC,gBAAiBhC,EAAWiC,UAAY,EAE7ClxC,KAAK2uC,UAAUM,IAInB9vC,EAAOqyC,6BAA6Bz4B,UAAY7c,OAAO4rC,OAAO3oC,EAAOgyC,iBAAiBp4B,WAEtF5Z,EAAOqyC,6BAA6Bz4B,UAAUyZ,MAAQ,WAElD,GAAIsa,GAAW,GAAI3tC,GAAOqyC,4BAK1B,OAJAryC,GAAOgyC,iBAAiBp4B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GACnDA,EAASiE,aAAe/wC,KAAK+wC,aAC7BjE,EAASkE,aAAehxC,KAAKgxC,aAC7BlE,EAASmE,gBAAkBjxC,KAAKixC,gBACzBnE,GAIX3tC,EAAOsyC,kBAAoB,SAASxC,GAEhC9vC,EAAO8uC,SAASnyC,KAAKkE,MAErBA,KAAKmD,MAAQ,GAAIhE,GAAOkgC,MAAM,UAC9Br/B,KAAKwvC,QAAU,GAAIrwC,GAAOkgC,MAAM,SAChCr/B,KAAKyvC,SAAW,GAAItwC,GAAOkgC,MAAM,GAGjCr/B,KAAK0vC,YAAa,EAClB1vC,KAAK2vC,QAAU,GAAIxwC,GAAOszB,QAAQ,EAAE,EAAE,GAEtCzyB,KAAK0H,IAAM,KAEX1H,KAAK4vC,SAAW,KAEhB5vC,KAAK6vC,YAAc,KAEnB7vC,KAAK8vC,OAAS,KACd9vC,KAAK+vC,aAAe,EACpB/vC,KAAKgwC,gBAAkB,IAEvBhwC,KAAK2sC,KAAM,EAEX3sC,KAAKiwC,WAAY,EACjBjwC,KAAKkwC,mBAAqB,EAC1BlwC,KAAKmwC,iBAAmB,QACxBnwC,KAAKowC,kBAAoB,QAEzBpwC,KAAKqwC,QAAUlxC,EAAOmxC,cACtBtwC,KAAKsvC,SAAW,YAChBtvC,KAAKqvC,aAAelwC,EAAOoxC,SAE3BvwC,KAAKwwC,UAAW,EAEhBxwC,KAAK09B,OAAS,KAEd19B,KAAK2uC,UAAUM,IAInB9vC,EAAOsyC,kBAAkB14B,UAAY7c,OAAO4rC,OAAO3oC,EAAO8uC,SAASl1B,WAEnE5Z,EAAOsyC,kBAAkB14B,UAAUyZ,MAAQ,WAEvC,GAAIsa,GAAW,GAAI3tC,GAAOsyC,iBAkC5B,OAhCEtyC,GAAO8uC,SAASl1B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GAE3CA,EAAS3pC,MAAM6gB,KAAKhkB,KAAKmD,OACzB2pC,EAAS0C,QAAQxrB,KAAKhkB,KAAKwvC,SAC3B1C,EAAS2C,SAASzrB,KAAKhkB,KAAKyvC,UAE5B3C,EAAS4C,WAAa1vC,KAAK0vC,WAC3B5C,EAAS6C,QAAQ3rB,KAAKhkB,KAAK2vC,SAE3B7C,EAASplC,IAAM1H,KAAK0H,IAEpBolC,EAAS8C,SAAW5vC,KAAK4vC,SAEzB9C,EAAS+C,YAAc7vC,KAAK6vC,YAE5B/C,EAASgD,OAAS9vC,KAAK8vC,OACvBhD,EAAS2D,QAAUzwC,KAAKywC,QACxB3D,EAASiD,aAAe/vC,KAAK+vC,aAC7BjD,EAASkD,gBAAkBhwC,KAAKgwC,gBAEhClD,EAASH,IAAM3sC,KAAK2sC,IAEpBG,EAASuD,QAAUrwC,KAAKqwC,QACxBvD,EAASwC,SAAWtvC,KAAKsvC,SACzBxC,EAASuC,aAAervC,KAAKqvC,aAE7BvC,EAAS0D,SAAWxwC,KAAKwwC,SACzB1D,EAAS4D,aAAe1wC,KAAK0wC,aAC7B5D,EAAS6D,aAAe3wC,KAAK2wC,aAE7B7D,EAASpP,OAAS19B,KAAK09B,OAElBoP,GAOT3tC,EAAOuyC,eAAiB,SAASzC,GAE7B9vC,EAAO8uC,SAASnyC,KAAKkE,MAErBA,KAAKmD,MAAQ,GAAIhE,GAAOkgC,MAAM,UAC9Br/B,KAAK0H,IAAM,GAAIvI,GAAOwyC,QAEtB3xC,KAAK6qC,sBAAuB,EAC5B7qC,KAAKstC,WAAattC,KAAK6qC,qBACvB7qC,KAAK4xC,iBAAmB5xC,KAAK6qC,qBAC7B7qC,KAAK6xC,iBAAmB7xC,KAAK4xC,gBAC7B5xC,KAAK4qC,UAAYzrC,EAAO2yC,gBAAgBzqC,OAAOmrB,QAE/CxyB,KAAK2sC,KAAM,EAEX3sC,KAAKyqC,SAAW,GAAItrC,GAAOkzB,QAAQ,EAAG,GACtCryB,KAAK2qC,QAAU,GAAIxrC,GAAOkzB,QAAQ,EAAG,GAErCryB,KAAK2uC,UAAUM,GAEfA,EAAaA,MAEgBvpC,SAAzBupC,EAAW3B,YACXttC,KAAKstC,WAAattC,KAAK6qC,sBACQnlC,SAA/BupC,EAAW2C,kBACX5xC,KAAK4xC,iBAAmB5xC,KAAK6qC,sBACEnlC,SAA/BupC,EAAW4C,kBACX7xC,KAAK6xC,iBAAmB7xC,KAAK4xC,kBAIrCzyC,EAAOuyC,eAAe34B,UAAY7c,OAAO4rC,OAAO3oC,EAAO8uC,SAASl1B,WAEhE5Z,EAAOuyC,eAAe34B,UAAUyZ,MAAQ,WAEpC,GAAIsa,GAAW,GAAI3tC,GAAOuyC,cAc1B,OAZAvyC,GAAO8uC,SAASl1B,UAAUyZ,MAAM12B,KAAKkE,KAAM8sC,GAE3CA,EAAS3pC,MAAM6gB,KAAKhkB,KAAKmD,OACzB2pC,EAASplC,IAAM1H,KAAK0H,IAEpBolC,EAASjC,qBAAuBA,qBAChCiC,EAAS8E,gBAAkB5xC,KAAK4xC,gBAChC9E,EAASI,gBAAkBltC,KAAK6xC,gBAChC/E,EAASlC,UAAU5mB,KAAKhkB,KAAK4qC,WAE7BkC,EAASrC,SAASzmB,KAAKhkB,KAAKyqC,UAErBqC,GAMX3tC,EAAO2yC,mBACP3yC,EAAO2yC,gBAAgBC,QAAU,GAAI5yC,GAAOkzB,QAAQ,QACpDlzB,EAAO2yC,gBAAgBE,UAAY,GAAI7yC,GAAOkzB,QAAQ,QACtDlzB,EAAO2yC,gBAAgBG,SAAW,GAAI9yC,GAAOkzB,mBAC7ClzB,EAAO2yC,gBAAgBI,WAAa,GAAI/yC,GAAOkzB,QAAQ,EAAG,GAC1DlzB,EAAO2yC,gBAAgBzqC,OAAS,GAAIlI,GAAOkzB,QAAQ,EAAG,GACtDlzB,EAAO2yC,gBAAgBK,YAAc,GAAIhzC,GAAOkzB,aAAY,GAC5DlzB,EAAO2yC,gBAAgBM,WAAa,GAAIjzC,GAAOkzB,QAAQ,EAAG,GAC1DlzB,EAAO2yC,gBAAgBO,aAAe,GAAIlzC,GAAOkzB,QAAQ,EAAG,GAC5DlzB,EAAO2yC,gBAAgBQ,YAAc,GAAInzC,GAAOkzB,aAAY,GAM5DlzB,EAAOwyC,QAAU,SAAS3E,GAEtB7tC,EAAO2/B,gBAAgBhjC,KAAKkE,MAE5BA,KAAKpE,GAAKuD,EAAOozC,iBAEjBvyC,KAAKwC,KAAO,GAEZxC,KAAKgtC,MAAQA,EACbhtC,KAAKwyC,WAELxyC,KAAKyyC,QAAU,GAAItzC,GAAOuzC,UAE1B1yC,KAAK2yC,MAAQxzC,EAAOyzC,oBACpB5yC,KAAK6yC,MAAQ1zC,EAAOyzC,oBAEpB5yC,KAAK8yC,UAAY3zC,EAAO4zC,aACxB/yC,KAAKgzC,UAAY7zC,EAAO8zC,yBAExBjzC,KAAKkzC,WAAa,EAElBlzC,KAAK6tB,OAAS1uB,EAAOg0C,WACrBnzC,KAAK8D,KAAO3E,EAAOi0C,iBAEnBpzC,KAAK0J,OAAS,GAAIvK,GAAOkzB,QAAQ,EAAG,GACpCryB,KAAKqzC,OAAS,GAAIl0C,GAAOkzB,QAAQ,EAAG,GAEpCryB,KAAKszC,iBAAkB,EACvBtzC,KAAKuzC,kBAAmB,EACxBvzC,KAAKwzC,OAAQ,EACbxzC,KAAKyzC,gBAAkB,EAEvBzzC,KAAK0uC,aAAc,EACnB1uC,KAAK0zC,SAAW,MAIpBv0C,EAAOwyC,QAAQ54B,WAEXta,YAAcU,EAAOwyC,QAErBnf,MAAQ,SAASmhB,GA6Bb,MA3BgBjuC,UAAZiuC,IACAA,EAAU,GAAIx0C,GAAOwyC,SAEzBgC,EAAQ3G,MAAQhtC,KAAKgtC,MACrB2G,EAAQnB,QAAUxyC,KAAKwyC,QAAQ/pC,MAAM,GAErCkrC,EAAQlB,QAAUzyC,KAAKyyC,QAEvBkB,EAAQhB,MAAQ3yC,KAAK2yC,MACrBgB,EAAQd,MAAQ7yC,KAAK6yC,MAErBc,EAAQb,UAAY9yC,KAAK8yC,UACzBa,EAAQX,UAAYhzC,KAAKgzC,UAEzBW,EAAQT,WAAalzC,KAAKkzC,WAE1BS,EAAQ9lB,OAAS7tB,KAAK6tB,OACtB8lB,EAAQ7vC,KAAO9D,KAAK8D,KAEpB6vC,EAAQjqC,OAAOsa,KAAKhkB,KAAK0J,QACzBiqC,EAAQN,OAAOrvB,KAAKhkB,KAAKqzC,QAEzBM,EAAQL,gBAAkBtzC,KAAKszC,gBAC/BK,EAAQJ,iBAAmBvzC,KAAKuzC,iBAChCI,EAAQH,MAAQxzC,KAAKwzC,MACrBG,EAAQF,gBAAkBzzC,KAAKyzC,gBAExBE,GAIX5O,QAAU,WAEN/kC,KAAKm/B,eAAgBr7B,KAAM,cAMnC3E,EAAOozC,eAAiB,EAIxBpzC,EAAOivC,UAAY,EACnBjvC,EAAOy0C,SAAW,EAClBz0C,EAAO0xC,WAAa,EAGpB1xC,EAAO00C,UAAY,EACnB10C,EAAO20C,YAAc,EACrB30C,EAAOmxC,cAAgB,EAGvBnxC,EAAOoxC,SAAW,EAClBpxC,EAAO40C,WAAa,EACpB50C,EAAO60C,aAAe,EAItB70C,EAAO80C,kBAAoB,EAC3B90C,EAAO+0C,aAAe,EACtB/0C,EAAOg1C,aAAe,EAItBh1C,EAAOuzC,UAAY,aAGnBvzC,EAAOyzC,oBAAsB,KAG7BzzC,EAAO4zC,aAAe,KACtB5zC,EAAO8zC,yBAA2B,KAGlC9zC,EAAOi0C,iBAAmB,KAG1Bj0C,EAAOg0C,WAAa,KAQpBh0C,EAAOi1C,KAAO,SAAU7lB,EAAUue,EAAUhpC,GAExC3E,EAAO2gC,SAAShkC,KAAKkE,MAErBA,KAAKuuB,SAAWA,EAEhBvuB,KAAK8sC,SAAyBpnC,SAAbonC,EAA0BA,EAAW,GAAI3tC,GAAO6vC,mBAAqB7rC,MAAuB,SAAhBsH,KAAK4pC,WAClGr0C,KAAK8D,KAAiB4B,SAAT5B,EAAsBA,EAAO3E,EAAOm1C,WAIrDn1C,EAAOm1C,UAAY,EACnBn1C,EAAOo1C,WAAa,EAEpBp1C,EAAOi1C,KAAKr7B,UAAY7c,OAAO4rC,OAAO3oC,EAAO2gC,SAAS/mB,WAEtD5Z,EAAOi1C,KAAKr7B,UAAUyZ,MAAQ,SAAUkO,GAMpC,MAJeh7B,UAAXg7B,IAAsBA,EAAS,GAAIvhC,GAAOi1C,KAAKp0C,KAAKuuB,SAAUvuB,KAAK8sC,SAAU9sC,KAAK8D,OAEtF3E,EAAO2gC,SAAS/mB,UAAUyZ,MAAM12B,KAAKkE,KAAM0gC,GAEpCA,GAOXvhC,EAAOq1C,KAAO,SAASjmB,EAAUue,GAE7B3tC,EAAO2gC,SAAShkC,KAAKkE,MAErBA,KAAKuuB,SAAWA,EAChBvuB,KAAK8sC,SAAyBpnC,SAAbonC,EAA0BA,EAAW,GAAI3tC,GAAOs1C,mBAAqBtxC,MAAuB,SAAhBsH,KAAK4pC,SAAqBpE,WAAW,KAItI9wC,EAAOq1C,KAAKz7B,UAAY7c,OAAO4rC,OAAO3oC,EAAO2gC,SAAS/mB,WAEtD5Z,EAAOq1C,KAAKz7B,UAAUyZ,MAAQ,SAAUkO,GAMpC,MAJeh7B,UAAXg7B,IAAsBA,EAAS,GAAIvhC,GAAOq1C,KAAKx0C,KAAKuuB,SAAUvuB,KAAK8sC,WAEvE3tC,EAAO2gC,SAAS/mB,UAAUyZ,MAAM12B,KAAKkE,KAAM0gC,GAEpCA,GAOXvhC,EAAOu1C,OAAS,SAAS5H,GAErB3tC,EAAO2gC,SAAShkC,KAAKkE,MAErBA,KAAK8sC,SAAyBpnC,SAAbonC,EAA0BA,EAAW,GAAI3tC,GAAOuyC,eAEjE1xC,KAAK20C,WAAa30C,KAAKu7B,SACvBv7B,KAAKu7B,SAAW,GAIpBp8B,EAAOu1C,OAAO37B,UAAY7c,OAAO4rC,OAAO3oC,EAAO2gC,SAAS/mB,WAExD5Z,EAAOu1C,OAAO37B,UAAUioB,aAAe,WAEnChhC,KAAKs2B,OAAO2E,YAAYj7B,KAAKkB,UAE7BlB,KAAK20C,WAAW5vC,IAAI,EAAG,EAAG/E,KAAKu7B,UAC/Bv7B,KAAKs2B,OAAOiB,qBAAqBv3B,KAAK20C,YAEjB,IAAjB30C,KAAKw7B,MAAMj4B,GAA4B,IAAjBvD,KAAKw7B,MAAM/3B,GACjCzD,KAAKs2B,OAAOkF,MAAMx7B,KAAKw7B,OAE3Bx7B,KAAKsgC,wBAAyB,GAIlCnhC,EAAOu1C,OAAO37B,UAAUyZ,MAAQ,SAASkO,GAOrC,MALeh7B,UAAXg7B,IACAA,EAAS,GAAIvhC,GAAOu1C,OAAO10C,KAAK8sC,WAEpC3tC,EAAO2gC,SAAS/mB,UAAUyZ,MAAM12B,KAAKkE,KAAM0gC,GAEpCA,GAOXvhC,EAAOy1C,SAAW,SAAS3F,GA6SvB,QAAS4F,GAAgBC,GAEhBC,GAAmBD,KAEpB3M,EAAI2D,wBAAwBgJ,GAC5BC,GAAmBD,IAAa,GAMxC,QAASE,KAEL,IAAM,GAAIF,KAAaC,IAEfA,GAAmBD,KAEnB3M,EAAI8M,yBAAyBH,GAC7BC,GAAmBD,IAAa,GAQ5C,QAASI,GAAiB3G,EAAe3gC,EAAQunC,GAEzCC,KAAsB7G,IAElBA,EACApG,EAAI8D,OAAO9D,EAAIkN,qBAEflN,EAAI4D,QAAQ5D,EAAIkN,sBAI5B,QAASC,GAAal3C,GAEdA,IAAUm3C,KACVpN,EAAIqN,UAAUp3C,GACdm3C,GAAgBn3C,GAmKxB,QAASq3C,GAAU3xC,EAAMkO,GAErB,GAAIi2B,EAUJ,OARa,aAATnkC,EACAmkC,EAASE,EAAIE,aAAaF,EAAIG,iBAChB,WAATxkC,IACLmkC,EAASE,EAAIE,aAAaF,EAAIK,gBAElCL,EAAIO,aAAaT,EAAQj2B,GACzBm2B,EAAIQ,cAAcV,GAEbE,EAAIS,mBAAmBX,EAAQE,EAAIU,gBAQjCZ,GANHta,QAAQpW,MAAM4wB,EAAIe,iBAAiBjB,IACnCta,QAAQpW,MAAM,+BACP,MAUf,QAASm+B,GAAatN,EAAgBG,EAAc+B,EAAU2E,GAE1D,GAAIhzC,GAAG05C,EAAOzN,EAASxvB,EACnBqB,IAEJA,GAAOha,KAAKqoC,GACZruB,EAAOha,KAAKwoC,EAEZ,KAAKtsC,IAAKgzC,GACNl1B,EAAOha,KAAK9D,GACZ8d,EAAOha,KAAKkvC,EAAWhzC,GAO3B,KAJAyc,EAAOqB,EAAO3H,OAITnW,EAAI,EAAG05C,EAAKC,EAAUpvC,OAAQvK,EAAI05C,EAAI15C,IAAK,CAE5C,GAAI45C,GAAcD,EAAU35C,EAE5B,IAAI45C,EAAYn9B,OAASA,EAIrB,MAFAm9B,GAAYC,YAELD,EAAY3N,QAM3BA,EAAUC,EAAIH,eAGd,IAAIpC,GAAYyD,EACZZ,EAAS,aAAe7C,EAAY,UAEpCmQ,GAAkBtN,GAASr2B,KAAK,MAEhC4jC,GACI/G,EAAWgH,UAAY,uCACb,GACVhH,EAAWgB,UAAY,sBAAwB,GAAIxH,GAClDr2B,KAAK,MAEV8jC,EAAmBT,EAAU,WAAYO,EACnC5N,GACN+N,EAAiBV,EAAU,SAAUM,EAAgBxN,EAEzDJ,GAAIW,aAAaZ,EAASiO,GAC1BhO,EAAIW,aAAaZ,EAASgO,GAE1B/N,EAAIY,YAAYb,GAEXC,EAAIa,oBAAoBd,EAASC,EAAIc,cACtCtb,QAAQpW,MAAM,+BAIlB2wB,EAAQoC,YACRpC,EAAQmC,aAER,IAAI+L,GAAa39B,EAAM3V,CAGvBszC,IAAgB,aAAc,kBAAmB,mBACzC,eAGR,KAAK39B,IAAK6xB,GACN8L,EAAYr2C,KAAK0Y,EAErB,KAAK3V,EAAI,EAAGA,EAAIszC,EAAY5vC,OAAQ1D,IAAK,CAErC,GAAIuzC,GAAaD,EAAYtzC,EAC7BolC,GAAQoC,SAAS+L,GAAclO,EAAIuC,mBAAmBxC,EAC9CmO,GAYZ,IAPAD,GAAgB,WAAY,SAAU,QAAS,eACvC,SAAU,UAMbtzC,EAAI,EAAGA,EAAIszC,EAAY5vC,OAAQ1D,IAAK,CAErC,GAAIwzC,GAAeF,EAAYtzC,EAC/BolC,GAAQmC,WAAWiM,GAAgBnO,EAAIoC,kBAAkBrC,EACjDoO,GAWZ,MARApO,GAAQtsC,GAAK26C,IACbX,EAAU71C,MACNmoC,QAAUA,EACVxvB,KAAOA,EACPo9B,UAAY,IAEhBr0C,EAAM+0C,KAAKC,OAAOC,SAAWd,EAAUpvC,OAEhC0hC,EAmCX,QAASyO,GAAWrP,EAAQsP,EAAQjK,EAAKG,EAAUpM,GAE3CoM,EAAS4B,cAEL5B,EAAS5E,SACT2O,GAAmB/J,GAEvBrrC,EAAMq1C,aAAahK,EAAU8J,EAAQjK,EAAKjM,GAC1CoM,EAAS4B,aAAc,EAG3B,IAAIqI,IAAkB,EAIlB7O,EAAU4E,EAAS5E,QAAS8O,EAAa9O,EAAQoC,SAAU2M,EAAanK,EAASxC,QA4ErF,OA1EIpC,IAAWgP,IACX/O,EAAI0D,WAAW3D,GACfgP,EAAkBhP,EAElB6O,GAAkB,GAGlBjK,EAASlxC,IAAMu7C,IACfA,EAAqBrK,EAASlxC,GAC9Bm7C,GAAkB,GAGlBzP,GAAU8P,IACVA,EAAiB9P,EACjByP,GAAkB,GAGtB5O,EAAIkE,iBAAiB2K,EAAWxP,kBAAkB,EAC1CF,EAAOE,iBAAiBpU,UAChC+U,EAAIkE,iBAAiB2K,EAAWjM,iBAAiB,EACzCrK,EAAOqM,iBAAiB3Z,UAChC+U,EAAIkP,iBAAiBL,EAAWM,cAAc,EACtC5W,EAAO6W,cAAcnkB,UAGzB2jB,IAKAE,EAAW7L,SAAShvC,MAAQuwC,EAAIxpC,MAChC8zC,EAAW/L,QAAQ9uC,MAAQuwC,EAAIxQ,KAC/B8a,EAAW9L,OAAO/uC,MAAQuwC,EAAIvQ,IAG1B0Q,EAASwC,SAAS3jB,WAAW,YACA,cAAtBmhB,EAASwC,UACTxC,EAASwC,SAASzjB,SAAS,aAIlCsc,EAAIkE,iBAAiB2K,EAAWQ,YAAY,EACpClQ,EAAOC,mBAAmBnU,UAE9BqkB,KACAC,EAAYxP,EAAS0O,GACrBa,IAAoB,GAIxBR,EAAWU,sBAAsBv7C,MAAQw7C,GAAQC,YAAYC;AAC7Db,EAAWc,0BAA0B37C,MAAQw7C,GAAQC,YAAYr0C,WAE1DspC,EAASwC,SAASzjB,SAAS,YAClCorB,EAAWlG,aAAa30C,MAAQ0wC,EAASiE,aACzCkG,EAAWjG,aAAa50C,MAAQ0wC,EAASkE,aACzCiG,EAAWhG,gBAAgB70C,MAAQ0wC,EAASmE,iBACf,mBAAtBnE,EAASwC,WAChBnH,EAAIkE,iBAAiB2K,EAAWQ,YAAY,EACpClQ,EAAOC,mBAAmBnU,UAClC+U,EAAIkP,iBAAiBL,EAAWM,cAAc,EACtC5W,EAAO6W,cAAcnkB,UAC7B6jB,EAAWU,sBAAsBv7C,MAAQw7C,GAAQC,YAAYC,OAC7Db,EAAWc,0BAA0B37C,MAAQw7C,GAAQC,YAAYr0C,WAIrEyzC,EAAWl5C,QAAQ3B,MAAQ0wC,EAAS/uC,QAGpCi6C,EAAqBhB,EAAYC,IAI9B/O,EAIX,QAAS8P,GAAqBhB,EAAYC,GACtC,GAAIZ,GAAYvyC,EAAMm0C,EAAYC,CAElC,KAAK7B,IAAcY,GACVD,EAAWX,KAGhBvyC,EAAOmzC,EAAWZ,GAAYvyC,KAC9Bm0C,EAAahB,EAAWZ,GAAYj6C,MACpC87C,EAAalB,EAAWX,GAGX,MAATvyC,EACAqkC,EAAI0E,UAAUqL,EAAYD,GAEZ,OAATn0C,EACLqkC,EAAIgQ,WAAWD,EAAYD,GAEb,MAATn0C,EACLqkC,EAAIyE,UAAUsL,EAAYD,EAAW1/B,EAAG0/B,EAAW3Y,EAC3C2Y,EAAWjwC,GACL,OAATlE,GACLqkC,EAAIiQ,UAAUF,EAAYD,EAAW,GAAIA,EAAW,GAC5CA,EAAW,GAAGA,EAAW,KAiK7C,QAASI,GAAcC,EAAYC,EAASC,EAAclR,EAAQsP,EAC1DjK,EAAK8L,EAAaC,GAEtB,GAAIC,GAAajY,EAAQn2B,EAAQuiC,EAAU3lC,EAAOC,EAAKwxC,CAInDL,IACApxC,EAAQmxC,EAAW9xC,OAAS,EAC5BY,KACAwxC,OAIAzxC,EAAQ,EACRC,EAAMkxC,EAAW9xC,OACjBoyC,EAAQ,EAGZ,KAAK,GAAI91C,GAAIqE,EAAOrE,IAAMsE,EAAKtE,GAAK81C,EAIhC,GAFAD,EAAcL,EAAWx1C,GAErB61C,EAAYx4C,OAAQ,CAMpB,GAJAugC,EAASiY,EAAYjY,OACrBn2B,EAASouC,EAAYpuC,OACrBuiC,EAAW6L,EAAYH,IAElB1L,EACD,QAEA2L,IACAh3C,EAAMo3C,aAAY,GAEtBp3C,EAAM4rC,aAAaP,EAASQ,WAC5B7rC,EAAM8rC,cAAcT,EAASU,YAC7B0H,EAAiBpI,EAASyB,cAClBzB,EAAS0B,oBACT1B,EAAS2B,mBAEjB,IAAIqK,GAAYpY,EAAOqM,iBAAiB7R,aAExCz5B,GAAMs3C,iBAAiBjM,EAAUgM,GAEjCr3C,EAAMu3C,aAAa1R,EAAQsP,EAAQjK,EAAKG,EAAUviC,EAC1Cm2B,IACJuY,GAAmBnM,EAASoM,WACJ,kBAArBpM,EAASwC,SACR7tC,EAAMu3C,aAAa1R,EAAQsP,EAAQjK,EAAKwM,EAChC5uC,EAAQm2B,GAES,iBAArBoM,EAASwC,SACb7tC,EAAMu3C,aAAa1R,EAAQsP,EAAQjK,EAAKyM,EAChC7uC,EAAQm2B,GAEXoM,EAASmD,WACW,UAAtBnD,EAASwC,UACY,IAArBxC,EAAS/uC,SACZ0D,EAAMu3C,aAAa1R,EAAQsP,EAAQjK,EAAK0M,EACpC9uC,EAAQm2B,KAoHhC,QAAS4Y,GAAcC,EAAS5Y,EAAO2G,GAgBnC,GAVAkS,KACAtC,EAAkB,KAClBE,EAAiB,KACjBqC,MACAC,MACAC,MACAC,KACAzC,KACA0C,KAEKN,EAAQ/yC,OAGb,IAAK,GAAI1D,GAAI,EAAGqK,EAAKosC,EAAQ/yC,OAAQ1D,EAAIqK,EAAIrK,IAEzC20C,IAAoB,EAEpB8B,EAAQz2C,GAAG3C,OAAOwgC,EAAO2G,EAAQwS,GAAeC,IAGhDP,KACAtC,EAAkB,KAClBE,EAAiB,KACjBqC,MACAC,MACAC,MACAC,KACAzC,KACA0C,KAmDR,QAASG,GAAUtZ,EAAQC,GAEvB,GAAIrB,GAAG2a,EAAI1rB,EAAUue,EAAUvL,CAE/B,KAAKb,EAAOwZ,cAERxZ,EAAOwZ,aAAc,EAErBxZ,EAAOqM,iBAAmB,GAAI5tC,GAAO23B,QACrC4J,EAAO6W,cAAgB,GAAIp4C,GAAOs2B,QAEV/vB,SAApBg7B,EAAOnS,UACgC7oB,SAAhCg7B,EAAOnS,SAAS2rB,cAEvBxZ,EAAOnS,SAAS2rB,aAAc,EAC9BxZ,EAAOnS,SAAS9W,iBAAiB,UAAW0iC,KAI5CzZ,YAAkBvhC,GAAOq1C,MAAQ9T,YAAkBvhC,GAAOi1C,MAI1D,IAHA7lB,EAAWmS,EAAOnS,SAClBue,EAAWpM,EAAOoM,SAEbxN,EAAI,EAAG2a,EAAK1rB,EAASG,eAAeloB,OAAQ84B,EAAI2a,EAAI3a,IAErDiC,EAAgBhT,EAASG,eAAe4Q,GAExCiC,EAAc3lC,GAAKw+C,IAId7Y,EAAc8Y,sBAEX3Z,YAAkBvhC,GAAOq1C,MACzB8F,EAAkB/Y,GAClBhT,EAAS0V,oBAAqB,EAC9B1V,EAAS2V,mBAAoB,GAGxBxD,YAAkBvhC,GAAOi1C,MAC9BmG,EAAkBhZ,GAEtBhT,EAASyV,oBAAqB,EAC9BzV,EAAS4V,kBAAmB,EAU5C,KAAKzD,EAAO8Z,cAAe,CAEvB,GAAI9Z,YAAkBvhC,GAAOq1C,MAAQ9T,YAAkBvhC,GAAOi1C,KAI1D,IAFA7lB,EAAWmS,EAAOnS,SAEb+Q,EAAI,EAAG2a,EAAK1rB,EAASG,eAAeloB,OAAQ84B,EAAI2a,EAAI3a,IACrDiC,EAAgBhT,EAASG,eAAe4Q,GAExCmb,EAAU9Z,EAAM+Z,eAAgBnZ,EAAeb,OAM9CA,aAAkBvhC,GAAOu1C,QAC9B/T,EAAM8K,eAAe1rC,KAAK2gC,EAE9BA,GAAO8Z,eAAgB,GAM/B,QAASG,GAAaja,GAElB,GAA4Da,GAAxDhT,EAAWmS,EAAOnS,QAAqBmS,GAAOoM,QAElD,IAAIpM,YAAkBvhC,GAAOq1C,MAAQ9T,YAAkBvhC,GAAOi1C,KAAM,CAEhE,IAAK,GAAI9U,GAAI,EAAG2a,EAAK1rB,EAASG,eAAeloB,OAAQ84B,EAAI2a,EAAI3a,IAEzDiC,EAAgBhT,EAASG,eAAe4Q,IAEpC/Q,EAASyV,oBAAsBzV,EAAS0V,oBACjC1V,EAAS4V,kBACT5V,EAAS2V,oBAChB0W,EAAWrZ,EAAe4G,EAAI8B,YAItC1b,GAASyV,oBAAqB,EAC9BzV,EAAS0V,oBAAqB,EAC9B1V,EAAS2V,mBAAoB,EAC7B3V,EAAS4V,kBAAmB,EAE5B5V,EAAS6V,mBAAoB,GAMrC,QAASyW,GAAana,EAAQC,GAEtBD,YAAkBvhC,GAAOq1C,MAAQ9T,YAAkBvhC,GAAOi1C,KAC1D0G,EAAgBna,EAAM+Z,eAAgBha,GAEjCA,YAAkBvhC,GAAOu1C,QAC9BqG,EAAsBpa,EAAM8K,eAAgB/K,GAEhDA,EAAO8Z,eAAgB,EAI3B,QAASM,GAAgBE,EAASta,GAE9B,IAAK,GAAIt4B,GAAI4yC,EAAQx0C,OAAS,EAAG4B,GAAK,IAAKA,EAEnC4yC,EAAQ5yC,GAAGs4B,SAAWA,GACtBsa,EAAQpyC,OAAOR,EAAG,GAK9B,QAAS2yC,GAAsBC,EAASta,GAEpC,IAAK,GAAIt4B,GAAI4yC,EAAQx0C,OAAS,EAAG4B,GAAK,IAAKA,EAEnC4yC,EAAQ5yC,KAAOs4B,GACfsa,EAAQpyC,OAAOR,EAAG,GAK9B,QAAS6yC,GAAqBC,GAE1B,GAAIxa,GAASwa,EAASxa,OAClBoM,EAAWpM,EAAOoM,QAEtB,IAAIA,EAASuB,aAGT,GAFA6M,EAASC,OAAS,KAClBD,EAAS7M,YAAcvB,GAClBA,EAASmD,UAAW,CACrB,GAAImL,GAAgBtO,EAASta,OAC7B4oB,GAAcr9C,QAAU,EACxBm9C,EAASG,MAAQD,OAKrBF,GAASC,OAASrO,EAClBoO,EAAS7M,YAAc,KAM/B,QAASuM,GAAWrZ,EAAe+Z,EAAM1U,GAErC,GAAIpF,GAAcD,EAAcC,YAC5BC,EAAaF,EAAcE,UAiB/B,IAd0C/7B,SAAtC67B,EAAcga,qBACdpT,EAAI2B,WAAW3B,EAAI4B,aAAcxI,EAAcga,qBAC/CpT,EAAI6B,WAAW7B,EAAI4B,aAAcvI,EAAa8Z,KAI9CnT,EAAI2B,WAAW3B,EAAI4B,aAAcxI,EAAc8Y,qBAC/ClS,EAAI6B,WAAW7B,EAAI4B,aAAcvI,EAAa8Z,IAGlDnT,EAAI2B,WAAW3B,EAAI4B,aAAcxI,EAAcia,oBAC/CrT,EAAI6B,WAAW7B,EAAI4B,aAActI,EAAY6Z,GAGzC/Z,EAAcG,aAC+Bh8B,SAAtC67B,EAAcka,oBAAmC,CACxD,GAAI/Z,GAAcH,EAAcG,WAChCyG,GAAI2B,WAAW3B,EAAI4B,aAAcxI,EAAcka,qBAC/CtT,EAAI6B,WAAW7B,EAAI4B,aAAcrI,EAAa4Z,GAclD,GAPI/Z,EAAcK,aAC+Bl8B,SAAtC67B,EAAcma,sBACrBvT,EAAI2B,WAAW3B,EAAI4B,aAAcxI,EAAcma,qBAC/CvT,EAAI6B,WAAW7B,EAAI4B,aAAcxI,EAAcK,YAAa0Z,IAI5D/Z,EAAcI,WAC6Bj8B,SAApC67B,EAAcoa,kBAAiC,CACtD,GAAIha,GAAYJ,EAAcI,SAC9BwG,GAAI2B,WAAW3B,EAAI+B,qBACX3I,EAAcoa,mBACtBxT,EAAI6B,WAAW7B,EAAI+B,qBAAsBvI,EAAW2Z,GAKxD,GAAI/Z,EAAcM,WAC6Bn8B,SAApC67B,EAAcqa,kBAAiC,CACtD,GAAI/Z,GAAYN,EAAcM,SAC9BsG,GAAI2B,WAAW3B,EAAI+B,qBACX3I,EAAcqa,mBACtBzT,EAAI6B,WAAW7B,EAAI+B,qBAAsBrI,EAAWyZ,IAQ5D,QAAShB,GAAkB/Y,GAEnBA,EAAcK,cACdL,EAAcma,oBAAsBvT,EAAIyB,gBAEzCrI,EAAcqC,YACbrC,EAAcga,oBAAsBpT,EAAIyB,gBAE5CrI,EAAc8Y,oBAAsBlS,EAAIyB,eACxCrI,EAAcka,oBAAsBtT,EAAIyB,eACxCrI,EAAcia,mBAAqBrT,EAAIyB,eAEvCrI,EAAcoa,kBAAoBxT,EAAIyB,eACtCrI,EAAcqa,kBAAoBzT,EAAIyB,eAEtCnoC,EAAM+0C,KAAKC,OAAOoF,aAGtB,QAAStB,GAAkBhsB,GAEvBA,EAAS8rB,oBAAsBlS,EAAIyB,eACnCrb,EAASitB,mBAAqBrT,EAAIyB,eAElCnoC,EAAM+0C,KAAKC,OAAOoF,aAGtB,QAASpB,GAAUqB,EAASvxC,EAAQm2B,GAEhCob,EAAQ/7C,MACJwK,OAASA,EACTm2B,OAASA,EACTya,OAAS,KACT9M,YAAc,OAKtB,QAAS0N,GAAcrb,EAAQ4G,GAE3B5G,EAAOqM,iBAAiBlU,iBAAiByO,EAAOC,mBACxC7G,EAAOR,aAEfQ,EAAO6W,cAAclhB,WAAWqK,EAAOqM,kBACvCrM,EAAO6W,cAAc3gB,YAIzB,QAASolB,GAAa5/C,GAElB,MAAiC,MAAzBA,EAASA,EAAQ,GAM7B,QAAS6/C,GAAe5jC,GAEpB,MAAO8vB,GAAI+T,OAIf,QAASC,GAAqBC,EAAazI,EAAS0I,GAE5CA,GAEAlU,EAAImU,cAAcF,EAAajU,EAAIoU,eAC3BC,EAAU7I,EAAQhB,QAC1BxK,EAAImU,cAAcF,EAAajU,EAAIsU,eAC3BD,EAAU7I,EAAQd,QAE1B1K,EAAImU,cAAcF,EAAajU,EAAIuU,mBAC3BF,EAAU7I,EAAQb,YAC1B3K,EAAImU,cAAcF,EAAajU,EAAIwU,mBAC3BH,EAAU7I,EAAQX,cAI1B7K,EAAImU,cAAcF,EAAajU,EAAIoU,eAC3BpU,EAAIyU,eACZzU,EAAImU,cAAcF,EAAajU,EAAIsU,eAC3BtU,EAAIyU,eAEZzU,EAAImU,cAAcF,EAAajU,EAAIuU,mBAC3BT,EAAetI,EAAQb,YAC/B3K,EAAImU,cAAcF,EAAajU,EAAIwU,mBAC3BV,EAAetI,EAAQX,aA8EvC,QAASwJ,GAAUvgD,GAEf,MAAIA,KAAMkD,EAAOi0C,iBACNjL,EAAI0U,cACX5gD,IAAMkD,EAAOg0C,WACNhL,EAAI2U,KAER,EAIX,QAASpF,GAAYxP,EAAS0O,GAC1B,GAAIjvC,GAAGo1C,EAAIC,EAA+B75C,EAAiB2qC,EAAWvI,EAAjDhtB,EAAI,EAAG+mB,EAAI,EAAGt3B,EAAI,EAEvCi1C,EAAUrF,GAEVsF,EAAYD,EAAQpF,YAAYC,OAAQqF,EAAeF,EAAQpF,YAAYr0C,UAE3E45C,EAAW,EAAGC,EAAY,EAAGC,EAAY,CAEzC,KAAK31C,EAAI,EAAGo1C,EAAKnG,EAAOpwC,OAAQmB,EAAIo1C,EAAIp1C,IAQpC,GANAq1C,EAAQpG,EAAOjvC,GAEfxE,EAAQ65C,EAAM75C,MACd2qC,EAAYkP,EAAMlP,UAClBvI,EAAWyX,EAAMzX,SAEbyX,YAAiB79C,GAAO0uC,MAAO,CAS/B,GAPAuP,IAEAG,GAAWtpB,sBAAsB+oB,EAAM9c,aACvCsd,GAASvpB,sBAAsB+oB,EAAMrkB,OAAOuH,aAC5Cqd,GAAW5qB,IAAI6qB,IACfD,GAAW9rB,YAEU,IAAjB8rB,GAAWh6C,GAA4B,IAAjBg6C,GAAW95C,GACT,IAAjB85C,GAAW75C,EAClB,QAEJy5C,GAAaG,GAAaC,GAAWh6C,EACrC45C,EAAaG,EAAY,GAAKC,GAAW95C,EACzC05C,EAAaG,EAAY,GAAKC,GAAW75C,EAEzCw5C,EAAUI,GAAan6C,EAAMoV,EAAIu1B,EACjCoP,EAAUI,EAAY,GAAKn6C,EAAMm8B,EAAIwO,EACrCoP,EAAUI,EAAY,GAAKn6C,EAAM6E,EAAI8lC,EAErCwP,GAAa,EAEbD,IAKRJ,EAAQzN,QAAQ,GAAKj3B,EACrB0kC,EAAQzN,QAAQ,GAAKlQ,EACrB2d,EAAQzN,QAAQ,GAAKxnC,EACrBi1C,EAAQpF,YAAYrxC,OAAS62C,EAGjC,QAASI,KAEL,IAEI,KAAMtV,EAAMuV,EAAQC,WAAW,sBAC3B32C,MAAQ42C,EACRC,mBAAqBC,EACrBC,UAAYC,EACZC,QAAUC,EACVC,sBAAwBC,QAElBjW,EAAMuV,EAAQC,WAAW,SAC3B32C,MAAQ42C,EACRC,mBAAqBC,EACrBC,UAAYC,EACZC,QAAUC,EACVC,sBAAwBC,KAExB,KAAM,gCAIhB,MAAO7mC,GAELoW,QAAQpW,MAAMA,IAItB,QAAS8mC,KAELlW,EAAImW,WAAW,EAAG,EAAG,EAAG,GACxBnW,EAAIoW,WAAW,GACfpW,EAAIqW,aAAa,GAEjBrW,EAAI8D,OAAO9D,EAAIsW,YACftW,EAAIuW,UAAUvW,EAAIwW,QAElBxW,EAAIyW,UAAUzW,EAAI0W,KAClB1W,EAAI2W,SAAS3W,EAAI4W,MACjB5W,EAAI8D,OAAO9D,EAAI6D,WAEf7D,EAAI8D,OAAO9D,EAAI+D,OACf/D,EAAI6W,cAAc7W,EAAI8W,UACtB9W,EAAI+W,UAAU/W,EAAIgX,UAAWhX,EAAIiX,qBAEjCjX,EAAImW,WAAWe,EAAY9mC,EAAG8mC,EAAY/f,EAAG+f,EAAYr3C,EACzCs3C,GAnqDpBrQ,EAAaA,KAEb,IAAIyO,GAAgCh4C,SAAtBupC,EAAWsQ,OAAuBtQ,EAAWsQ,OACjD3+C,SAASC,cAAc,UAEjCwoC,EAAsC3jC,SAAzBupC,EAAWrJ,UAA0BqJ,EAAWrJ,UACnD,QAASgY,EAA8Bl4C,SAArBupC,EAAWjoC,OAAsBioC,EAAWjoC,MACxD82C,EAAwDp4C,SAAlCupC,EAAW4O,oBAAmC5O,EAAW4O,mBAC/EG,EAAsCt4C,SAAzBupC,EAAW8O,WAA0B9O,EAAW8O,UAC5DG,EAAkCx4C,SAAvBupC,EAAWgP,SAAwBhP,EAAWgP,QAC1DG,EAA8D14C,SAArCupC,EAAWkP,uBAAsClP,EAAWkP,sBACpFkB,EAAwC35C,SAA1BupC,EAAWqP,WAA2B,GAAIn/C,GAAOkgC,MACxE4P,EAAWqP,YAAc,GAAIn/C,GAAOkgC,MAAM,GACzCigB,EAAwC55C,SAA1BupC,EAAWuQ,WAA2BvQ,EAAWuQ,WAAa,EAC7EnG,EAAmB,GAAIl6C,GAAO2xC,oBAAoB7B,EAAWiK,SAC7DC,EAAiC,GAAIh6C,GAAOmyC,8BAA8BrC,EAAWiK,SACrFE,EAAgC,GAAIj6C,GAAOqyC,6BAA6BvC,EAAWiK,SACnFD,IAAoBhK,EAAWiK,OAGvCl5C,MAAKy/C,WAAa/B,EAClB19C,KAAKypC,QAAU,KACfzpC,KAAKitC,iBAAmDvnC,SAAhCupC,EAAWhC,iBAAiCgC,EAAWhC,iBAC1CvnC,SAA1Bg6C,KAAKzS,iBAAkCyS,KAAKzS,iBAAmB,EAI1EjtC,KAAK2/C,WAAY,EACjB3/C,KAAK4/C,gBAAiB,EACtB5/C,KAAK6/C,gBAAiB,EACtB7/C,KAAK8/C,kBAAmB,EAIxB9/C,KAAK+/C,aAAc,EAEnB//C,KAAKggD,mBAAoB,EACzBhgD,KAAKigD,iBAAkB,EAEvBjgD,KAAKkgD,qBAILlgD,KAAKw2C,MACDC,QAEIC,SAAW,EACXmF,WAAa,EACbsE,SAAW,GAGfhgD,QAEIigD,MAAQ,EACRte,SAAW,EACXQ,MAAQ,EACR+d,OAAS,GAMjB,IA0DIlY,GA1DA1mC,EAAQzB,KACZ41C,KAAgBW,EAAoB,EAGpCW,EAAkB,KAAkCC,KAAyBqC,EAA4B,KAAMpC,EAAiB,KAAMgD,EAAwB,EAI9JR,KAAsBC,KACtBJ,MAEAE,MAAoBD,MACpBtE,GAAoB,KACpBG,GAAgB,KAEhB+K,GAAiB,EAAGC,GAAkB,EAAGzG,GAAgB,EAAGC,GAAiB,EAC7EhF,MAGAyL,GAAoB,GAAIrhD,GAAO23B,QAC/B0mB,GAAW,GAAIr+C,GAAOszB,QAGtB8qB,GAAa,GAAIp+C,GAAOszB,QACxBglB,IAAoB,EAEpBG,IACIpI,SAAY,EAAG,EAAG,GAClBqI,aACIrxC,OAAS,EACTsxC,UACAt0C,cAEJ65B,OACI72B,OAAS,EACTsxC,UACAt0C,aACAi9C,cAEJC,MACIl6C,OAAS,EACTsxC,UACAt0C,aACAi9C,aACAE,cACAC,aACAC,cAEJC,MACIt6C,OAAS,EACTu6C,aACAC,gBACAx9C,cAQRi6C,KACAY,IAEAr+C,KAAKypC,QAAUtB,CACf,IAAI8Y,IAAgB9Y,EAAI+Y,aAAa,0BACjCC,GAAgBhZ,EAAI+Y,aAAa,iBAIrClhD,MAAKohD,oBAAsB,WACvB,OAAQC,YAAaC,QAAQL,IACzBM,kBAAoBD,QAAQH,MAIpCnhD,KAAK29C,WAAa,WACd,MAAOxV,IAGXnoC,KAAK0pC,aAAe,WAChB,MAAOL,IAGXrpC,KAAKwhD,iBAAmB,SAAShiB,EAAKx4B,GAClCq4C,EAAY9f,OAAOC,GACnB8f,EAAct4C,EAEdmhC,EAAImW,WAAWe,EAAY9mC,EAAG8mC,EAAY/f,EAAG+f,EAAYr3C,EACzCs3C,IAGpBt/C,KAAKyhD,cAAgB,SAASxS,GAC1BoK,EAAmB,GAAIl6C,GAAO2xC,oBAAoB7B,GAClDkK,EAAiC,GAAIh6C,GAAOmyC,8BAA8BrC,GAC1EmK,EAAgC,GAAIj6C,GAAOqyC,6BAA6BvC,GACxEgK,GAAkB,GAGtBj5C,KAAK0hD,eAAiB,WAClBzI,GAAkB,GAGtBj5C,KAAK2hD,QAAU,SAASvjD,EAAOZ,GAE3B8iD,GAAiB5C,EAAQt/C,MAAQA,EAAQ4B,KAAKitC,iBAC9CsT,GAAmB7C,EAAQlgD,OAASA,EAASwC,KAAKitC,iBAElDyQ,EAAQ18C,MAAM5C,MAAQA,EAAQ,KAC9Bs/C,EAAQ18C,MAAMxD,OAASA,EAAS,KAEhC2qC,EAAIyZ,SAAS,EAAG,EAAGzZ,EAAI0Z,mBAAoB1Z,EAAI2Z,sBAGnD9hD,KAAK6B,MAAQ,SAASsB,EAAO4+C,EAAO9D,GAEhC,GAAIr+B,GAAO,GAEGla,SAAVvC,GAAuBA,KACvByc,GAAQuoB,EAAI6Z,mBACFt8C,SAAVq8C,GAAuBA,KACvBniC,GAAQuoB,EAAI8Z,mBACAv8C,SAAZu4C,GAAyBA,KACzBr+B,GAAQuoB,EAAI+Z,oBAChB/Z,EAAItmC,MAAM+d,IAId5f,KAAKmiD,YAAc,SAASh/C,EAAO4+C,EAAO9D,GAEtCj+C,KAAK6B,MAAMsB,EAAO4+C,EAAO9D,IAI7Bj+C,KAAK+4C,iBAAmB,SAASjM,EAAUgM,GAEvC,GAAIsJ,GAActV,EAASqB,OAAShvC,EAAO0xC,WACvCwR,EAAYvV,EAASqB,OAAShvC,EAAOy0C,QACzCyO,GAAYvJ,GAAauJ,EAAYA,EAEjCzI,IAAoBwI,IAEhBA,EAEAja,EAAI4D,QAAQ5D,EAAI6D,WAIhB7D,EAAI8D,OAAO9D,EAAI6D,WAInB4N,EAAkBwI,GAIlBvI,IAAkBwI,IAEdA,EAEAla,EAAIyW,UAAUzW,EAAIma,IAIlBna,EAAIyW,UAAUzW,EAAI0W,KAItBhF,EAAgBwI,IAMxBriD,KAAKqtC,aAAe,SAASC,GAErBqM,KAAkBrM,IAEdA,EAEAnF,EAAI8D,OAAO9D,EAAIsW,YAIftW,EAAI4D,QAAQ5D,EAAIsW,YAIpB9E,GAAgBrM,IAMxBttC,KAAKutC,cAAgB,SAASC,GAEtBkM,KAAmBlM,IAEnBrF,EAAIoa,UAAU/U,GACdkM,GAAiBlM,IAMzBxtC,KAAK64C,YAAc,SAAS2J,GAEnBA,GAIDra,EAAI8D,OAAO9D,EAAI+D,OACf/D,EAAIsa,sBAAsBta,EAAI8W,SAAU9W,EAAI8W,UAC5C9W,EAAIua,kBAAkBva,EAAIgX,UAAWhX,EAAIiX,oBACjCjX,EAAIwa,IAAKxa,EAAIiX,sBANrBjX,EAAI4D,QAAQ5D,EAAI+D,OAUpBuN,GAAe+I,GAKnBxiD,KAAK4iD,cAAgB,SAASC,GAE1BA,EAAOtZ,KAAKvpC,MACZA,KAAKkgD,kBAAkBngD,KAAK8iD,GA0DhC,IAAI1I,IAAoB,QAApBA,IAA6B95C,GAE7B,GAAIkuB,GAAWluB,EAAMs4B,MACrBpK,GAAS0Q,oBAAoB,UAAWkb,IAExC2I,GAAmBv0B,GAEnB9sB,EAAM+0C,KAAKC,OAAOoF,cAIlBkH,GAAmB,QAAnBA,IAA4B1iD,GAE5B,GAAIszC,GAAUtzC,EAAMs4B,MAEpBgb,GAAQ1U,oBAAoB,UAAW8jB,IAEvCC,GAAkBrP,GAElBlyC,EAAM+0C,KAAKC,OAAO0J,YAIlB8C,GAAoB,QAApBA,IAA6B5iD,GAE7B,GAAIysC,GAAWzsC,EAAMs4B,MACrBmU,GAAS7N,oBAAoB,UAAWgkB,IAExCpM,GAAmB/J,IAInBgW,GAAqB,SAASv0B,GAU9B,GARAA,EAAS2rB,YAAcx0C,OAEcA,SAAjC6oB,EAAS8rB,qBACTlS,EAAI+a,aAAa30B,EAAS8rB,qBAEM30C,SAAhC6oB,EAASitB,oBACTrT,EAAI+a,aAAa30B,EAASitB,oBAEE91C,SAA5B6oB,EAASG,eAET,IAAK,GAAI4Q,GAAI,EAAG2a,EAAK1rB,EAASmV,OAAQpE,EAAI2a,EAAI3a,IAAK,CAE/C,GAAIiC,GAAgBhT,EAASG,eAAe4Q,EAEF55B,UAAtC67B,EAAc8Y,qBACdlS,EAAI+a,aAAa3hB,EAAc8Y,qBAEM30C,SAArC67B,EAAcia,oBACdrT,EAAI+a,aAAa3hB,EAAcia,oBAEO91C,SAAtC67B,EAAcka,qBACdtT,EAAI+a,aAAa3hB,EAAcka,qBAEK/1C,SAApC67B,EAAcoa,mBACdxT,EAAI+a,aAAa3hB,EAAcoa,mBAEKj2C,SAApC67B,EAAcqa,mBACdzT,EAAI+a,aAAa3hB,EAAcqa,qBAM3C/E,GAAqB,SAAS/J,GAE9B,GAAI5E,GAAU4E,EAAS5E,OAEvB,IAAgBxiC,SAAZwiC,EAAJ,CAGA4E,EAAS5E,QAAUxiC,MAOnB,IAAI5C,GAAGqK,EAAI0oC,EACPsN,GAAgB,CAEpB,KAAKrgD,EAAI,EAAGqK,EAAKyoC,EAAUpvC,OAAQ1D,EAAIqK,EAAIrK,IAIvC,GAFA+yC,EAAcD,EAAU9yC,GAEpB+yC,EAAY3N,UAAYA,EAAS,CAEjC2N,EAAYC,YAEkB,IAA1BD,EAAYC,YAEZqN,GAAgB,EAIpB,OAMR,GAAIA,KAAkB,EAAM,CAKxB,GAAIC,KAEJ,KAAKtgD,EAAI,EAAGqK,EAAKyoC,EAAUpvC,OAAQ1D,EAAIqK,EAAIrK,IAEvC+yC,EAAcD,EAAU9yC,GAEpB+yC,EAAY3N,UAAYA,GAExBkb,EAAYrjD,KAAK81C,EAMzBD,GAAYwN,EAEZjb,EAAIgb,cAAcjb,GAElBzmC,EAAM+0C,KAAKC,OAAOC,cAMtBsM,GAAoB,SAASrP,GAE7B,GAAIA,EAAQ3G,OAAS2G,EAAQ3G,MAAMqW,mBAI/Blb,EAAImb,cAAc3P,EAAQ3G,MAAMqW,wBAI/B,CAID,IAAK1P,EAAQuG,YACT,MAEJvG,GAAQuG,aAAc,EACtB/R,EAAImb,cAAc3P,EAAQ4P,iBA+IlCvjD,MAAK82C,aAAe,SAAShK,EAAU8J,EAAQjK,EAAKjM,GAEhDoM,EAASr1B,iBAAiB,UAAWwrC,GAErC,IAA0BhU,GAAiDK,CAI3E,IAFAA,EAAWxC,EAASwC,SAEN,CAEV,GAAIrH,GAAS9oC,EAAOgrC,UAAUmF,EAC9BxC,GAASvE,aAAeN,EAAOM,aAC/BuE,EAAS1E,eAAiBH,EAAOG,eACjC0E,EAASxC,SAAWnrC,EAAOqkD,YAAYhxB,MAAMyV,EAAOqC,UAKxD2E,GACIgB,UAAYnD,EAASmD,UACrBgG,UAAYnJ,EAASsE,UAGzBtE,EAAS5E,QAAUwN,EAAa5I,EAAS1E,eACjC0E,EAASvE,aAAcuE,EAASxC,SAAU2E,IAgItDjvC,KAAKg5C,aAAe,SAAS1R,EAAQsP,EAAQjK,EAAKG,EAAUvL,EACpDb,GAEJ,GAAKoM,EAASrM,QAAd,CAGA,GAAIyH,GAASmC,CAKbnC,GAAUyO,EAAWrP,EAAQsP,EAAQjK,EAAKG,EAAUpM,GAEpD2J,EAAanC,EAAQmC,UAErB,IAAIoZ,IAAgB,EAAOC,EAAe5W,EAASmD,UAAY,EAAI,EAAG0T,EAAwC,SAAnBpiB,EAAc3lC,GACjF,EAAbssC,EAAQtsC,GAAU8nD,CAEzBC,KAAsBnK,IACtBA,EAA4BmK,EAC5BF,GAAgB,GAKhBA,IAEAzO,IAGI3K,EAAWnpC,UAAY,IACvBinC,EAAI2B,WAAW3B,EAAI4B,aACXxI,EAAc8Y,qBACtBxF,EAAgBxK,EAAWnpC,UAC3BinC,EAAIgE,oBAAoB9B,EAAWnpC,SAAU,EAAGinC,EAAIiE,OAC5C,EAAO,EAAG,IAIlB/B,EAAWlnC,OAAS,IACpBglC,EAAI2B,WAAW3B,EAAI4B,aACXxI,EAAcia,oBACtB3G,EAAgBxK,EAAWlnC,OAC3BglC,EAAIgE,oBAAoB9B,EAAWlnC,MAAO,EAAGglC,EAAIiE,OAAO,EAChD,EAAG,IAIX/B,EAAWvM,QAAU,IACrBqK,EAAI2B,WAAW3B,EAAI4B,aACXxI,EAAcka,qBACtB5G,EAAgBxK,EAAWvM,QAC3BqK,EAAIgE,oBAAoB9B,EAAWvM,OAAQ,EAAGqK,EAAIiE,OAAO,EACjD,EAAG,IAIX/B,EAAW3gC,QAAU,IACrBy+B,EAAI2B,WAAW3B,EAAI4B,aACXxI,EAAcga,qBACtB1G,EAAgBxK,EAAW3gC,QAC3By+B,EAAIgE,oBAAoB9B,EAAW3gC,OAAQ,EAAGy+B,EAAIiE,OAAO,EACjD,EAAG,IAIX/B,EAAWnjC,QAAU,IACrBihC,EAAI2B,WAAW3B,EAAI4B,aACXxI,EAAcma,qBACtB7G,EAAgBxK,EAAWnjC,QAC3BihC,EAAIgE,oBAAoB9B,EAAWnjC,OAAQ,EAAGihC,EAAIiE,OAAO,EACjD,EAAG,IAMnB,IAAIwX,GAAWC,CAGf,IAAInjB,YAAkBvhC,GAAOq1C,KAAM,CAE/B,GAA0B,cAAtB1H,EAASwC,SAA0B,CACnC,GAAIwU,GAAsBhX,EAASpP,OAAOhP,eAAe,EACrD+0B,KACAtb,EAAI2B,WAAW3B,EAAI4B,aACXxI,EAAc8Y,qBACtBlS,EAAI6B,WAAW7B,EAAI4B,aACX+Z,EAAoBtiB,YAAa2G,EAAI8B,aAC7C9B,EAAI2B,WAAW3B,EAAI4B,aACXxI,EAAcka,qBACtBtT,EAAI6B,WAAW7B,EAAI4B,aACX+Z,EAAoBpiB,YAAayG,EAAI8B,aAC7C9B,EAAI2B,WAAW3B,EAAI+B,qBACX3I,EAAcoa,mBACtBxT,EAAI6B,WAAW7B,EAAI+B,qBACX4Z,EAAoBniB,UAAWwG,EAAI8B,cAG/C2Z,EAAYE,EAAoB/hB,QAEhCkf,GAAc8C,yBAAyB1Z,EAAW3gC,OAAQ,GAC1Du3C,GAAc8C,yBAAyB1Z,EAAWnjC,OAAQ,GAC1D+5C,GAAc8C,yBAAyB1Z,EAAWlnC,MAAO,GAEzD89C,GAAc+C,2BAA2B7b,EAAIwF,UACrCiW,EAAWzb,EAAIyF,eAAgB,EAC/BrM,EAAcK,YAAYp7B,QAElCy6C,GAAc8C,yBAAyB1Z,EAAW3gC,OAAQ,GAC1Du3C,GAAc8C,yBAAyB1Z,EAAWnjC,OAAQ,GAC1D+5C,GAAc8C,yBAAyB1Z,EAAWlnC,MAAO,OAIpD2pC,GAASmD,WACd4T,EAAYtiB,EAAcS,QAC1BsT,EAAaxI,EAASoD,oBAElBuT,GACAtb,EAAI2B,WAAW3B,EAAI+B,qBACX3I,EAAcqa,mBAE1BzT,EAAIuF,aAAavF,EAAI8b,MAAOJ,EAAW1b,EAAIyF,eAAgB,KAI3DgW,EAAYriB,EAAcQ,QAEtB0hB,GACAtb,EAAI2B,WAAW3B,EAAI+B,qBACX3I,EAAcoa,mBAC1BxT,EAAIuF,aAAavF,EAAIwF,UAAWiW,EAAWzb,EAAIyF,eACvC,GAIZnsC,GAAM+0C,KAAKr2C,OAAOigD,QAClB3+C,EAAM+0C,KAAKr2C,OAAO2hC,UAAY8hB,EAC9BniD,EAAM+0C,KAAKr2C,OAAOmiC,OAASshB,EAAY,MAIlCljB,aAAkBvhC,GAAOi1C,OAC9ByP,EAAYtiB,EAAcO,SAE1BwT,EAAaxI,EAASoC,WACtB/G,EAAI+b,WAAW/b,EAAI8b,MAAO,EAAGJ,GAE7BpiD,EAAM+0C,KAAKr2C,OAAOigD,WA0E1BpgD,KAAKG,OAAS,SAASwgC,EAAO2G,EAAQ6c,GAElC,GAAI7c,YAAkBnoC,GAAOwoC,SAAW,EAIpC,WAFAha,SACSpW,MAAM,sEAKnB,IAAIzU,GAAGqK,EAEPwrC,EAAajY,EAAQ4X,EAErB1B,EAASjW,EAAMyjB,SAAUzX,EAAMhM,EAAMgM,GA8CrC,KA1CAwK,KACAM,IAAoB,EAIhBz3C,KAAKigD,iBACLtf,EAAMM,oBAKYv7B,SAAlB4hC,EAAOtH,QACPsH,EAAOrG,oBAEXqG,EAAOC,mBAAmBlR,WAAWiR,EAAOpH,aAE5CsgB,GAAkB3nB,iBAAiByO,EAAOE,iBAClCF,EAAOC,oBAIXvnC,KAAKggD,mBACLhgD,KAAKqkD,iBAAiB1jB,GAE1Bl/B,EAAM+0C,KAAKr2C,OAAOigD,MAAQ,EAC1B3+C,EAAM+0C,KAAKr2C,OAAO2hC,SAAW,EAC7BrgC,EAAM+0C,KAAKr2C,OAAOmiC,MAAQ,EAC1B7gC,EAAM+0C,KAAKr2C,OAAOkgD,OAAS,EAE3BvG,GAAgBwG,GAChBvG,GAAiBwG,IAEbvgD,KAAK2/C,WAAawE,IAClBnkD,KAAK6B,MAAM7B,KAAK4/C,eAAgB5/C,KAAK6/C,eAC7B7/C,KAAK8/C,kBAMjBxH,EAAa3X,EAAM+Z,eAEd53C,EAAI,EAAGqK,EAAKmrC,EAAW9xC,OAAQ1D,EAAIqK,EAAIrK,IAExC61C,EAAcL,EAAWx1C,GACzB49B,EAASiY,EAAYjY,OAErBiY,EAAYx4C,QAAS,EAEjBugC,EAAOD,UACPsb,EAAcrb,EAAQ4G,GACtB2T,EAAqBtC,GACrBA,EAAYx4C,QAAS,EAM7B,IAAI2sC,GAAW,IAIf9sC,MAAK64C,aAAY,GAEjBR,EAAc1X,EAAM+Z,gBAAgB,EAAM,SAAUpT,EAAQsP,EACpDjK,GAAK,EAAOG,GAGpBuL,EAAc1X,EAAM+Z,gBAAgB,EAAM,QAASpT,EAAQsP,EAAQjK,GAC3D,EAAMG,GAIduL,EAAc1X,EAAM+Z,gBAAgB,EAAO,cAAepT,EAClDsP,EAAQjK,GAAK,EAAMG,GAI3BwM,EAAct5C,KAAKkgD,kBAAmBvf,EAAO2G,GAK7CtnC,KAAKqtC,cAAa,GAClBrtC,KAAKutC,eAAc,IA8CvBvtC,KAAKqkD,iBAAmB,SAAS1jB,GAY7B,GAVKA,EAAM+Z,iBAEP/Z,EAAM+Z,kBACN/Z,EAAM2jB,2BACN3jB,EAAM8K,kBACN9K,EAAM4jB,kBAKN5jB,EAAM6jB,eAAeh+C,OAAQ,CAE7B,KAAOm6B,EAAM6jB,eAAeh+C,QACxBwzC,EAAUrZ,EAAM6jB,eAAe,GAAI7jB,GACnCA,EAAM6jB,eAAe57C,OAAO,EAAG,EAMnC4wC,MAIJ,KAAO7Y,EAAM8jB,iBAAiBj+C,QAE1Bq0C,EAAala,EAAM8jB,iBAAiB,GAAI9jB,GACxCA,EAAM8jB,iBAAiB77C,OAAO,EAAG,EAMrC,KAAK,GAAIR,GAAI,EAAGoL,EAAKmtB,EAAM+Z,eAAel0C,OAAQ4B,EAAIoL,EAAIpL,IAEtDuyC,EAAaha,EAAM+Z,eAAetyC,GAAGs4B,SAgU7C1gC,KAAKytC,WAAa,SAASkG,EAAS+Q,GAEhC,GAAI/Q,EAAQjF,YAAa,CAEhBiF,EAAQuG,cAETvG,EAAQuG,aAAc,EAEtBvG,EAAQl8B,iBAAiB,UAAWsrC,IAEpCpP,EAAQ4P,eAAiBpb,EAAIwc,gBAE7BljD,EAAM+0C,KAAKC,OAAO0J,YAItBhY,EAAImE,cAAcnE,EAAIoE,SAAWmY,GACjCvc,EAAIyc,YAAYzc,EAAI0c,WAAYlR,EAAQ4P,gBAExCpb,EAAI2c,YAAY3c,EAAI4c,oBAAqBpR,EAAQH,OACjDrL,EAAI2c,YAAY3c,EAAI6c,+BACZrR,EAAQJ,kBAChBpL,EAAI2c,YAAY3c,EAAI8c,iBAAkBtR,EAAQF,gBAE9C,IAAIzG,GAAQ2G,EAAQ3G,MAAOqP,EAAoBL,EAAahP,EAAM5uC,QACvD49C,EAAahP,EAAMxvC,QAAS0nD,EAAW1I,EAAU7I,EAAQ9lB,QAASs3B,EAAS3I,EAAU7I,EAAQ7vC,KAExGq4C,GAAqBhU,EAAI0c,WAAYlR,EAAS0I,EAE9C,IAAI+I,GAAQ5S,EAAUmB,EAAQnB,OAS9B,IAAIA,EAAQhsC,OAAS,GAAK61C,EAAmB,CAEzC,IAAK,GAAIv5C,GAAI,EAAGqK,EAAKqlC,EAAQhsC,OAAQ1D,EAAIqK,EAAIrK,IACzCsiD,EAAS5S,EAAQ1vC,GACjBqlC,EAAIkd,WAAWld,EAAI0c,WAAY/hD,EAAGoiD,EAAUA,EACpCC,EAAQC,EAGpBzR,GAAQL,iBAAkB,MAI1BnL,GAAIkd,WAAWld,EAAI0c,WAAY,EAAGK,EAAUA,EAAUC,EAC9CxR,EAAQ3G,MAEhB2G,GAAQL,iBAAmB+I,GAC3BlU,EAAImd,eAAend,EAAI0c,YAE3BlR,EAAQjF,aAAc,EAElBiF,EAAQD,UACRC,EAAQD,eAIZvL,GAAImE,cAAcnE,EAAIoE,SAAWmY,GACjCvc,EAAIyc,YAAYzc,EAAI0c,WAAYlR,EAAQ4P,iBAuHhDvjD,KAAK4iD,cAAc,GAAIzjD,GAAO4oC,eAOlC5oC,EAAOyhC,MAAQ,WAEXzhC,EAAO2gC,SAAShkC,KAAKkE,MAErBA,KAAK2sC,IAAM,KAGX3sC,KAAK04C,iBAAmB,KAExB14C,KAAKqgC,kBAAmB,EAExBrgC,KAAKulD,aACLvlD,KAAKokD,YAELpkD,KAAKwkD,kBACLxkD,KAAKykD,qBAITtlD,EAAOyhC,MAAM7nB,UAAY7c,OAAO4rC,OAAO3oC,EAAO2gC,SAAS/mB,WAEvD5Z,EAAOyhC,MAAM7nB,UAAU8nB,YAAc,SAASH,GAG1C,GAAIA,YAAkBvhC,GAAO0uC,MAErB7tC,KAAKokD,SAAS3jD,QAAQigC,SACtB1gC,KAAKokD,SAASrkD,KAAK2gC,GAGnBA,EAAO/H,QAAmCjzB,SAAzBg7B,EAAO/H,OAAOqH,QAC/BhgC,KAAKe,IAAI2/B,EAAO/H,YAOpB,IAAI34B,KAAKulD,UAAU9kD,QAAQigC,QAAgB,CAEvC1gC,KAAKulD,UAAUxlD,KAAK2gC,GACpB1gC,KAAKwkD,eAAezkD,KAAK2gC,EAIzB,IAAI8kB,GAAMxlD,KAAKykD,iBAAiBhkD,QAAQigC,EAEpC8kB,SACAxlD,KAAKykD,iBAAiB77C,OAAO9F,EAAG,GAO5C,IAAK,GAAIA,GAAI,EAAGA,EAAI49B,EAAOT,SAASz5B,OAAQ1D,IACxC9C,KAAK6gC,YAAYH,EAAOT,SAASn9B,KAIzC3D,EAAOyhC,MAAM7nB,UAAUgoB,eAAiB,SAASL,GAE7C,GAAI8kB,EACJ,IAAI9kB,YAAkBvhC,GAAO0uC,MAEzB2X,EAAMxlD,KAAKokD,SAAS3jD,QAAQigC,GAExB8kB,QACAxlD,KAAKokD,SAASx7C,OAAO48C,EAAK,OAS9B,IAFAA,EAAMxlD,KAAKulD,UAAU9kD,QAAQigC,GAEzB8kB,OAAY,CAEZxlD,KAAKulD,UAAU38C,OAAO48C,EAAK,GAC3BxlD,KAAKykD,iBAAiB1kD,KAAK2gC,EAI3B,IAAI+kB,GAAKzlD,KAAKwkD,eAAe/jD,QAAQigC,EAEjC+kB,SACAzlD,KAAKwkD,eAAe57C,OAAO48C,EAAK,GAO5C,IAAK,GAAI1iD,GAAI,EAAGA,EAAI49B,EAAOT,SAASz5B,OAAQ1D,IACxC9C,KAAK+gC,eAAeL,EAAOT,SAASn9B,KAU5C3D,EAAOumD,IAAM,SAAWlmB,EAAKrD,EAAMC,GAE/Bp8B,KAAKwC,KAAO,GAEZxC,KAAKmD,MAAQ,GAAIhE,GAAOkgC,MAAOG,GAE/Bx/B,KAAKm8B,KAAkBz2B,SAATy2B,EAAuBA,EAAO,EAC5Cn8B,KAAKo8B,IAAgB12B,SAAR02B,EAAsBA,EAAM,KAI7Cj9B,EAAOumD,IAAI3sC,UAAUyZ,MAAQ,WAEzB,MAAO,IAAIrzB,GAAOumD,IAAK1lD,KAAKmD,MAAMs8B,SAAUz/B,KAAKm8B,KAAMn8B,KAAKo8B,MAIhEj9B,EAAOqkD,aAEHhxB,MAAO,SAAWmzB,GAEd,GAAIltC,GAAgCmtC,IAEpC,KAAKntC,IAAKktC,GAAc,CACpBC,EAAentC,MACfmtC,EAAentC,GAAG3U,KAAO6hD,EAAaltC,GAAG3U,IAEzC,IAAI+hD,GAAWF,EAAaltC,GAAGrc,KAE3BypD,aAAoB1mD,GAAOkgC,MAC3BumB,EAAentC,GAAGrc,MAAQypD,EAASrzB,QACV,gBAAbqzB,GACZD,EAAentC,GAAGrc,MAAQypD,EACrBA,YAAoB36C,OACzB06C,EAAentC,GAAGrc,SAElBuxB,QAAQpW,MAAM,0EAItB,MAAOquC,IAGXE,6BACC,yBACA,iCAEA,yBACA,yBACA,wBAEA,uBACA,uBACA,0BACA,mBACA,mBACA,mBAMA,gBACA,gCACA,4BACA,oBACA,+BACA,oBACA,kCACA,oCACA,0BACA,gCACA,4BACA,8CACA,qCACA,oCAEA,qCACA,6BACA,iCACA,yCACA,yCACA,4CACA,mCACA,mCACA,mCACA,iBACA,wCACA,kBACA,4CAGA,kBAEA,qBACA,WACA,2BACA,uBACA,8BACA,iCACA,gCACA,gCACA,8BACA,oCACA,oCACA,mCACA,qBACA,kCACA,eACA,+CACA,QACA,uDACA,8CACA,sGACA,gCACC1zC,KAAK,OAGXjT,EAAOgrC,WACH4b,OACI3d,gBACR,2BACA,yBAEA,yBACA,yBACA,wBAEA,uBAEA,gBAEA,8CAEA,qDACA,8DAEA,uFAEA,KAEEh2B,KAAK,MAECm2B,cAER,gCACA,iCACA,2BACA,6BAEA,2BACA,wBAEA,uBAEA,gBAEA,sBACA,iEACA,mDAEA,KAEEn2B,KAAK,MAECk4B,UACIvsC,SAAW+F,KAAM,IAAK1H,MAAO,GAC7BgvC,UAAYtnC,KAAM,IAAK1H,MAAO,GAAI+C,GAAOkgC,MAAM,EAAK,EAAK,IACzD6L,SAAWpnC,KAAM,IAAK1H,MAAO,GAC7B+uC,QAAUrnC,KAAM,IAAK1H,MAAO,OAKvC4pD,gBACO5d,gBACR,2BACA,yBACA,iCAEA,yBACA,yBACA,wBACA,wBACA,2CAEA,uBACA,wBACA,sBACA,uBACA,uBAGA,gBACA,2CACA,8BACA,wBACA,kBACA,mCACA,4DACA,8DACA,8CACA,0GACA,0DACA,8CACA,uEACA,4EACA,4DACA,uFACA,uFAGA,KAEEh2B,KAAK,MAECm2B,cAER,gCACA,iCACA,2BACA,6BACA,2CACA,+CAEA,2BACA,yBACA,wBAEA,wBACA,uBACA,sBACA,uBACA,uBAEA,gBAEA,sBACA,iEACA,+BACA,yDACA,wFACA,kFACA,4CACA,2BACA,4BACA,yCAEA,KAEEn2B,KAAK,MAECk4B,UACIvsC,SAAW+F,KAAM,IAAK1H,MAAO,GAC7BgvC,UAAYtnC,KAAM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U,GACVC,SAAU,EACVC,SAAU,IACVC,eACAC,UAAW,EACXC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,SAAU,IACVC,eACAC,eACAC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,IACVC,cACAC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,SAAU,EACVC,SAAU,IACVC,eACAC,UAAW,EACXC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,SAAU,EACVC,SAAU,IACVC,eACAC,eACAC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,SAAU,GACVC,cACAC,UAAW,GACXC,cACAC,UAAW,GACXC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,SAAU,EACVC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,SAAU,IACVC,SAAU,IACVC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,SAAU,IACVC,cACAC,SAAU,IACVC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,SAAU,EACVC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,GACVC,SAAU,EACVC,SAAU,EACVC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,IACVC,cACAC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,IACVC,eACAC,UAAW,EACXC,QAAS,GACTC,aACAC,aACAC,SAAU,GACVC,SAAU,EACVC,cACAC,UAAW,GACXC,eACAC,eACAC,UAAW,IACXC,eACAC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,QAAS,GACTC,aAC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","file":"bundle.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/js/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(8);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar selectionTypeConstants = {\n\t  ATOM: 'Atom',\n\t  RESIDUE: 'Residue',\n\t  CHAIN: 'Chain'\n\t};\n\t\n\texports.default = selectionTypeConstants;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _backbone = __webpack_require__(4);\n\t\n\tvar _backbone2 = _interopRequireDefault(_backbone);\n\t\n\tvar _selection_types_constants = __webpack_require__(1);\n\t\n\tvar _selection_types_constants2 = _interopRequireDefault(_selection_types_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Copyright 2016 Autodesk Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the 'License');\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an 'AS IS' BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\tvar MolWidget3DModel = _backbone2.default.Model.extend({\n\t  defaults: {\n\t    atom_labels_shown: false,\n\t    background_color: '#73757C',\n\t    background_opacity: 1.0,\n\t    height: '500px',\n\t    model_data: { atoms: [], bonds: [] },\n\t    orbital: {\n\t      cube_file: '',\n\t      iso_val: null,\n\t      opacity: null\n\t    },\n\t    styles: {},\n\t    selected_atom_indices: [],\n\t    selection_type: _selection_types_constants2.default.ATOM,\n\t    shapes: [],\n\t    width: '500px'\n\t  }\n\t});\n\t\n\texports.default = MolWidget3DModel;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; /**\n\t                                                                                                                                                                                                                                                   * Copyright 2016 Autodesk Inc.\n\t                                                                                                                                                                                                                                                   *\n\t                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.\n\t                                                                                                                                                                                                                                                   * You may obtain a copy of the License at\n\t                                                                                                                                                                                                                                                   *\n\t                                                                                                                                                                                                                                                   *     http://www.apache.org/licenses/LICENSE-2.0\n\t                                                                                                                                                                                                                                                   *\n\t                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software\n\t                                                                                                                                                                                                                                                   * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and\n\t                                                                                                                                                                                                                                                   * limitations under the License.\n\t                                                                                                                                                                                                                                                   */\n\t\n\t\n\tvar _backbone = __webpack_require__(4);\n\t\n\tvar _backbone2 = _interopRequireDefault(_backbone);\n\t\n\tvar _environment_constants = __webpack_require__(6);\n\t\n\tvar _environment_constants2 = _interopRequireDefault(_environment_constants);\n\t\n\tvar _lib_utils = __webpack_require__(9);\n\t\n\tvar _lib_utils2 = _interopRequireDefault(_lib_utils);\n\t\n\tvar _molecule_utils = __webpack_require__(10);\n\t\n\tvar _molecule_utils2 = _interopRequireDefault(_molecule_utils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar jQuery = __webpack_require__(5);\n\t\n\twindow.$ = jQuery;\n\tvar $3Dmol = __webpack_require__(11);\n\t\n\tvar DEFAULT_VISUALIZATION_TYPE = 'stick';\n\tvar DEFAULT_FONT_SIZE = 14;\n\tvar ORBITAL_COLOR_POSITIVE = 0xff0000;\n\tvar ORBITAL_COLOR_NEGATIVE = 0x0000ff;\n\t\n\tvar MolWidget3DView = _backbone2.default.View.extend({\n\t  initialize: function initialize() {\n\t    if (process.env.NODE_ENV === _environment_constants2.default.DEVELOPMENT) {\n\t      if (!window.nbmolviz3d) {\n\t        window.nbmolviz3d = [];\n\t      }\n\t\n\t      window.nbmolviz3d.push(this);\n\t    }\n\t\n\t    this.model.on('change', this.render.bind(this));\n\t  },\n\t  render: function render(event) {\n\t    var modelDataChanged = !event || Object.keys(event.changed).indexOf('model_data') !== -1;\n\t\n\t    this.messages = [];\n\t\n\t    this.mydiv = this.mydiv || window.document.createElement('div');\n\t    this.mydiv.classList.add('nbmolviz3d');\n\t    this.mydiv.style.width = this.model.get('width');\n\t    this.mydiv.style.height = this.model.get('height');\n\t    this.mydiv.style.position = 'relative';\n\t\n\t    if (!this.el.querySelector('.nbmolviz3d')) {\n\t      this.el.appendChild(this.mydiv);\n\t    }\n\t\n\t    this.glviewer = this.renderViewer(modelDataChanged);\n\t\n\t    if (this.send) {\n\t      this.send({ event: 'ready' });\n\t    }\n\t  },\n\t  renderViewer: function renderViewer(modelDataChanged) {\n\t    var _this = this;\n\t\n\t    var glviewer = this.glviewer || $3Dmol.createViewer(jQuery(this.mydiv), {\n\t      defaultcolors: $3Dmol.rasmolElementColors\n\t    });\n\t\n\t    glviewer.clear();\n\t\n\t    var modelData = this.model.get('model_data');\n\t    if (typeof modelData === 'string') {\n\t      glviewer.addModel(modelData, 'pdb', {\n\t        keepH: true\n\t      });\n\t    } else if ((typeof modelData === 'undefined' ? 'undefined' : _typeof(modelData)) === 'object') {\n\t      glviewer.addModel(_molecule_utils2.default.modelDataToCDJSON(modelData), 'json', {\n\t        keepH: true\n\t      });\n\t\n\t      // Hack in chain and residue data, since it's not supported by chemdoodle json\n\t      glviewer.getModel().selectedAtoms().forEach(function (atom) {\n\t        var modifiedAtom = atom;\n\t        modifiedAtom.atom = modelData.atoms[atom.serial].name;\n\t        modifiedAtom.chain = modelData.atoms[atom.serial].chain;\n\t        modifiedAtom.resi = modelData.atoms[atom.serial].residue_index;\n\t        modifiedAtom.resn = modelData.atoms[atom.serial].residue_name;\n\t      });\n\t    }\n\t\n\t    var styles = this.model.get('styles');\n\t    if (modelData.atoms) {\n\t      modelData.atoms.forEach(function (atom, i) {\n\t        var style = styles[i] || {};\n\t        var libStyle = {};\n\t        var visualizationType = style.visualization_type || DEFAULT_VISUALIZATION_TYPE;\n\t\n\t        libStyle[visualizationType] = {};\n\t        Object.keys(style).forEach(function (styleKey) {\n\t          libStyle[visualizationType][styleKey] = style[styleKey];\n\t        });\n\t\n\t        if (_this.model.get('selected_atom_indices').indexOf(atom.serial) !== -1) {\n\t          libStyle[visualizationType].color = 0x1FF3FE;\n\t        }\n\t\n\t        if (typeof libStyle[visualizationType].color === 'string') {\n\t          libStyle[visualizationType].color = _lib_utils2.default.colorStringToNumber(libStyle[visualizationType].color);\n\t        }\n\t\n\t        if (_this.model.get('atom_labels_shown')) {\n\t          glviewer.addLabel(atom.name, {\n\t            fontSize: DEFAULT_FONT_SIZE,\n\t            position: {\n\t              x: atom.positions[0],\n\t              y: atom.positions[1],\n\t              z: atom.positions[2]\n\t            }\n\t          });\n\t        }\n\t\n\t        glviewer.setStyle({ serial: atom.serial }, libStyle);\n\t      });\n\t    } else {\n\t      glviewer.setStyle({}, { stick: {} });\n\t    }\n\t\n\t    // Shapes\n\t    this.model.get('shapes').forEach(function (shape) {\n\t      if (shape.type) {\n\t        glviewer['add' + shape.type](_lib_utils2.default.getShapeSpec(shape, _this.setSelectionTrait));\n\t      }\n\t    });\n\t\n\t    // Orbital\n\t    var orbital = this.model.get('orbital');\n\t    if (orbital.cube_file) {\n\t      var volumeData = new $3Dmol.VolumeData(orbital.cube_file, 'cube');\n\t      glviewer.addIsosurface(volumeData, {\n\t        isoval: orbital.iso_val,\n\t        color: ORBITAL_COLOR_POSITIVE,\n\t        opacity: orbital.opacity\n\t      });\n\t      glviewer.addIsosurface(volumeData, {\n\t        isoval: -orbital.iso_val,\n\t        color: ORBITAL_COLOR_NEGATIVE,\n\t        opacity: orbital.opacity\n\t      });\n\t    }\n\t\n\t    glviewer.setBackgroundColor(_lib_utils2.default.colorStringToNumber(this.model.get('background_color')), this.model.get('background_opacity'));\n\t\n\t    glviewer.setClickable({}, true, this.onClick.bind(this));\n\t    glviewer.render();\n\t\n\t    if (modelDataChanged) {\n\t      glviewer.zoomTo();\n\t      glviewer.zoom(0.8, 2000);\n\t    }\n\t\n\t    return glviewer;\n\t  },\n\t  onClick: function onClick(glAtom) {\n\t    var atoms = this.model.get('model_data').atoms;\n\t    var atom = atoms[glAtom.serial];\n\t    var selectionType = this.model.get('selection_type');\n\t    var selectedAtomIndices = this.model.get('selected_atom_indices');\n\t    var newSelectedAtomIndices = _molecule_utils2.default.addSelection(atoms, selectedAtomIndices, atom, selectionType);\n\t\n\t    this.model.set('selected_atom_indices', newSelectedAtomIndices);\n\t    this.model.save();\n\t  }\n\t});\n\t\n\texports.default = MolWidget3DView;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"backbone\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"jquery\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _keymirror = __webpack_require__(14);\n\t\n\tvar _keymirror2 = _interopRequireDefault(_keymirror);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar environmentConstants = (0, _keymirror2.default)({\n\t  DEVELOPMENT: null\n\t});\n\t\n\texports.default = environmentConstants;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar shapeConstants = {\n\t  ARROW: 'Arrow',\n\t  SPHERE: 'Sphere',\n\t  CYLINDER: 'Cylinder'\n\t};\n\t\n\texports.default = shapeConstants;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Nbmolviz3dReact = exports.MolWidget3DView = exports.MolWidget3DModel = undefined;\n\t\n\tvar _jquery = __webpack_require__(5);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _mol_widget_3d_model = __webpack_require__(2);\n\t\n\tvar _mol_widget_3d_model2 = _interopRequireDefault(_mol_widget_3d_model);\n\t\n\tvar _mol_widget_3d_view = __webpack_require__(3);\n\t\n\tvar _mol_widget_3d_view2 = _interopRequireDefault(_mol_widget_3d_view);\n\t\n\tvar _nbmolviz3d_react = __webpack_require__(12);\n\t\n\tvar _nbmolviz3d_react2 = _interopRequireDefault(_nbmolviz3d_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Copyright 2016 Autodesk Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t// Set up jquery for Backbone\n\tif (window) {\n\t  window.jquery = _jquery2.default;\n\t  window.$ = _jquery2.default;\n\t}\n\t\n\texports.MolWidget3DModel = _mol_widget_3d_model2.default;\n\texports.MolWidget3DView = _mol_widget_3d_view2.default;\n\texports.Nbmolviz3dReact = _nbmolviz3d_react2.default;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _shape_constants = __webpack_require__(7);\n\t\n\tvar _shape_constants2 = _interopRequireDefault(_shape_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Utils for working with the 3dmol.js library\n\t */\n\tvar libUtils = {\n\t  /**\n\t   * Given a color string (like #abcdef), return its Number representation\n\t   * If invalid input given, return the input\n\t   * @param colorString {String}\n\t   * @returns {Number}\n\t   */\n\t  colorStringToNumber: function colorStringToNumber(colorString) {\n\t    if (colorString.length !== 4 && colorString.length !== 7) {\n\t      return colorString;\n\t    }\n\t    if (colorString[0] !== '#') {\n\t      return colorString;\n\t    }\n\t\n\t    var colorInt = parseInt(colorString.substr(1, colorString.length - 1), 16);\n\t\n\t    if (isNaN(colorInt)) {\n\t      return colorString;\n\t    }\n\t\n\t    return colorInt;\n\t  },\n\t\n\t\n\t  /**\n\t   * Given a shape object from the main model, return a shape spec ready to go into 3Dmol.js\n\t   * @param shape {Object}\n\t   * @returns {Object}\n\t   */\n\t  getShapeSpec: function getShapeSpec(shape, callback) {\n\t    var color = void 0;\n\t    if (shape.color) {\n\t      color = libUtils.colorStringToNumber(shape.color);\n\t    }\n\t\n\t    var shapeSpec = Object.assign({}, {\n\t      alpha: 0.8,\n\t      callback: callback,\n\t      clickable: false,\n\t      color: 0x00FE03,\n\t      radius: shape.radius\n\t    }, shape, { color: color });\n\t\n\t    if (shape.type === _shape_constants2.default.ARROW) {\n\t      shapeSpec.start = shape.start;\n\t      shapeSpec.end = shape.end;\n\t    } else if (shape.type === _shape_constants2.default.SPHERE) {\n\t      shapeSpec.center = shape.center;\n\t    } else if (shape.type === _shape_constants2.default.CYLINDER) {\n\t      shapeSpec.fromCap = true;\n\t      shapeSpec.toCap = true;\n\t      shapeSpec.start = shape.start;\n\t      shapeSpec.end = shape.end;\n\t    } else {\n\t      throw new Error('Invalid shape type.');\n\t    }\n\t\n\t    return shapeSpec;\n\t  }\n\t};\n\t\n\texports.default = libUtils;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _selection_types_constants = __webpack_require__(1);\n\t\n\tvar _selection_types_constants2 = _interopRequireDefault(_selection_types_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar moleculeUtils = {\n\t  /**\n\t   * Given molecule model data, return a JSON object in ChemDoodle format\n\t   * @param modelData {Object}\n\t   * @returns {String}\n\t   */\n\t  modelDataToCDJSON: function modelDataToCDJSON(modelData) {\n\t    var atoms = modelData.atoms.map(function (atom) {\n\t      return {\n\t        l: atom.elem,\n\t        x: atom.positions[0],\n\t        y: atom.positions[1],\n\t        z: atom.positions[2],\n\t        mass: atom.mass_magnitude\n\t      };\n\t    });\n\t\n\t    var bonds = modelData.bonds.map(function (bond) {\n\t      return {\n\t        b: bond.atom1_index,\n\t        e: bond.atom2_index,\n\t        o: bond.bond_order\n\t      };\n\t    });\n\t\n\t    return {\n\t      m: [{\n\t        a: atoms,\n\t        b: bonds\n\t      }]\n\t    };\n\t  },\n\t\n\t\n\t  /**\n\t   * Return a new selection of atoms considering a clicked atom, the current selection type, and\n\t   * the currently selected atoms\n\t   * @param atoms {Array of Atoms}\n\t   * @param selectedAtoms {Array of Atoms}\n\t   * @param clickedAtom {Atom}\n\t   * @param selectionType {String}\n\t   * @returns {Array of Atoms}\n\t   */\n\t  addSelection: function addSelection(atoms, selectedAtoms, clickedAtom, selectionType) {\n\t    var selectedAtomsOut = selectedAtoms.slice();\n\t    var clickedIndex = selectedAtoms.indexOf(clickedAtom.serial);\n\t    var toggleOn = clickedIndex === -1;\n\t\n\t    if (selectionType === _selection_types_constants2.default.ATOM) {\n\t      if (toggleOn) {\n\t        selectedAtomsOut.push(clickedAtom.serial);\n\t      } else {\n\t        selectedAtomsOut.splice(clickedIndex, 1);\n\t      }\n\t\n\t      return selectedAtomsOut;\n\t    }\n\t\n\t    if (toggleOn) {\n\t      atoms.forEach(function (atom) {\n\t        if (moleculeUtils.isSameGroup(clickedAtom, atom, selectionType)) {\n\t          selectedAtomsOut.push(atom.serial);\n\t        }\n\t      });\n\t    } else {\n\t      selectedAtomsOut = selectedAtomsOut.filter(function (atomSerial) {\n\t        var atom = atoms[atomSerial];\n\t        return !moleculeUtils.isSameGroup(clickedAtom, atom, selectionType);\n\t      });\n\t    }\n\t\n\t    return selectedAtomsOut;\n\t  },\n\t\n\t\n\t  /**\n\t   * Returns a boolean indicating if the given atoms are of the same type (residue or chain)\n\t   * @param atomA {Atom}\n\t   * @param atomB {Atom}\n\t   * @param selectionType {String}\n\t   * @returns {Boolean}\n\t   */\n\t  isSameGroup: function isSameGroup(atomA, atomB, selectionType) {\n\t    if (selectionType === _selection_types_constants2.default.RESIDUE) {\n\t      return atomA.residue_index === atomB.residue_index;\n\t    }\n\t    if (selectionType === _selection_types_constants2.default.CHAIN) {\n\t      return atomA.chain === atomB.chain;\n\t    }\n\t\n\t    throw new Error('selectionType must be either residue or chain');\n\t  }\n\t};\n\t\n\texports.default = moleculeUtils;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;var require;var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;};(function(global,factory){( false?'undefined':_typeof(exports))==='object'&&typeof module!=='undefined'?factory(exports): true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):factory(global.MMTF=global.MMTF||{});})(undefined,function(exports){'use strict';/**\n\t   * @file utf8-utils\n\t   * @private\n\t   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n\t   * mostly copied from https://github.com/creationix/msgpack-js-browser\n\t   * by Tim Caswell <tim@creationix.com>, MIT License, Copyright (c) 2013\n\t   */// Encode string as utf8 into dataview at offset\n\tfunction utf8Write(view,offset,string){var byteLength=view.byteLength;for(var i=0,l=string.length;i<l;i++){var codePoint=string.charCodeAt(i);// One byte of UTF-8\n\tif(codePoint<0x80){view.setUint8(offset++,codePoint>>>0&0x7f|0x00);continue;}// Two bytes of UTF-8\n\tif(codePoint<0x800){view.setUint8(offset++,codePoint>>>6&0x1f|0xc0);view.setUint8(offset++,codePoint>>>0&0x3f|0x80);continue;}// Three bytes of UTF-8.\n\tif(codePoint<0x10000){view.setUint8(offset++,codePoint>>>12&0x0f|0xe0);view.setUint8(offset++,codePoint>>>6&0x3f|0x80);view.setUint8(offset++,codePoint>>>0&0x3f|0x80);continue;}// Four bytes of UTF-8\n\tif(codePoint<0x110000){view.setUint8(offset++,codePoint>>>18&0x07|0xf0);view.setUint8(offset++,codePoint>>>12&0x3f|0x80);view.setUint8(offset++,codePoint>>>6&0x3f|0x80);view.setUint8(offset++,codePoint>>>0&0x3f|0x80);continue;}throw new Error(\"bad codepoint \"+codePoint);}}function utf8ByteCount(string){var count=0;for(var i=0,l=string.length;i<l;i++){var codePoint=string.charCodeAt(i);if(codePoint<0x80){count+=1;continue;}if(codePoint<0x800){count+=2;continue;}if(codePoint<0x10000){count+=3;continue;}if(codePoint<0x110000){count+=4;continue;}throw new Error(\"bad codepoint \"+codePoint);}return count;}/**\n\t   * encode data value (recursively) into binary encoded MessagePack v5 (http://msgpack.org/)\n\t   * @param  {Object|Array|String|Number|Boolean|null} value  [description]\n\t   * @param  {DataView} view   [description]\n\t   * @param  {Integer} offset [description]\n\t   * @return {Integer} number of bytes written into view\n\t   */function encode$1(value,view,offset){var type=typeof value==='undefined'?'undefined':_typeof(value);// Strings Bytes\n\tif(type===\"string\"){var length=utf8ByteCount(value);// fix str\n\tif(length<0x20){view.setUint8(offset,length|0xa0);utf8Write(view,offset+1,value);return 1+length;}// str 8\n\tif(length<0x100){view.setUint8(offset,0xd9);view.setUint8(offset+1,length);utf8Write(view,offset+2,value);return 2+length;}// str 16\n\tif(length<0x10000){view.setUint8(offset,0xda);view.setUint16(offset+1,length);utf8Write(view,offset+3,value);return 3+length;}// str 32\n\tif(length<0x100000000){view.setUint8(offset,0xdb);view.setUint32(offset+1,length);utf8Write(view,offset+5,value);return 5+length;}}if(value instanceof Uint8Array){var length=value.byteLength;var bytes=new Uint8Array(view.buffer);// bin 8\n\tif(length<0x100){view.setUint8(offset,0xc4);view.setUint8(offset+1,length);bytes.set(value,offset+2);return 2+length;}// bin 16\n\tif(length<0x10000){view.setUint8(offset,0xc5);view.setUint16(offset+1,length);bytes.set(value,offset+3);return 3+length;}// bin 32\n\tif(length<0x100000000){view.setUint8(offset,0xc6);view.setUint32(offset+1,length);bytes.set(value,offset+5);return 5+length;}}if(type===\"number\"){if(!isFinite(value)){throw new Error(\"Number not finite: \"+value);}// Floating point\n\tif(Math.floor(value)!==value){view.setUint8(offset,0xcb);view.setFloat64(offset+1,value);return 9;}// Integers\n\tif(value>=0){// positive fixnum\n\tif(value<0x80){view.setUint8(offset,value);return 1;}// uint 8\n\tif(value<0x100){view.setUint8(offset,0xcc);view.setUint8(offset+1,value);return 2;}// uint 16\n\tif(value<0x10000){view.setUint8(offset,0xcd);view.setUint16(offset+1,value);return 3;}// uint 32\n\tif(value<0x100000000){view.setUint8(offset,0xce);view.setUint32(offset+1,value);return 5;}throw new Error(\"Number too big 0x\"+value.toString(16));}// negative fixnum\n\tif(value>=-0x20){view.setInt8(offset,value);return 1;}// int 8\n\tif(value>=-0x80){view.setUint8(offset,0xd0);view.setInt8(offset+1,value);return 2;}// int 16\n\tif(value>=-0x8000){view.setUint8(offset,0xd1);view.setInt16(offset+1,value);return 3;}// int 32\n\tif(value>=-0x80000000){view.setUint8(offset,0xd2);view.setInt32(offset+1,value);return 5;}throw new Error(\"Number too small -0x\"+(-value).toString(16).substr(1));}// null\n\tif(value===null){view.setUint8(offset,0xc0);return 1;}// Boolean\n\tif(type===\"boolean\"){view.setUint8(offset,value?0xc3:0xc2);return 1;}// Container Types\n\tif(type===\"object\"){var length,size=0;var isArray=Array.isArray(value);if(isArray){length=value.length;}else{var keys=Object.keys(value);length=keys.length;}var size;if(length<0x10){view.setUint8(offset,length|(isArray?0x90:0x80));size=1;}else if(length<0x10000){view.setUint8(offset,isArray?0xdc:0xde);view.setUint16(offset+1,length);size=3;}else if(length<0x100000000){view.setUint8(offset,isArray?0xdd:0xdf);view.setUint32(offset+1,length);size=5;}if(isArray){for(var i=0;i<length;i++){size+=encode$1(value[i],view,offset+size);}}else{for(var i=0;i<length;i++){var key=keys[i];size+=encode$1(key,view,offset+size);size+=encode$1(value[key],view,offset+size);}}return size;}throw new Error(\"Unknown type \"+type);}function encodedSize(value){var type=typeof value==='undefined'?'undefined':_typeof(value);// Raw Bytes\n\tif(type===\"string\"){var length=utf8ByteCount(value);if(length<0x20){return 1+length;}if(length<0x100){return 2+length;}if(length<0x10000){return 3+length;}if(length<0x100000000){return 5+length;}}if(value instanceof Uint8Array){var length=value.byteLength;if(length<0x100){return 2+length;}if(length<0x10000){return 3+length;}if(length<0x100000000){return 5+length;}}if(type===\"number\"){// Floating Point\n\t// double\n\tif(Math.floor(value)!==value)return 9;// Integers\n\tif(value>=0){// positive fixnum\n\tif(value<0x80)return 1;// uint 8\n\tif(value<0x100)return 2;// uint 16\n\tif(value<0x10000)return 3;// uint 32\n\tif(value<0x100000000)return 5;throw new Error(\"Number too big 0x\"+value.toString(16));}// negative fixnum\n\tif(value>=-0x20)return 1;// int 8\n\tif(value>=-0x80)return 2;// int 16\n\tif(value>=-0x8000)return 3;// int 32\n\tif(value>=-0x80000000)return 5;throw new Error(\"Number too small -0x\"+value.toString(16).substr(1));}// Boolean, null\n\tif(type===\"boolean\"||value===null)return 1;// Container Types\n\tif(type===\"object\"){var length,size=0;if(Array.isArray(value)){length=value.length;for(var i=0;i<length;i++){size+=encodedSize(value[i]);}}else{var keys=Object.keys(value);length=keys.length;for(var i=0;i<length;i++){var key=keys[i];size+=encodedSize(key)+encodedSize(value[key]);}}if(length<0x10){return 1+size;}if(length<0x10000){return 3+size;}if(length<0x100000000){return 5+size;}throw new Error(\"Array or object too long 0x\"+length.toString(16));}throw new Error(\"Unknown type \"+type);}function encodeMsgpack(value){var buffer=new ArrayBuffer(encodedSize(value));var view=new DataView(buffer);encode$1(value,view,0);return new Uint8Array(buffer);}/**\n\t   * @file mmtf-constants\n\t   * @private\n\t   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n\t   */var PassThroughFields=[\"mmtfVersion\",\"mmtfProducer\",\"unitCell\",\"spaceGroup\",\"structureId\",\"title\",\"depositionDate\",\"releaseDate\",\"experimentalMethods\",\"resolution\",\"rFree\",\"rWork\",\"bioAssemblyList\",\"ncsOperatorList\",\"entityList\",\"groupList\",\"numBonds\",\"numAtoms\",\"numGroups\",\"numChains\",\"numModels\",\"groupsPerChain\",\"chainsPerModel\"];var EncodedFields=[// required\n\t\"xCoordList\",\"yCoordList\",\"zCoordList\",\"groupIdList\",\"groupTypeList\",\"chainIdList\",// optional\n\t\"bFactorList\",\"atomIdList\",\"altLocList\",\"occupancyList\",\"secStructList\",\"insCodeList\",\"sequenceIndexList\",\"chainNameList\",\"bondAtomList\",\"bondOrderList\"];var AllFields=PassThroughFields.concat(EncodedFields);/**\n\t   * @file mmtf-utils\n\t   * @private\n\t   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n\t   *//**\n\t   * mmtf utils module.\n\t   * @module MmtfUtils\n\t   */function getView(ctor,typedArray,elemSize){return typedArray?new ctor(typedArray.buffer,typedArray.byteOffset,typedArray.byteLength/(elemSize||1)):undefined;}function getDataView(typedArray){return getView(DataView,typedArray);}/**\n\t   * get an Uint8Array view on the input array memory\n\t   * @static\n\t   * @param  {TypedArray} dataArray - input array\n\t   * @return {Uint8Array} new view on the input array memory\n\t   */function getUint8View(typedArray){return getView(Uint8Array,typedArray);}/**\n\t   * get an Int8Array view on the input array memory\n\t   * @static\n\t   * @param  {TypedArray} dataArray - input array\n\t   * @return {Int8Array} new view on the input array memory\n\t   */function getInt8View(typedArray){return getView(Int8Array,typedArray);}/**\n\t   * get an Int32Array view on the input array memory\n\t   * @static\n\t   * @param  {TypedArray} dataArray - input array\n\t   * @return {Int32Array} new view on the input array memory\n\t   */function getInt32View(typedArray){return getView(Int32Array,typedArray,4);}function getFloat32View(typedArray){return getView(Float32Array,typedArray,4);}/**\n\t   * get an Int16Array copy of the the input array data\n\t   * @static\n\t   * @param  {TypedArray} view - input data in big endian format\n\t   * @param  {Int16Array} [dataArray] - pre-allocated output array\n\t   * @return {Int16Array} copy of the input array data\n\t   */function decodeInt16(bytes,output){var n=bytes.length/2;if(!output)output=new Int16Array(n);for(var i=0,i2=0;i<n;++i,i2+=2){output[i]=bytes[i2]<<8^bytes[i2+1]<<0;}return output;}/**\n\t   * make big endian buffer of an int16 array\n\t   * @static\n\t   * @param  {Array|TypedArray} array - array of int16 values\n\t   * @return {ArrayBuffer} big endian buffer\n\t   */function encodeInt16(array,output){var n=array.length;if(!output)output=new Uint8Array(2*n);var dv=getDataView(output);for(var i=0;i<n;++i){dv.setInt16(2*i,array[i]);}return getUint8View(output);}/**\n\t   * get an Int32Array copy of the the input array data\n\t   * @static\n\t   * @param  {TypedArray} view - input data in big endian format\n\t   * @param  {Int32Array} [dataArray] - pre-allocated output array\n\t   * @return {Int32Array} copy of the input array data\n\t   */function decodeInt32(bytes,output){var n=bytes.length/4;if(!output)output=new Int32Array(n);for(var i=0,i4=0;i<n;++i,i4+=4){output[i]=bytes[i4]<<24^bytes[i4+1]<<16^bytes[i4+2]<<8^bytes[i4+3]<<0;}return output;}/**\n\t   * make big endian buffer of an int32 array\n\t   * @static\n\t   * @param  {Array|TypedArray} array - array of int32 values\n\t   * @return {ArrayBuffer} big endian buffer\n\t   */function encodeInt32(array,output){var n=array.length;if(!output)output=new Uint8Array(4*n);var dv=getDataView(output);for(var i=0;i<n;++i){dv.setInt32(4*i,array[i]);}return getUint8View(output);}function decodeFloat32(bytes,output){var n=bytes.length;if(!output)output=new Float32Array(n/4);var dvOut=getDataView(output);var dvIn=getDataView(bytes);for(var i=0,i4=0,il=n/4;i<il;++i,i4+=4){dvOut.setFloat32(i4,dvIn.getFloat32(i4),true);}return output;}/**\n\t   * decode integers into floats using given divisor\n\t   * example:\n\t   *     intArray: [ 12, 34, 543, 687, 2, 0, 4689 ]\n\t   *     divisor: 100\n\t   *     return: [ 0.12, 0.34, 5.43, 6.87, 0.02, 0.00, 46.89 ]\n\t   * @static\n\t   * @param  {TypedArray|Array} intArray - input array containing integers\n\t   * @param  {Number} divisor - number to devide the integers to obtain floats\n\t   * @param  {Float32Array} [dataArray] - pre-allocated output array\n\t   * @return {Float32Array} decoded array\n\t   */function decodeInteger(intArray,divisor,output){var n=intArray.length;var invDiv=1/divisor;if(!output)output=new Float32Array(n);for(var i=0;i<n;++i){// multiply by inverse of the divisor which is faster then division\n\toutput[i]=intArray[i]*invDiv;}return output;}function encodeInteger(floatArray,factor,output){var n=floatArray.length;if(!output)output=new Int32Array(n);for(var i=0;i<n;++i){output[i]=Math.round(floatArray[i]*factor);}return output;}/**\n\t   * perform run-length decoding of input array\n\t   * example:\n\t   *     array: [ 0, 2, 3, 5 ]  // pairs of values and length of a run\n\t   *     return: [ 0, 0, 3, 3, 3, 3, 3 ]\n\t   * @static\n\t   * @param  {TypedArray|Array} array - run-length encoded input array\n\t   * @param  {TypedArray|Array} [dataArray] - pre-allocated output array\n\t   * @return {TypedArray|Array} decoded array\n\t   */function decodeRun(array,output){var i,il;if(!output){// calculate the length the decoded array will have\n\tvar fullLength=0;for(i=0,il=array.length;i<il;i+=2){fullLength+=array[i+1];}// create a new array of the same type of the input array\n\toutput=new array.constructor(fullLength);}var dataOffset=0;for(i=0,il=array.length;i<il;i+=2){var value=array[i];// value to be repeated\n\tvar length=array[i+1];// number of repeats\n\tfor(var j=0;j<length;++j){output[dataOffset]=value;++dataOffset;}}return output;}function encodeRun(array){if(array.length===0)return new Int32Array(0);var i,il;// calculate output size\n\tvar fullLength=2;for(i=1,il=array.length;i<il;++i){if(array[i-1]!==array[i]){fullLength+=2;}}var output=new Int32Array(fullLength);var offset=0;var runLength=1;for(i=1,il=array.length;i<il;++i){if(array[i-1]!==array[i]){output[offset]=array[i-1];output[offset+1]=runLength;runLength=1;offset+=2;}else{++runLength;}}output[offset]=array[array.length-1];output[offset+1]=runLength;return output;}/**\n\t   * perform delta decoding of the input array\n\t   * by iterativly adding the ith element's value to the i+1th\n\t   * example:\n\t   *     dataArray: [ 0, 2, 1, 2, 1, 1, -4, -2, 9 ]\n\t   *     return: [ 0, 2, 3, 5, 6, 7, 3, 1, 10 ]\n\t   * @static\n\t   * @param  {TypedArray|Array} dataArray - delta encoded input array\n\t   * @return {TypedArray|Array} decoded array\n\t   */function decodeDelta(array,output){var n=array.length;if(!output)output=new array.constructor(n);if(n)output[0]=array[0];for(var i=1;i<n;++i){output[i]=array[i]+output[i-1];}return output;}function encodeDelta(array,output){var n=array.length;if(!output)output=new array.constructor(n);output[0]=array[0];for(var i=1;i<n;++i){output[i]=array[i]-array[i-1];}return output;}/**\n\t   * [decodePacking description]\n\t   * @param  {Int16Array|Int8Array} int16or8 [description]\n\t   * @param  {Int32Array} output   [description]\n\t   * @return {Int32Array}          [description]\n\t   */function decodePacking(int16or8,output){var upperLimit=int16or8 instanceof Int8Array?0x7F:0x7FFF;var lowerLimit=-upperLimit-1;var n=int16or8.length;var i,j;if(!output){var fullLength=0;for(i=0;i<n;++i){if(int16or8[i]<upperLimit&&int16or8[i]>lowerLimit){++fullLength;}}output=new Int32Array(fullLength);}i=0;j=0;while(i<n){var value=0;while(int16or8[i]===upperLimit||int16or8[i]===lowerLimit){value+=int16or8[i];++i;if(int16or8[i]===0){break;}}value+=int16or8[i];++i;output[j]=value;++j;}return output;}/**\n\t   * integer packing using recursive indexing\n\t   * @param  {Array|TyepedArray} intArray [description]\n\t   * @param  {Boolean} useInt8  [description]\n\t   * @return {Int16Array|Int8Array}          [description]\n\t   */function encodePacking(intArray,useInt8){var upperLimit=useInt8?0x7F:0x7FFF;var lowerLimit=-upperLimit-1;var i;var n=intArray.length;var size=0;for(i=0;i<n;++i){var value=intArray[i];if(value===0){++size;}else if(value===upperLimit||value===lowerLimit){size+=2;}else if(value>0){size+=Math.ceil(value/upperLimit);}else{size+=Math.ceil(value/lowerLimit);}}var output=useInt8?new Int8Array(size):new Int16Array(size);var j=0;for(i=0;i<n;++i){var value=intArray[i];if(value>=0){while(value>=upperLimit){output[j]=upperLimit;++j;value-=upperLimit;}}else{while(value<=lowerLimit){output[j]=lowerLimit;++j;value-=lowerLimit;}}output[j]=value;++j;}return output;}function decodeDeltaRun(array,output){return decodeDelta(decodeRun(array),output);}function encodeDeltaRun(array){return encodeRun(encodeDelta(array));}/**\n\t   * perform run-length decoding followed (@see decodeRunLength)\n\t   * by decoding integers into floats using given divisor (@see decodeIntegerToFloat)\n\t   * example:\n\t   *     array: [ 320, 3, 100, 2 ]\n\t   *     divisor: 100\n\t   *     return: [ 3.20, 3.20, 3.20, 1.00, 1.00 ]\n\t   * @static\n\t   * @param  {Uint8Array} array - run-length encoded int32 array as bytes in big endian format\n\t   * @param  {Integer} divisor - number to devide the integers to obtain floats\n\t   * @param  {Float32Array} dataArray - pre-allocated output array\n\t   * @return {Float32Array} decoded array\n\t   */function decodeIntegerRun(intArray,divisor,output){return decodeInteger(decodeRun(intArray,getInt32View(output)),divisor,output);}function encodeIntegerRun(floatArray,factor){return encodeRun(encodeInteger(floatArray,factor));}function decodeIntegerDelta(intArray,divisor,output){return decodeInteger(decodeDelta(intArray,getInt32View(output)),divisor,output);}function encodeIntegerDelta(floatArray,factor,output){return encodeDelta(encodeInteger(floatArray,factor),output);}function decodeIntegerPacking(int16or8,divisor,output){return decodeInteger(decodePacking(int16or8,getInt32View(output)),divisor,output);}function decodeIntegerDeltaPacking(int16or8,divisor,output){var unpacked=decodePacking(int16or8,getInt32View(output));return decodeIntegerDelta(unpacked,divisor,getFloat32View(unpacked));}function encodeIntegerDeltaPacking(floatArray,factor,useInt8){return encodePacking(encodeIntegerDelta(floatArray,factor),useInt8);}function decodeBytes(bytes){var dv=getDataView(bytes);var type=dv.getInt32(0);var size=dv.getInt32(4);var param=bytes.subarray(8,12);var bytes=bytes.subarray(12);return[type,bytes,size,param];}function encodeBytes(type,size,param,bytes){var buffer=new ArrayBuffer(12+bytes.byteLength);var out=new Uint8Array(buffer);var dv=new DataView(buffer);dv.setInt32(0,type);dv.setInt32(4,size);if(param)out.set(param,8);out.set(bytes,12);return out;}function passInt8(int8){var size=int8.length;var bytes=getUint8View(int8);return encodeBytes(2,size,undefined,bytes);}function passInt32(int32){var size=int32.length;var bytes=encodeInt32(int32);return encodeBytes(4,size,undefined,bytes);}function passString(stringBytes,length){var size=stringBytes.length/length;var param=encodeInt32([length]);var bytes=getUint8View(stringBytes);return encodeBytes(5,size,param,bytes);}function runChar(charBytes){var size=charBytes.length;var bytes=encodeInt32(encodeRun(charBytes));return encodeBytes(6,size,undefined,bytes);}function deltaRun(int32){var size=int32.length;var bytes=encodeInt32(encodeDeltaRun(int32));return encodeBytes(8,size,undefined,bytes);}function integerRun(float32,factor){var size=float32.length;var param=encodeInt32([factor]);var bytes=encodeInt32(encodeIntegerRun(float32,factor));return encodeBytes(9,size,param,bytes);}function integerDeltaPacking16(float32,factor){var size=float32.length;var param=encodeInt32([factor]);var bytes=encodeInt16(encodeIntegerDeltaPacking(float32,factor));return encodeBytes(10,size,param,bytes);}function encodeMmtf(inputDict){var outputDict={};// copy some fields over from the input dict\n\tPassThroughFields.forEach(function(name){if(inputDict[name]!==undefined){outputDict[name]=inputDict[name];}});//////////////\n\t// bond data\n\t// encode inter group bond atom indices, i.e. get bytes in big endian order\n\tif(inputDict.bondAtomList){outputDict.bondAtomList=passInt32(inputDict.bondAtomList);}// encode inter group bond orders, i.e. get bytes\n\tif(inputDict.bondOrderList){outputDict.bondOrderList=passInt8(inputDict.bondOrderList);}//////////////\n\t// atom data\n\t// split-list delta & integer encode x, y, z atom coords\n\toutputDict.xCoordList=integerDeltaPacking16(inputDict.xCoordList,1000);outputDict.yCoordList=integerDeltaPacking16(inputDict.yCoordList,1000);outputDict.zCoordList=integerDeltaPacking16(inputDict.zCoordList,1000);// split-list delta & integer encode b-factors\n\tif(inputDict.bFactorList){outputDict.bFactorList=integerDeltaPacking16(inputDict.bFactorList,100);}// delta & run-length encode atom ids\n\tif(inputDict.atomIdList){outputDict.atomIdList=deltaRun(inputDict.atomIdList);}// run-length encode alternate labels\n\tif(inputDict.altLocList){outputDict.altLocList=runChar(inputDict.altLocList);}// run-length & integer encode occupancies\n\tif(inputDict.occupancyList){outputDict.occupancyList=integerRun(inputDict.occupancyList,100);}///////////////\n\t// group data\n\t// run-length & delta encode group numbers\n\toutputDict.groupIdList=deltaRun(inputDict.groupIdList);// encode group types, i.e. get int32 array\n\toutputDict.groupTypeList=passInt32(inputDict.groupTypeList);// encode secondary structure, i.e. get bytes\n\tif(inputDict.secStructList){outputDict.secStructList=passInt8(inputDict.secStructList,1);}// run-length encode insertion codes\n\tif(inputDict.insCodeList){outputDict.insCodeList=runChar(inputDict.insCodeList);}// run-length & delta encode sequence indices\n\tif(inputDict.sequenceIndexList){outputDict.sequenceIndexList=deltaRun(inputDict.sequenceIndexList);}///////////////\n\t// chain data\n\t// encode chain ids, i.e. get bytes\n\toutputDict.chainIdList=passString(inputDict.chainIdList,4);// encode chain names, i.e. get bytes\n\tif(inputDict.chainNameList){outputDict.chainNameList=passString(inputDict.chainNameList,4);}return outputDict;}/**\n\t   * @file msgpack-decode\n\t   * @private\n\t   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n\t   *//**\n\t   * msgpack decode module.\n\t   * @module MsgpackDecode\n\t   *//**\n\t   * decode binary encoded MessagePack v5 (http://msgpack.org/) data\n\t   * @static\n\t   * @param  {Uint8Array} buffer - binary encoded MessagePack data\n\t   * @return {Object|Array|String|Number|Boolean|null} decoded Messagepack data\n\t   */function decodeMsgpack(buffer){// Loosely based on\n\t// The MIT License (MIT)\n\t// Copyright (c) 2013 Tim Caswell <tim@creationix.com>\n\t// https://github.com/creationix/msgpack-js\n\tvar offset=0;var dataView=new DataView(buffer.buffer);/**\n\t     * decode all key-value pairs of a map into an object\n\t     * @param  {Integer} length - number of key-value pairs\n\t     * @return {Object} decoded map\n\t     */function map(length){var value={};for(var i=0;i<length;i++){var key=parse();value[key]=parse();}return value;}/**\n\t     * decode binary array\n\t     * @param  {Integer} length - number of elements in the array\n\t     * @return {Uint8Array} decoded array\n\t     */function bin(length){var value=buffer.subarray(offset,offset+length);offset+=length;return value;}/**\n\t     * decode string\n\t     * @param  {Integer} length - number string characters\n\t     * @return {String} decoded string\n\t     */function str(length){var array=buffer.subarray(offset,offset+length);offset+=length;// limit number of arguments to String.fromCharCode to something\n\t// browsers can handle, see http://stackoverflow.com/a/22747272\n\tvar chunkSize=0xffff;if(length>chunkSize){var c=[];for(var i=0;i<array.length;i+=chunkSize){c.push(String.fromCharCode.apply(null,array.subarray(i,i+chunkSize)));}return c.join(\"\");}else{return String.fromCharCode.apply(null,array);}}/**\n\t     * decode array\n\t     * @param  {Integer} length - number of array elements\n\t     * @return {Array} decoded array\n\t     */function array(length){var value=new Array(length);for(var i=0;i<length;i++){value[i]=parse();}return value;}/**\n\t     * recursively parse the MessagePack data\n\t     * @return {Object|Array|String|Number|Boolean|null} decoded MessagePack data\n\t     */function parse(){var type=buffer[offset];var value,length,extType;// Positive FixInt\n\tif((type&0x80)===0x00){offset++;return type;}// FixMap\n\tif((type&0xf0)===0x80){length=type&0x0f;offset++;return map(length);}// FixArray\n\tif((type&0xf0)===0x90){length=type&0x0f;offset++;return array(length);}// FixStr\n\tif((type&0xe0)===0xa0){length=type&0x1f;offset++;return str(length);}// Negative FixInt\n\tif((type&0xe0)===0xe0){value=dataView.getInt8(offset);offset++;return value;}switch(type){// nil\n\tcase 0xc0:offset++;return null;// 0xc1: (never used, could be employed for padding)\n\t// false\n\tcase 0xc2:offset++;return false;// true\n\tcase 0xc3:offset++;return true;// bin 8\n\tcase 0xc4:length=dataView.getUint8(offset+1);offset+=2;return bin(length);// bin 16\n\tcase 0xc5:length=dataView.getUint16(offset+1);offset+=3;return bin(length);// bin 32\n\tcase 0xc6:length=dataView.getUint32(offset+1);offset+=5;return bin(length);// // ext 8\n\t// case 0xc7:\n\t//   length = dataView.getUint8(offset + 1);\n\t//   extType = dataView.getUint8(offset + 2);\n\t//   offset += 3;\n\t//   return [extType, bin(length)];\n\t// // ext 16\n\t// case 0xc8:\n\t//   length = dataView.getUint16(offset + 1);\n\t//   extType = dataView.getUint8(offset + 3);\n\t//   offset += 4;\n\t//   return [extType, bin(length)];\n\t// // ext 32\n\t// case 0xc9:\n\t//   length = dataView.getUint32(offset + 1);\n\t//   extType = dataView.getUint8(offset + 5);\n\t//   offset += 6;\n\t//   return [extType, bin(length)];\n\t// float 32\n\tcase 0xca:value=dataView.getFloat32(offset+1);offset+=5;return value;// float 64\n\tcase 0xcb:value=dataView.getFloat64(offset+1);offset+=9;return value;// uint8\n\tcase 0xcc:value=buffer[offset+1];offset+=2;return value;// uint 16\n\tcase 0xcd:value=dataView.getUint16(offset+1);offset+=3;return value;// uint 32\n\tcase 0xce:value=dataView.getUint32(offset+1);offset+=5;return value;// // uint64\n\t// case 0xcf:\n\t//   // FIXME not available/representable in JS\n\t//   // largest possible int in JS is 2^53\n\t//   // value = dataView.getUint64(offset + 1);\n\t//   offset += 9;\n\t//   return 0;\n\t// int 8\n\tcase 0xd0:value=dataView.getInt8(offset+1);offset+=2;return value;// int 16\n\tcase 0xd1:value=dataView.getInt16(offset+1);offset+=3;return value;// int 32\n\tcase 0xd2:value=dataView.getInt32(offset+1);offset+=5;return value;// // int 64\n\t// case 0xd3:\n\t//   // FIXME not available/representable in JS\n\t//   // largest possible int in JS is 2^53\n\t//   // value = dataView.getInt64(offset + 1);\n\t//   offset += 9;\n\t//   return 0;\n\t// // fixext 1\n\t// case 0xd4:\n\t//   extType = dataView.getUint8(offset + 1);\n\t//   offset += 2;\n\t//   return [extType, bin(1)];\n\t// // fixext 2\n\t// case 0xd5:\n\t//   extType = dataView.getUint8(offset + 1);\n\t//   offset += 2;\n\t//   return [extType, bin(2)];\n\t// // fixext 4\n\t// case 0xd6:\n\t//   extType = dataView.getUint8(offset + 1);\n\t//   offset += 2;\n\t//   return [extType, bin(4)];\n\t// // fixext 8\n\t// case 0xd7:\n\t//   extType = dataView.getUint8(offset + 1);\n\t//   offset += 2;\n\t//   return [extType, bin(8)];\n\t// // fixext 16\n\t// case 0xd8:\n\t//   extType = dataView.getUint8(offset + 1);\n\t//   offset += 2;\n\t//   return [extType, bin(16)];\n\t// str 8\n\tcase 0xd9:length=dataView.getUint8(offset+1);offset+=2;return str(length);// str 16\n\tcase 0xda:length=dataView.getUint16(offset+1);offset+=3;return str(length);// str 32\n\tcase 0xdb:length=dataView.getUint32(offset+1);offset+=5;return str(length);// array 16\n\tcase 0xdc:length=dataView.getUint16(offset+1);offset+=3;return array(length);// array 32\n\tcase 0xdd:length=dataView.getUint32(offset+1);offset+=5;return array(length);// map 16:\n\tcase 0xde:length=dataView.getUint16(offset+1);offset+=3;return map(length);// map 32\n\tcase 0xdf:length=dataView.getUint32(offset+1);offset+=5;return map(length);}throw new Error(\"Unknown type 0x\"+type.toString(16));}// start the recursive parsing\n\treturn parse();}/**\n\t   * Fields shared in encoded and decoded mmtf data objects.\n\t   * @typedef {Object} module:MmtfDecode.SharedMmtfData\n\t   * @property {String} mmtfVersion - MMTF specification version\n\t   * @property {String} mmtfProducer - Program that created the file\n\t   * @property {Float[]} [unitCell] - Crystallographic unit cell\n\t   * @property {Float} unitCell.0 - x length\n\t   * @property {Float} unitCell.1 - y length\n\t   * @property {Float} unitCell.2 - z length\n\t   * @property {Float} unitCell.3 - alpha angle\n\t   * @property {Float} unitCell.4 - beta angle\n\t   * @property {Float} unitCell.5 - gamma angle\n\t   * @property {String} [spaceGroup] - Hermann-Mauguin symbol\n\t   * @property {String} [structureId] - Some reference, e.g. a PDB ID\n\t   * @property {String} [title] - Short description\n\t   * @property {String} [depositionDate] - Deposition date in YYYY-MM-DD format\n\t   * @property {String} [releaseDate] - Release date in YYYY-MM-DD format\n\t   * @property {String[]} [experimentalMethods] - Structure determination methods\n\t   * @property {Float} [resolution] - Resolution in Å\n\t   * @property {Float} [rFree] - R-free value\n\t   * @property {Float} [rWork] - R-work value\n\t   * @property {Integer} numBonds - Number of bonds\n\t   * @property {Integer} numAtoms - Number of atoms\n\t   * @property {Integer} numGroups - Number of groups (residues)\n\t   * @property {Integer} numChains - Number of chains\n\t   * @property {Integer} numModels - Number of models\n\t   * @property {Integer[]} chainsPerModel - List of number of chains in each model\n\t   * @property {Integer[]} groupsPerChain - List of number of groups in each chain\n\t   * @property {Entity[]} [entityList] - List of entity objects\n\t   * @property {Integer[]} entityList.chainIndexList - Pointers into chain data fields\n\t   * @property {String} entityList.description - Description of the entity\n\t   * @property {String} entityList.type - Name of the entity type\n\t   * @property {String} entityList.sequence - One letter code sequence\n\t   * @property {Assembly[]} [bioAssemblyList] - List of assembly objects\n\t   * @property {Transform[]} bioAssemblyList.transformList - List of transform objects\n\t   * @property {Integer[]} bioAssemblyList.transformList.chainIndexList - Pointers into chain data fields\n\t   * @property {Float[]} bioAssemblyList.transformList.matrix - 4x4 transformation matrix\n\t   * @property {Array[]} [ncsOperatorList] - List of ncs operator matrices\n\t   * @property {Float[]} ncsOperatorList. - 4x4 transformation matrix\n\t   * @property {GroupType[]} groupList - List of groupType objects\n\t   * @property {Integer[]} groupList.formalChargeList - List of atom formal charges\n\t   * @property {String[]} groupList.elementList - List of elements\n\t   * @property {String[]} groupList.atomNameList - List of atom names\n\t   * @property {Integer[]} groupList.bondAtomList - List of bonded atom indices\n\t   * @property {Integer[]} groupList.bondOrderList - List of bond orders\n\t   * @property {String} groupList.groupName - The name of the group\n\t   * @property {String} groupList.singleLetterCode - The single letter code\n\t   * @property {String} groupList.chemCompType -  The chemical component type\n\t   *//**\n\t   * Encoded mmtf data object. Also includes the fields from {@link module:MmtfDecode.SharedMmtfData}. See MMTF specification on how they are encoded.\n\t   * @typedef {Object} module:MmtfDecode.EncodedMmtfData\n\t   * @mixes module:MmtfDecode.SharedMmtfData\n\t   * @property {Uint8Array} [bondAtomList] - Encoded bonded atom indices\n\t   * @property {Uint8Array} [bondOrderList] - Encoded bond orders\n\t   * @property {Uint8Array} xCoordBig - Encoded x coordinates in Å, part 1\n\t   * @property {Uint8Array} xCoordSmall - Encoded x coordinates in Å, part 2\n\t   * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\n\t   * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\n\t   * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\n\t   * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\n\t   * @property {Uint8Array} [bFactorBig] - Encoded B-factors in Å^2, part 1\n\t   * @property {Uint8Array} [bFactorSmall] - Encoded B-factors in Å^2, part 2\n\t   * @property {Uint8Array} [atomIdList] - Encoded  atom ids\n\t   * @property {Uint8Array} [altLocList] - Encoded alternate location labels\n\t   * @property {Uint8Array} [occupancyList] - Encoded occupancies\n\t   * @property {Uint8Array} groupIdList - Encoded group ids\n\t   * @property {Uint8Array} groupTypeList - Encoded group types\n\t   * @property {Uint8Array} [secStructList] - Encoded secondary structure codes\n\t   * @property {Uint8Array} [insCodeList] - Encoded insertion codes\n\t   * @property {Uint8Array} [seuenceIdList] - Encoded sequence ids\n\t   * @property {Uint8Array} chainIdList - Encoded chain ids\n\t   * @property {Uint8Array} [chainNameList] - Encoded chain names\n\t   *//**\n\t   * Decoded mmtf data object. Also includes fields the from {@link module:MmtfDecode.SharedMmtfData}.\n\t   * @typedef {Object} module:MmtfDecode.MmtfData\n\t   * @mixes module:MmtfDecode.SharedMmtfData\n\t   * @property {Int32Array} [bondAtomList] - List of bonded atom indices\n\t   * @property {Uint8Array} [bondOrderList] - List of bond orders\n\t   * @property {Float32Array} xCoordList - List of x coordinates in Å\n\t   * @property {Float32Array} yCoordList - List of y coordinates in Å\n\t   * @property {Float32Array} zCoordList - List of z coordinates in Å\n\t   * @property {Float32Array} [bFactorList] - List of B-factors in Å^2\n\t   * @property {Int32Array} [atomIdList] - List of atom ids\n\t   * @property {Uint8Array} [altLocList] - List of alternate location labels\n\t   * @property {Float32Array} [occupancyList] - List of occupancies\n\t   * @property {Int32Array} groupIdList - List of group ids\n\t   * @property {Int32Array} groupTypeList - List of group types\n\t   * @property {Int8Array} [secStructList] - List of secondary structure codes, encoding\n\t   *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\n\t   *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\n\t   * @property {Uint8Array} [insCodeList] - List of insertion codes\n\t   * @property {Int32Array} [seuenceIdList] - List of sequence ids\n\t   * @property {Uint8Array} chainIdList - List of chain ids\n\t   * @property {Uint8Array} [chainNameList] - List of chain names\n\t   *//**\n\t   * [performDecoding description]\n\t   * @param  {Integer} bytes [description]\n\t   * @param  {Integer} size  [description]\n\t   * @param  {Uint8Array} param [description]\n\t   * @return {TypedArray}       [description]\n\t   */function performDecoding(type,bytes,size,param){switch(type){case 1:return decodeFloat32(bytes);case 2:return getInt8View(bytes);case 3:return decodeInt16(bytes);case 4:return decodeInt32(bytes);case 5:// var length = decodeInt32( param )[ 0 ];\n\treturn getUint8View(bytes);// interpret as string array\n\tcase 6:// interpret as char array\n\treturn decodeRun(decodeInt32(bytes),new Uint8Array(size));case 7:return decodeRun(decodeInt32(bytes));case 8:return decodeDeltaRun(decodeInt32(bytes));case 9:return decodeIntegerRun(decodeInt32(bytes),decodeInt32(param)[0]);case 10:return decodeIntegerDeltaPacking(decodeInt16(bytes),decodeInt32(param)[0]);case 11:return decodeInteger(decodeInt16(bytes),decodeInt32(param)[0]);case 12:return decodeIntegerPacking(decodeInt16(bytes),decodeInt32(param)[0]);case 13:return decodeIntegerPacking(getInt8View(bytes),decodeInt32(param)[0]);case 14:return decodePacking(decodeInt16(bytes));case 15:return decodePacking(getInt8View(bytes));}};/**\n\t   * Decode MMTF fields\n\t   * @static\n\t   * @param  {Object} inputDict - encoded MMTF data\n\t   * @param  {Object} [params] - decoding parameters\n\t   * @param  {String[]} params.ignoreFields - names of optional fields not to decode\n\t   * @return {module:MmtfDecode.MmtfData} mmtfData\n\t   */function decodeMmtf(inputDict,params){params=params||{};var ignoreFields=params.ignoreFields;var outputDict={};AllFields.forEach(function(name){var ignore=ignoreFields?ignoreFields.indexOf(name)!==-1:false;var data=inputDict[name];if(!ignore&&data!==undefined){if(data instanceof Uint8Array){outputDict[name]=performDecoding.apply(null,decodeBytes(data));}else{outputDict[name]=data;}}});return outputDict;}/**\n\t   * @file mmtf-traverse\n\t   * @private\n\t   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n\t   *//**\n\t   * mmtf traverse module.\n\t   * @module MmtfTraverse\n\t   *//**\n\t   * Converts an array of ASCII codes trimming '\\0' bytes\n\t   * @private\n\t   * @param  {Array} charCodeArray - array of ASCII char codes\n\t   * @return {String} '\\0' trimmed string\n\t   */function fromCharCode(charCodeArray){return String.fromCharCode.apply(null,charCodeArray).replace(/\\0/g,'');}/**\n\t   * @callback module:MmtfTraverse.onModel\n\t   * @param {Object} modelData\n\t   * @param {Integer} modelData.chainCount - number of chains in the model\n\t   * @param {Integer} modelData.modelIndex - index of the model\n\t   *//**\n\t   * @callback module:MmtfTraverse.onChain\n\t   * @param {Object} chainData\n\t   * @param {Integer} chainData.groupCount - number of groups in the chain\n\t   * @param {Integer} chainData.chainIndex - index of the chain\n\t   * @param {Integer} chainData.modelIndex - index of the parent model\n\t   * @param {String} chainData.chainId - chain id\n\t   * @param {?String} chainData.chainName - additional chain name\n\t   *//**\n\t   * @callback module:MmtfTraverse.onGroup\n\t   * @param {Object} groupData\n\t   * @param {Integer} groupData.atomCount - number of atoms in the group\n\t   * @param {Integer} groupData.groupIndex - index of the group\n\t   * @param {Integer} groupData.chainIndex - index of the parent chain\n\t   * @param {Integer} groupData.modelIndex - index of the parent model\n\t   * @param {Integer} groupData.groupId - group id (residue number)\n\t   * @param {Integer} groupData.groupType - index to an entry in {@link module:MmtfDecode.MmtfData}#groupList\n\t   * @param {String} groupData.groupName - name of the group, 0 to 5 characters\n\t   * @param {Char} groupData.singleLetterCode - IUPAC single letter code, otherwise 'X', 1 character\n\t   * @param {String} groupData.chemCompType - chemical component type from the mmCIF dictionary\n\t   * @param {?Integer} groupData.secStruct - sencoded secondary structure |\n\t   *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\n\t   *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\n\t   * @param {?Char} groupData.insCode - insertion code\n\t   * @param {?Integer} groupData.sequenceIndex - index to the `sequence` property of\n\t   *    the corresponding entity, -1 when the entity has no sequence\n\t   *//**\n\t   * @callback module:MmtfTraverse.onAtom\n\t   * @param {Object} atomData\n\t   * @param {Integer} atomData.atomIndex - index of the atom\n\t   * @param {Integer} atomData.groupIndex - index of the parent group\n\t   * @param {Integer} atomData.chainIndex - index of the parent chain\n\t   * @param {Integer} atomData.modelIndex - index of the parent model\n\t   * @param {?Integer} atomData.atomId - atom id\n\t   * @param {String} atomData.element - IUPAC element name, 0 to 3 characters\n\t   * @param {String} atomData.atomName - name of the atom, 0 to 5 characters\n\t   * @param {Integer} atomData.formalCharge - formal charge of the atom\n\t   * @param {Float} atomData.xCoord - x coordinate in Å\n\t   * @param {Float} atomData.yCoord - y coordinate in Å\n\t   * @param {Float} atomData.zCoord - z coordinate in Å\n\t   * @param {?Float} atomData.bFactor - B-factor in in Å^2\n\t   * @param {?Char} atomData.altLoc - alternate location identifier\n\t   * @param {?Float} atomData.occupancy - occupancy of the atom\n\t   *//**\n\t   * @callback module:MmtfTraverse.onBond\n\t   * @param {Object} bondData\n\t   * @param {Integer} bondData.atomIndex1 - index of the first atom\n\t   * @param {Integer} bondData.atomIndex2 - index of the secound atom\n\t   * @param {Integer} bondData.bondOrder - bond order, allowed values are 1 to 3\n\t   *//**\n\t   * Traverse the MMTF structure data.\n\t   * @static\n\t   * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data\n\t   * @param {Object} eventCallbacks\n\t   * @param {module:MmtfTraverse.onModel} [eventCallbacks.onModel] - called for each model\n\t   * @param {module:MmtfTraverse.onChain} [eventCallbacks.onChain] - called for each chain\n\t   * @param {module:MmtfTraverse.onGroup} [eventCallbacks.onGroup] - called for each group\n\t   * @param {module:MmtfTraverse.onAtom} [eventCallbacks.onAtom] - called for each atom\n\t   * @param {module:MmtfTraverse.onBond} [eventCallbacks.onBond] - called for each bond\n\t   * @param {Object} [params] - traversal parameters\n\t   * @param {Boolean} [params.firstModelOnly] - traverse only the first model\n\t   */function traverseMmtf(mmtfData,eventCallbacks,params){params=params||{};var firstModelOnly=params.firstModelOnly;// setup callbacks\n\tvar onModel=eventCallbacks.onModel;var onChain=eventCallbacks.onChain;var onGroup=eventCallbacks.onGroup;var onAtom=eventCallbacks.onAtom;var onBond=eventCallbacks.onBond;// setup index counters\n\tvar modelIndex=0;var chainIndex=0;var groupIndex=0;var atomIndex=0;var modelFirstAtomIndex=0;var modelLastAtomIndex=-1;// setup optional fields\n\tvar chainNameList=mmtfData.chainNameList;var secStructList=mmtfData.secStructList;var insCodeList=mmtfData.insCodeList;var sequenceIndexList=mmtfData.sequenceIndexList;var atomIdList=mmtfData.atomIdList;var bFactorList=mmtfData.bFactorList;var altLocList=mmtfData.altLocList;var occupancyList=mmtfData.occupancyList;var bondAtomList=mmtfData.bondAtomList;var bondOrderList=mmtfData.bondOrderList;// hoisted loop variables\n\tvar o,ol,i,j,k,kl;// loop over all models\n\tfor(o=0,ol=mmtfData.chainsPerModel.length;o<ol;++o){if(firstModelOnly&&modelIndex>0)break;var modelChainCount=mmtfData.chainsPerModel[modelIndex];if(onModel){onModel({chainCount:modelChainCount,modelIndex:modelIndex});}for(i=0;i<modelChainCount;++i){var chainGroupCount=mmtfData.groupsPerChain[chainIndex];if(onChain){var chainId=fromCharCode(mmtfData.chainIdList.subarray(chainIndex*4,chainIndex*4+4));var chainName=null;if(chainNameList){chainName=fromCharCode(chainNameList.subarray(chainIndex*4,chainIndex*4+4));}onChain({groupCount:chainGroupCount,chainIndex:chainIndex,modelIndex:modelIndex,chainId:chainId,chainName:chainName});}for(j=0;j<chainGroupCount;++j){var groupData=mmtfData.groupList[mmtfData.groupTypeList[groupIndex]];var groupAtomCount=groupData.atomNameList.length;if(onGroup){var secStruct=null;if(secStructList){secStruct=secStructList[groupIndex];}var insCode=null;if(mmtfData.insCodeList){insCode=String.fromCharCode(insCodeList[groupIndex]);}var sequenceIndex=null;if(sequenceIndexList){sequenceIndex=sequenceIndexList[groupIndex];}onGroup({atomCount:groupAtomCount,groupIndex:groupIndex,chainIndex:chainIndex,modelIndex:modelIndex,groupId:mmtfData.groupIdList[groupIndex],groupType:mmtfData.groupTypeList[groupIndex],groupName:groupData.groupName,singleLetterCode:groupData.singleLetterCode,chemCompType:groupData.chemCompType,secStruct:secStruct,insCode:insCode,sequenceIndex:sequenceIndex});}for(k=0;k<groupAtomCount;++k){if(onAtom){var atomId=null;if(atomIdList){atomId=atomIdList[atomIndex];}var bFactor=null;if(bFactorList){bFactor=bFactorList[atomIndex];}var altLoc=null;if(altLocList){altLoc=String.fromCharCode(altLocList[atomIndex]);}var occupancy=null;if(occupancyList){occupancy=occupancyList[atomIndex];}onAtom({atomIndex:atomIndex,groupIndex:groupIndex,chainIndex:chainIndex,modelIndex:modelIndex,atomId:atomId,element:groupData.elementList[k],atomName:groupData.atomNameList[k],formalCharge:groupData.formalChargeList[k],xCoord:mmtfData.xCoordList[atomIndex],yCoord:mmtfData.yCoordList[atomIndex],zCoord:mmtfData.zCoordList[atomIndex],bFactor:bFactor,altLoc:altLoc,occupancy:occupancy});}atomIndex+=1;}if(onBond){// intra group bonds\n\tvar groupBondAtomList=groupData.bondAtomList;for(k=0,kl=groupData.bondOrderList.length;k<kl;++k){onBond({atomIndex1:atomIndex-groupAtomCount+groupBondAtomList[k*2],atomIndex2:atomIndex-groupAtomCount+groupBondAtomList[k*2+1],bondOrder:groupData.bondOrderList[k]});}}groupIndex+=1;}chainIndex+=1;}modelFirstAtomIndex=modelLastAtomIndex+1;modelLastAtomIndex=atomIndex-1;// subtract one as it already has been incremented\n\tif(onBond){// inter group bonds\n\tif(bondAtomList){for(k=0,kl=bondAtomList.length;k<kl;k+=2){var atomIndex1=bondAtomList[k];var atomIndex2=bondAtomList[k+1];if(atomIndex1>=modelFirstAtomIndex&&atomIndex1<=modelLastAtomIndex||atomIndex2>=modelFirstAtomIndex&&atomIndex2<=modelLastAtomIndex){onBond({atomIndex1:atomIndex1,atomIndex2:atomIndex2,bondOrder:bondOrderList?bondOrderList[k/2]:null});}}}}modelIndex+=1;}}/**\n\t   * Version name\n\t   * @static\n\t   * @type {String}\n\t   */var version=\"v0.3.0\";/**\n\t   * Version name\n\t   * @private\n\t   * @type {String}\n\t   */var baseUrl=\"http://mmtf.rcsb.org/v0.2/\";/**\n\t   * URL of the RCSB webservice to obtain MMTF files\n\t   * @static\n\t   * @type {String}\n\t   */var fetchUrl=baseUrl+\"full/\";/**\n\t   * URL of the RCSB webservice to obtain reduced MMTF files\n\t   * @static\n\t   * @type {String}\n\t   */var fetchReducedUrl=baseUrl+\"reduced/\";/**\n\t   * Encode MMTF fields\n\t   * @static\n\t   * @param  {module:MmtfDecode.MmtfData} mmtfData - mmtf data\n\t   * @return {Uint8Array} encoded MMTF fields\n\t   */function encode(mmtfData){return encodeMsgpack(encodeMmtf(mmtfData));}/**\n\t   * Decode MMTF fields\n\t   * @static\n\t   * @example\n\t   * // bin is Uint8Array containing the mmtf msgpack\n\t   * var mmtfData = MMTF.decode( bin );\n\t   * console.log( mmtfData.numAtoms );\n\t   *\n\t   * @param  {Uint8Array|ArrayBuffer|module:MmtfDecode.EncodedMmtfData} binOrDict - binary MessagePack or encoded MMTF data\n\t   * @param  {Object} [params] - decoding parameters\n\t   * @param {String[]} params.ignoreFields - names of optional fields not to decode\n\t   * @return {module:MmtfDecode.MmtfData} mmtfData\n\t   */function decode(binOrDict,params){// make sure binOrDict is not a plain Arraybuffer\n\tif(binOrDict instanceof ArrayBuffer){binOrDict=new Uint8Array(binOrDict);}var inputDict;if(binOrDict instanceof Uint8Array){// get dict from msgpack\n\tinputDict=decodeMsgpack(binOrDict);}else{// already a dict\n\tinputDict=binOrDict;}return decodeMmtf(inputDict,params);}/**\n\t   * @callback module:MMTF.onLoad\n\t   * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data object\n\t   *//**\n\t   * helper method to fetch binary files from an URL\n\t   * @private\n\t   * @param  {String} pdbid - PDB ID to fetch\n\t   * @param  {String} baseUrl - URL to fetch from\n\t   * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\n\t   * @param  {Function} onError - callback( error )\n\t   * @return {undefined}\n\t   */function _fetch(pdbid,baseUrl,onLoad,onError){var xhr=new XMLHttpRequest();function _onLoad(){try{var mmtfData=decode(xhr.response);onLoad(mmtfData);}catch(error){onError(error);}}xhr.addEventListener(\"load\",_onLoad,true);xhr.addEventListener(\"error\",onError,true);xhr.responseType=\"arraybuffer\";xhr.open(\"GET\",baseUrl+pdbid.toUpperCase());xhr.send();}/**\n\t   * Fetch MMTF file from RCSB webservice which contains\n\t   * @static\n\t   * @example\n\t   * MMTF.fetch(\n\t   *     \"3PQR\",\n\t   *     // onLoad callback\n\t   *     function( mmtfData ){ console.log( mmtfData ) },\n\t   *     // onError callback\n\t   *     function( error ){ console.error( error ) }\n\t   * );\n\t   *\n\t   * @param  {String} pdbid - PDB ID to fetch\n\t   * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\n\t   * @param  {Function} onError - callback( error )\n\t   * @return {undefined}\n\t   */function fetch(pdbid,onLoad,onError){_fetch(pdbid,fetchUrl,onLoad,onError);}/**\n\t   * Fetch reduced MMTF file from RCSB webservice which contains\n\t   * protein C-alpha, nucleotide phosphate and ligand atoms\n\t   * @static\n\t   * @example\n\t   * MMTF.fetchReduced(\n\t   *     \"3PQR\",\n\t   *     // onLoad callback\n\t   *     function( mmtfData ){ console.log( mmtfData ) },\n\t   *     // onError callback\n\t   *     function( error ){ console.error( error ) }\n\t   * );\n\t   *\n\t   * @param  {String} pdbid - PDB ID to fetch\n\t   * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\n\t   * @param  {Function} onError - callback( error )\n\t   * @return {undefined}\n\t   */function fetchReduced(pdbid,onLoad,onError){_fetch(pdbid,fetchReducedUrl,onLoad,onError);}exports.encode=encode;exports.decode=decode;exports.traverse=traverseMmtf;exports.fetch=fetch;exports.fetchReduced=fetchReduced;exports.version=version;exports.fetchUrl=fetchUrl;exports.fetchReducedUrl=fetchReducedUrl;exports.encodeMsgpack=encodeMsgpack;exports.encodeMmtf=encodeMmtf;exports.decodeMsgpack=decodeMsgpack;exports.decodeMmtf=decodeMmtf;});/* pako 0.2.7 nodeca/pako */(function(f){if(( false?'undefined':_typeof(exports))===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(true){!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.pako=f();}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f;}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e);},l,l.exports,e,t,n,r);}return n[o].exports;}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++){s(r[o]);}return s;}({1:[function(require,module,exports){'use strict';var TYPED_OK=typeof Uint8Array!=='undefined'&&typeof Uint16Array!=='undefined'&&typeof Int32Array!=='undefined';exports.assign=function(obj/*from1, from2, from3, ...*/){var sources=Array.prototype.slice.call(arguments,1);while(sources.length){var source=sources.shift();if(!source){continue;}if((typeof source==='undefined'?'undefined':_typeof(source))!=='object'){throw new TypeError(source+'must be non-object');}for(var p in source){if(source.hasOwnProperty(p)){obj[p]=source[p];}}}return obj;};// reduce buffer size, avoiding mem copy\n\texports.shrinkBuf=function(buf,size){if(buf.length===size){return buf;}if(buf.subarray){return buf.subarray(0,size);}buf.length=size;return buf;};var fnTyped={arraySet:function arraySet(dest,src,src_offs,len,dest_offs){if(src.subarray&&dest.subarray){dest.set(src.subarray(src_offs,src_offs+len),dest_offs);return;}// Fallback to ordinary array\n\tfor(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i];}},// Join array of chunks to single array.\n\tflattenChunks:function flattenChunks(chunks){var i,l,len,pos,chunk,result;// calculate data length\n\tlen=0;for(i=0,l=chunks.length;i<l;i++){len+=chunks[i].length;}// join chunks\n\tresult=new Uint8Array(len);pos=0;for(i=0,l=chunks.length;i<l;i++){chunk=chunks[i];result.set(chunk,pos);pos+=chunk.length;}return result;}};var fnUntyped={arraySet:function arraySet(dest,src,src_offs,len,dest_offs){for(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i];}},// Join array of chunks to single array.\n\tflattenChunks:function flattenChunks(chunks){return[].concat.apply([],chunks);}};// Enable/Disable typed arrays use, for testing\n\t//\n\texports.setTyped=function(on){if(on){exports.Buf8=Uint8Array;exports.Buf16=Uint16Array;exports.Buf32=Int32Array;exports.assign(exports,fnTyped);}else{exports.Buf8=Array;exports.Buf16=Array;exports.Buf32=Array;exports.assign(exports,fnUntyped);}};exports.setTyped(TYPED_OK);},{}],2:[function(require,module,exports){// String encode/decode helpers\n\t'use strict';var utils=require('./common');// Quick check if we can use fast array to bin string conversion\n\t//\n\t// - apply(Array) can fail on Android 2.2\n\t// - apply(Uint8Array) can fail on iOS 5.1 Safary\n\t//\n\tvar STR_APPLY_OK=true;var STR_APPLY_UIA_OK=true;try{String.fromCharCode.apply(null,[0]);}catch(__){STR_APPLY_OK=false;}try{String.fromCharCode.apply(null,new Uint8Array(1));}catch(__){STR_APPLY_UIA_OK=false;}// Table with utf8 lengths (calculated by first byte of sequence)\n\t// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n\t// because max possible codepoint is 0x10ffff\n\tvar _utf8len=new utils.Buf8(256);for(var q=0;q<256;q++){_utf8len[q]=q>=252?6:q>=248?5:q>=240?4:q>=224?3:q>=192?2:1;}_utf8len[254]=_utf8len[254]=1;// Invalid sequence start\n\t// convert string to array (typed, when possible)\n\texports.string2buf=function(str){var buf,c,c2,m_pos,i,str_len=str.length,buf_len=0;// count binary size\n\tfor(m_pos=0;m_pos<str_len;m_pos++){c=str.charCodeAt(m_pos);if((c&0xfc00)===0xd800&&m_pos+1<str_len){c2=str.charCodeAt(m_pos+1);if((c2&0xfc00)===0xdc00){c=0x10000+(c-0xd800<<10)+(c2-0xdc00);m_pos++;}}buf_len+=c<0x80?1:c<0x800?2:c<0x10000?3:4;}// allocate buffer\n\tbuf=new utils.Buf8(buf_len);// convert\n\tfor(i=0,m_pos=0;i<buf_len;m_pos++){c=str.charCodeAt(m_pos);if((c&0xfc00)===0xd800&&m_pos+1<str_len){c2=str.charCodeAt(m_pos+1);if((c2&0xfc00)===0xdc00){c=0x10000+(c-0xd800<<10)+(c2-0xdc00);m_pos++;}}if(c<0x80){/* one byte */buf[i++]=c;}else if(c<0x800){/* two bytes */buf[i++]=0xC0|c>>>6;buf[i++]=0x80|c&0x3f;}else if(c<0x10000){/* three bytes */buf[i++]=0xE0|c>>>12;buf[i++]=0x80|c>>>6&0x3f;buf[i++]=0x80|c&0x3f;}else{/* four bytes */buf[i++]=0xf0|c>>>18;buf[i++]=0x80|c>>>12&0x3f;buf[i++]=0x80|c>>>6&0x3f;buf[i++]=0x80|c&0x3f;}}return buf;};// Helper (used in 2 places)\n\tfunction buf2binstring(buf,len){// use fallback for big arrays to avoid stack overflow\n\tif(len<65537){if(buf.subarray&&STR_APPLY_UIA_OK||!buf.subarray&&STR_APPLY_OK){return String.fromCharCode.apply(null,utils.shrinkBuf(buf,len));}}var result='';for(var i=0;i<len;i++){result+=String.fromCharCode(buf[i]);}return result;}// Convert byte array to binary string\n\texports.buf2binstring=function(buf){return buf2binstring(buf,buf.length);};// Convert binary string (typed, when possible)\n\texports.binstring2buf=function(str){var buf=new utils.Buf8(str.length);for(var i=0,len=buf.length;i<len;i++){buf[i]=str.charCodeAt(i);}return buf;};// convert array to string\n\texports.buf2string=function(buf,max){var i,out,c,c_len;var len=max||buf.length;// Reserve max possible length (2 words per char)\n\t// NB: by unknown reasons, Array is significantly faster for\n\t//     String.fromCharCode.apply than Uint16Array.\n\tvar utf16buf=new Array(len*2);for(out=0,i=0;i<len;){c=buf[i++];// quick process ascii\n\tif(c<0x80){utf16buf[out++]=c;continue;}c_len=_utf8len[c];// skip 5 & 6 byte codes\n\tif(c_len>4){utf16buf[out++]=0xfffd;i+=c_len-1;continue;}// apply mask on first byte\n\tc&=c_len===2?0x1f:c_len===3?0x0f:0x07;// join the rest\n\twhile(c_len>1&&i<len){c=c<<6|buf[i++]&0x3f;c_len--;}// terminated by end of string?\n\tif(c_len>1){utf16buf[out++]=0xfffd;continue;}if(c<0x10000){utf16buf[out++]=c;}else{c-=0x10000;utf16buf[out++]=0xd800|c>>10&0x3ff;utf16buf[out++]=0xdc00|c&0x3ff;}}return buf2binstring(utf16buf,out);};// Calculate max possible position in utf8 buffer,\n\t// that will not break sequence. If that's not possible\n\t// - (very small limits) return max size as is.\n\t//\n\t// buf[] - utf8 bytes array\n\t// max   - length limit (mandatory);\n\texports.utf8border=function(buf,max){var pos;max=max||buf.length;if(max>buf.length){max=buf.length;}// go back from last position, until start of sequence found\n\tpos=max-1;while(pos>=0&&(buf[pos]&0xC0)===0x80){pos--;}// Fuckup - very small and broken sequence,\n\t// return max, because we should return something anyway.\n\tif(pos<0){return max;}// If we came to start of buffer - that means vuffer is too small,\n\t// return max too.\n\tif(pos===0){return max;}return pos+_utf8len[buf[pos]]>max?pos:max;};},{\"./common\":1}],3:[function(require,module,exports){'use strict';// Note: adler32 takes 12% for level 0 and 2% for level 6.\n\t// It doesn't worth to make additional optimizationa as in original.\n\t// Small size is preferable.\n\tfunction adler32(adler,buf,len,pos){var s1=adler&0xffff|0,s2=adler>>>16&0xffff|0,n=0;while(len!==0){// Set limit ~ twice less than 5552, to keep\n\t// s2 in 31-bits, because we force signed ints.\n\t// in other case %= will fail.\n\tn=len>2000?2000:len;len-=n;do{s1=s1+buf[pos++]|0;s2=s2+s1|0;}while(--n);s1%=65521;s2%=65521;}return s1|s2<<16|0;}module.exports=adler32;},{}],4:[function(require,module,exports){module.exports={/* Allowed flush values; see deflate() and inflate() below for details */Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,/* Return codes for the compression/decompression functions. Negative values\n\t  * are errors, positive values are used for special but normal events.\n\t  */Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,//Z_MEM_ERROR:     -4,\n\tZ_BUF_ERROR:-5,//Z_VERSION_ERROR: -6,\n\t/* compression levels */Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,/* Possible values of the data_type field (though see inflate()) */Z_BINARY:0,Z_TEXT:1,//Z_ASCII:                1, // = Z_TEXT (deprecated)\n\tZ_UNKNOWN:2,/* The deflate compression method */Z_DEFLATED:8//Z_NULL:                 null // Use -1 or null inline, depending on var type\n\t};},{}],5:[function(require,module,exports){'use strict';// Note: we can't get significant speed boost here.\n\t// So write code to minimize size - no pregenerated tables\n\t// and array tools dependencies.\n\t// Use ordinary array, since untyped makes no boost here\n\tfunction makeTable(){var c,table=[];for(var n=0;n<256;n++){c=n;for(var k=0;k<8;k++){c=c&1?0xEDB88320^c>>>1:c>>>1;}table[n]=c;}return table;}// Create table on load. Just 255 signed longs. Not a problem.\n\tvar crcTable=makeTable();function crc32(crc,buf,len,pos){var t=crcTable,end=pos+len;crc=crc^-1;for(var i=pos;i<end;i++){crc=crc>>>8^t[(crc^buf[i])&0xFF];}return crc^-1;// >>> 0;\n\t}module.exports=crc32;},{}],6:[function(require,module,exports){'use strict';function GZheader(){/* true if compressed data believed to be text */this.text=0;/* modification time */this.time=0;/* extra flags (not used when writing a gzip file) */this.xflags=0;/* operating system */this.os=0;/* pointer to extra field or Z_NULL if none */this.extra=null;/* extra field length (valid if extra != Z_NULL) */this.extra_len=0;// Actually, we don't need it in JS,\n\t// but leave for few code modifications\n\t//\n\t// Setup limits is not necessary because in js we should not preallocate memory\n\t// for inflate use constant limit in 65536 bytes\n\t//\n\t/* space at extra (only when reading header) */// this.extra_max  = 0;\n\t/* pointer to zero-terminated file name or Z_NULL */this.name='';/* space at name (only when reading header) */// this.name_max   = 0;\n\t/* pointer to zero-terminated comment or Z_NULL */this.comment='';/* space at comment (only when reading header) */// this.comm_max   = 0;\n\t/* true if there was or will be a header crc */this.hcrc=0;/* true when done reading gzip header (not used when writing a gzip file) */this.done=false;}module.exports=GZheader;},{}],7:[function(require,module,exports){'use strict';// See state defs from inflate.js\n\tvar BAD=30;/* got a data error -- remain here until reset */var TYPE=12;/* i: waiting for type bits, including last-flag bit *//*\n\t   Decode literal, length, and distance codes and write out the resulting\n\t   literal and match bytes until either not enough input or output is\n\t   available, an end-of-block is encountered, or a data error is encountered.\n\t   When large enough input and output buffers are supplied to inflate(), for\n\t   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n\t   inflate execution time is spent in this routine.\n\t\n\t   Entry assumptions:\n\t\n\t        state.mode === LEN\n\t        strm.avail_in >= 6\n\t        strm.avail_out >= 258\n\t        start >= strm.avail_out\n\t        state.bits < 8\n\t\n\t   On return, state.mode is one of:\n\t\n\t        LEN -- ran out of enough output space or enough available input\n\t        TYPE -- reached end of block code, inflate() to interpret next block\n\t        BAD -- error in block data\n\t\n\t   Notes:\n\t\n\t    - The maximum input bits used by a length/distance pair is 15 bits for the\n\t      length code, 5 bits for the length extra, 15 bits for the distance code,\n\t      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n\t      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n\t      checking for available input while decoding.\n\t\n\t    - The maximum bytes that a single length/distance pair can output is 258\n\t      bytes, which is the maximum length that can be coded.  inflate_fast()\n\t      requires strm.avail_out >= 258 for each loop to avoid checking for\n\t      output space.\n\t */module.exports=function inflate_fast(strm,start){var state;var _in;/* local strm.input */var last;/* have enough input while in < last */var _out;/* local strm.output */var beg;/* inflate()'s initial strm.output */var end;/* while out < end, enough space available *///#ifdef INFLATE_STRICT\n\tvar dmax;/* maximum distance from zlib header *///#endif\n\tvar wsize;/* window size or zero if not using window */var whave;/* valid bytes in the window */var wnext;/* window write index */var window;/* allocated sliding window, if wsize != 0 */var hold;/* local strm.hold */var bits;/* local strm.bits */var lcode;/* local strm.lencode */var dcode;/* local strm.distcode */var lmask;/* mask for first level of length codes */var dmask;/* mask for first level of distance codes */var here;/* retrieved table entry */var op;/* code bits, operation, extra bits, or *//*  window position, window bytes to copy */var len;/* match length, unused bytes */var dist;/* match distance */var from;/* where to copy match from */var from_source;var input,output;// JS specific, because we have no pointers\n\t/* copy state to local variables */state=strm.state;//here = state.here;\n\t_in=strm.next_in;input=strm.input;last=_in+(strm.avail_in-5);_out=strm.next_out;output=strm.output;beg=_out-(start-strm.avail_out);end=_out+(strm.avail_out-257);//#ifdef INFLATE_STRICT\n\tdmax=state.dmax;//#endif\n\twsize=state.wsize;whave=state.whave;wnext=state.wnext;window=state.window;hold=state.hold;bits=state.bits;lcode=state.lencode;dcode=state.distcode;lmask=(1<<state.lenbits)-1;dmask=(1<<state.distbits)-1;/* decode literals and length/distances until end-of-block or not enough\n\t     input data or output space */top:do{if(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=lcode[hold&lmask];dolen:for(;;){// Goto emulation\n\top=here>>>24/*here.bits*/;hold>>>=op;bits-=op;op=here>>>16&0xff/*here.op*/;if(op===0){/* literal *///Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n\t//        \"inflate:         literal '%c'\\n\" :\n\t//        \"inflate:         literal 0x%02x\\n\", here.val));\n\toutput[_out++]=here&0xffff/*here.val*/;}else if(op&16){/* length base */len=here&0xffff/*here.val*/;op&=15;/* number of extra bits */if(op){if(bits<op){hold+=input[_in++]<<bits;bits+=8;}len+=hold&(1<<op)-1;hold>>>=op;bits-=op;}//Tracevv((stderr, \"inflate:         length %u\\n\", len));\n\tif(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=dcode[hold&dmask];dodist:for(;;){// goto emulation\n\top=here>>>24/*here.bits*/;hold>>>=op;bits-=op;op=here>>>16&0xff/*here.op*/;if(op&16){/* distance base */dist=here&0xffff/*here.val*/;op&=15;/* number of extra bits */if(bits<op){hold+=input[_in++]<<bits;bits+=8;if(bits<op){hold+=input[_in++]<<bits;bits+=8;}}dist+=hold&(1<<op)-1;//#ifdef INFLATE_STRICT\n\tif(dist>dmax){strm.msg='invalid distance too far back';state.mode=BAD;break top;}//#endif\n\thold>>>=op;bits-=op;//Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n\top=_out-beg;/* max distance in output */if(dist>op){/* see if copy from window */op=dist-op;/* distance back in window */if(op>whave){if(state.sane){strm.msg='invalid distance too far back';state.mode=BAD;break top;}// (!) This block is disabled in zlib defailts,\n\t// don't enable it for binary compatibility\n\t//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n\t//                if (len <= op - whave) {\n\t//                  do {\n\t//                    output[_out++] = 0;\n\t//                  } while (--len);\n\t//                  continue top;\n\t//                }\n\t//                len -= op - whave;\n\t//                do {\n\t//                  output[_out++] = 0;\n\t//                } while (--op > whave);\n\t//                if (op === 0) {\n\t//                  from = _out - dist;\n\t//                  do {\n\t//                    output[_out++] = output[from++];\n\t//                  } while (--len);\n\t//                  continue top;\n\t//                }\n\t//#endif\n\t}from=0;// window index\n\tfrom_source=window;if(wnext===0){/* very common case */from+=wsize-op;if(op<len){/* some from window */len-=op;do{output[_out++]=window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}else if(wnext<op){/* wrap around window */from+=wsize+wnext-op;op-=wnext;if(op<len){/* some from end of window */len-=op;do{output[_out++]=window[from++];}while(--op);from=0;if(wnext<len){/* some from start of window */op=wnext;len-=op;do{output[_out++]=window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}}else{/* contiguous in window */from+=wnext-op;if(op<len){/* some from window */len-=op;do{output[_out++]=window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}while(len>2){output[_out++]=from_source[from++];output[_out++]=from_source[from++];output[_out++]=from_source[from++];len-=3;}if(len){output[_out++]=from_source[from++];if(len>1){output[_out++]=from_source[from++];}}}else{from=_out-dist;/* copy direct from output */do{/* minimum length is three */output[_out++]=output[from++];output[_out++]=output[from++];output[_out++]=output[from++];len-=3;}while(len>2);if(len){output[_out++]=output[from++];if(len>1){output[_out++]=output[from++];}}}}else if((op&64)===0){/* 2nd level distance code */here=dcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];continue dodist;}else{strm.msg='invalid distance code';state.mode=BAD;break top;}break;// need to emulate goto via \"continue\"\n\t}}else if((op&64)===0){/* 2nd level length code */here=lcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];continue dolen;}else if(op&32){/* end-of-block *///Tracevv((stderr, \"inflate:         end of block\\n\"));\n\tstate.mode=TYPE;break top;}else{strm.msg='invalid literal/length code';state.mode=BAD;break top;}break;// need to emulate goto via \"continue\"\n\t}}while(_in<last&&_out<end);/* return unused bytes (on entry, bits < 8, so in won't go too far back) */len=bits>>3;_in-=len;bits-=len<<3;hold&=(1<<bits)-1;/* update state and return */strm.next_in=_in;strm.next_out=_out;strm.avail_in=_in<last?5+(last-_in):5-(_in-last);strm.avail_out=_out<end?257+(end-_out):257-(_out-end);state.hold=hold;state.bits=bits;return;};},{}],8:[function(require,module,exports){'use strict';var utils=require('../utils/common');var adler32=require('./adler32');var crc32=require('./crc32');var inflate_fast=require('./inffast');var inflate_table=require('./inftrees');var CODES=0;var LENS=1;var DISTS=2;/* Public constants ==========================================================*//* ===========================================================================*//* Allowed flush values; see deflate() and inflate() below for details *///var Z_NO_FLUSH      = 0;\n\t//var Z_PARTIAL_FLUSH = 1;\n\t//var Z_SYNC_FLUSH    = 2;\n\t//var Z_FULL_FLUSH    = 3;\n\tvar Z_FINISH=4;var Z_BLOCK=5;var Z_TREES=6;/* Return codes for the compression/decompression functions. Negative values\n\t * are errors, positive values are used for special but normal events.\n\t */var Z_OK=0;var Z_STREAM_END=1;var Z_NEED_DICT=2;//var Z_ERRNO         = -1;\n\tvar Z_STREAM_ERROR=-2;var Z_DATA_ERROR=-3;var Z_MEM_ERROR=-4;var Z_BUF_ERROR=-5;//var Z_VERSION_ERROR = -6;\n\t/* The deflate compression method */var Z_DEFLATED=8;/* STATES ====================================================================*//* ===========================================================================*/var HEAD=1;/* i: waiting for magic header */var FLAGS=2;/* i: waiting for method and flags (gzip) */var TIME=3;/* i: waiting for modification time (gzip) */var OS=4;/* i: waiting for extra flags and operating system (gzip) */var EXLEN=5;/* i: waiting for extra length (gzip) */var EXTRA=6;/* i: waiting for extra bytes (gzip) */var NAME=7;/* i: waiting for end of file name (gzip) */var COMMENT=8;/* i: waiting for end of comment (gzip) */var HCRC=9;/* i: waiting for header crc (gzip) */var DICTID=10;/* i: waiting for dictionary check value */var DICT=11;/* waiting for inflateSetDictionary() call */var TYPE=12;/* i: waiting for type bits, including last-flag bit */var TYPEDO=13;/* i: same, but skip check to exit inflate on new block */var STORED=14;/* i: waiting for stored size (length and complement) */var COPY_=15;/* i/o: same as COPY below, but only first time in */var COPY=16;/* i/o: waiting for input or output to copy stored block */var TABLE=17;/* i: waiting for dynamic block table lengths */var LENLENS=18;/* i: waiting for code length code lengths */var CODELENS=19;/* i: waiting for length/lit and distance code lengths */var LEN_=20;/* i: same as LEN below, but only first time in */var LEN=21;/* i: waiting for length/lit/eob code */var LENEXT=22;/* i: waiting for length extra bits */var DIST=23;/* i: waiting for distance code */var DISTEXT=24;/* i: waiting for distance extra bits */var MATCH=25;/* o: waiting for output space to copy string */var LIT=26;/* o: waiting for output space to write literal */var CHECK=27;/* i: waiting for 32-bit check value */var LENGTH=28;/* i: waiting for 32-bit length (gzip) */var DONE=29;/* finished check, done -- remain here until reset */var BAD=30;/* got a data error -- remain here until reset */var MEM=31;/* got an inflate() memory error -- remain here until reset */var SYNC=32;/* looking for synchronization bytes to restart inflate() *//* ===========================================================================*/var ENOUGH_LENS=852;var ENOUGH_DISTS=592;//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\tvar MAX_WBITS=15;/* 32K LZ77 window */var DEF_WBITS=MAX_WBITS;function ZSWAP32(q){return(q>>>24&0xff)+(q>>>8&0xff00)+((q&0xff00)<<8)+((q&0xff)<<24);}function InflateState(){this.mode=0;/* current inflate mode */this.last=false;/* true if processing last block */this.wrap=0;/* bit 0 true for zlib, bit 1 true for gzip */this.havedict=false;/* true if dictionary provided */this.flags=0;/* gzip header method and flags (0 if zlib) */this.dmax=0;/* zlib header max distance (INFLATE_STRICT) */this.check=0;/* protected copy of check value */this.total=0;/* protected copy of output count */// TODO: may be {}\n\tthis.head=null;/* where to save gzip header information *//* sliding window */this.wbits=0;/* log base 2 of requested window size */this.wsize=0;/* window size or zero if not using window */this.whave=0;/* valid bytes in the window */this.wnext=0;/* window write index */this.window=null;/* allocated sliding window, if needed *//* bit accumulator */this.hold=0;/* input bit accumulator */this.bits=0;/* number of bits in \"in\" *//* for string and stored block copying */this.length=0;/* literal or length of data to copy */this.offset=0;/* distance back to copy string from *//* for table and code decoding */this.extra=0;/* extra bits needed *//* fixed and dynamic code tables */this.lencode=null;/* starting table for length/literal codes */this.distcode=null;/* starting table for distance codes */this.lenbits=0;/* index bits for lencode */this.distbits=0;/* index bits for distcode *//* dynamic table building */this.ncode=0;/* number of code length code lengths */this.nlen=0;/* number of length code lengths */this.ndist=0;/* number of distance code lengths */this.have=0;/* number of code lengths in lens[] */this.next=null;/* next available space in codes[] */this.lens=new utils.Buf16(320);/* temporary storage for code lengths */this.work=new utils.Buf16(288);/* work area for code table building *//*\n\t   because we don't have pointers in js, we use lencode and distcode directly\n\t   as buffers so we don't need codes\n\t  *///this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n\tthis.lendyn=null;/* dynamic table for length/literal codes (JS specific) */this.distdyn=null;/* dynamic table for distance codes (JS specific) */this.sane=0;/* if false, allow invalid distance too far */this.back=0;/* bits back of last unprocessed length/lit */this.was=0;/* initial length of match */}function inflateResetKeep(strm){var state;if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;strm.total_in=strm.total_out=state.total=0;strm.msg='';/*Z_NULL*/if(state.wrap){/* to support ill-conceived Java test suite */strm.adler=state.wrap&1;}state.mode=HEAD;state.last=0;state.havedict=0;state.dmax=32768;state.head=null/*Z_NULL*/;state.hold=0;state.bits=0;//state.lencode = state.distcode = state.next = state.codes;\n\tstate.lencode=state.lendyn=new utils.Buf32(ENOUGH_LENS);state.distcode=state.distdyn=new utils.Buf32(ENOUGH_DISTS);state.sane=1;state.back=-1;//Tracev((stderr, \"inflate: reset\\n\"));\n\treturn Z_OK;}function inflateReset(strm){var state;if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;state.wsize=0;state.whave=0;state.wnext=0;return inflateResetKeep(strm);}function inflateReset2(strm,windowBits){var wrap;var state;/* get the state */if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;/* extract wrap request from windowBits parameter */if(windowBits<0){wrap=0;windowBits=-windowBits;}else{wrap=(windowBits>>4)+1;if(windowBits<48){windowBits&=15;}}/* set number of window bits, free window if different */if(windowBits&&(windowBits<8||windowBits>15)){return Z_STREAM_ERROR;}if(state.window!==null&&state.wbits!==windowBits){state.window=null;}/* update state and reset the rest of it */state.wrap=wrap;state.wbits=windowBits;return inflateReset(strm);}function inflateInit2(strm,windowBits){var ret;var state;if(!strm){return Z_STREAM_ERROR;}//strm.msg = Z_NULL;                 /* in case we return an error */\n\tstate=new InflateState();//if (state === Z_NULL) return Z_MEM_ERROR;\n\t//Tracev((stderr, \"inflate: allocated\\n\"));\n\tstrm.state=state;state.window=null/*Z_NULL*/;ret=inflateReset2(strm,windowBits);if(ret!==Z_OK){strm.state=null/*Z_NULL*/;}return ret;}function inflateInit(strm){return inflateInit2(strm,DEF_WBITS);}/*\n\t Return state with length and distance decoding tables and index sizes set to\n\t fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n\t If BUILDFIXED is defined, then instead this routine builds the tables the\n\t first time it's called, and returns those tables the first time and\n\t thereafter.  This reduces the size of the code by about 2K bytes, in\n\t exchange for a little execution time.  However, BUILDFIXED should not be\n\t used for threaded applications, since the rewriting of the tables and virgin\n\t may not be thread-safe.\n\t */var virgin=true;var lenfix,distfix;// We have no pointers in JS, so keep tables separate\n\tfunction fixedtables(state){/* build fixed huffman tables if first call (may not be thread safe) */if(virgin){var sym;lenfix=new utils.Buf32(512);distfix=new utils.Buf32(32);/* literal/length table */sym=0;while(sym<144){state.lens[sym++]=8;}while(sym<256){state.lens[sym++]=9;}while(sym<280){state.lens[sym++]=7;}while(sym<288){state.lens[sym++]=8;}inflate_table(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9});/* distance table */sym=0;while(sym<32){state.lens[sym++]=5;}inflate_table(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5});/* do this just once */virgin=false;}state.lencode=lenfix;state.lenbits=9;state.distcode=distfix;state.distbits=5;}/*\n\t Update the window with the last wsize (normally 32K) bytes written before\n\t returning.  If window does not exist yet, create it.  This is only called\n\t when a window is already in use, or when output has been written during this\n\t inflate call, but the end of the deflate stream has not been reached yet.\n\t It is also called to create a window for dictionary data when a dictionary\n\t is loaded.\n\t\n\t Providing output buffers larger than 32K to inflate() should provide a speed\n\t advantage, since only the last 32K of output is copied to the sliding window\n\t upon return from inflate(), and since all distances after the first 32K of\n\t output will fall in the output data, making match copies simpler and faster.\n\t The advantage may be dependent on the size of the processor's data caches.\n\t */function updatewindow(strm,src,end,copy){var dist;var state=strm.state;/* if it hasn't been done already, allocate space for the window */if(state.window===null){state.wsize=1<<state.wbits;state.wnext=0;state.whave=0;state.window=new utils.Buf8(state.wsize);}/* copy state->wsize or less output bytes into the circular window */if(copy>=state.wsize){utils.arraySet(state.window,src,end-state.wsize,state.wsize,0);state.wnext=0;state.whave=state.wsize;}else{dist=state.wsize-state.wnext;if(dist>copy){dist=copy;}//zmemcpy(state->window + state->wnext, end - copy, dist);\n\tutils.arraySet(state.window,src,end-copy,dist,state.wnext);copy-=dist;if(copy){//zmemcpy(state->window, end - copy, copy);\n\tutils.arraySet(state.window,src,end-copy,copy,0);state.wnext=copy;state.whave=state.wsize;}else{state.wnext+=dist;if(state.wnext===state.wsize){state.wnext=0;}if(state.whave<state.wsize){state.whave+=dist;}}}return 0;}function inflate(strm,flush){var state;var input,output;// input/output buffers\n\tvar next;/* next input INDEX */var put;/* next output INDEX */var have,left;/* available input and output */var hold;/* bit buffer */var bits;/* bits in bit buffer */var _in,_out;/* save starting available input and output */var copy;/* number of stored or match bytes to copy */var from;/* where to copy match bytes from */var from_source;var here=0;/* current decoding table entry */var here_bits,here_op,here_val;// paked \"here\" denormalized (JS specific)\n\t//var last;                   /* parent table entry */\n\tvar last_bits,last_op,last_val;// paked \"last\" denormalized (JS specific)\n\tvar len;/* length to copy for repeats, bits to drop */var ret;/* return code */var hbuf=new utils.Buf8(4);/* buffer for gzip header crc calculation */var opts;var n;// temporary var for NEED_BITS\n\tvar order=/* permutation of code lengths */[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!strm||!strm.state||!strm.output||!strm.input&&strm.avail_in!==0){return Z_STREAM_ERROR;}state=strm.state;if(state.mode===TYPE){state.mode=TYPEDO;}/* skip check *///--- LOAD() ---\n\tput=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state.hold;bits=state.bits;//---\n\t_in=have;_out=left;ret=Z_OK;inf_leave:// goto emulation\n\tfor(;;){switch(state.mode){case HEAD:if(state.wrap===0){state.mode=TYPEDO;break;}//=== NEEDBITS(16);\n\twhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tif(state.wrap&2&&hold===0x8b1f){/* gzip header */state.check=0/*crc32(0L, Z_NULL, 0)*/;//=== CRC2(state.check, hold);\n\thbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n\t//=== INITBITS();\n\thold=0;bits=0;//===//\n\tstate.mode=FLAGS;break;}state.flags=0;/* expect zlib header */if(state.head){state.head.done=false;}if(!(state.wrap&1)||/* check if zlib header allowed */(((hold&0xff)<</*BITS(8)*/8)+(hold>>8))%31){strm.msg='incorrect header check';state.mode=BAD;break;}if((hold&0x0f)!==/*BITS(4)*/Z_DEFLATED){strm.msg='unknown compression method';state.mode=BAD;break;}//--- DROPBITS(4) ---//\n\thold>>>=4;bits-=4;//---//\n\tlen=(hold&0x0f)+/*BITS(4)*/8;if(state.wbits===0){state.wbits=len;}else if(len>state.wbits){strm.msg='invalid window size';state.mode=BAD;break;}state.dmax=1<<len;//Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n\tstrm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;state.mode=hold&0x200?DICTID:TYPE;//=== INITBITS();\n\thold=0;bits=0;//===//\n\tbreak;case FLAGS://=== NEEDBITS(16); */\n\twhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tstate.flags=hold;if((state.flags&0xff)!==Z_DEFLATED){strm.msg='unknown compression method';state.mode=BAD;break;}if(state.flags&0xe000){strm.msg='unknown header flags set';state.mode=BAD;break;}if(state.head){state.head.text=hold>>8&1;}if(state.flags&0x0200){//=== CRC2(state.check, hold);\n\thbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n\t}//=== INITBITS();\n\thold=0;bits=0;//===//\n\tstate.mode=TIME;/* falls through */case TIME://=== NEEDBITS(32); */\n\twhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tif(state.head){state.head.time=hold;}if(state.flags&0x0200){//=== CRC4(state.check, hold)\n\thbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;hbuf[2]=hold>>>16&0xff;hbuf[3]=hold>>>24&0xff;state.check=crc32(state.check,hbuf,4,0);//===\n\t}//=== INITBITS();\n\thold=0;bits=0;//===//\n\tstate.mode=OS;/* falls through */case OS://=== NEEDBITS(16); */\n\twhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tif(state.head){state.head.xflags=hold&0xff;state.head.os=hold>>8;}if(state.flags&0x0200){//=== CRC2(state.check, hold);\n\thbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n\t}//=== INITBITS();\n\thold=0;bits=0;//===//\n\tstate.mode=EXLEN;/* falls through */case EXLEN:if(state.flags&0x0400){//=== NEEDBITS(16); */\n\twhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tstate.length=hold;if(state.head){state.head.extra_len=hold;}if(state.flags&0x0200){//=== CRC2(state.check, hold);\n\thbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n\t}//=== INITBITS();\n\thold=0;bits=0;//===//\n\t}else if(state.head){state.head.extra=null/*Z_NULL*/;}state.mode=EXTRA;/* falls through */case EXTRA:if(state.flags&0x0400){copy=state.length;if(copy>have){copy=have;}if(copy){if(state.head){len=state.head.extra_len-state.length;if(!state.head.extra){// Use untyped array for more conveniend processing later\n\tstate.head.extra=new Array(state.head.extra_len);}utils.arraySet(state.head.extra,input,next,// extra field is limited to 65536 bytes\n\t// - no need for additional size check\n\tcopy,/*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/len);//zmemcpy(state.head.extra + len, next,\n\t//        len + copy > state.head.extra_max ?\n\t//        state.head.extra_max - len : copy);\n\t}if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;state.length-=copy;}if(state.length){break inf_leave;}}state.length=0;state.mode=NAME;/* falls through */case NAME:if(state.flags&0x0800){if(have===0){break inf_leave;}copy=0;do{// TODO: 2 or 1 bytes?\n\tlen=input[next+copy++];/* use constant limit because in js we should not preallocate memory */if(state.head&&len&&state.length<65536/*state.head.name_max*/){state.head.name+=String.fromCharCode(len);}}while(len&&copy<have);if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;if(len){break inf_leave;}}else if(state.head){state.head.name=null;}state.length=0;state.mode=COMMENT;/* falls through */case COMMENT:if(state.flags&0x1000){if(have===0){break inf_leave;}copy=0;do{len=input[next+copy++];/* use constant limit because in js we should not preallocate memory */if(state.head&&len&&state.length<65536/*state.head.comm_max*/){state.head.comment+=String.fromCharCode(len);}}while(len&&copy<have);if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;if(len){break inf_leave;}}else if(state.head){state.head.comment=null;}state.mode=HCRC;/* falls through */case HCRC:if(state.flags&0x0200){//=== NEEDBITS(16); */\n\twhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tif(hold!==(state.check&0xffff)){strm.msg='header crc mismatch';state.mode=BAD;break;}//=== INITBITS();\n\thold=0;bits=0;//===//\n\t}if(state.head){state.head.hcrc=state.flags>>9&1;state.head.done=true;}strm.adler=state.check=0/*crc32(0L, Z_NULL, 0)*/;state.mode=TYPE;break;case DICTID://=== NEEDBITS(32); */\n\twhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tstrm.adler=state.check=ZSWAP32(hold);//=== INITBITS();\n\thold=0;bits=0;//===//\n\tstate.mode=DICT;/* falls through */case DICT:if(state.havedict===0){//--- RESTORE() ---\n\tstrm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---\n\treturn Z_NEED_DICT;}strm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;state.mode=TYPE;/* falls through */case TYPE:if(flush===Z_BLOCK||flush===Z_TREES){break inf_leave;}/* falls through */case TYPEDO:if(state.last){//--- BYTEBITS() ---//\n\thold>>>=bits&7;bits-=bits&7;//---//\n\tstate.mode=CHECK;break;}//=== NEEDBITS(3); */\n\twhile(bits<3){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tstate.last=hold&0x01/*BITS(1)*/;//--- DROPBITS(1) ---//\n\thold>>>=1;bits-=1;//---//\n\tswitch(hold&0x03){/*BITS(2)*/case 0:/* stored block *///Tracev((stderr, \"inflate:     stored block%s\\n\",\n\t//        state.last ? \" (last)\" : \"\"));\n\tstate.mode=STORED;break;case 1:/* fixed block */fixedtables(state);//Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n\t//        state.last ? \" (last)\" : \"\"));\n\tstate.mode=LEN_;/* decode codes */if(flush===Z_TREES){//--- DROPBITS(2) ---//\n\thold>>>=2;bits-=2;//---//\n\tbreak inf_leave;}break;case 2:/* dynamic block *///Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n\t//        state.last ? \" (last)\" : \"\"));\n\tstate.mode=TABLE;break;case 3:strm.msg='invalid block type';state.mode=BAD;}//--- DROPBITS(2) ---//\n\thold>>>=2;bits-=2;//---//\n\tbreak;case STORED://--- BYTEBITS() ---// /* go to byte boundary */\n\thold>>>=bits&7;bits-=bits&7;//---//\n\t//=== NEEDBITS(32); */\n\twhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tif((hold&0xffff)!==(hold>>>16^0xffff)){strm.msg='invalid stored block lengths';state.mode=BAD;break;}state.length=hold&0xffff;//Tracev((stderr, \"inflate:       stored length %u\\n\",\n\t//        state.length));\n\t//=== INITBITS();\n\thold=0;bits=0;//===//\n\tstate.mode=COPY_;if(flush===Z_TREES){break inf_leave;}/* falls through */case COPY_:state.mode=COPY;/* falls through */case COPY:copy=state.length;if(copy){if(copy>have){copy=have;}if(copy>left){copy=left;}if(copy===0){break inf_leave;}//--- zmemcpy(put, next, copy); ---\n\tutils.arraySet(output,input,next,copy,put);//---//\n\thave-=copy;next+=copy;left-=copy;put+=copy;state.length-=copy;break;}//Tracev((stderr, \"inflate:       stored end\\n\"));\n\tstate.mode=TYPE;break;case TABLE://=== NEEDBITS(14); */\n\twhile(bits<14){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tstate.nlen=(hold&0x1f)+/*BITS(5)*/257;//--- DROPBITS(5) ---//\n\thold>>>=5;bits-=5;//---//\n\tstate.ndist=(hold&0x1f)+/*BITS(5)*/1;//--- DROPBITS(5) ---//\n\thold>>>=5;bits-=5;//---//\n\tstate.ncode=(hold&0x0f)+/*BITS(4)*/4;//--- DROPBITS(4) ---//\n\thold>>>=4;bits-=4;//---//\n\t//#ifndef PKZIP_BUG_WORKAROUND\n\tif(state.nlen>286||state.ndist>30){strm.msg='too many length or distance symbols';state.mode=BAD;break;}//#endif\n\t//Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n\tstate.have=0;state.mode=LENLENS;/* falls through */case LENLENS:while(state.have<state.ncode){//=== NEEDBITS(3);\n\twhile(bits<3){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tstate.lens[order[state.have++]]=hold&0x07;//BITS(3);\n\t//--- DROPBITS(3) ---//\n\thold>>>=3;bits-=3;//---//\n\t}while(state.have<19){state.lens[order[state.have++]]=0;}// We have separate tables & no pointers. 2 commented lines below not needed.\n\t//state.next = state.codes;\n\t//state.lencode = state.next;\n\t// Switch to use dynamic table\n\tstate.lencode=state.lendyn;state.lenbits=7;opts={bits:state.lenbits};ret=inflate_table(CODES,state.lens,0,19,state.lencode,0,state.work,opts);state.lenbits=opts.bits;if(ret){strm.msg='invalid code lengths set';state.mode=BAD;break;}//Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n\tstate.have=0;state.mode=CODELENS;/* falls through */case CODELENS:while(state.have<state.nlen+state.ndist){for(;;){here=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//\n\tif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n\t}if(here_val<16){//--- DROPBITS(here.bits) ---//\n\thold>>>=here_bits;bits-=here_bits;//---//\n\tstate.lens[state.have++]=here_val;}else{if(here_val===16){//=== NEEDBITS(here.bits + 2);\n\tn=here_bits+2;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\t//--- DROPBITS(here.bits) ---//\n\thold>>>=here_bits;bits-=here_bits;//---//\n\tif(state.have===0){strm.msg='invalid bit length repeat';state.mode=BAD;break;}len=state.lens[state.have-1];copy=3+(hold&0x03);//BITS(2);\n\t//--- DROPBITS(2) ---//\n\thold>>>=2;bits-=2;//---//\n\t}else if(here_val===17){//=== NEEDBITS(here.bits + 3);\n\tn=here_bits+3;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\t//--- DROPBITS(here.bits) ---//\n\thold>>>=here_bits;bits-=here_bits;//---//\n\tlen=0;copy=3+(hold&0x07);//BITS(3);\n\t//--- DROPBITS(3) ---//\n\thold>>>=3;bits-=3;//---//\n\t}else{//=== NEEDBITS(here.bits + 7);\n\tn=here_bits+7;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\t//--- DROPBITS(here.bits) ---//\n\thold>>>=here_bits;bits-=here_bits;//---//\n\tlen=0;copy=11+(hold&0x7f);//BITS(7);\n\t//--- DROPBITS(7) ---//\n\thold>>>=7;bits-=7;//---//\n\t}if(state.have+copy>state.nlen+state.ndist){strm.msg='invalid bit length repeat';state.mode=BAD;break;}while(copy--){state.lens[state.have++]=len;}}}/* handle error breaks in while */if(state.mode===BAD){break;}/* check for end-of-block code (better have one) */if(state.lens[256]===0){strm.msg='invalid code -- missing end-of-block';state.mode=BAD;break;}/* build code tables -- note: do not change the lenbits or distbits\n\t         values here (9 and 6) without reading the comments in inftrees.h\n\t         concerning the ENOUGH constants, which depend on those values */state.lenbits=9;opts={bits:state.lenbits};ret=inflate_table(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts);// We have separate tables & no pointers. 2 commented lines below not needed.\n\t// state.next_index = opts.table_index;\n\tstate.lenbits=opts.bits;// state.lencode = state.next;\n\tif(ret){strm.msg='invalid literal/lengths set';state.mode=BAD;break;}state.distbits=6;//state.distcode.copy(state.codes);\n\t// Switch to use dynamic table\n\tstate.distcode=state.distdyn;opts={bits:state.distbits};ret=inflate_table(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts);// We have separate tables & no pointers. 2 commented lines below not needed.\n\t// state.next_index = opts.table_index;\n\tstate.distbits=opts.bits;// state.distcode = state.next;\n\tif(ret){strm.msg='invalid distances set';state.mode=BAD;break;}//Tracev((stderr, 'inflate:       codes ok\\n'));\n\tstate.mode=LEN_;if(flush===Z_TREES){break inf_leave;}/* falls through */case LEN_:state.mode=LEN;/* falls through */case LEN:if(have>=6&&left>=258){//--- RESTORE() ---\n\tstrm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---\n\tinflate_fast(strm,_out);//--- LOAD() ---\n\tput=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state.hold;bits=state.bits;//---\n\tif(state.mode===TYPE){state.back=-1;}break;}state.back=0;for(;;){here=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//\n\tif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n\t}if(here_op&&(here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(last_bits+here_bits<=bits){break;}//--- PULLBYTE() ---//\n\tif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n\t}//--- DROPBITS(last.bits) ---//\n\thold>>>=last_bits;bits-=last_bits;//---//\n\tstate.back+=last_bits;}//--- DROPBITS(here.bits) ---//\n\thold>>>=here_bits;bits-=here_bits;//---//\n\tstate.back+=here_bits;state.length=here_val;if(here_op===0){//Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n\t//        \"inflate:         literal '%c'\\n\" :\n\t//        \"inflate:         literal 0x%02x\\n\", here.val));\n\tstate.mode=LIT;break;}if(here_op&32){//Tracevv((stderr, \"inflate:         end of block\\n\"));\n\tstate.back=-1;state.mode=TYPE;break;}if(here_op&64){strm.msg='invalid literal/length code';state.mode=BAD;break;}state.extra=here_op&15;state.mode=LENEXT;/* falls through */case LENEXT:if(state.extra){//=== NEEDBITS(state.extra);\n\tn=state.extra;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tstate.length+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;//--- DROPBITS(state.extra) ---//\n\thold>>>=state.extra;bits-=state.extra;//---//\n\tstate.back+=state.extra;}//Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n\tstate.was=state.length;state.mode=DIST;/* falls through */case DIST:for(;;){here=state.distcode[hold&(1<<state.distbits)-1];/*BITS(state.distbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//\n\tif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n\t}if((here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(last_bits+here_bits<=bits){break;}//--- PULLBYTE() ---//\n\tif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n\t}//--- DROPBITS(last.bits) ---//\n\thold>>>=last_bits;bits-=last_bits;//---//\n\tstate.back+=last_bits;}//--- DROPBITS(here.bits) ---//\n\thold>>>=here_bits;bits-=here_bits;//---//\n\tstate.back+=here_bits;if(here_op&64){strm.msg='invalid distance code';state.mode=BAD;break;}state.offset=here_val;state.extra=here_op&15;state.mode=DISTEXT;/* falls through */case DISTEXT:if(state.extra){//=== NEEDBITS(state.extra);\n\tn=state.extra;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tstate.offset+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;//--- DROPBITS(state.extra) ---//\n\thold>>>=state.extra;bits-=state.extra;//---//\n\tstate.back+=state.extra;}//#ifdef INFLATE_STRICT\n\tif(state.offset>state.dmax){strm.msg='invalid distance too far back';state.mode=BAD;break;}//#endif\n\t//Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n\tstate.mode=MATCH;/* falls through */case MATCH:if(left===0){break inf_leave;}copy=_out-left;if(state.offset>copy){/* copy from window */copy=state.offset-copy;if(copy>state.whave){if(state.sane){strm.msg='invalid distance too far back';state.mode=BAD;break;}// (!) This block is disabled in zlib defailts,\n\t// don't enable it for binary compatibility\n\t//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n\t//          Trace((stderr, \"inflate.c too far\\n\"));\n\t//          copy -= state.whave;\n\t//          if (copy > state.length) { copy = state.length; }\n\t//          if (copy > left) { copy = left; }\n\t//          left -= copy;\n\t//          state.length -= copy;\n\t//          do {\n\t//            output[put++] = 0;\n\t//          } while (--copy);\n\t//          if (state.length === 0) { state.mode = LEN; }\n\t//          break;\n\t//#endif\n\t}if(copy>state.wnext){copy-=state.wnext;from=state.wsize-copy;}else{from=state.wnext-copy;}if(copy>state.length){copy=state.length;}from_source=state.window;}else{/* copy from output */from_source=output;from=put-state.offset;copy=state.length;}if(copy>left){copy=left;}left-=copy;state.length-=copy;do{output[put++]=from_source[from++];}while(--copy);if(state.length===0){state.mode=LEN;}break;case LIT:if(left===0){break inf_leave;}output[put++]=state.length;left--;state.mode=LEN;break;case CHECK:if(state.wrap){//=== NEEDBITS(32);\n\twhile(bits<32){if(have===0){break inf_leave;}have--;// Use '|' insdead of '+' to make sure that result is signed\n\thold|=input[next++]<<bits;bits+=8;}//===//\n\t_out-=left;strm.total_out+=_out;state.total+=_out;if(_out){strm.adler=state.check=/*UPDATE(state.check, put - _out, _out);*/state.flags?crc32(state.check,output,_out,put-_out):adler32(state.check,output,_out,put-_out);}_out=left;// NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too\n\tif((state.flags?hold:ZSWAP32(hold))!==state.check){strm.msg='incorrect data check';state.mode=BAD;break;}//=== INITBITS();\n\thold=0;bits=0;//===//\n\t//Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n\t}state.mode=LENGTH;/* falls through */case LENGTH:if(state.wrap&&state.flags){//=== NEEDBITS(32);\n\twhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n\tif(hold!==(state.total&0xffffffff)){strm.msg='incorrect length check';state.mode=BAD;break;}//=== INITBITS();\n\thold=0;bits=0;//===//\n\t//Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n\t}state.mode=DONE;/* falls through */case DONE:ret=Z_STREAM_END;break inf_leave;case BAD:ret=Z_DATA_ERROR;break inf_leave;case MEM:return Z_MEM_ERROR;case SYNC:/* falls through */default:return Z_STREAM_ERROR;}}// inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\t/*\n\t     Return from inflate(), updating the total counts and the check value.\n\t     If there was no progress during the inflate() call, return a buffer\n\t     error.  Call updatewindow() to create and/or update the window state.\n\t     Note: a memory error from inflate() is non-recoverable.\n\t   *///--- RESTORE() ---\n\tstrm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---\n\tif(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(state.mode<CHECK||flush!==Z_FINISH)){if(updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out)){state.mode=MEM;return Z_MEM_ERROR;}}_in-=strm.avail_in;_out-=strm.avail_out;strm.total_in+=_in;strm.total_out+=_out;state.total+=_out;if(state.wrap&&_out){strm.adler=state.check=/*UPDATE(state.check, strm.next_out - _out, _out);*/state.flags?crc32(state.check,output,_out,strm.next_out-_out):adler32(state.check,output,_out,strm.next_out-_out);}strm.data_type=state.bits+(state.last?64:0)+(state.mode===TYPE?128:0)+(state.mode===LEN_||state.mode===COPY_?256:0);if((_in===0&&_out===0||flush===Z_FINISH)&&ret===Z_OK){ret=Z_BUF_ERROR;}return ret;}function inflateEnd(strm){if(!strm||!strm.state/*|| strm->zfree == (free_func)0*/){return Z_STREAM_ERROR;}var state=strm.state;if(state.window){state.window=null;}strm.state=null;return Z_OK;}function inflateGetHeader(strm,head){var state;/* check state */if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;if((state.wrap&2)===0){return Z_STREAM_ERROR;}/* save header structure */state.head=head;head.done=false;return Z_OK;}exports.inflateReset=inflateReset;exports.inflateReset2=inflateReset2;exports.inflateResetKeep=inflateResetKeep;exports.inflateInit=inflateInit;exports.inflateInit2=inflateInit2;exports.inflate=inflate;exports.inflateEnd=inflateEnd;exports.inflateGetHeader=inflateGetHeader;exports.inflateInfo='pako inflate (from Nodeca project)';/* Not implemented\n\texports.inflateCopy = inflateCopy;\n\texports.inflateGetDictionary = inflateGetDictionary;\n\texports.inflateMark = inflateMark;\n\texports.inflatePrime = inflatePrime;\n\texports.inflateSetDictionary = inflateSetDictionary;\n\texports.inflateSync = inflateSync;\n\texports.inflateSyncPoint = inflateSyncPoint;\n\texports.inflateUndermine = inflateUndermine;\n\t*/},{\"../utils/common\":1,\"./adler32\":3,\"./crc32\":5,\"./inffast\":7,\"./inftrees\":9}],9:[function(require,module,exports){'use strict';var utils=require('../utils/common');var MAXBITS=15;var ENOUGH_LENS=852;var ENOUGH_DISTS=592;//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\tvar CODES=0;var LENS=1;var DISTS=2;var lbase=[/* Length codes 257..285 base */3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0];var lext=[/* Length codes 257..285 extra */16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78];var dbase=[/* Distance codes 0..29 base */1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0];var dext=[/* Distance codes 0..29 extra */16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];module.exports=function inflate_table(type,lens,lens_index,codes,table,table_index,work,opts){var bits=opts.bits;//here = opts.here; /* table entry for duplication */\n\tvar len=0;/* a code's length in bits */var sym=0;/* index of code symbols */var min=0,max=0;/* minimum and maximum code lengths */var root=0;/* number of index bits for root table */var curr=0;/* number of index bits for current table */var drop=0;/* code bits to drop for sub-table */var left=0;/* number of prefix codes available */var used=0;/* code entries in table used */var huff=0;/* Huffman code */var incr;/* for incrementing code, index */var fill;/* index for replicating entries */var low;/* low bits for current root entry */var mask;/* mask for low root bits */var next;/* next available space in table */var base=null;/* base value table to use */var base_index=0;//  var shoextra;    /* extra bits table to use */\n\tvar end;/* use base and extra for symbol > end */var count=new utils.Buf16(MAXBITS+1);//[MAXBITS+1];    /* number of codes of each length */\n\tvar offs=new utils.Buf16(MAXBITS+1);//[MAXBITS+1];     /* offsets in table for each length */\n\tvar extra=null;var extra_index=0;var here_bits,here_op,here_val;/*\n\t   Process a set of code lengths to create a canonical Huffman code.  The\n\t   code lengths are lens[0..codes-1].  Each length corresponds to the\n\t   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n\t   symbols by length from short to long, and retaining the symbol order\n\t   for codes with equal lengths.  Then the code starts with all zero bits\n\t   for the first code of the shortest length, and the codes are integer\n\t   increments for the same length, and zeros are appended as the length\n\t   increases.  For the deflate format, these bits are stored backwards\n\t   from their more natural integer increment ordering, and so when the\n\t   decoding tables are built in the large loop below, the integer codes\n\t   are incremented backwards.\n\t\n\t   This routine assumes, but does not check, that all of the entries in\n\t   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n\t   1..MAXBITS is interpreted as that code length.  zero means that that\n\t   symbol does not occur in this code.\n\t\n\t   The codes are sorted by computing a count of codes for each length,\n\t   creating from that a table of starting indices for each length in the\n\t   sorted table, and then entering the symbols in order in the sorted\n\t   table.  The sorted table is work[], with that space being provided by\n\t   the caller.\n\t\n\t   The length counts are used for other purposes as well, i.e. finding\n\t   the minimum and maximum length codes, determining if there are any\n\t   codes at all, checking for a valid set of lengths, and looking ahead\n\t   at length counts to determine sub-table sizes when building the\n\t   decoding tables.\n\t   *//* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */for(len=0;len<=MAXBITS;len++){count[len]=0;}for(sym=0;sym<codes;sym++){count[lens[lens_index+sym]]++;}/* bound code lengths, force root to be within code lengths */root=bits;for(max=MAXBITS;max>=1;max--){if(count[max]!==0){break;}}if(root>max){root=max;}if(max===0){/* no symbols to code at all *///table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n\t//table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n\t//table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n\ttable[table_index++]=1<<24|64<<16|0;//table.op[opts.table_index] = 64;\n\t//table.bits[opts.table_index] = 1;\n\t//table.val[opts.table_index++] = 0;\n\ttable[table_index++]=1<<24|64<<16|0;opts.bits=1;return 0;/* no symbols, but wait for decoding to report error */}for(min=1;min<max;min++){if(count[min]!==0){break;}}if(root<min){root=min;}/* check for an over-subscribed or incomplete set of lengths */left=1;for(len=1;len<=MAXBITS;len++){left<<=1;left-=count[len];if(left<0){return-1;}/* over-subscribed */}if(left>0&&(type===CODES||max!==1)){return-1;/* incomplete set */}/* generate offsets into symbol table for each length for sorting */offs[1]=0;for(len=1;len<MAXBITS;len++){offs[len+1]=offs[len]+count[len];}/* sort symbols by length, by symbol order within each length */for(sym=0;sym<codes;sym++){if(lens[lens_index+sym]!==0){work[offs[lens[lens_index+sym]]++]=sym;}}/*\n\t   Create and fill in decoding tables.  In this loop, the table being\n\t   filled is at next and has curr index bits.  The code being used is huff\n\t   with length len.  That code is converted to an index by dropping drop\n\t   bits off of the bottom.  For codes where len is less than drop + curr,\n\t   those top drop + curr - len bits are incremented through all values to\n\t   fill the table with replicated entries.\n\t\n\t   root is the number of index bits for the root table.  When len exceeds\n\t   root, sub-tables are created pointed to by the root entry with an index\n\t   of the low root bits of huff.  This is saved in low to check for when a\n\t   new sub-table should be started.  drop is zero when the root table is\n\t   being filled, and drop is root when sub-tables are being filled.\n\t\n\t   When a new sub-table is needed, it is necessary to look ahead in the\n\t   code lengths to determine what size sub-table is needed.  The length\n\t   counts are used for this, and so count[] is decremented as codes are\n\t   entered in the tables.\n\t\n\t   used keeps track of how many table entries have been allocated from the\n\t   provided *table space.  It is checked for LENS and DIST tables against\n\t   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n\t   the initial root table size constants.  See the comments in inftrees.h\n\t   for more information.\n\t\n\t   sym increments through all symbols, and the loop terminates when\n\t   all codes of length max, i.e. all codes, have been processed.  This\n\t   routine permits incomplete codes, so another loop after this one fills\n\t   in the rest of the decoding tables with invalid code markers.\n\t   *//* set up for code type */// poor man optimization - use if-else instead of switch,\n\t// to avoid deopts in old v8\n\tif(type===CODES){base=extra=work;/* dummy value--not used */end=19;}else if(type===LENS){base=lbase;base_index-=257;extra=lext;extra_index-=257;end=256;}else{/* DISTS */base=dbase;extra=dext;end=-1;}/* initialize opts for loop */huff=0;/* starting code */sym=0;/* starting code symbol */len=min;/* starting code length */next=table_index;/* current table to fill in */curr=root;/* current table index bits */drop=0;/* current bits to drop from code for index */low=-1;/* trigger new sub-table when len > root */used=1<<root;/* use root table entries */mask=used-1;/* mask for comparing low *//* check available table space */if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1;}var i=0;/* process all codes and make table entries */for(;;){i++;/* create table entry */here_bits=len-drop;if(work[sym]<end){here_op=0;here_val=work[sym];}else if(work[sym]>end){here_op=extra[extra_index+work[sym]];here_val=base[base_index+work[sym]];}else{here_op=32+64;/* end of block */here_val=0;}/* replicate for those indices with low len bits equal to huff */incr=1<<len-drop;fill=1<<curr;min=fill;/* save offset to next table */do{fill-=incr;table[next+(huff>>drop)+fill]=here_bits<<24|here_op<<16|here_val|0;}while(fill!==0);/* backwards increment the len-bit code huff */incr=1<<len-1;while(huff&incr){incr>>=1;}if(incr!==0){huff&=incr-1;huff+=incr;}else{huff=0;}/* go to next symbol, update count, len */sym++;if(--count[len]===0){if(len===max){break;}len=lens[lens_index+work[sym]];}/* create new sub-table if needed */if(len>root&&(huff&mask)!==low){/* if first time, transition to sub-tables */if(drop===0){drop=root;}/* increment past last table */next+=min;/* here min is 1 << curr *//* determine length of next table */curr=len-drop;left=1<<curr;while(curr+drop<max){left-=count[curr+drop];if(left<=0){break;}curr++;left<<=1;}/* check for enough space */used+=1<<curr;if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1;}/* point entry in root table to sub-table */low=huff&mask;/*table.op[low] = curr;\n\t      table.bits[low] = root;\n\t      table.val[low] = next - opts.table_index;*/table[low]=root<<24|curr<<16|next-table_index|0;}}/* fill in remaining table entry if code is incomplete (guaranteed to have\n\t   at most one remaining entry, since if the code is incomplete, the\n\t   maximum code length that was allowed to get this far is one bit) */if(huff!==0){//table.op[next + huff] = 64;            /* invalid code marker */\n\t//table.bits[next + huff] = len - drop;\n\t//table.val[next + huff] = 0;\n\ttable[next+huff]=len-drop<<24|64<<16|0;}/* set return parameters *///opts.table_index += used;\n\topts.bits=root;return 0;};},{\"../utils/common\":1}],10:[function(require,module,exports){'use strict';module.exports={'2':'need dictionary',/* Z_NEED_DICT       2  */'1':'stream end',/* Z_STREAM_END      1  */'0':'',/* Z_OK              0  */'-1':'file error',/* Z_ERRNO         (-1) */'-2':'stream error',/* Z_STREAM_ERROR  (-2) */'-3':'data error',/* Z_DATA_ERROR    (-3) */'-4':'insufficient memory',/* Z_MEM_ERROR     (-4) */'-5':'buffer error',/* Z_BUF_ERROR     (-5) */'-6':'incompatible version'/* Z_VERSION_ERROR (-6) */};},{}],11:[function(require,module,exports){'use strict';function ZStream(){/* next input byte */this.input=null;// JS specific, because we have no pointers\n\tthis.next_in=0;/* number of bytes available at input */this.avail_in=0;/* total number of input bytes read so far */this.total_in=0;/* next output byte should be put there */this.output=null;// JS specific, because we have no pointers\n\tthis.next_out=0;/* remaining free space at output */this.avail_out=0;/* total number of bytes output so far */this.total_out=0;/* last error message, NULL if no error */this.msg=''/*Z_NULL*/;/* not visible by applications */this.state=null;/* best guess about the data type: binary or text */this.data_type=2/*Z_UNKNOWN*/;/* adler32 value of the uncompressed data */this.adler=0;}module.exports=ZStream;},{}],\"/lib/inflate.js\":[function(require,module,exports){'use strict';var zlib_inflate=require('./zlib/inflate.js');var utils=require('./utils/common');var strings=require('./utils/strings');var c=require('./zlib/constants');var msg=require('./zlib/messages');var zstream=require('./zlib/zstream');var gzheader=require('./zlib/gzheader');var toString=Object.prototype.toString;/**\n\t * class Inflate\n\t *\n\t * Generic JS-style wrapper for zlib calls. If you don't need\n\t * streaming behaviour - use more simple functions: [[inflate]]\n\t * and [[inflateRaw]].\n\t **//* internal\n\t * inflate.chunks -> Array\n\t *\n\t * Chunks of output data, if [[Inflate#onData]] not overriden.\n\t **//**\n\t * Inflate.result -> Uint8Array|Array|String\n\t *\n\t * Uncompressed result, generated by default [[Inflate#onData]]\n\t * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n\t * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n\t * push a chunk with explicit flush (call [[Inflate#push]] with\n\t * `Z_SYNC_FLUSH` param).\n\t **//**\n\t * Inflate.err -> Number\n\t *\n\t * Error code after inflate finished. 0 (Z_OK) on success.\n\t * Should be checked if broken data possible.\n\t **//**\n\t * Inflate.msg -> String\n\t *\n\t * Error message, if [[Inflate.err]] != 0\n\t **//**\n\t * new Inflate(options)\n\t * - options (Object): zlib inflate options.\n\t *\n\t * Creates new inflator instance with specified params. Throws exception\n\t * on bad params. Supported options:\n\t *\n\t * - `windowBits`\n\t *\n\t * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n\t * for more information on these.\n\t *\n\t * Additional options, for internal needs:\n\t *\n\t * - `chunkSize` - size of generated data chunks (16K by default)\n\t * - `raw` (Boolean) - do raw inflate\n\t * - `to` (String) - if equal to 'string', then result will be converted\n\t *   from utf8 to utf16 (javascript) string. When string output requested,\n\t *   chunk length can differ from `chunkSize`, depending on content.\n\t *\n\t * By default, when no options set, autodetect deflate/gzip data format via\n\t * wrapper header.\n\t *\n\t * ##### Example:\n\t *\n\t * ```javascript\n\t * var pako = require('pako')\n\t *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n\t *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n\t *\n\t * var inflate = new pako.Inflate({ level: 3});\n\t *\n\t * inflate.push(chunk1, false);\n\t * inflate.push(chunk2, true);  // true -> last chunk\n\t *\n\t * if (inflate.err) { throw new Error(inflate.err); }\n\t *\n\t * console.log(inflate.result);\n\t * ```\n\t **/var Inflate=function Inflate(options){this.options=utils.assign({chunkSize:16384,windowBits:0,to:''},options||{});var opt=this.options;// Force window size for `raw` data, if not set directly,\n\t// because we have no header for autodetect.\n\tif(opt.raw&&opt.windowBits>=0&&opt.windowBits<16){opt.windowBits=-opt.windowBits;if(opt.windowBits===0){opt.windowBits=-15;}}// If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n\tif(opt.windowBits>=0&&opt.windowBits<16&&!(options&&options.windowBits)){opt.windowBits+=32;}// Gzip header has no info about windows size, we can do autodetect only\n\t// for deflate. So, if window size not set, force it to max when gzip possible\n\tif(opt.windowBits>15&&opt.windowBits<48){// bit 3 (16) -> gzipped data\n\t// bit 4 (32) -> autodetect gzip/deflate\n\tif((opt.windowBits&15)===0){opt.windowBits|=15;}}this.err=0;// error code, if happens (0 = Z_OK)\n\tthis.msg='';// error message\n\tthis.ended=false;// used to avoid multiple onEnd() calls\n\tthis.chunks=[];// chunks of compressed data\n\tthis.strm=new zstream();this.strm.avail_out=0;var status=zlib_inflate.inflateInit2(this.strm,opt.windowBits);if(status!==c.Z_OK){throw new Error(msg[status]);}this.header=new gzheader();zlib_inflate.inflateGetHeader(this.strm,this.header);};/**\n\t * Inflate#push(data[, mode]) -> Boolean\n\t * - data (Uint8Array|Array|ArrayBuffer|String): input data\n\t * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n\t *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n\t *\n\t * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n\t * new output chunks. Returns `true` on success. The last data block must have\n\t * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n\t * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n\t * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n\t *\n\t * On fail call [[Inflate#onEnd]] with error code and return false.\n\t *\n\t * We strongly recommend to use `Uint8Array` on input for best speed (output\n\t * format is detected automatically). Also, don't skip last param and always\n\t * use the same type in your code (boolean or number). That will improve JS speed.\n\t *\n\t * For regular `Array`-s make sure all elements are [0..255].\n\t *\n\t * ##### Example\n\t *\n\t * ```javascript\n\t * push(chunk, false); // push one of data chunks\n\t * ...\n\t * push(chunk, true);  // push last chunk\n\t * ```\n\t **/Inflate.prototype.push=function(data,mode){var strm=this.strm;var chunkSize=this.options.chunkSize;var status,_mode;var next_out_utf8,tail,utf8str;if(this.ended){return false;}_mode=mode===~~mode?mode:mode===true?c.Z_FINISH:c.Z_NO_FLUSH;// Convert data if needed\n\tif(typeof data==='string'){// Only binary strings can be decompressed on practice\n\tstrm.input=strings.binstring2buf(data);}else if(toString.call(data)==='[object ArrayBuffer]'){strm.input=new Uint8Array(data);}else{strm.input=data;}strm.next_in=0;strm.avail_in=strm.input.length;do{if(strm.avail_out===0){strm.output=new utils.Buf8(chunkSize);strm.next_out=0;strm.avail_out=chunkSize;}status=zlib_inflate.inflate(strm,c.Z_NO_FLUSH);/* no bad return value */if(status!==c.Z_STREAM_END&&status!==c.Z_OK){this.onEnd(status);this.ended=true;return false;}if(strm.next_out){if(strm.avail_out===0||status===c.Z_STREAM_END||strm.avail_in===0&&(_mode===c.Z_FINISH||_mode===c.Z_SYNC_FLUSH)){if(this.options.to==='string'){next_out_utf8=strings.utf8border(strm.output,strm.next_out);tail=strm.next_out-next_out_utf8;utf8str=strings.buf2string(strm.output,next_out_utf8);// move tail\n\tstrm.next_out=tail;strm.avail_out=chunkSize-tail;if(tail){utils.arraySet(strm.output,strm.output,next_out_utf8,tail,0);}this.onData(utf8str);}else{this.onData(utils.shrinkBuf(strm.output,strm.next_out));}}}}while(strm.avail_in>0&&status!==c.Z_STREAM_END);if(status===c.Z_STREAM_END){_mode=c.Z_FINISH;}// Finalize on the last chunk.\n\tif(_mode===c.Z_FINISH){status=zlib_inflate.inflateEnd(this.strm);this.onEnd(status);this.ended=true;return status===c.Z_OK;}// callback interim results if Z_SYNC_FLUSH.\n\tif(_mode===c.Z_SYNC_FLUSH){this.onEnd(c.Z_OK);strm.avail_out=0;return true;}return true;};/**\n\t * Inflate#onData(chunk) -> Void\n\t * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n\t *   on js engine support. When string output requested, each chunk\n\t *   will be string.\n\t *\n\t * By default, stores data blocks in `chunks[]` property and glue\n\t * those in `onEnd`. Override this handler, if you need another behaviour.\n\t **/Inflate.prototype.onData=function(chunk){this.chunks.push(chunk);};/**\n\t * Inflate#onEnd(status) -> Void\n\t * - status (Number): inflate status. 0 (Z_OK) on success,\n\t *   other if not.\n\t *\n\t * Called either after you tell inflate that the input stream is\n\t * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n\t * or if an error happened. By default - join collected chunks,\n\t * free memory and fill `results` / `err` properties.\n\t **/Inflate.prototype.onEnd=function(status){// On success - join\n\tif(status===c.Z_OK){if(this.options.to==='string'){// Glue & convert here, until we teach pako to send\n\t// utf8 alligned strings to onData\n\tthis.result=this.chunks.join('');}else{this.result=utils.flattenChunks(this.chunks);}}this.chunks=[];this.err=status;this.msg=this.strm.msg;};/**\n\t * inflate(data[, options]) -> Uint8Array|Array|String\n\t * - data (Uint8Array|Array|String): input data to decompress.\n\t * - options (Object): zlib inflate options.\n\t *\n\t * Decompress `data` with inflate/ungzip and `options`. Autodetect\n\t * format via wrapper header by default. That's why we don't provide\n\t * separate `ungzip` method.\n\t *\n\t * Supported options are:\n\t *\n\t * - windowBits\n\t *\n\t * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n\t * for more information.\n\t *\n\t * Sugar (options):\n\t *\n\t * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n\t *   negative windowBits implicitly.\n\t * - `to` (String) - if equal to 'string', then result will be converted\n\t *   from utf8 to utf16 (javascript) string. When string output requested,\n\t *   chunk length can differ from `chunkSize`, depending on content.\n\t *\n\t *\n\t * ##### Example:\n\t *\n\t * ```javascript\n\t * var pako = require('pako')\n\t *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n\t *   , output;\n\t *\n\t * try {\n\t *   output = pako.inflate(input);\n\t * } catch (err)\n\t *   console.log(err);\n\t * }\n\t * ```\n\t **/function inflate(input,options){var inflator=new Inflate(options);inflator.push(input,true);// That will never happens, if you don't cheat with options :)\n\tif(inflator.err){throw inflator.msg;}return inflator.result;}/**\n\t * inflateRaw(data[, options]) -> Uint8Array|Array|String\n\t * - data (Uint8Array|Array|String): input data to decompress.\n\t * - options (Object): zlib inflate options.\n\t *\n\t * The same as [[inflate]], but creates raw data, without wrapper\n\t * (header and adler32 crc).\n\t **/function inflateRaw(input,options){options=options||{};options.raw=true;return inflate(input,options);}/**\n\t * ungzip(data[, options]) -> Uint8Array|Array|String\n\t * - data (Uint8Array|Array|String): input data to decompress.\n\t * - options (Object): zlib inflate options.\n\t *\n\t * Just shortcut to [[inflate]], because it autodetects format\n\t * by header.content. Done for convenience.\n\t **/exports.Inflate=Inflate;exports.inflate=inflate;exports.inflateRaw=inflateRaw;exports.ungzip=inflate;},{\"./utils/common\":1,\"./utils/strings\":2,\"./zlib/constants\":4,\"./zlib/gzheader\":6,\"./zlib/inflate.js\":8,\"./zlib/messages\":10,\"./zlib/zstream\":11}]},{},[])(\"/lib/inflate.js\");});//This defines the $3Dmol object which is used to create viewers\n\t//and configure system-wide settings\n\t/**\n\t * All of the functionality of $3Dmol.js is contained within the\n\t * $3Dmol global namespace\n\t * @namespace */$3Dmol=function(window){var my=window['$3Dmol']||{};//var $ = window['jQuery'];\n\treturn my;}(window);/* The following code \"phones home\" to register that an ip\n\t   address has loaded 3Dmol.js.  Being able track this usage\n\t   is very helpful when reporting to funding agencies.  Please\n\t   leave this code in if you would like to increase the\n\t   likelihood of 3Dmol.js remaining supported.\n\t*/if('https:'!=document.location.protocol){//not willing to pay for ssl cert\n\t$.get(\"http://3dmol.csb.pitt.edu/track/report.cgi\");}/* shims for IE *//*\n\tIE Doesn't have a .startsWith\n\t*/if(!String.prototype.startsWith){String.prototype.startsWith=function(str){return this.lastIndexOf(str,0)===0;};}// or endsWith\n\tif(!String.prototype.endsWith){String.prototype.endsWith=function(suffix){return this.indexOf(suffix,this.length-suffix.length)!==-1;};}/**\n\t*\n\t* jquery.binarytransport.js\n\t*\n\t* @description. jQuery ajax transport for making binary data type requests.\n\t* @version 1.0\n\t* @author Henry Algus <henryalgus@gmail.com>\n\t*\n\t*/// use this transport for \"binary\" data type\n\t$.ajaxTransport(\"+binary\",function(options,originalOptions,jqXHR){// check for conditions and support for blob / arraybuffer response type\n\tif(window.FormData&&(options.dataType&&options.dataType=='binary'||options.data&&(window.ArrayBuffer&&options.data instanceof ArrayBuffer||window.Blob&&options.data instanceof Blob))){return{// create new XMLHttpRequest\n\tsend:function send(headers,callback){// setup all variables\n\tvar xhr=new XMLHttpRequest(),url=options.url,type=options.type,async=options.async||true,// blob or arraybuffer. Default is blob\n\tdataType=options.responseType||\"blob\",data=options.data||null,username=options.username||null,password=options.password||null;xhr.addEventListener('load',function(){var data={};data[options.dataType]=xhr.response;// make callback and send data\n\tcallback(xhr.status,xhr.statusText,data,xhr.getAllResponseHeaders());});xhr.open(type,url,async,username,password);// setup custom headers\n\tfor(var i in headers){xhr.setRequestHeader(i,headers[i]);}xhr.responseType=dataType;xhr.send(data);},abort:function abort(){jqXHR.abort();}};}});/**\n\t * Create and initialize an appropriate viewer at supplied HTML element using specification in config\n\t * @param {Object | string} element - Either HTML element or string identifier\n\t * @param {ViewerSpec} config Viewer specification\n\t * @return {$3Dmol.GLViewer} GLViewer, null if unable to instantiate WebGL\n\t *\n\t * @example\n\t * // Assume there exists an HTML div with id \"gldiv\"\n\t * var element = $(\"#gldiv\");\n\t *\n\t * // Viewer config - properties 'defaultcolors' and 'callback'\n\t * var config = {defaultcolors: $3Dmol.rasmolElementColors };\n\t *\n\t * // Create GLViewer within 'gldiv'\n\t * var myviewer = $3Dmol.createViewer(element, config);\n\t * //'data' is a string containing molecule data in pdb format\n\t * myviewer.addModel(data, \"pdb\");\n\t * myviewer.zoomTo();\n\t * myviewer.render();\n\t *\n\t */$3Dmol.createViewer=function(element,config){if($.type(element)===\"string\")element=$(\"#\"+element);if(!element)return;config=config||{};//try to create the  viewer\n\ttry{return new $3Dmol.GLViewer(element,config);}catch(e){throw\"error creating viewer: \"+e;}return null;};/**\n\t * Contains a dictionary of embedded viewers created from HTML elements\n\t * with a the viewer_3Dmoljs css class indexed by their id (or numerically\n\t * if they do not have an id).\n\t*/$3Dmol.viewers={};/**\n\t * Load a PDB/PubChem structure into existing viewer. Automatically calls 'zoomTo' and 'render' on viewer after loading model\n\t *\n\t * @function $3Dmol.download\n\t * @param {string} query - String specifying pdb or pubchem id; must be prefaced with \"pdb: \" or \"cid: \", respectively\n\t * @param {$3Dmol.GLViewer} viewer - Add new model to existing viewer\n\t * @param {Object} options - Specify additional options\n\t *                           format: file format to download, if multiple are available, default format is pdb\n\t *                           pdbUri: URI to retrieve PDB files, default URI is http://www.rcsb.org/pdb/files/\n\t * @param {Function} callback - Function to call with model as argument after data is loaded.\n\t\n\t * @example\n\t * var myviewer = $3Dmol.createViewer(gldiv);\n\t *\n\t * // GLModel 'm' created and loaded into glviewer for PDB id 2POR\n\t * // Note that m will not contain the atomic data until after the network request is completed\n\t * var m = $3Dmol.download('pdb: 2POR', myviewer, {format:'cif'});\n\t *\n\t * @return {$3Dmol.GLModel} GLModel\n\t */$3Dmol.download=function(query,viewer,options,callback){var baseURL='';var type=\"\";var pdbUri=\"\";var m=viewer.addModel();if(query.substr(0,5)==='mmtf:'){pdbUri=options&&options.pdbUri?options.pdbUri:\"http://mmtf.rcsb.org/full/\";query=query.substr(5).toUpperCase();var uri=pdbUri+query+\".mmtf\";$.ajax({url:uri,type:\"GET\",dataType:\"binary\",responseType:\"arraybuffer\",processData:false}).done(function(ret,txt,response){m.addMolData(ret,'mmtf');viewer.zoomTo();viewer.render();if(callback)callback(m);}).fail(function(e,txt){console.log(txt);});}else{if(query.substr(0,4)==='pdb:'){pdbUri=options&&options.pdbUri?options.pdbUri:\"http://www.rcsb.org/pdb/files/\";type=options&&options.format?options.format:\"pdb\";if(options&&typeof options.noComputeSecondaryStructure==='undefined'){//when fetch directly from pdb, trust structure annotations\n\toptions.noComputeSecondaryStructure=true;}query=query.substr(4).toUpperCase();if(!query.match(/^[1-9][A-Za-z0-9]{3}$/)){alert(\"Wrong PDB ID\");return;}if(options&&options.format)uri=pdbUri+query+\".\"+options.format;else uri=pdbUri+query+\".pdb\";}else if(query.substr(0,4)=='cid:'){type=\"sdf\";query=query.substr(4);if(!query.match(/^[0-9]+$/)){alert(\"Wrong Compound ID\");return;}uri=\"https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/\"+query+\"/SDF?record_type=3d\";}$.get(uri,function(ret){m.addMolData(ret,type,options);viewer.zoomTo();viewer.render();if(callback)callback(m);}).fail(function(e){console.log(\"fetch of \"+uri+\" failed: \"+e.statusText);});}return m;};/**\n\t * $3Dmol surface types\n\t * @enum {number}\n\t */$3Dmol.SurfaceType={VDW:1,MS:2,SAS:3,SES:4};//Miscellaneous functions and classes - to be incorporated into $3Dmol proper\n\t/**\n\t *\n\t * @param {$3Dmol.Geometry} geometry\n\t * @param {$3Dmol.Mesh} mesh\n\t * @returns {undefined}\n\t */$3Dmol.mergeGeos=function(geometry,mesh){var meshGeo=mesh.geometry;if(meshGeo===undefined)return;geometry.geometryGroups.push(meshGeo.geometryGroups[0]);};$3Dmol.multiLineString=function(f){return f.toString().replace(/^[^\\/]+\\/\\*!?/,'').replace(/\\*\\/[^\\/]+$/,'');};/**\n\t * Render surface synchronously if true\n\t * @param {boolean} [$3Dmol.SyncSurface=false]\n\t * @type {boolean} */$3Dmol.syncSurface=false;// Internet Explorer refuses to allow webworkers in data blobs.  I can find\n\t// no way of checking for this feature directly, so must do a brower check\n\tif(window.navigator.userAgent.indexOf('MSIE ')>=0||window.navigator.userAgent.indexOf('Trident/')>=0){$3Dmol.syncSurface=true;// can't use webworkers\n\t}/**\n\t * Parse a string that represents a style or atom selection and convert it\n\t * into an object.  The goal is to make it easier to write out these specifications\n\t * without resorting to json. Objects cannot be defined recursively.\n\t * ; - delineates fields of the object\n\t * : - if the field has a value other than an empty object, it comes after a colon\n\t * , - delineates key/value pairs of a value object\n\t *     If the value object consists of ONLY keys (no = present) the keys are\n\t *     converted to a list.  Otherwise a object of key/value pairs is created with\n\t *     any missing values set to null\n\t * = OR ~ - separates key/value pairs of a value object, if not provided value is null\n\t *     twiddle is supported since = has special meaning in URLs\n\t * @param (String) str\n\t * @returns {Object}\n\t */$3Dmol.specStringToObject=function(str){if((typeof str==='undefined'?'undefined':_typeof(str))===\"object\"){return str;//not string, assume was converted already\n\t}else if(typeof str===\"undefined\"||str==null){return str;}str=str.replace(/%7E/,'~');//copy/pasting urls sometimes does this\n\t//convert things that look like numbers into numbers\n\tvar massage=function massage(val){if($.isNumeric(val)){//hexadecimal does not parse as float\n\tif(Math.floor(parseFloat(val))==parseInt(val)){return parseFloat(val);}else if(val.indexOf('.')>=0){return parseFloat(val);// \".7\" for example, does not parseInt\n\t}else{return parseInt(val);}}//boolean conversions\n\telse if(val==='true'){return true;}else if(val==='false'){return false;}return val;};var ret={};if(str==='all')return ret;var fields=str.split(';');for(var i=0;i<fields.length;i++){var fv=fields[i].split(':');var f=fv[0];var val={};var vstr=fv[1];if(vstr){vstr=vstr.replace(/~/g,\"=\");if(vstr.indexOf('=')!==-1){//has key=value pairs, must be object\n\tvar kvs=vstr.split(',');for(var j=0;j<kvs.length;j++){var kv=kvs[j].split('=',2);val[kv[0]]=massage(kv[1]);}}else if(vstr.indexOf(',')!==-1){//has multiple values, must list\n\tval=vstr.split(',');}else{val=massage(vstr);//value itself\n\t}}ret[f]=val;}return ret;};/**\n\t * computes the bounding box around the provided atoms\n\t * @param {AtomSpec[]} atomlist\n\t * @return {Array}\n\t */$3Dmol.getExtent=function(atomlist,ignoreSymmetries){var xmin,ymin,zmin,xmax,ymax,zmax,xsum,ysum,zsum,cnt;var includeSym=!ignoreSymmetries;xmin=ymin=zmin=9999;xmax=ymax=zmax=-9999;xsum=ysum=zsum=cnt=0;if(atomlist.length===0)return[[0,0,0],[0,0,0],[0,0,0]];for(var i=0;i<atomlist.length;i++){var atom=atomlist[i];if(typeof atom==='undefined'||!isFinite(atom.x)||!isFinite(atom.y)||!isFinite(atom.z))continue;cnt++;xsum+=atom.x;ysum+=atom.y;zsum+=atom.z;xmin=xmin<atom.x?xmin:atom.x;ymin=ymin<atom.y?ymin:atom.y;zmin=zmin<atom.z?zmin:atom.z;xmax=xmax>atom.x?xmax:atom.x;ymax=ymax>atom.y?ymax:atom.y;zmax=zmax>atom.z?zmax:atom.z;if(atom.symmetries&&includeSym){for(var n=0;n<atom.symmetries.length;n++){cnt++;xsum+=atom.symmetries[n].x;ysum+=atom.symmetries[n].y;zsum+=atom.symmetries[n].z;xmin=xmin<atom.symmetries[n].x?xmin:atom.symmetries[n].x;ymin=ymin<atom.symmetries[n].y?ymin:atom.symmetries[n].y;zmin=zmin<atom.symmetries[n].z?zmin:atom.symmetries[n].z;xmax=xmax>atom.symmetries[n].x?xmax:atom.symmetries[n].x;ymax=ymax>atom.symmetries[n].y?ymax:atom.symmetries[n].y;zmax=zmax>atom.symmetries[n].z?zmax:atom.symmetries[n].z;}}}return[[xmin,ymin,zmin],[xmax,ymax,zmax],[xsum/cnt,ysum/cnt,zsum/cnt]];};//return the value of an atom property prop, or null if non existent\n\t//looks first in properties, then in the atom itself\n\t$3Dmol.getAtomProperty=function(atom,prop){var val=null;if(atom.properties&&typeof atom.properties[prop]!=\"undefined\"){val=atom.properties[prop];}else if(typeof atom[prop]!='undefined'){val=atom[prop];}return val;};/* get the min and max values of the specified property in the provided\n\t* @function $3Dmol.getPropertyRange\n\t* @param {AtomSpec[]} atomlist - list of atoms to evaluate\n\t* @param {string} prop - name of property\n\t* @return {Array} - [min, max] values\n\t*/$3Dmol.getPropertyRange=function(atomlist,prop){var min=Number.POSITIVE_INFINITY;var max=Number.NEGATIVE_INFINITY;for(var i=0,n=atomlist.length;i<n;i++){var atom=atomlist[i];var val=$3Dmol.getAtomProperty(atom,prop);if(val!=null){if(val<min)min=val;if(val>max)max=val;}}if(!isFinite(min)&&!isFinite(max))min=max=0;else if(!isFinite(min))min=max;else if(!isFinite(max))max=min;return[min,max];};//hackish way to work with requirejs - doesn't actually work yet\n\t//since we doing use the require optimizer to combine modules\n\tif(true){!(__WEBPACK_AMD_DEFINE_FACTORY__ = ($3Dmol), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}/*\n\t* math-like functionality\n\t* quaternion, vector, matrix\n\t*/var $3Dmol=$3Dmol||{};$3Dmol.Math={clamp:function clamp(x,min,max){return Math.min(Math.max(x,min),max);},degToRad:function(){var degreeToRadiansFactor=Math.PI/180;return function(deg){return deg*degreeToRadiansFactor;};}()};// Quaternion\n\t/** @constructor */$3Dmol.Quaternion=function(x,y,z,w){this.x=x||0;this.y=y||0;this.z=z||0;this.w=w!==undefined?w:1;};$3Dmol.Quaternion.prototype={constructor:$3Dmol.Quaternion,set:function set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;},copy:function copy(q){this.x=q.x;this.y=q.y;this.z=q.z;this.w=q.w;return this;},conjugate:function conjugate(){this.x*=-1;this.y*=-1;this.z*=-1;return this;},inverse:function inverse(){return this.conjugate().normalize();},length:function length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);},normalize:function normalize(){var l=this.length();if(l===0){this.x=0;this.y=0;this.z=0;this.w=1;}else{l=1/l;this.x*=l;this.y*=l;this.z*=l;this.w*=l;}return this;},multiply:function multiply(q){return this.multiplyQuaternions(this,q);},multiplyQuaternions:function multiplyQuaternions(a,b){var qax=a.x,qay=a.y,qaz=a.z,qaw=a.w;var qbx=b.x,qby=b.y,qbz=b.z,qbw=b.w;this.x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this.y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this.z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this.w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;}};//A 2 Vector\n\t/** @constructor */$3Dmol.Vector2=function(x,y){this.x=x||0.0;this.y=y||0.0;};$3Dmol.Vector2.prototype={constructor:$3Dmol.Vector2,set:function set(x,y){this.x=x;this.y=y;return this;},subVectors:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;},copy:function copy(v){this.x=v.x;this.y=v.y;return this;},clone:function clone(){return new $3Dmol.Vector2(this.x,this.y);}};//A 3 Vector\n\t$3Dmol.Vector3=function(x,y,z){this.x=x||0.0;this.y=y||0.0;this.z=z||0.0;};/** @this {$3Dmol.Vector3} */$3Dmol.Vector3.prototype={constructor:$3Dmol.Vector3,set:function set(x,y,z){this.x=x;this.y=y;this.z=z;return this;},copy:function copy(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;},add:function add(v){this.x+=v.x;this.y+=v.y;this.z+=v.z;return this;},addVectors:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;},sub:function sub(v){this.x-=v.x;this.y-=v.y;this.z-=v.z;return this;},subVectors:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;},multiplyScalar:function multiplyScalar(s){this.x*=s;this.y*=s;this.z*=s;return this;},divideScalar:function divideScalar(s){if(s!==0){this.x/=s;this.y/=s;this.z/=s;}else{this.x=0;this.y=0;this.z=0;}return this;},//accumulate maximum\n\tmax:function max(s){this.x=Math.max(this.x,s.x);this.y=Math.max(this.y,s.y);this.z=Math.max(this.z,s.z);return this;},//accumulate min\n\tmin:function min(s){this.x=Math.min(this.x,s.x);this.y=Math.min(this.y,s.y);this.z=Math.min(this.z,s.z);return this;},distanceTo:function distanceTo(v){return Math.sqrt(this.distanceToSquared(v));},distanceToSquared:function distanceToSquared(v){var dx=this.x-v.x;var dy=this.y-v.y;var dz=this.z-v.z;return dx*dx+dy*dy+dz*dz;},applyMatrix4:function applyMatrix4(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12];this.y=e[1]*x+e[5]*y+e[9]*z+e[13];this.z=e[2]*x+e[6]*y+e[10]*z+e[14];return this;},applyProjection:function applyProjection(m){//input: $3Dmol.Matrix4 projection matrix\n\tvar x=this.x,y=this.y,z=this.z;var e=m.elements;var d=e[3]*x+e[7]*y+e[11]*z+e[15];this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])/d;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])/d;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])/d;return this;},applyQuaternion:function applyQuaternion(q){//save values\n\tvar x=this.x;var y=this.y;var z=this.z;var qx=q.x;var qy=q.y;var qz=q.z;var qw=q.w;//compute this as\n\t//t = 2 * cross(q.xyz, v)\n\t//newv = v + q.w * t + cross(q.xyz, t)\n\t//this from molecularmusings\n\t//http://molecularmusings.wordpress.com/2013/05/24/a-faster-quaternion-vector-multiplication/\n\tvar t={};t.x=2*(y*qz-z*qy);t.y=2*(z*qx-x*qz);t.z=2*(x*qy-y*qx);//cross t with q\n\tvar t2={};t2.x=t.y*qz-t.z*qy;t2.y=t.z*qx-t.x*qz;t2.z=t.x*qy-t.y*qx;this.x=x+q.w*t.x+t2.x;this.y=y+q.w*t.y+t2.y;this.z=z+q.w*t.z+t2.z;return this;},negate:function negate(){return this.multiplyScalar(-1);},dot:function dot(v){return this.x*v.x+this.y*v.y+this.z*v.z;},length:function length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);},lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z;},normalize:function normalize(){return this.divideScalar(this.length());},cross:function cross(v){var x=this.x,y=this.y,z=this.z;this.x=y*v.z-z*v.y;this.y=z*v.x-x*v.z;this.z=x*v.y-y*v.x;return this;},crossVectors:function crossVectors(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this;},getPositionFromMatrix:function getPositionFromMatrix(m){this.x=m.elements[12];this.y=m.elements[13];this.z=m.elements[14];return this;},setEulerFromRotationMatrix:function setEulerFromRotationMatrix(m,order){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\tvar te=m.elements;var m11=te[0],m12=te[4],m13=te[8];var m21=te[1],m22=te[5],m23=te[9];var m31=te[2],m32=te[6],m33=te[10];if(order===undefined||order==='XYZ'){this.y=Math.asin($3Dmol.Math.clamp(m13,-1,1));if(Math.abs(m13)<0.99999){this.x=Math.atan2(-m23,m33);this.z=Math.atan2(-m12,m11);}else{this.x=Math.atan2(m32,m22);this.z=0;}}else{console.error(\"Error with vector's setEulerFromRotationMatrix: Unknown order: \"+order);}return this;},rotateAboutVector:function rotateAboutVector(axis,ang){axis.normalize();var cosang=Math.cos(ang);var sinang=Math.sin(ang);// Rodrigues' rotation formula, from wikipedia\n\tvar term1=this.clone().multiplyScalar(cosang);var term2=axis.clone().cross(this).multiplyScalar(sinang);var term3=axis.clone().multiplyScalar(axis.clone().dot(this)).multiplyScalar(1-cosang);var rot=term1.add(term2).add(term3);this.x=rot.x;this.y=rot.y;this.z=rot.z;return this;},clone:function clone(){return new $3Dmol.Vector3(this.x,this.y,this.z);}};//Matrices\n\t//Matrix3\n\t/** @constructor */$3Dmol.Matrix3=function(n11,n12,n13,n21,n22,n23,n31,n32,n33){this.elements=new Float32Array(9);this.set(n11!==undefined?n11:1,n12||0,n13||0,n21||0,n22!==undefined?n22:1,n23||0,n31||0,n32||0,n33!==undefined?n33:1);};$3Dmol.Matrix3.prototype={constructor:$3Dmol.Matrix3,set:function set(n11,n12,n13,n21,n22,n23,n31,n32,n33){var te=this.elements;te[0]=n11;te[3]=n12;te[6]=n13;te[1]=n21;te[4]=n22;te[7]=n23;te[2]=n31;te[5]=n32;te[8]=n33;return this;},identity:function identity(){this.set(1,0,0,0,1,0,0,0,1);return this;},copy:function copy(m){var me=m.elements;this.set(me[0],me[3],me[6],me[1],me[4],me[7],me[2],me[5],me[8]);},multiplyScalar:function multiplyScalar(s){var te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this;},getInverse:function getInverse(matrix,throwOnInvertible){// input: Matrix4\n\tvar me=matrix.elements;var te=this.elements;te[0]=me[10]*me[5]-me[6]*me[9];te[1]=-me[10]*me[1]+me[2]*me[9];te[2]=me[6]*me[1]-me[2]*me[5];te[3]=-me[10]*me[4]+me[6]*me[8];te[4]=me[10]*me[0]-me[2]*me[8];te[5]=-me[6]*me[0]+me[2]*me[4];te[6]=me[9]*me[4]-me[5]*me[8];te[7]=-me[9]*me[0]+me[1]*me[8];te[8]=me[5]*me[0]-me[1]*me[4];var det=me[0]*te[0]+me[1]*te[3]+me[2]*te[6];// no inverse\n\tif(det===0){var msg=\"Matrix3.getInverse(): can't invert matrix, determinant is 0\";if(throwOnInvertible||false){throw new Error(msg);}else{console.warn(msg);}this.identity();return this;}this.multiplyScalar(1.0/det);return this;},//https://en.wikipedia.org/wiki/Determinant\n\tgetDeterminant:function getDeterminant(){var m=this.elements;/*|a b c|\n\t          |d e f|\n\t          |g h i|*/var determinant=m[0]*m[4]*m[8]//+aei\n\t+m[1]*m[5]*m[6]//+bfg\n\t+m[2]*m[3]*m[7]//+cdh\n\t-m[2]*m[4]*m[6]//-ceg\n\t-m[1]*m[3]*m[8]//-bdi\n\t-m[0]*m[5]*m[7];//-afh\n\treturn determinant;},transpose:function transpose(){var tmp,m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this;},clone:function clone(){var te=this.elements;return new $3Dmol.Matrix3(te[0],te[3],te[6],te[1],te[4],te[7],te[2],te[5],te[8]);}};//Matrix 4\n\t/** @constructor */$3Dmol.Matrix4=function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){if(typeof n12==='undefined'&&typeof n11!=='undefined'){//passing list like initialization\n\tthis.elements=new Float32Array(n11);}else{var te=this.elements=new Float32Array(16);te[0]=n11!==undefined?n11:1;te[4]=n12||0;te[8]=n13||0;te[12]=n14||0;te[1]=n21||0;te[5]=n22!==undefined?n22:1;te[9]=n23||0;te[13]=n24||0;te[2]=n31||0;te[6]=n32||0;te[10]=n33!==undefined?n33:1;te[14]=n34||0;te[3]=n41||0;te[7]=n42||0;te[11]=n43||0;te[15]=n44!==undefined?n44:1;}};$3Dmol.Matrix4.prototype={constructor:$3Dmol.Matrix4,set:function set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this;},identity:function identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;},copy:function copy(m){var me=m.elements;this.set(me[0],me[4],me[8],me[12],me[1],me[5],me[9],me[13],me[2],me[6],me[10],me[14],me[3],me[7],me[11],me[15]);return this;},matrix3FromTopLeft:function matrix3FromTopLeft(){var te=this.elements;return new $3Dmol.Matrix3(te[0],te[4],te[8],te[1],te[5],te[9],te[2],te[6],te[10]);},setRotationFromEuler:function setRotationFromEuler(v,order){var te=this.elements;var x=v.x,y=v.y,z=v.z;var a=Math.cos(x),b=Math.sin(x);var c=Math.cos(y),d=Math.sin(y);var e=Math.cos(z),f=Math.sin(z);if(order===undefined||order==='XYZ'){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c;}else console.error(\"Error with matrix4 setRotationFromEuler. Order: \"+order);return this;},setRotationFromQuaternion:function setRotationFromQuaternion(q){var te=this.elements;var x=q.x,y=q.y,z=q.z,w=q.w;var x2=x+x,y2=y+y,z2=z+z;var xx=x*x2,xy=x*y2,xz=x*z2;var yy=y*y2,yz=y*z2,zz=z*z2;var wx=w*x2,wy=w*y2,wz=w*z2;te[0]=1-(yy+zz);te[4]=xy-wz;te[8]=xz+wy;te[1]=xy+wz;te[5]=1-(xx+zz);te[9]=yz-wx;te[2]=xz-wy;te[6]=yz+wx;te[10]=1-(xx+yy);return this;},lookAt:function(){var x=new $3Dmol.Vector3();var y=new $3Dmol.Vector3();var z=new $3Dmol.Vector3();return function(eye,target,up){var te=this.elements;z.subVectors(eye,target).normalize();if(z.length()===0){z.z=1;}x.crossVectors(up,z).normalize();if(x.length()===0){z.x+=0.0001;x.crossVectors(up,z).normalize();}y.crossVectors(z,x);te[0]=x.x;te[4]=y.x;te[8]=z.x;te[1]=x.y;te[5]=y.y;te[9]=z.y;te[2]=x.z;te[6]=y.z;te[10]=z.z;return this;};}(),multiplyMatrices:function multiplyMatrices(a,b){var ae=a.elements;var be=b.elements;var te=this.elements;var a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];var a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];var a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];var a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];var b11=be[0],b12=be[4],b13=be[8],b14=be[12];var b21=be[1],b22=be[5],b23=be[9],b24=be[13];var b31=be[2],b32=be[6],b33=be[10],b34=be[14];var b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this;},multiplyScalar:function multiplyScalar(s){var te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this;},makeTranslation:function makeTranslation(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this;},transpose:function transpose(){var te=this.elements;var tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this;},getPosition:function(){var v1=new $3Dmol.Vector3();return function(){console.warn('DEPRECATED: Matrix4\\'s .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.');var te=this.elements;return v1.set(te[12],te[13],te[14]);};}(),setPosition:function setPosition(v){var te=this.elements;te[12]=v.x;te[13]=v.y;te[14]=v.z;return this;},getInverse:function getInverse(m,throwOnInvertible){// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\tvar te=this.elements;var me=m.elements;var n11=me[0],n12=me[4],n13=me[8],n14=me[12];var n21=me[1],n22=me[5],n23=me[9],n24=me[13];var n31=me[2],n32=me[6],n33=me[10],n34=me[14];var n41=me[3],n42=me[7],n43=me[11],n44=me[15];te[0]=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44;te[4]=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44;te[8]=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44;te[12]=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;te[1]=n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44;te[5]=n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44;te[9]=n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44;te[13]=n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34;te[2]=n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44;te[6]=n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44;te[10]=n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44;te[14]=n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34;te[3]=n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43;te[7]=n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43;te[11]=n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43;te[15]=n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33;var det=me[0]*te[0]+me[1]*te[4]+me[2]*te[8]+me[3]*te[12];if(det===0){var msg=\"Matrix4.getInverse(): can't invert matrix, determinant is 0\";if(throwOnInvertible||false){throw new Error(msg);}else{console.warn(msg);}this.identity();return this;}this.multiplyScalar(1/det);return this;},isReflected:function isReflected(){return this.matrix3FromTopLeft().getDeterminant()<0;},compose:function(){var mRotation=new $3Dmol.Matrix4(),mScale=new $3Dmol.Matrix4();return function(translation,rotation,scale){var te=this.elements;mRotation.identity();mRotation.setRotationFromQuaternion(rotation);mScale.makeScale(scale.x,scale.y,scale.z);this.multiplyMatrices(mRotation,mScale);te[12]=translation.x;te[13]=translation.y;te[14]=translation.z;return this;};}(),decompose:function(){var x=new $3Dmol.Vector3(),y=new $3Dmol.Vector3(),z=new $3Dmol.Vector3(),matrix=new $3Dmol.Matrix4();return function(translation,rotation,scale){var te=this.elements;// grab the axis vectors\n\tx.set(te[0],te[1],te[2]);y.set(te[4],te[5],te[6]);z.set(te[8],te[9],te[10]);translation=translation instanceof $3Dmol.Vector3?translation:new $3Dmol.Vector3();rotation=rotation instanceof $3Dmol.Quaternion?rotation:new $3Dmol.Quaternion();scale=scale instanceof $3Dmol.Vector3?scale:new $3Dmol.Vector3();scale.x=x.length();scale.y=y.length();scale.z=z.length();translation.x=te[12];translation.y=te[13];translation.z=te[14];// scale the rotation part\n\tmatrix.copy(this);matrix.elements[0]/=scale.x;matrix.elements[1]/=scale.x;matrix.elements[2]/=scale.x;matrix.elements[4]/=scale.y;matrix.elements[5]/=scale.y;matrix.elements[6]/=scale.y;matrix.elements[8]/=scale.z;matrix.elements[9]/=scale.z;matrix.elements[10]/=scale.z;rotation.setFromRotationMatrix(matrix);return[translation,rotation,scale];};}(),scale:function scale(v){var te=this.elements;var x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this;},getMaxScaleOnAxis:function getMaxScaleOnAxis(){var te=this.elements;var scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];var scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];var scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,Math.max(scaleYSq,scaleZSq)));},makeFrustum:function makeFrustum(left,right,bottom,top,near,far){var te=this.elements;var x=2*near/(right-left);var y=2*near/(top-bottom);var a=(right+left)/(right-left);var b=(top+bottom)/(top-bottom);var c=-(far+near)/(far-near);var d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this;},makePerspective:function makePerspective(fov,aspect,near,far){var ymax=near*Math.tan($3Dmol.Math.degToRad(fov*0.5));var ymin=-ymax;var xmin=ymin*aspect;var xmax=ymax*aspect;return this.makeFrustum(xmin,xmax,ymin,ymax,near,far);},makeOrthographic:function makeOrthographic(left,right,top,bottom,near,far){var te=this.elements;var w=1.0/(right-left);var h=1.0/(top-bottom);var p=1.0/(far-near);var x=(right+left)*w;var y=(top+bottom)*h;var z=(far+near)*p;te[0]=2*w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2*h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this;},isEqual:function isEqual(m){var me=m.elements;var te=this.elements;if(te[0]==me[0]&&te[4]==me[4]&&te[8]==me[8]&&te[12]==me[12]&&te[1]==me[1]&&te[5]==me[5]&&te[9]==me[9]&&te[13]==me[13]&&te[2]==me[2]&&te[6]==me[6]&&te[10]==me[10]&&te[14]==me[14]&&te[3]==me[3]&&te[7]==me[7]&&te[11]==me[11]&&te[15]==me[15]){return true;}else{return false;}},clone:function clone(){var te=this.elements;return new $3Dmol.Matrix4(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15]);},isIdentity:function isIdentity(){var te=this.elements;if(te[0]==1&&te[4]==0&&te[8]==0&&te[12]==0&&te[1]==0&&te[5]==1&&te[9]==0&&te[13]==0&&te[2]==0&&te[6]==0&&te[10]==1&&te[14]==0&&te[3]==0&&te[7]==0&&te[11]==0&&te[15]==1){return true;}else{return false;}}};/** @constructor */$3Dmol.Ray=function(origin,direction){this.origin=origin!==undefined?origin:new $3Dmol.Vector3();this.direction=direction!==undefined?direction:new $3Dmol.Vector3();};//TODO: Remove methods we don't need (intersectPlane ??)\n\t$3Dmol.Ray.prototype={constructor:$3Dmol.Ray,set:function set(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this;},copy:function copy(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this;},at:function at(t,optionalTarget){var result=optionalTarget||new $3Dmol.Vector3();return result.copy(this.direction).multiplyScalar(t).add(this.origin);},recast:function(){var v1=new $3Dmol.Vector3();return function(t){this.origin.copy(this.at(t,v1));return this;};}(),closestPointToPoint:function closestPointToPoint(point,optionalTarget){var result=optionalTarget||new $3Dmol.Vector3();result.subVectors(point,this.origin);var directionDistance=result.dot(this.direction);//returns a point on this ray\n\treturn result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);},distanceToPoint:function(point){var v1=new $3Dmol.Vector3();return function(point){var directionDistance=v1.subVectors(point,this.origin).dot(this.direction);v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return v1.distanceTo(point);};}(),isIntersectionCylinder:function isIntersectionCylinder(){},isIntersectionSphere:function isIntersectionSphere(sphere){return this.distanceToPoint(sphere.center)<=sphere.radius;},isIntersectionPlane:function isIntersectionPlane(plane){var denominator=plane.normal.dot(this.direction);//plane and ray are not perpendicular\n\tif(denominator!==0)return true;if(plane.distanceToPoint(this.origin)===0)return true;return false;},distanceToPlane:function distanceToPlane(plane){var denominator=plane.normal.dot(this.direction);if(denominator===0){//line is coplanar\n\tif(plane.distanceToPoint(this.origin)===0)return 0;//ray is parallel\n\treturn undefined;}var t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return t;},intersectPlane:function intersectPlane(plane,optionalTarget){var t=this.distanceToPlane(plane);if(t===undefined)return undefined;return this.at(t,optionalTarget);},applyMatrix4:function applyMatrix4(matrix4){this.direction.add(this.origin).applyMatrix4(matrix4);this.origin.applyMatrix4(matrix4);this.direction.sub(this.origin);return this;},equals:function equals(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction);},clone:function clone(){return new $3Dmol.Ray().copy(this);}};//Intersection sphere and box shapes.\n\t//Intersection sphere for sphere, stick render\n\t/** @constructor */$3Dmol.Sphere=function(center,radius){this.center=center!==undefined?center:new $3Dmol.Vector3();this.radius=radius!==undefined?radius:0;};$3Dmol.Sphere.prototype={constructor:$3Dmol.Sphere,set:function set(center,radius){this.center.copy(center);this.radius=radius;return this;},copy:function copy(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this;},applyMatrix4:function applyMatrix4(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;},translate:function translate(offset){this.center.add(offset);return this;},equals:function equals(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius;},clone:function clone(){return new $3Dmol.Sphere().copy(this);}};//Bounding cylinder for stick render\n\t/** @constructor */$3Dmol.Cylinder=function(c1,c2,radius){this.c1=c1!==undefined?c1:new $3Dmol.Vector3();this.c2=c2!==undefined?c2:new $3Dmol.Vector3();this.direction=new $3Dmol.Vector3().subVectors(this.c2,this.c1).normalize();this.radius=radius!==undefined?radius:0;};$3Dmol.Cylinder.prototype={constructor:$3Dmol.Cylinder,copy:function copy(cylinder){this.c1.copy(cylinder.c1);this.c2.copy(cylinder.c2);this.direction.copy(cylinder.direction);this.radius=cylinder.radius;return this;},lengthSq:function(){var vector=new $3Dmol.Vector3();return function(){return vector.subVectors(this.c2,this.c1).lengthSq();};}(),applyMatrix4:function applyMatrix4(matrix){this.direction.add(this.c1).applyMatrix4(matrix);this.c1.applyMatrix4(matrix);this.c2.applyMatrix4(matrix);this.direction.sub(this.c1).normalize();this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;}};//plane specified by three points\n\t/** @constructor */$3Dmol.Triangle=function(a,b,c){this.a=a!==undefined?a:new $3Dmol.Vector3();this.b=b!==undefined?b:new $3Dmol.Vector3();this.c=c!==undefined?c:new $3Dmol.Vector3();};$3Dmol.Triangle.prototype={constructor:$3Dmol.Triangle,copy:function copy(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this;},applyMatrix4:function applyMatrix4(matrix){this.a.applyMatrix4(matrix);this.b.applyMatrix4(matrix);this.c.applyMatrix4(matrix);return this;},getNormal:function(){var v1=new $3Dmol.Vector3();return function(){var norm=this.a.clone();norm.sub(this.b);v1.subVectors(this.c,this.b);norm.cross(v1);norm.normalize();return norm;};}()};/* core Object3D\n\t * Base class for Scene, Camera, Geometry\n\t * Geometry class\n\t *///Event Handling\n\t/** @this {$3Dmol.EventDispatcher} */$3Dmol.EventDispatcher=function(){var listeners={};this.addEventListener=function(type,listener){if(listeners[type]===undefined)listeners[type]=[];if(listeners[type].indexOf(listener)===-1)listeners[type].push(listener);};this.removeEventListener=function(type,listener){var index=listeners[type].indexOf(listener);if(index!==-1)listeners[type].splice(index,1);};this.dispatchEvent=function(event){var listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;for(var i=0,l=listenerArray.length;i<l;i++){listenerArray[i].call(this,event);}}};};$3Dmol.Color=function(color){if(arguments.length>1){this.r=arguments[0]||0.0;this.g=arguments[1]||0.0;this.b=arguments[2]||0.0;return this;}return this.set(color);};$3Dmol.Color.prototype={constructor:$3Dmol.Color,r:0.0,g:0.0,b:0.0,set:function set(val){if(val instanceof $3Dmol.Color)return val.clone();else if(typeof val==='number')this.setHex(val);else if((typeof val==='undefined'?'undefined':_typeof(val))==='object'&&\"r\"in val&&\"g\"in val&&\"b\"in val){this.r=val.r;this.g=val.g;this.b=val.b;}},setHex:function setHex(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this;},getHex:function getHex(){var R=Math.round(this.r*255);var G=Math.round(this.g*255);var B=Math.round(this.b*255);return R<<16|G<<8|B;},clone:function clone(){return new $3Dmol.Color(this.r,this.g,this.b);},copy:function copy(color){this.r=color.r;this.g=color.g;this.b=color.b;return this;},//return object that represents color components from 0 to 255\n\tscaled:function scaled(){var ret={};ret.r=Math.round(this.r*255);ret.g=Math.round(this.g*255);ret.b=Math.round(this.b*255);ret.a=1.0;return ret;}};//Object3D base constructor function\n\t/** @this {$3Dmol.Object3D} */$3Dmol.Object3D=function(){this.id=$3Dmol.Object3DIDCount++;this.name=\"\";this.parent=undefined;this.children=[];this.position=new $3Dmol.Vector3();this.rotation=new $3Dmol.Vector3();this.matrix=new $3Dmol.Matrix4();this.matrixWorld=new $3Dmol.Matrix4();this.quaternion=new $3Dmol.Quaternion();this.eulerOrder='XYZ';this.up=new $3Dmol.Vector3(0,1,0);this.scale=new $3Dmol.Vector3(1,1,1);this.matrixAutoUpdate=true;this.matrixWorldNeedsUpdate=true;this.rotationAutoUpdate=true;this.useQuaternion=false;this.visible=true;};$3Dmol.Object3D.prototype={constructor:$3Dmol.Object3D,lookAt:function lookAt(vector){this.matrix.lookAt(vector,this.position,this.up);if(this.rotationAutoUpdate){if(this.useQuaternion===true)this.quaternion.copy(this.matrix.decompose()[1]);else this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder);}},//add child object\n\tadd:function add(object){if(object===this){console.error(\"Can't add $3Dmol.Object3D to itself\");return;}object.parent=this;this.children.push(object);//add to the scene (i.e. follow up this instance's parents until reach the top)\n\tvar scene=this;while(scene.parent!==undefined){scene=scene.parent;}if(scene!==undefined&&scene instanceof $3Dmol.Scene)scene.__addObject(object);},remove:function remove(object){var index=this.children.indexOf(object);if(index!==-1){object.parent=undefined;this.children.splice(index,1);//Remove from scene\n\tvar scene=this;while(scene.parent!==undefined){scene=scene.parent;}if(scene!==undefined&&scene instanceof $3Dmol.Scene)scene.__removeObject(object);}},updateMatrix:function updateMatrix(){this.matrix.setPosition(this.position);if(this.useQuaternion===false)this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);else this.matrix.setRotationFromQuaternion(this.quaternion);//TODO: Do I need this??\n\tif(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=true;},updateMatrixWorld:function updateMatrixWorld(force){if(this.matrixAutoUpdate===true)this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||force===true){if(this.parent===undefined)this.matrixWorld.copy(this.matrix);else this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;//Update matrices of all children\n\tfor(var i=0;i<this.children.length;i++){this.children[i].updateMatrixWorld(true);}},clone:function clone(object){if(object===undefined)object=new $3Dmol.Object3D();object.name=this.name;object.up.copy(this.up);object.position.copy(this.position);object.rotation.copy(this.rotation);object.eulerOrder=this.eulerOrder;object.scale.copy(this.scale);object.rotationAutoUpdate=this.rotationAutoUpdate;object.matrix.copy(this.matrix);object.matrixWorld.copy(this.matrixWorld);object.quaternion.copy(this.quaternion);object.matrixAutoUpdate=this.matrixAutoUpdate;object.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;object.useQuaternion=this.useQuaternion;object.visible=this.visible;for(var i=0;i<this.children.length;i++){var child=this.children[i];object.add(child.clone());}return object;},setVisible:function setVisible(val){//recursively set visibility\n\tthis.visible=val;for(var i=0;i<this.children.length;i++){var child=this.children[i];child.setVisible(val);}}};$3Dmol.Object3DIDCount=0;//Geometry class\n\t//TODO: What can I remove - how can I optimize ?\n\t$3Dmol.Geometry=function(){var BUFFERSIZE=65535;//limited to 16bit indices\n\t/** @constructor */var geometryGroup=function geometryGroup(id){this.id=id||0;//for performance reasons, callers must directly modify these\n\tthis.vertexArray=null;this.colorArray=null;this.normalArray=null;this.faceArray=null;this.radiusArray=null;//this.adjFaceArray=null;\n\tthis.lineArray=null;this.vertices=0;this.faceidx=0;this.lineidx=0;};geometryGroup.prototype.getNumVertices=function(){return this.vertices;};geometryGroup.prototype.getVertices=function(){return this.vertexArray;};geometryGroup.prototype.getCentroid=function(){var centroid=new $3Dmol.Vector3();var offset,x,y,z;for(var i=0;i<this.vertices;++i){offset=i*3;x=this.vertexArray[offset];y=this.vertexArray[offset+1];z=this.vertexArray[offset+2];centroid.x+=x;centroid.y+=y;centroid.z+=z;}//divideScalar checks for 0 denom\n\tcentroid.divideScalar(this.vertices);return centroid;};//setup normals - vertex and face array must exist\n\tgeometryGroup.prototype.setNormals=function(){var faces=this.faceArray;var verts=this.vertexArray;var norms=this.normalArray;if(!this.vertices||!this.faceidx)return;//vertex indices\n\tvar a,b,c,d,//and actual vertices\n\tvA,vB,vC,norm;for(var i=0;i<faces.length/3;++i){a=faces[i*3]*3;b=faces[i*3+1]*3;c=faces[i*3+2]*3;vA=new $3Dmol.Vector3(verts[a],verts[a+1],verts[a+2]);vB=new $3Dmol.Vector3(verts[b],verts[b+1],verts[b+2]);vC=new $3Dmol.Vector3(verts[c],verts[c+1],verts[c+2]);vA.subVectors(vA,vB);vC.subVectors(vC,vB);vC.cross(vA);//face normal\n\tnorm=vC;norm.normalize();norms[a]+=norm.x;norms[b]+=norm.x;norms[c]+=norm.x;norms[a+1]+=norm.y;norms[b+1]+=norm.y;norms[c+1]+=norm.y;norms[a+2]+=norm.z;norms[b+2]+=norm.z;norms[c+2]+=norm.z;}};//sets line index array from face arr\n\t//Note - assumes all faces are triangles (i.e. there will\n\t//be an extra diagonal for four-sided faces - user should\n\t//specify linearr for custom shape generation to show wireframe squares\n\t//as rectangles rather than two triangles)\n\tgeometryGroup.prototype.setLineIndices=function(){if(!this.faceidx)return;var faceArr=this.faceArray,lineArr=this.lineArray=new Uint16Array(this.faceidx*2);this.lineidx=this.faceidx*2;var faceoffset;for(var i=0;i<this.faceidx/3;++i){faceoffset=i*3;var lineoffset=faceoffset*2;var a=faceArr[faceoffset],b=faceArr[faceoffset+1],c=faceArr[faceoffset+2];lineArr[lineoffset]=a;lineArr[lineoffset+1]=b;lineArr[lineoffset+2]=a;lineArr[lineoffset+3]=c;lineArr[lineoffset+4]=b;lineArr[lineoffset+5]=c;}};geometryGroup.prototype.truncateArrayBuffers=function(mesh,reallocatemem){mesh=mesh===true?true:false;var vertexArr=this.vertexArray,colorArr=this.colorArray,normalArr=this.normalArray,faceArr=this.faceArray,lineArr=this.lineArray,radiusArr=this.radiusArray;//subarray to avoid copying and reallocating memory\n\tthis.vertexArray=vertexArr.subarray(0,this.vertices*3);this.colorArray=colorArr.subarray(0,this.vertices*3);if(mesh){this.normalArray=normalArr.subarray(0,this.vertices*3);this.faceArray=faceArr.subarray(0,this.faceidx);if(this.lineidx>0)//not always set so reclaim memory\n\tthis.lineArray=lineArr.subarray(0,this.lineidx);else this.lineArray=new Uint16Array(0);}else{this.normalArray=new Float32Array(0);this.faceArray=new Uint16Array(0);this.lineArray=new Uint16Array(0);}if(radiusArr){this.radiusArray=radiusArr.subarray(0,this.vertices);}if(reallocatemem){//actually copy smaller arrays to save memory\n\tif(this.normalArray)this.normalArray=new Float32Array(this.normalArray);if(this.faceArray)this.faceArray=new Uint16Array(this.faceArray);if(this.lineArray)this.lineArray=new Uint16Array(this.lineArray);if(this.vertexArray)this.vertexArray=new Float32Array(this.vertexArray);if(this.colorArray)this.colorArray=new Float32Array(this.colorArray);if(this.radiusArray)this.radiusArray=new Float32Array(this.radiusArray);}this.__inittedArrays=true;};var addGroup=function addGroup(geo){var ret=new geometryGroup(geo.geometryGroups.length);geo.geometryGroups.push(ret);geo.groups=geo.geometryGroups.length;ret.vertexArray=new Float32Array(BUFFERSIZE*3);ret.colorArray=new Float32Array(BUFFERSIZE*3);//TODO: instantiating uint arrays according to max number of vertices\n\t// is dangerous, since there exists the possibility that there will be\n\t// more face or line indices than vertex points - but so far that doesn't\n\t// seem to be the case for any of the renders\n\tif(geo.mesh){ret.normalArray=new Float32Array(BUFFERSIZE*3);ret.faceArray=new Uint16Array(BUFFERSIZE*6);ret.lineArray=new Uint16Array(BUFFERSIZE*6);}if(geo.radii){ret.radiusArray=new Float32Array(BUFFERSIZE);}ret.useOffset=geo.offset;return ret;};/** @constructor */var Geometry=function Geometry(mesh,radii,offset){$3Dmol.EventDispatcher.call(this);this.id=$3Dmol.GeometryIDCount++;this.name='';this.hasTangents=false;this.dynamic=true;// the intermediate typed arrays will be deleted when set to false\n\tthis.mesh=mesh===true?true:false;// Does this geometry represent a mesh (i.e. do we need Face/Line index buffers?)\n\tthis.radii=radii||false;this.offset=offset||false;//offset buffer used for instancing\n\t// update flags\n\tthis.verticesNeedUpdate=false;this.elementsNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.buffersNeedUpdate=false;this.geometryGroups=[];this.groups=0;};Geometry.prototype={constructor:Geometry,//Get geometry group to accomodate addVertices new vertices - create\n\t// new group if necessary\n\tupdateGeoGroup:function updateGeoGroup(addVertices){addVertices=addVertices||0;var retGroup=this.groups>0?this.geometryGroups[this.groups-1]:null;if(!retGroup||retGroup.vertices+addVertices>retGroup.vertexArray.length/3)retGroup=addGroup(this);return retGroup;},addGeoGroup:function addGeoGroup(){return addGroup(this);},setUpNormals:function setUpNormals(three){three=three||false;for(var g=0;g<this.groups;g++){var geoGroup=this.geometryGroups[g];geoGroup.setNormals(three);}},setUpWireframe:function setUpWireframe(){for(var g=0;g<this.groups;g++){var geoGroup=this.geometryGroups[g];geoGroup.setLineIndices();}},//After vertices, colors, etc are collected in regular or typed arrays,\n\t//  create typed arrays from regular arrays if they don't already exist,\n\tinitTypedArrays:function initTypedArrays(){for(var g=0;g<this.groups;g++){var group=this.geometryGroups[g];if(group.__inittedArrays===true)continue;//do not actually reallocate smaller memory here because\n\t//of the performance hit - if you know your geometry is small,\n\t//truncate manually with the second parameter true\n\tgroup.truncateArrayBuffers(this.mesh,false);}},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}};return Geometry;}();Object.defineProperty($3Dmol.Geometry.prototype,\"vertices\",{/** @this {$3Dmol.Geometry} */get:function get(){var vertices=0;for(var g=0;g<this.groups;g++){vertices+=this.geometryGroups[g].vertices;}return vertices;}});$3Dmol.GeometryIDCount=0;//Raycaster\n\t/** @constructor */$3Dmol.Raycaster=function(){var Raycaster=function Raycaster(origin,direction,far,near){this.ray=new $3Dmol.Ray(origin,direction);if(this.ray.direction.lengthSq()>0)this.ray.direction.normalize();this.near=near||0;this.far=far||Infinity;};var sphere=new $3Dmol.Sphere();var cylinder=new $3Dmol.Cylinder();var triangle=new $3Dmol.Triangle();var w_0=new $3Dmol.Vector3();// for cylinders, cylinder.c1 - ray.origin\n\tvar v1=new $3Dmol.Vector3();// all purpose local vector\n\tvar v2=new $3Dmol.Vector3();var v3=new $3Dmol.Vector3();//var facePlane = new $3Dmol.Plane();\n\tvar localRay=new $3Dmol.Ray();var intersectPoint=new $3Dmol.Vector3();var matrixPosition=new $3Dmol.Vector3();var inverseMatrix=new $3Dmol.Matrix4();var descSort=function descSort(a,b){return a.distance-b.distance;};// [-1, 1]\n\tvar clamp=function clamp(x){return Math.min(Math.max(x,-1),1);};//object is a Sphere or (Bounding) Box\n\tvar intersectObject=function intersectObject(group,clickable,raycaster,intersects){matrixPosition.getPositionFromMatrix(group.matrixWorld);if(clickable.intersectionShape===undefined)return intersects;var intersectionShape=clickable.intersectionShape;var precision=raycaster.linePrecision;precision*=group.matrixWorld.getMaxScaleOnAxis();var precisionSq=precision*precision;//Check for intersection with clickable's bounding sphere, if it exists\n\tif(clickable.boundingSphere!==undefined&&clickable.boundingSphere instanceof $3Dmol.Sphere){sphere.copy(clickable.boundingSphere);sphere.applyMatrix4(group.matrixWorld);if(!raycaster.ray.isIntersectionSphere(sphere)){return intersects;}}//Iterate through intersection objects\n\tvar i,il,norm,normProj,cylProj,rayProj,distance,closestDistSq,denom,discriminant,s,t,s_c,t_c;//triangle faces\n\tfor(i=0,il=intersectionShape.triangle.length;i<il;i++){if(intersectionShape.triangle[i]instanceof $3Dmol.Triangle){triangle.copy(intersectionShape.triangle[i]);triangle.applyMatrix4(group.matrixWorld);norm=triangle.getNormal();normProj=raycaster.ray.direction.dot(norm);//face culling\n\tif(normProj>=0)continue;w_0.subVectors(triangle.a,raycaster.ray.origin);distance=norm.dot(w_0)/normProj;if(distance<0)continue;//intersects with plane, check if P inside triangle\n\tv1.copy(raycaster.ray.direction).multiplyScalar(distance).add(raycaster.ray.origin);v1.sub(triangle.a);// from pt a to intersection point P\n\tv2.copy(triangle.b).sub(triangle.a);// from pt a to b\n\tv3.copy(triangle.c).sub(triangle.a);// from pt a to c\n\tvar b_dot_c=v2.dot(v3);var b_sq=v2.lengthSq();var c_sq=v3.lengthSq();// P = A + s(v2) + t(v3), inside trianle if 0 <= s, t <=1  and (s + t) <=0\n\tt=(b_sq*v1.dot(v3)-b_dot_c*v1.dot(v2))/(b_sq*c_sq-b_dot_c*b_dot_c);if(t<0||t>1)continue;s=(v1.dot(v2)-t*b_dot_c)/b_sq;if(s<0||s>1||s+t>1)continue;else{intersects.push({clickable:clickable,distance:distance});}}}//cylinders\n\tfor(i=0,il=intersectionShape.cylinder.length;i<il;i++){if(intersectionShape.cylinder[i]instanceof $3Dmol.Cylinder){cylinder.copy(intersectionShape.cylinder[i]);cylinder.applyMatrix4(group.matrixWorld);w_0.subVectors(cylinder.c1,raycaster.ray.origin);cylProj=w_0.dot(cylinder.direction);// Dela\n\trayProj=w_0.dot(raycaster.ray.direction);// Epsilon\n\tnormProj=clamp(raycaster.ray.direction.dot(cylinder.direction));// Beta\n\tdenom=1-normProj*normProj;if(denom===0.0)continue;s_c=(normProj*rayProj-cylProj)/denom;t_c=(rayProj-normProj*cylProj)/denom;v1.copy(cylinder.direction).multiplyScalar(s_c).add(cylinder.c1);// Q_c\n\tv2.copy(raycaster.ray.direction).multiplyScalar(t_c).add(raycaster.ray.origin);// P_c\n\tclosestDistSq=v3.subVectors(v1,v2).lengthSq();var radiusSq=cylinder.radius*cylinder.radius;//Smoothing?\n\t//if (closestDistSq > radiusSq) radiusSq += precisionSq;\n\t// closest distance between ray and cylinder axis not greater than cylinder radius;\n\t// might intersect this cylinder between atom and bond midpoint\n\tif(closestDistSq<=radiusSq){//Find points where ray intersects sides of cylinder\n\tdiscriminant=(normProj*cylProj-rayProj)*(normProj*cylProj-rayProj)-denom*(w_0.lengthSq()-cylProj*cylProj-radiusSq);// ray tangent to cylinder?\n\tif(discriminant<=0)t=distance=Math.sqrt(closestDistSq);else t=distance=(rayProj-normProj*cylProj-Math.sqrt(discriminant))/denom;//find closest intersection point; make sure it's between atom's position and cylinder midpoint\n\ts=normProj*t-cylProj;//does not intersect cylinder between atom and midpoint,\n\t// or intersects cylinder behind camera\n\tif(s<0||s*s>cylinder.lengthSq()||t<0)continue;else intersects.push({clickable:clickable,distance:distance});}}}//lines\n\tfor(i=0,il=intersectionShape.line.length;i<il;i+=2){v1.copy(intersectionShape.line[i]);v1.applyMatrix4(group.matrixWorld);v2.copy(intersectionShape.line[i+1]);v2.applyMatrix4(group.matrixWorld);v3.subVectors(v2,v1);var bondLengthSq=v3.lengthSq();v3.normalize();w_0.subVectors(v1,raycaster.ray.origin);var lineProj=w_0.dot(v3);rayProj=w_0.dot(raycaster.ray.direction);normProj=clamp(raycaster.ray.direction.dot(v3));denom=1-normProj*normProj;if(denom===0.0)continue;s_c=(normProj*rayProj-lineProj)/denom;t_c=(rayProj-normProj*lineProj)/denom;v1.add(v3.multiplyScalar(s_c));// Q_c\n\tv2.copy(raycaster.ray.direction).multiplyScalar(t_c).add(raycaster.ray.origin);// P_c\n\tclosestDistSq=v3.subVectors(v2,v1).lengthSq();if(closestDistSq<precisionSq&&s_c*s_c<bondLengthSq)intersects.push({clickable:clickable,distance:t_c});}for(i=0,il=intersectionShape.sphere.length;i<il;i++){//sphere\n\tif(intersectionShape.sphere[i]instanceof $3Dmol.Sphere){sphere.copy(intersectionShape.sphere[i]);sphere.applyMatrix4(group.matrixWorld);if(raycaster.ray.isIntersectionSphere(sphere)){v1.subVectors(sphere.center,raycaster.ray.origin);//distance from ray origin to point on the ray normal to sphere's center\n\t//must be less than sphere's radius (since ray intersects sphere)\n\tvar distanceToCenter=v1.dot(raycaster.ray.direction);discriminant=distanceToCenter*distanceToCenter-(v1.lengthSq()-sphere.radius*sphere.radius);//Don't select if sphere center behind camera\n\tif(distanceToCenter<0)return intersects;//ray tangent to sphere?\n\tif(discriminant<=0)distance=distanceToCenter;//This is reversed if sphere is closer than ray origin.  Do we have\n\t//to worry about handling that case?\n\telse distance=distanceToCenter-Math.sqrt(discriminant);intersects.push({clickable:clickable,distance:distance});return intersects;}}}};Raycaster.prototype.precision=0.0001;Raycaster.prototype.linePrecision=0.2;Raycaster.prototype.set=function(origin,direction){this.ray.set(origin,direction);};Raycaster.prototype.intersectObjects=function(group,objects){var intersects=[];for(var i=0,l=objects.length;i<l;i++){intersectObject(group,objects[i],this,intersects);}intersects.sort(descSort);return intersects;};return Raycaster;}();//$3Dmol Projecion\n\t//TODO: can probably strip this down a lot (only used for selection handling)\n\t/** @constructor */$3Dmol.Projector=function(){var _viewMatrix=new $3Dmol.Matrix4(),_viewProjectionMatrix=new $3Dmol.Matrix4();this.projectVector=function(vector,camera){camera.matrixWorldInverse.getInverse(camera.matrixWorld);_viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);return vector.applyProjection(_viewProjectionMatrix);};this.unprojectVector=function(vector,camera){camera.projectionMatrixInverse.getInverse(camera.projectionMatrix);_viewProjectionMatrix.multiplyMatrices(camera.matrixWorld,camera.projectionMatrixInverse);return vector.applyProjection(_viewProjectionMatrix);};};/*\n\t * Simplified Perspective Camera\n\t *//** @constructor */$3Dmol.Camera=function(fov,aspect,near,far,ortho){$3Dmol.Object3D.call(this);this.fov=fov!==undefined?fov:50;this.aspect=aspect!==undefined?aspect:1;this.near=near!==undefined?near:0.1;this.far=far!==undefined?far:2000;this.projectionMatrix=new $3Dmol.Matrix4();this.projectionMatrixInverse=new $3Dmol.Matrix4();this.matrixWorldInverse=new $3Dmol.Matrix4();var center=this.position.z;this.right=center*Math.tan(Math.PI/180*fov);this.left=-this.right;this.top=this.right/this.aspect;this.bottom=-this.top;this.ortho=!!ortho;this.updateProjectionMatrix();};//Inherit Object3D's prototyped methods\n\t$3Dmol.Camera.prototype=Object.create($3Dmol.Object3D.prototype);$3Dmol.Camera.prototype.lookAt=function(vector){//Why is the parameter order switched (compared to Object3D)?\n\tthis.matrix.lookAt(this.position,vector,this.up);if(this.rotationAutoUpdate){if(this.useQuaternion===false)this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder);else this.quaternion.copy(this.matrix.decompose()[1]);}};$3Dmol.Camera.prototype.updateProjectionMatrix=function(){if(this.ortho){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far);}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far);}this.projectionMatrixInverse.getInverse(this.projectionMatrix);};//Render plugins go here\n\t/**\n\t * Sprite render plugin\n\t * @this {$3Dmol.SpritePlugin}\n\t */$3Dmol.SpritePlugin=function(){var _gl,_renderer,_precision,_sprite={};this.init=function(renderer){_gl=renderer.context;_renderer=renderer;_precision=renderer.getPrecision();_sprite.vertices=new Float32Array(8+8);_sprite.faces=new Uint16Array(6);var i=0;_sprite.vertices[i++]=-1;_sprite.vertices[i++]=-1;// vertex 0\n\t_sprite.vertices[i++]=0;_sprite.vertices[i++]=0;// uv 0\n\t_sprite.vertices[i++]=1;_sprite.vertices[i++]=-1;// vertex 1\n\t_sprite.vertices[i++]=1;_sprite.vertices[i++]=0;// uv 1\n\t_sprite.vertices[i++]=1;_sprite.vertices[i++]=1;// vertex 2\n\t_sprite.vertices[i++]=1;_sprite.vertices[i++]=1;// uv 2\n\t_sprite.vertices[i++]=-1;_sprite.vertices[i++]=1;// vertex 3\n\t_sprite.vertices[i++]=0;_sprite.vertices[i++]=1;// uv 3\n\ti=0;_sprite.faces[i++]=0;_sprite.faces[i++]=1;_sprite.faces[i++]=2;_sprite.faces[i++]=0;_sprite.faces[i++]=2;_sprite.faces[i++]=3;_sprite.vertexBuffer=_gl.createBuffer();_sprite.elementBuffer=_gl.createBuffer();_gl.bindBuffer(_gl.ARRAY_BUFFER,_sprite.vertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,_sprite.vertices,_gl.STATIC_DRAW);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_sprite.elementBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,_sprite.faces,_gl.STATIC_DRAW);_sprite.program=createProgram($3Dmol.ShaderLib.sprite,_precision);_sprite.attributes={};_sprite.uniforms={};_sprite.attributes.position=_gl.getAttribLocation(_sprite.program,\"position\");_sprite.attributes.uv=_gl.getAttribLocation(_sprite.program,\"uv\");_sprite.uniforms.uvOffset=_gl.getUniformLocation(_sprite.program,\"uvOffset\");_sprite.uniforms.uvScale=_gl.getUniformLocation(_sprite.program,\"uvScale\");_sprite.uniforms.rotation=_gl.getUniformLocation(_sprite.program,\"rotation\");_sprite.uniforms.scale=_gl.getUniformLocation(_sprite.program,\"scale\");_sprite.uniforms.alignment=_gl.getUniformLocation(_sprite.program,\"alignment\");_sprite.uniforms.color=_gl.getUniformLocation(_sprite.program,\"color\");_sprite.uniforms.map=_gl.getUniformLocation(_sprite.program,\"map\");_sprite.uniforms.opacity=_gl.getUniformLocation(_sprite.program,\"opacity\");_sprite.uniforms.useScreenCoordinates=_gl.getUniformLocation(_sprite.program,\"useScreenCoordinates\");_sprite.uniforms.screenPosition=_gl.getUniformLocation(_sprite.program,\"screenPosition\");_sprite.uniforms.modelViewMatrix=_gl.getUniformLocation(_sprite.program,\"modelViewMatrix\");_sprite.uniforms.projectionMatrix=_gl.getUniformLocation(_sprite.program,\"projectionMatrix\");_sprite.uniforms.fogType=_gl.getUniformLocation(_sprite.program,\"fogType\");_sprite.uniforms.fogDensity=_gl.getUniformLocation(_sprite.program,\"fogDensity\");_sprite.uniforms.fogNear=_gl.getUniformLocation(_sprite.program,\"fogNear\");_sprite.uniforms.fogFar=_gl.getUniformLocation(_sprite.program,\"fogFar\");_sprite.uniforms.fogColor=_gl.getUniformLocation(_sprite.program,\"fogColor\");_sprite.uniforms.alphaTest=_gl.getUniformLocation(_sprite.program,\"alphaTest\");};this.render=function(scene,camera,viewportWidth,viewportHeight){var sprites=scene.__webglSprites,nSprites=sprites.length;if(!nSprites)return;var attributes=_sprite.attributes,uniforms=_sprite.uniforms;var invAspect=viewportHeight/viewportWidth;var halfViewportWidth=viewportWidth*0.5,halfViewportHeight=viewportHeight*0.5;// setup gl\n\t_gl.useProgram(_sprite.program);_gl.enableVertexAttribArray(attributes.position);_gl.enableVertexAttribArray(attributes.uv);_gl.disable(_gl.CULL_FACE);_gl.enable(_gl.BLEND);_gl.bindBuffer(_gl.ARRAY_BUFFER,_sprite.vertexBuffer);_gl.vertexAttribPointer(attributes.position,2,_gl.FLOAT,false,2*8,0);_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,false,2*8,8);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_sprite.elementBuffer);_gl.uniformMatrix4fv(uniforms.projectionMatrix,false,camera.projectionMatrix.elements);_gl.activeTexture(_gl.TEXTURE0);_gl.uniform1i(uniforms.map,0);var oldFogType=0;var sceneFogType=0;var fog=scene.fog;if(fog){_gl.uniform3f(uniforms.fogColor,fog.color.r,fog.color.g,fog.color.b);_gl.uniform1f(uniforms.fogNear,fog.near);_gl.uniform1f(uniforms.fogFar,fog.far);_gl.uniform1i(uniforms.fogType,1);oldFogType=1;sceneFogType=1;}else{_gl.uniform1i(uniforms.fogType,0);oldFogType=0;sceneFogType=0;}// update positions and sort\n\tvar i,sprite,material,screenPosition,size,fogType,scale=[];for(i=0;i<nSprites;i++){sprite=sprites[i];material=sprite.material;if(!sprite.visible||material.opacity===0)continue;if(!material.useScreenCoordinates){sprite._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,sprite.matrixWorld);sprite.z=-sprite._modelViewMatrix.elements[14];}else{sprite.z=-sprite.position.z;}}sprites.sort(painterSortStable);// render all sprites\n\tfor(i=0;i<nSprites;i++){sprite=sprites[i];material=sprite.material;if(!sprite.visible||material.opacity===0)continue;if(material.map&&material.map.image&&material.map.image.width){_gl.uniform1f(uniforms.alphaTest,material.alphaTest);var w=material.map.image.width;var h=material.map.image.height;scale[0]=w*_renderer.devicePixelRatio/viewportWidth;scale[1]=h*_renderer.devicePixelRatio/viewportHeight;if(material.useScreenCoordinates===true){_gl.uniform1i(uniforms.useScreenCoordinates,1);_gl.uniform3f(uniforms.screenPosition,(sprite.position.x*_renderer.devicePixelRatio-halfViewportWidth)/halfViewportWidth,(halfViewportHeight-sprite.position.y*_renderer.devicePixelRatio)/halfViewportHeight,Math.max(0,Math.min(1,sprite.position.z)));}else{_gl.uniform1i(uniforms.useScreenCoordinates,0);_gl.uniformMatrix4fv(uniforms.modelViewMatrix,false,sprite._modelViewMatrix.elements);}if(scene.fog&&material.fog){fogType=sceneFogType;}else{fogType=0;}if(oldFogType!==fogType){_gl.uniform1i(uniforms.fogType,fogType);oldFogType=fogType;}size=1/(material.scaleByViewport?viewportHeight:1);scale[0]*=size*sprite.scale.x;scale[1]*=size*sprite.scale.y;_gl.uniform2f(uniforms.uvScale,material.uvScale.x,material.uvScale.y);_gl.uniform2f(uniforms.uvOffset,material.uvOffset.x,material.uvOffset.y);_gl.uniform2f(uniforms.alignment,material.alignment.x,material.alignment.y);_gl.uniform1f(uniforms.opacity,material.opacity);_gl.uniform3f(uniforms.color,material.color.r,material.color.g,material.color.b);_gl.uniform1f(uniforms.rotation,sprite.rotation);_gl.uniform2fv(uniforms.scale,scale);//_renderer.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\t_renderer.setDepthTest(material.depthTest);_renderer.setDepthWrite(material.depthWrite);_renderer.setTexture(material.map,0);_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0);}}// restore gl\n\t_gl.enable(_gl.CULL_FACE);};function createProgram(shader,precision){var program=_gl.createProgram();var fragmentShader=_gl.createShader(_gl.FRAGMENT_SHADER);var vertexShader=_gl.createShader(_gl.VERTEX_SHADER);var prefix=\"precision \"+precision+\" float;\\n\";_gl.shaderSource(fragmentShader,prefix+shader.fragmentShader);_gl.shaderSource(vertexShader,prefix+shader.vertexShader);_gl.compileShader(fragmentShader);_gl.compileShader(vertexShader);if(!_gl.getShaderParameter(fragmentShader,_gl.COMPILE_STATUS)||!_gl.getShaderParameter(vertexShader,_gl.COMPILE_STATUS)){console.error(_gl.getShaderInfoLog(fragmentShader));console.error(\"could not initialize shader\");return null;}_gl.attachShader(program,fragmentShader);_gl.attachShader(program,vertexShader);_gl.linkProgram(program);if(!_gl.getProgramParameter(program,_gl.LINK_STATUS))console.error(\"Could not initialize shader\");return program;}function painterSortStable(a,b){if(a.z!==b.z){return b.z-a.z;}else{return b.id-a.id;}}};$3Dmol.Light=function(hex,intensity){$3Dmol.Object3D.call(this);this.color=new $3Dmol.Color(hex);this.position=new $3Dmol.Vector3(0,1,0);this.target=new $3Dmol.Object3D();this.intensity=intensity!==undefined?intensity:1;this.castShadow=false;this.onlyShadow=false;};$3Dmol.Light.prototype=Object.create($3Dmol.Object3D.prototype);/**\n\t * Line and Mesh material types\n\t * @constructor\n\t */$3Dmol.Material=function(){$3Dmol.EventDispatcher.call(this);this.id=$3Dmol.MaterialIdCount++;this.name='';//TODO: Which of these instance variables can I remove??\n\tthis.side=$3Dmol.FrontSide;this.opacity=1;this.transparent=false;this.depthTest=true;this.depthWrite=true;this.stencilTest=true;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.visible=true;this.needsUpdate=true;};$3Dmol.Material.prototype.setValues=function(values){if(values===undefined)return;for(var key in values){var newValue=values[key];if(newValue===undefined){console.warn('$3Dmol.Material: \\''+key+'\\' parameter is undefined.');continue;}if(key in this){var currentValue=this[key];if(currentValue instanceof $3Dmol.Color&&newValue instanceof $3Dmol.Color){currentValue.copy(newValue);}else if(currentValue instanceof $3Dmol.Color){currentValue.set(newValue);}else if(currentValue instanceof $3Dmol.Vector3&&newValue instanceof $3Dmol.Vector3){currentValue.copy(newValue);}else{this[key]=newValue;}}}};//TODO: might want to look into blending equations\n\t$3Dmol.Material.prototype.clone=function(material){if(material===undefined)material=new $3Dmol.Material();material.name=this.name;material.side=this.side;material.opacity=this.opacity;material.transparent=this.transparent;material.depthTest=this.depthTest;material.depthWrite=this.depthWrite;material.stencilTest=this.stencilTest;material.polygonOffset=this.polygonOffset;material.polygonOffsetFactor=this.polygonOffsetFactor;material.polygonOffsetUnits=this.polygonOffsetUnits;material.alphaTest=this.alphaTest;material.overdraw=this.overdraw;material.visible=this.visible;return material;};$3Dmol.Material.prototype.dispose=function(){this.dispatchEvent({type:'dispose'});};$3Dmol.MaterialIdCount=0;//Line basic material\n\t/** @constructor */$3Dmol.LineBasicMaterial=function(parameters){$3Dmol.Material.call(this);this.color=new $3Dmol.Color(0xffffff);this.linewidth=1;this.linecap='round';this.linejoin='round';this.vertexColors=false;this.fog=true;this.shaderID=\"basic\";this.setValues(parameters);};$3Dmol.LineBasicMaterial.prototype=Object.create($3Dmol.Material.prototype);$3Dmol.LineBasicMaterial.prototype.clone=function(){var material=new $3Dmol.LineBasicMaterial();$3Dmol.Material.prototype.clone.call(this,material);material.color.copy(this.color);return material;};//Mesh Lambert material\n\t/** @constructor */$3Dmol.MeshLambertMaterial=function(parameters){$3Dmol.Material.call(this);this.color=new $3Dmol.Color(0xffffff);this.ambient=new $3Dmol.Color(0xfffff);this.emissive=new $3Dmol.Color(0x000000);//TODO: Which of these instance variables do I really need?\n\tthis.wrapAround=false;this.wrapRGB=new $3Dmol.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.shading=$3Dmol.SmoothShading;this.shaderID=\"lambert\";this.vertexColors=$3Dmol.NoColors;this.skinning=false;this.setValues(parameters);};$3Dmol.MeshLambertMaterial.prototype=Object.create($3Dmol.Material.prototype);$3Dmol.MeshLambertMaterial.prototype.clone=function(material){if(typeof material===\"undefined\")material=new $3Dmol.MeshLambertMaterial();$3Dmol.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.ambient.copy(this.ambient);material.emissive.copy(this.emissive);material.wrapAround=this.wrapAround;material.wrapRGB.copy(this.wrapRGB);material.map=this.map;material.lightMap=this.lightMap;material.specularMap=this.specularMap;material.envMap=this.envMap;material.combine=this.combine;material.reflectivity=this.reflectivity;material.refractionRatio=this.refractionRatio;material.fog=this.fog;material.shading=this.shading;material.shaderID=this.shaderID;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;return material;};//Double sided Mesh Lambert material\n\t/** @constructor */$3Dmol.MeshDoubleLambertMaterial=function(parameters){$3Dmol.MeshLambertMaterial.call(this,parameters);this.shaderID=\"lambertdouble\";this.side=$3Dmol.DoubleSide;};$3Dmol.MeshDoubleLambertMaterial.prototype=Object.create($3Dmol.MeshLambertMaterial.prototype);$3Dmol.MeshDoubleLambertMaterial.prototype.clone=function(){var material=new $3Dmol.MeshDoubleLambertMaterial();$3Dmol.MeshLambertMaterial.prototype.clone.call(this,material);return material;};//Outlined Mesh Lamert material\n\t/** @constructor */$3Dmol.MeshOutlineMaterial=function(parameters){$3Dmol.Material.call(this);parameters=parameters||{};this.fog=true;this.shaderID=\"outline\";this.wireframe=false;this.outlineColor=parameters.color||new $3Dmol.Color(0.0,0.0,0.0);this.outlineWidth=parameters.width||0.1;this.outlinePushback=parameters.pushback||1.0;};$3Dmol.MeshOutlineMaterial.prototype=Object.create($3Dmol.Material.prototype);$3Dmol.MeshOutlineMaterial.prototype.clone=function(material){if(typeof material===\"undefined\")material=new $3Dmol.MeshOutlineMaterial();$3Dmol.Material.prototype.clone.call(this,material);material.fog=this.fog;material.shaderID=this.shaderID;material.wireframe=this.wireframe;return material;};//Imposter material\n\t/** @constructor */$3Dmol.ImposterMaterial=function(parameters){$3Dmol.Material.call(this);this.color=new $3Dmol.Color(0xffffff);this.ambient=new $3Dmol.Color(0xfffff);this.emissive=new $3Dmol.Color(0x000000);this.imposter=true;//TODO: Which of these instance variables do I really need?\n\tthis.wrapAround=false;this.wrapRGB=new $3Dmol.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.shading=$3Dmol.SmoothShading;this.shaderID=null;this.vertexColors=$3Dmol.NoColors;this.skinning=false;this.setValues(parameters);};$3Dmol.ImposterMaterial.prototype=Object.create($3Dmol.Material.prototype);$3Dmol.ImposterMaterial.prototype.clone=function(){var material=new $3Dmol.ImposterMaterial();$3Dmol.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.ambient.copy(this.ambient);material.emissive.copy(this.emissive);material.wrapAround=this.wrapAround;material.wrapRGB.copy(this.wrapRGB);material.map=this.map;material.lightMap=this.lightMap;material.specularMap=this.specularMap;material.envMap=this.envMap;material.combine=this.combine;material.reflectivity=this.reflectivity;material.refractionRatio=this.refractionRatio;material.fog=this.fog;material.shading=this.shading;material.shaderID=this.shaderID;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;return material;};$3Dmol.SphereImposterMaterial=function(parameters){$3Dmol.ImposterMaterial.call(this);this.shaderID=\"sphereimposter\";this.setValues(parameters);};$3Dmol.SphereImposterMaterial.prototype=Object.create($3Dmol.ImposterMaterial.prototype);$3Dmol.SphereImposterMaterial.prototype.clone=function(){var material=new $3Dmol.SphereImposterMaterial();$3Dmol.ImposterMaterial.prototype.clone.call(this,material);return material;};$3Dmol.SphereImposterOutlineMaterial=function(parameters){$3Dmol.ImposterMaterial.call(this);parameters=parameters||{};this.shaderID=\"sphereimposteroutline\";this.outlineColor=parameters.color||new $3Dmol.Color(0.0,0.0,0.0);this.outlineWidth=parameters.width||0.1;this.outlinePushback=parameters.pushback||1.0;this.setValues(parameters);};$3Dmol.SphereImposterOutlineMaterial.prototype=Object.create($3Dmol.ImposterMaterial.prototype);$3Dmol.SphereImposterOutlineMaterial.prototype.clone=function(){var material=new $3Dmol.SphereImposterOutlineMaterial();$3Dmol.ImposterMaterial.prototype.clone.call(this,material);material.outlineColor=this.outlineColor;material.outlineWidth=this.outlineWidth;material.outlinePushback=this.outlinePushback;return material;};$3Dmol.StickImposterMaterial=function(parameters){$3Dmol.ImposterMaterial.call(this);this.shaderID=\"stickimposter\";this.setValues(parameters);};$3Dmol.StickImposterMaterial.prototype=Object.create($3Dmol.ImposterMaterial.prototype);$3Dmol.StickImposterMaterial.prototype.clone=function(){var material=new $3Dmol.StickImposterOutlineMaterial();$3Dmol.ImposterMaterial.prototype.clone.call(this,material);return material;};$3Dmol.StickImposterOutlineMaterial=function(parameters){$3Dmol.ImposterMaterial.call(this);parameters=parameters||{};this.shaderID=\"stickimposteroutline\";this.outlineColor=parameters.color||new $3Dmol.Color(0.0,0.0,0.0);this.outlineWidth=parameters.width||0.1;this.outlinePushback=parameters.pushback||1.0;this.setValues(parameters);};$3Dmol.StickImposterOutlineMaterial.prototype=Object.create($3Dmol.ImposterMaterial.prototype);$3Dmol.StickImposterOutlineMaterial.prototype.clone=function(){var material=new $3Dmol.StickImposterOutlineMaterial();$3Dmol.ImposterMaterial.prototype.clone.call(this,material);material.outlineColor=this.outlineColor;material.outlineWidth=this.outlineWidth;material.outlinePushback=this.outlinePushback;return material;};$3Dmol.InstancedMaterial=function(parameters){$3Dmol.Material.call(this);this.color=new $3Dmol.Color(0xffffff);this.ambient=new $3Dmol.Color(0xfffff);this.emissive=new $3Dmol.Color(0x000000);//TODO: Which of these instance variables do I really need?\n\tthis.wrapAround=false;this.wrapRGB=new $3Dmol.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.shading=$3Dmol.SmoothShading;this.shaderID=\"instanced\";this.vertexColors=$3Dmol.NoColors;this.skinning=false;this.sphere=null;this.setValues(parameters);};$3Dmol.InstancedMaterial.prototype=Object.create($3Dmol.Material.prototype);$3Dmol.InstancedMaterial.prototype.clone=function(){var material=new $3Dmol.InstancedMaterial();$3Dmol.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.ambient.copy(this.ambient);material.emissive.copy(this.emissive);material.wrapAround=this.wrapAround;material.wrapRGB.copy(this.wrapRGB);material.map=this.map;material.lightMap=this.lightMap;material.specularMap=this.specularMap;material.envMap=this.envMap;material.combine=this.combine;material.reflectivity=this.reflectivity;material.refractionRatio=this.refractionRatio;material.fog=this.fog;material.shading=this.shading;material.shaderID=this.shaderID;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;material.sphere=this.sphere;return material;};//Sprite material\n\t/** @constructor */$3Dmol.SpriteMaterial=function(parameters){$3Dmol.Material.call(this);this.color=new $3Dmol.Color(0xffffff);this.map=new $3Dmol.Texture();this.useScreenCoordinates=true;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewPort=!this.sizeAttenuation;this.alignment=$3Dmol.SpriteAlignment.center.clone();this.fog=false;// use scene fog\n\tthis.uvOffset=new $3Dmol.Vector2(0,0);this.uvScale=new $3Dmol.Vector2(1,1);this.setValues(parameters);parameters=parameters||{};if(parameters.depthTest===undefined)this.depthTest=!this.useScreenCoordinates;if(parameters.sizeAttenuation===undefined)this.sizeAttenuation=!this.useScreenCoordinates;if(parameters.scaleByViewPort===undefined)this.scaleByViewPort=!this.sizeAttenuation;};$3Dmol.SpriteMaterial.prototype=Object.create($3Dmol.Material.prototype);$3Dmol.SpriteMaterial.prototype.clone=function(){var material=new $3Dmol.SpriteMaterial();$3Dmol.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.map=this.map;material.useScreenCoordinates=useScreenCoordinates;material.sizeAttenuation=this.sizeAttenuation;material.scaleByViewport=this.scaleByViewPort;material.alignment.copy(this.alignment);material.uvOffset.copy(this.uvOffset);return material;};//Alignment for Sprites\n\t$3Dmol.SpriteAlignment={};$3Dmol.SpriteAlignment.topLeft=new $3Dmol.Vector2(1,-1);$3Dmol.SpriteAlignment.topCenter=new $3Dmol.Vector2(0,-1);$3Dmol.SpriteAlignment.topRight=new $3Dmol.Vector2(-1,-1);$3Dmol.SpriteAlignment.centerLeft=new $3Dmol.Vector2(1,0);$3Dmol.SpriteAlignment.center=new $3Dmol.Vector2(0,0);$3Dmol.SpriteAlignment.centerRight=new $3Dmol.Vector2(-1,0);$3Dmol.SpriteAlignment.bottomLeft=new $3Dmol.Vector2(1,1);$3Dmol.SpriteAlignment.bottomCenter=new $3Dmol.Vector2(0,1);$3Dmol.SpriteAlignment.bottomRight=new $3Dmol.Vector2(-1,1);//Texture\n\t//We really only create textures from 2d rendering contexts (to display text labels)\n\t/** @constructor */$3Dmol.Texture=function(image){$3Dmol.EventDispatcher.call(this);this.id=$3Dmol.TextureIdCount++;this.name=\"\";this.image=image;this.mipmaps=[];this.mapping=new $3Dmol.UVMapping();this.wrapS=$3Dmol.ClampToEdgeWrapping;this.wrapT=$3Dmol.ClampToEdgeWrapping;this.magFilter=$3Dmol.LinearFilter;this.minFilter=$3Dmol.LinearMipMapLinearFilter;this.anisotropy=1;this.format=$3Dmol.RGBAFormat;this.type=$3Dmol.UnsignedByteType;this.offset=new $3Dmol.Vector2(0,0);this.repeat=new $3Dmol.Vector2(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.needsUpdate=false;this.onUpdate=null;};$3Dmol.Texture.prototype={constructor:$3Dmol.Texture,clone:function clone(texture){if(texture===undefined)texture=new $3Dmol.Texture();texture.image=this.image;texture.mipmaps=this.mipmaps.slice(0);texture.mapping=this.mapping;texture.wrapS=this.wrapS;texture.wrapT=this.wrapT;texture.magFilter=this.magFilter;texture.minFilter=this.minFilter;texture.anisotropy=this.anisotropy;texture.format=this.format;texture.type=this.type;texture.offset.copy(this.offset);texture.repeat.copy(this.repeat);texture.generateMipmaps=this.generateMipmaps;texture.premultiplyAlpha=this.premultiplyAlpha;texture.flipY=this.flipY;texture.unpackAlignment=this.unpackAlignment;return texture;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}};$3Dmol.TextureIdCount=0;// sides\n\t$3Dmol.FrontSide=0;$3Dmol.BackSide=1;$3Dmol.DoubleSide=2;// shading\n\t$3Dmol.NoShading=0;$3Dmol.FlatShading=1;$3Dmol.SmoothShading=2;// colors\n\t$3Dmol.NoColors=0;$3Dmol.FaceColors=1;$3Dmol.VertexColors=2;//Texture constants\n\t//TODO: Which of these do I need (since I only use textures to display label sprites) ?\n\t$3Dmol.MultiplyOperation=0;$3Dmol.MixOperation=1;$3Dmol.AddOperation=2;// mapping modes\n\t$3Dmol.UVMapping=function(){};// wrapping modes\n\t$3Dmol.ClampToEdgeWrapping=1001;//Filters\n\t$3Dmol.LinearFilter=1006;$3Dmol.LinearMipMapLinearFilter=1008;//Data types\n\t$3Dmol.UnsignedByteType=1009;//Pixel formats\n\t$3Dmol.RGBAFormat=1021;/*\n\t * $3Dmol Mesh and Line objects\n\t *///Line Object\n\t/** @constructor */$3Dmol.Line=function(geometry,material,type){$3Dmol.Object3D.call(this);this.geometry=geometry;//TODO: update material and type to webgl\n\tthis.material=material!==undefined?material:new $3Dmol.LineBasicMaterial({color:Math.random()*0xffffff});this.type=type!==undefined?type:$3Dmol.LineStrip;};$3Dmol.LineStrip=0;$3Dmol.LinePieces=1;$3Dmol.Line.prototype=Object.create($3Dmol.Object3D.prototype);$3Dmol.Line.prototype.clone=function(object){if(object===undefined)object=new $3Dmol.Line(this.geometry,this.material,this.type);$3Dmol.Object3D.prototype.clone.call(this,object);return object;};//Mesh Object\n\t/** @constructor */$3Dmol.Mesh=function(geometry,material){$3Dmol.Object3D.call(this);this.geometry=geometry;this.material=material!==undefined?material:new $3Dmol.MeshBasicMaterial({color:Math.random()*0xffffff,wireframe:true});};$3Dmol.Mesh.prototype=Object.create($3Dmol.Object3D.prototype);$3Dmol.Mesh.prototype.clone=function(object){if(object===undefined)object=new $3Dmol.Mesh(this.geometry,this.material);$3Dmol.Object3D.prototype.clone.call(this,object);return object;};//Sprite object\n\t/** @constructor */$3Dmol.Sprite=function(material){$3Dmol.Object3D.call(this);this.material=material!==undefined?material:new $3Dmol.SpriteMaterial();this.rotation3d=this.rotation;this.rotation=0;};$3Dmol.Sprite.prototype=Object.create($3Dmol.Object3D.prototype);$3Dmol.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=true;};$3Dmol.Sprite.prototype.clone=function(object){if(object===undefined)object=new $3Dmol.Sprite(this.material);$3Dmol.Object3D.prototype.clone.call(this,object);return object;};/**\n\t * Simplified webGL renderer\n\t */$3Dmol.Renderer=function(parameters){parameters=parameters||{};var _canvas=parameters.canvas!==undefined?parameters.canvas:document.createElement('canvas'),_precision=parameters.precision!==undefined?parameters.precision:'highp',_alpha=parameters.alpha!==undefined?parameters.alpha:true,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_clearColor=parameters.clearColor!==undefined?new $3Dmol.Color(parameters.clearColor):new $3Dmol.Color(0x000000),_clearAlpha=parameters.clearAlpha!==undefined?parameters.clearAlpha:0,_outlineMaterial=new $3Dmol.MeshOutlineMaterial(parameters.outline),_outlineSphereImposterMaterial=new $3Dmol.SphereImposterOutlineMaterial(parameters.outline),_outlineStickImposterMaterial=new $3Dmol.StickImposterOutlineMaterial(parameters.outline),_outlineEnabled=!!parameters.outline;this.domElement=_canvas;this.context=null;this.devicePixelRatio=parameters.devicePixelRatio!==undefined?parameters.devicePixelRatio:self.devicePixelRatio!==undefined?self.devicePixelRatio:1;// clearing\n\tthis.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;// scene graph\n\tthis.sortObjects=true;this.autoUpdateObjects=true;this.autoUpdateScene=true;this.renderPluginsPost=[];// info\n\tthis.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};// internal properties\n\tvar _this=this,_programs=[],_programs_counter=0,// internal state cache\n\t_currentProgram=null,_currentFramebuffer=null,_currentMaterialId=-1,_currentGeometryGroupHash=null,_currentCamera=null,_geometryGroupCounter=0,_usedTextureUnits=0,// GL state cache\n\t_oldDoubleSided=-1,_oldFlipSided=-1,_oldBlending=-1,_oldBlendEquation=-1,_oldBlendSrc=-1,_oldBlendDst=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_oldPolygonOffset=null,_oldPolygonOffsetFactor=null,_oldPolygonOffsetUnits=null,_oldLineWidth=null,_viewportWidth=0,_viewportHeight=0,_currentWidth=0,_currentHeight=0,_enabledAttributes={},// camera matrices cache\n\t_projScreenMatrix=new $3Dmol.Matrix4(),_vector3=new $3Dmol.Vector3(),// light arrays cache\n\t_direction=new $3Dmol.Vector3(),_lightsNeedUpdate=true,_lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};// initialize\n\tvar _gl;initGL();setDefaultGLState();this.context=_gl;var _extInstanced=_gl.getExtension(\"ANGLE_instanced_arrays\");var _extFragDepth=_gl.getExtension(\"EXT_frag_depth\");// API\n\tthis.supportedExtensions=function(){return{supportsAIA:Boolean(_extInstanced),supportsImposters:Boolean(_extFragDepth)};};this.getContext=function(){return _gl;};this.getPrecision=function(){return _precision;};this.setClearColorHex=function(hex,alpha){_clearColor.setHex(hex);_clearAlpha=alpha;_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha);};this.enableOutline=function(parameters){_outlineMaterial=new $3Dmol.MeshOutlineMaterial(parameters);_outlineSphereImposterMaterial=new $3Dmol.SphereImposterOutlineMaterial(parameters);_outlineStickImposterMaterial=new $3Dmol.StickImposterOutlineMaterial(parameters);_outlineEnabled=true;};this.disableOutline=function(){_outlineEnabled=false;};this.setSize=function(width,height){_viewportWidth=_canvas.width=width*this.devicePixelRatio;_viewportHeight=_canvas.height=height*this.devicePixelRatio;_canvas.style.width=width+'px';_canvas.style.height=height+'px';_gl.viewport(0,0,_gl.drawingBufferWidth,_gl.drawingBufferHeight);};this.clear=function(color,depth,stencil){var bits=0;if(color===undefined||color)bits|=_gl.COLOR_BUFFER_BIT;if(depth===undefined||depth)bits|=_gl.DEPTH_BUFFER_BIT;if(stencil===undefined||stencil)bits|=_gl.STENCIL_BUFFER_BIT;_gl.clear(bits);};this.clearTarget=function(color,depth,stencil){this.clear(color,depth,stencil);};this.setMaterialFaces=function(material,reflected){var doubleSided=material.side===$3Dmol.DoubleSide;var flipSided=material.side===$3Dmol.BackSide;flipSided=reflected?!flipSided:flipSided;if(_oldDoubleSided!==doubleSided){if(doubleSided){_gl.disable(_gl.CULL_FACE);}else{_gl.enable(_gl.CULL_FACE);}_oldDoubleSided=doubleSided;}if(_oldFlipSided!==flipSided){if(flipSided){_gl.frontFace(_gl.CW);}else{_gl.frontFace(_gl.CCW);}_oldFlipSided=flipSided;}};this.setDepthTest=function(depthTest){if(_oldDepthTest!==depthTest){if(depthTest){_gl.enable(_gl.DEPTH_TEST);}else{_gl.disable(_gl.DEPTH_TEST);}_oldDepthTest=depthTest;}};this.setDepthWrite=function(depthWrite){if(_oldDepthWrite!==depthWrite){_gl.depthMask(depthWrite);_oldDepthWrite=depthWrite;}};this.setBlending=function(blending){if(!blending){_gl.disable(_gl.BLEND);}else{_gl.enable(_gl.BLEND);_gl.blendEquationSeparate(_gl.FUNC_ADD,_gl.FUNC_ADD);_gl.blendFuncSeparate(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA,_gl.ONE,_gl.ONE_MINUS_SRC_ALPHA);}_oldBlending=blending;};// Plugins\n\tthis.addPostPlugin=function(plugin){plugin.init(this);this.renderPluginsPost.push(plugin);};// Sorting\n\tfunction numericalSort(a,b){return b[0]-a[0];}function enableAttribute(attribute){if(!_enabledAttributes[attribute]){_gl.enableVertexAttribArray(attribute);_enabledAttributes[attribute]=true;}}function disableAttributes(){for(var attribute in _enabledAttributes){if(_enabledAttributes[attribute]){_gl.disableVertexAttribArray(attribute);_enabledAttributes[attribute]=false;}}}function setPolygonOffset(polygonOffset,factor,units){if(_oldPolygonOffset!==polygonOffset){if(polygonOffset)_gl.enable(_gl.POLYGON_OFFSET_FILL);else _gl.disable(_gl.POLYGON_OFFSET_FILL);}}function setLineWidth(width){if(width!==_oldLineWidth){_gl.lineWidth(width);_oldLineWidth=width;}}var onGeometryDispose=function onGeometryDispose(event){var geometry=event.target;geometry.removeEventListener('dispose',onGeometryDispose);deallocateGeometry(geometry);_this.info.memory.geometries--;};var onTextureDispose=function onTextureDispose(event){var texture=event.target;texture.removeEventListener('dispose',onTextureDispose);deallocateTexture(texture);_this.info.memory.textures--;};var onMaterialDispose=function onMaterialDispose(event){var material=event.target;material.removeEventListener('dispose',onMaterialDispose);deallocateMaterial(material);};var deallocateGeometry=function deallocateGeometry(geometry){geometry.__webglInit=undefined;if(geometry.__webglVertexBuffer!==undefined)_gl.deleteBuffer(geometry.__webglVertexBuffer);if(geometry.__webglColorBuffer!==undefined)_gl.deleteBuffer(geometry.__webglColorBuffer);if(geometry.geometryGroups!==undefined){for(var g=0,gl=geometry.groups;g<gl;g++){var geometryGroup=geometry.geometryGroups[g];if(geometryGroup.__webglVertexBuffer!==undefined)_gl.deleteBuffer(geometryGroup.__webglVertexBuffer);if(geometryGroup.__webglColorBuffer!==undefined)_gl.deleteBuffer(geometryGroup.__webglColorBuffer);if(geometryGroup.__webglNormalBuffer!==undefined)_gl.deleteBuffer(geometryGroup.__webglNormalBuffer);if(geometryGroup.__webglFaceBuffer!==undefined)_gl.deleteBuffer(geometryGroup.__webglFaceBuffer);if(geometryGroup.__webglLineBuffer!==undefined)_gl.deleteBuffer(geometryGroup.__webglLineBuffer);}}};var deallocateMaterial=function deallocateMaterial(material){var program=material.program;if(program===undefined)return;material.program=undefined;// only deallocate GL program if this was the last use of shared program\n\t// assumed there is only single copy of any program in the _programs\n\t// list\n\t// (that's how it's constructed)\n\tvar i,il,programInfo;var deleteProgram=false;for(i=0,il=_programs.length;i<il;i++){programInfo=_programs[i];if(programInfo.program===program){programInfo.usedTimes--;if(programInfo.usedTimes===0){deleteProgram=true;}break;}}if(deleteProgram===true){// avoid using array.splice, this is costlier than creating new\n\t// array from scratch\n\tvar newPrograms=[];for(i=0,il=_programs.length;i<il;i++){programInfo=_programs[i];if(programInfo.program!==program){newPrograms.push(programInfo);}}_programs=newPrograms;_gl.deleteProgram(program);_this.info.memory.programs--;}};var deallocateTexture=function deallocateTexture(texture){if(texture.image&&texture.image.__webglTextureCube){// cube texture\n\t_gl.deleteTexture(texture.image.__webglTextureCube);}else{// 2D texture\n\tif(!texture.__webglInit)return;texture.__webglInit=false;_gl.deleteTexture(texture.__webglTexture);}};// Compile and return shader\n\tfunction getShader(type,str){var shader;if(type===\"fragment\")shader=_gl.createShader(_gl.FRAGMENT_SHADER);else if(type===\"vertex\")shader=_gl.createShader(_gl.VERTEX_SHADER);_gl.shaderSource(shader,str);_gl.compileShader(shader);if(!_gl.getShaderParameter(shader,_gl.COMPILE_STATUS)){console.error(_gl.getShaderInfoLog(shader));console.error(\"could not initialize shader\");return null;}return shader;}// Compile appropriate shaders (if necessary) from source code and attach to\n\t// gl program.\n\tfunction buildProgram(fragmentShader,vertexShader,uniforms,parameters){var p,pl,d,program,code;var chunks=[];chunks.push(fragmentShader);chunks.push(vertexShader);for(p in parameters){chunks.push(p);chunks.push(parameters[p]);}code=chunks.join();// check if program has already been compiled\n\tfor(p=0,pl=_programs.length;p<pl;p++){var programInfo=_programs[p];if(programInfo.code===code){programInfo.usedTimes++;return programInfo.program;}}// Set up new program and compile shaders\n\tprogram=_gl.createProgram();// set up precision\n\tvar precision=_precision;var prefix=\"precision \"+precision+\" float;\";var prefix_vertex=[prefix].join(\"\\n\");var prefix_fragment=[parameters.fragdepth?\"#extension GL_EXT_frag_depth: enable\":\"\",parameters.wireframe?\"#define WIREFRAME 1\":\"\",prefix].join(\"\\n\");var glFragmentShader=getShader(\"fragment\",prefix_fragment+fragmentShader);var glVertexShader=getShader(\"vertex\",prefix_vertex+vertexShader);_gl.attachShader(program,glVertexShader);_gl.attachShader(program,glFragmentShader);_gl.linkProgram(program);if(!_gl.getProgramParameter(program,_gl.LINK_STATUS))console.error(\"Could not initialize shader\");// gather and cache uniform variables and attributes\n\tprogram.uniforms={};program.attributes={};var identifiers,u,a,i;// uniform vars\n\tidentifiers=['viewMatrix','modelViewMatrix','projectionMatrix','normalMatrix'];// custom uniform vars\n\tfor(u in uniforms){identifiers.push(u);}for(i=0;i<identifiers.length;i++){var uniformVar=identifiers[i];program.uniforms[uniformVar]=_gl.getUniformLocation(program,uniformVar);}// attributes\n\tidentifiers=['position','normal','color','lineDistance','offset','radius'];/*\n\t         * for (a in attributes) identifiers.push(a);\n\t         */for(i=0;i<identifiers.length;i++){var attributeVar=identifiers[i];program.attributes[attributeVar]=_gl.getAttribLocation(program,attributeVar);}program.id=_programs_counter++;_programs.push({program:program,code:code,usedTimes:1});_this.info.memory.programs=_programs.length;return program;}// TODO: need to set up shader attributes and uniforms as attributes on\n\t// material object after attaching prgm\n\t// We need to attach appropriate uniform variables to material after shaders\n\t// have been chosen\n\tthis.initMaterial=function(material,lights,fog,object){material.addEventListener('dispose',onMaterialDispose);var u,a,identifiers,i,parameters,maxLightCount,maxBones,maxShadows,shaderID;shaderID=material.shaderID;if(shaderID){var shader=$3Dmol.ShaderLib[shaderID];material.vertexShader=shader.vertexShader;material.fragmentShader=shader.fragmentShader;material.uniforms=$3Dmol.ShaderUtils.clone(shader.uniforms);// TODO: set material uniforms to shader uniform variables\n\t}parameters={wireframe:material.wireframe,fragdepth:material.imposter};material.program=buildProgram(material.fragmentShader,material.vertexShader,material.uniforms,parameters);};function setProgram(camera,lights,fog,material,object){if(material.needsUpdate){if(material.program)deallocateMaterial(material);_this.initMaterial(material,lights,fog,object);material.needsUpdate=false;}var refreshMaterial=false;// p_uniforms: uniformVarName => uniformLocation\n\t// m_uniforms: uniformVarName => uniformJsVal\n\tvar program=material.program,p_uniforms=program.uniforms,m_uniforms=material.uniforms;if(program!=_currentProgram){_gl.useProgram(program);_currentProgram=program;refreshMaterial=true;}if(material.id!=_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true;}if(camera!=_currentCamera){_currentCamera=camera;refreshMaterial=true;}_gl.uniformMatrix4fv(p_uniforms.projectionMatrix,false,camera.projectionMatrix.elements);_gl.uniformMatrix4fv(p_uniforms.modelViewMatrix,false,object._modelViewMatrix.elements);_gl.uniformMatrix3fv(p_uniforms.normalMatrix,false,object._normalMatrix.elements);// Send projection matrix to uniform variable in shader\n\tif(refreshMaterial){// Load projection, model-view matrices for perspective\n\t// Set up correct fog uniform vals\n\tm_uniforms.fogColor.value=fog.color;m_uniforms.fogNear.value=fog.near;m_uniforms.fogFar.value=fog.far;// Set up lights for lambert shader\n\tif(material.shaderID.startsWith(\"lambert\")||material.shaderID===\"instanced\"||material.shaderID.endsWith(\"imposter\")){// load view and normal matrices for directional and object\n\t// lighting\n\t_gl.uniformMatrix4fv(p_uniforms.viewMatrix,false,camera.matrixWorldInverse.elements);if(_lightsNeedUpdate){setupLights(program,lights);_lightsNeedUpdate=false;}// Set up correct light uniform var vals\n\tm_uniforms.directionalLightColor.value=_lights.directional.colors;m_uniforms.directionalLightDirection.value=_lights.directional.positions;}else if(material.shaderID.endsWith(\"outline\")){m_uniforms.outlineColor.value=material.outlineColor;m_uniforms.outlineWidth.value=material.outlineWidth;m_uniforms.outlinePushback.value=material.outlinePushback;}else if(material.shaderID===\"sphereimposter\"){_gl.uniformMatrix4fv(p_uniforms.viewMatrix,false,camera.matrixWorldInverse.elements);_gl.uniformMatrix3fv(p_uniforms.normalMatrix,false,object._normalMatrix.elements);m_uniforms.directionalLightColor.value=_lights.directional.colors;m_uniforms.directionalLightDirection.value=_lights.directional.positions;}// opacity, diffuse, emissive, etc\n\tm_uniforms.opacity.value=material.opacity;// Load any other material specific uniform variables to gl shaders\n\tloadMaterialUniforms(p_uniforms,m_uniforms);}return program;}function loadMaterialUniforms(p_uniforms,m_uniforms){var uniformVar,type,uniformVal,uniformLoc;for(uniformVar in m_uniforms){if(!p_uniforms[uniformVar])continue;type=m_uniforms[uniformVar].type;uniformVal=m_uniforms[uniformVar].value;uniformLoc=p_uniforms[uniformVar];// single float\n\tif(type==='f')_gl.uniform1f(uniformLoc,uniformVal);// array of floats\n\telse if(type==='fv')_gl.uniform3fv(uniformLoc,uniformVal);// color - r,g,b floats\n\telse if(type==='c')_gl.uniform3f(uniformLoc,uniformVal.r,uniformVal.g,uniformVal.b);else if(type==='f4')_gl.uniform4f(uniformLoc,uniformVal[0],uniformVal[1],uniformVal[2],uniformVal[3]);}}this.renderBuffer=function(camera,lights,fog,material,geometryGroup,object){if(!material.visible)return;var program,attributes,linewidth,primitives,a,attribute,i,il;// Sets up proper vertex and fragment shaders and attaches them to webGL\n\t// program\n\t// Also sets appropriate uniform variables\n\tprogram=setProgram(camera,lights,fog,material,object);attributes=program.attributes;var updateBuffers=false,wireframeBit=material.wireframe?1:0,geometryGroupHash=geometryGroup.id*0xffffff+program.id*2+wireframeBit;if(geometryGroupHash!==_currentGeometryGroupHash){_currentGeometryGroupHash=geometryGroupHash;updateBuffers=true;}// rebind shader attributes to appropriate (and already initialized) gl\n\t// buffers\n\tif(updateBuffers){disableAttributes();// Vertices\n\tif(attributes.position>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer);enableAttribute(attributes.position);_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,false,0,0);}// Colors\n\tif(attributes.color>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglColorBuffer);enableAttribute(attributes.color);_gl.vertexAttribPointer(attributes.color,3,_gl.FLOAT,false,0,0);}// Normals\n\tif(attributes.normal>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer);enableAttribute(attributes.normal);_gl.vertexAttribPointer(attributes.normal,3,_gl.FLOAT,false,0,0);}// Offsets (Instanced only)\n\tif(attributes.offset>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglOffsetBuffer);enableAttribute(attributes.offset);_gl.vertexAttribPointer(attributes.offset,3,_gl.FLOAT,false,0,0);}// Radii (Instanced only)\n\tif(attributes.radius>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglRadiusBuffer);enableAttribute(attributes.radius);_gl.vertexAttribPointer(attributes.radius,1,_gl.FLOAT,false,0,0);}}// Render\n\tvar faceCount,lineCount;// lambert shaders - draw triangles\n\t// TODO: make sure geometryGroup's face count is setup correctly\n\tif(object instanceof $3Dmol.Mesh){if(material.shaderID===\"instanced\"){var sphereGeometryGroup=material.sphere.geometryGroups[0];if(updateBuffers){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,sphereGeometryGroup.vertexArray,_gl.STATIC_DRAW);_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,sphereGeometryGroup.normalArray,_gl.STATIC_DRAW);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,sphereGeometryGroup.faceArray,_gl.STATIC_DRAW);}faceCount=sphereGeometryGroup.faceidx;_extInstanced.vertexAttribDivisorANGLE(attributes.offset,1);_extInstanced.vertexAttribDivisorANGLE(attributes.radius,1);_extInstanced.vertexAttribDivisorANGLE(attributes.color,1);_extInstanced.drawElementsInstancedANGLE(_gl.TRIANGLES,faceCount,_gl.UNSIGNED_SHORT,0,geometryGroup.radiusArray.length);_extInstanced.vertexAttribDivisorANGLE(attributes.offset,0);_extInstanced.vertexAttribDivisorANGLE(attributes.radius,0);_extInstanced.vertexAttribDivisorANGLE(attributes.color,0);}else if(material.wireframe){lineCount=geometryGroup.lineidx;setLineWidth(material.wireframeLinewidth);if(updateBuffers)_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglLineBuffer);_gl.drawElements(_gl.LINES,lineCount,_gl.UNSIGNED_SHORT,0);}else{faceCount=geometryGroup.faceidx;if(updateBuffers)_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer);_gl.drawElements(_gl.TRIANGLES,faceCount,_gl.UNSIGNED_SHORT,0);}_this.info.render.calls++;_this.info.render.vertices+=faceCount;_this.info.render.faces+=faceCount/3;}// basic shaders - draw lines\n\telse if(object instanceof $3Dmol.Line){lineCount=geometryGroup.vertices;setLineWidth(material.linewidth);_gl.drawArrays(_gl.LINES,0,lineCount);_this.info.render.calls++;}};// rendering\n\tfunction renderObjects(renderList,reverse,materialType,camera,lights,fog,useBlending,overrideMaterial){var webglObject,object,buffer,material,start,end,delta;// Forward or backward render\n\tif(reverse){start=renderList.length-1;end=-1;delta=-1;}else{start=0;end=renderList.length;delta=1;}for(var i=start;i!==end;i+=delta){webglObject=renderList[i];if(webglObject.render){object=webglObject.object;buffer=webglObject.buffer;material=webglObject[materialType];if(!material)continue;if(useBlending)_this.setBlending(true);_this.setDepthTest(material.depthTest);_this.setDepthWrite(material.depthWrite);setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);var reflected=object._modelViewMatrix.isReflected();_this.setMaterialFaces(material,reflected);_this.renderBuffer(camera,lights,fog,material,buffer,object);if(_outlineEnabled||material.outline){if(material.shaderID=='sphereimposter'){_this.renderBuffer(camera,lights,fog,_outlineSphereImposterMaterial,buffer,object);}else if(material.shaderID=='stickimposter'){_this.renderBuffer(camera,lights,fog,_outlineStickImposterMaterial,buffer,object);}else if(!material.wireframe&&material.shaderID!=='basic'&&material.opacity!==0.0){_this.renderBuffer(camera,lights,fog,_outlineMaterial,buffer,object);}}}}}this.render=function(scene,camera,forceClear){if(camera instanceof $3Dmol.Camera===false){console.error('$3Dmol.Renderer.render: camera is not an instance of $3Dmol.Camera.');return;}var i,il,webglObject,object,renderList,lights=scene.__lights,fog=scene.fog;// reset caching for this frame\n\t_currentMaterialId=-1;_lightsNeedUpdate=true;// update scene graph\n\tif(this.autoUpdateScene)scene.updateMatrixWorld();// update camera matrices\n\t// Pretty sure camera's parent is always going to be undefined for our\n\t// purposes...\n\tif(camera.parent===undefined)camera.updateMatrixWorld();camera.matrixWorldInverse.getInverse(camera.matrixWorld);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);// update WebGL objects\n\tif(this.autoUpdateObjects)this.initWebGLObjects(scene);_this.info.render.calls=0;_this.info.render.vertices=0;_this.info.render.faces=0;_this.info.render.points=0;_currentWidth=_viewportWidth;_currentHeight=_viewportHeight;if(this.autoClear||forceClear){this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);}// set matrices for regular objects (frustum culled)\n\trenderList=scene.__webglObjects;for(i=0,il=renderList.length;i<il;i++){webglObject=renderList[i];object=webglObject.object;webglObject.render=false;if(object.visible){setupMatrices(object,camera);unrollBufferMaterial(webglObject);webglObject.render=true;}}// set matrices for immediate objects\n\tvar material=null;// opaque pass (front-to-back order)\n\tthis.setBlending(false);renderObjects(scene.__webglObjects,true,\"opaque\",camera,lights,fog,false,material);// prime depth buffer\n\trenderObjects(scene.__webglObjects,true,\"blank\",camera,lights,fog,true,material);// transparent pass (back-to-front order)\n\trenderObjects(scene.__webglObjects,false,\"transparent\",camera,lights,fog,true,material);// Render plugins (e.g. sprites), and reset state\n\trenderPlugins(this.renderPluginsPost,scene,camera);// Ensure depth buffer writing is enabled so it can be cleared on next\n\t// render\n\tthis.setDepthTest(true);this.setDepthWrite(true);// _gl.finish();\n\t};function renderPlugins(plugins,scene,camera){// Reset state once regardless\n\t// This should also fix cartoon render bug (after transparent surface\n\t// render)\n\t_currentGeometryGroupHash=-1;_currentProgram=null;_currentCamera=null;_oldBlending=-1;_oldDepthWrite=-1;_oldDepthTest=-1;_oldDoubleSided=-1;_currentMaterialId=-1;_oldFlipSided=-1;if(!plugins.length)return;for(var i=0,il=plugins.length;i<il;i++){_lightsNeedUpdate=true;plugins[i].render(scene,camera,_currentWidth,_currentHeight);// Reset state after plugin render\n\t_currentGeometryGroupHash=-1;_currentProgram=null;_currentCamera=null;_oldBlending=-1;_oldDepthWrite=-1;_oldDepthTest=-1;_oldDoubleSided=-1;_currentMaterialId=-1;_oldFlipSided=-1;}}this.initWebGLObjects=function(scene){if(!scene.__webglObjects){scene.__webglObjects=[];scene.__webglObjectsImmediate=[];scene.__webglSprites=[];scene.__webglFlares=[];}// Add objects; this sets up buffers for each geometryGroup\n\tif(scene.__objectsAdded.length){while(scene.__objectsAdded.length){addObject(scene.__objectsAdded[0],scene);scene.__objectsAdded.splice(0,1);}// Force buffer update during render\n\t// Hackish fix for initial cartoon-render-then-transparent-surface\n\t// bug\n\t_currentGeometryGroupHash=-1;}while(scene.__objectsRemoved.length){removeObject(scene.__objectsRemoved[0],scene);scene.__objectsRemoved.splice(0,1);}// update must be called after objects adding / removal\n\t// This sends typed arrays to GL buffers for each geometryGroup\n\tfor(var o=0,ol=scene.__webglObjects.length;o<ol;o++){updateObject(scene.__webglObjects[o].object);}};// Objects adding\n\tfunction addObject(object,scene){var g,gl,geometry,material,geometryGroup;if(!object.__webglInit){object.__webglInit=true;object._modelViewMatrix=new $3Dmol.Matrix4();object._normalMatrix=new $3Dmol.Matrix3();if(object.geometry!==undefined&&object.geometry.__webglInit===undefined){object.geometry.__webglInit=true;object.geometry.addEventListener('dispose',onGeometryDispose);}if(object instanceof $3Dmol.Mesh||object instanceof $3Dmol.Line){geometry=object.geometry;material=object.material;for(g=0,gl=geometry.geometryGroups.length;g<gl;g++){geometryGroup=geometry.geometryGroups[g];geometryGroup.id=_geometryGroupCounter++;// initialise VBO on the first access\n\tif(!geometryGroup.__webglVertexBuffer){if(object instanceof $3Dmol.Mesh){createMeshBuffers(geometryGroup);geometry.elementsNeedUpdate=true;geometry.normalsNeedUpdate=true;}else if(object instanceof $3Dmol.Line)createLineBuffers(geometryGroup);geometry.verticesNeedUpdate=true;geometry.colorsNeedUpdate=true;}}}}if(!object.__webglActive){if(object instanceof $3Dmol.Mesh||object instanceof $3Dmol.Line){geometry=object.geometry;for(g=0,gl=geometry.geometryGroups.length;g<gl;g++){geometryGroup=geometry.geometryGroups[g];addBuffer(scene.__webglObjects,geometryGroup,object);}}// Sprite\n\telse if(object instanceof $3Dmol.Sprite)scene.__webglSprites.push(object);object.__webglActive=true;}}function updateObject(object){var geometry=object.geometry,material=object.material,geometryGroup,customAttributesDirty;if(object instanceof $3Dmol.Mesh||object instanceof $3Dmol.Line){for(var g=0,gl=geometry.geometryGroups.length;g<gl;g++){geometryGroup=geometry.geometryGroups[g];if(geometry.verticesNeedUpdate||geometry.elementsNeedUpdate||geometry.colorsNeedUpdate||geometry.normalsNeedUpdate){setBuffers(geometryGroup,_gl.STATIC_DRAW);}}geometry.verticesNeedUpdate=false;geometry.elementsNeedUpdate=false;geometry.normalsNeedUpdate=false;geometry.colorsNeedUpdate=false;geometry.buffersNeedUpdate=false;}}function removeObject(object,scene){if(object instanceof $3Dmol.Mesh||object instanceof $3Dmol.Line)removeInstances(scene.__webglObjects,object);else if(object instanceof $3Dmol.Sprite)removeInstancesDirect(scene.__webglSprites,object);object.__webglActive=false;}function removeInstances(objList,object){for(var o=objList.length-1;o>=0;--o){if(objList[o].object===object)objList.splice(o,1);}}function removeInstancesDirect(objList,object){for(var o=objList.length-1;o>=0;--o){if(objList[o]===object)objList.splice(o,1);}}function unrollBufferMaterial(globject){var object=globject.object;var material=object.material;if(material.transparent){globject.opaque=null;globject.transparent=material;if(!material.wireframe){var blankMaterial=material.clone();blankMaterial.opacity=0.0;globject.blank=blankMaterial;}}else{globject.opaque=material;globject.transparent=null;}}function setBuffers(geometryGroup,hint,line){var vertexArray=geometryGroup.vertexArray;var colorArray=geometryGroup.colorArray;// offset buffers\n\tif(geometryGroup.__webglOffsetBuffer!==undefined){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglOffsetBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint);}else{//normal, non-instanced case\n\t_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint);}// color buffers\n\t_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglColorBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint);// normal buffers\n\tif(geometryGroup.normalArray&&geometryGroup.__webglNormalBuffer!==undefined){var normalArray=geometryGroup.normalArray;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,normalArray,hint);}// radius buffers\n\tif(geometryGroup.radiusArray&&geometryGroup.__webglRadiusBuffer!==undefined){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglRadiusBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,geometryGroup.radiusArray,hint);}// face (index) buffers\n\tif(geometryGroup.faceArray&&geometryGroup.__webglFaceBuffer!==undefined){var faceArray=geometryGroup.faceArray;_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,faceArray,hint);}// line (index) buffers (for wireframe)\n\tif(geometryGroup.lineArray&&geometryGroup.__webglLineBuffer!==undefined){var lineArray=geometryGroup.lineArray;_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglLineBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,lineArray,hint);}}// Creates appropriate gl buffers for geometry chunk\n\t// TODO: do we need line buffer for mesh objects?\n\t// Also, can we integrate this with createLineBuffers?\n\tfunction createMeshBuffers(geometryGroup){if(geometryGroup.radiusArray){geometryGroup.__webglRadiusBuffer=_gl.createBuffer();}if(geometryGroup.useOffset){geometryGroup.__webglOffsetBuffer=_gl.createBuffer();}geometryGroup.__webglVertexBuffer=_gl.createBuffer();geometryGroup.__webglNormalBuffer=_gl.createBuffer();geometryGroup.__webglColorBuffer=_gl.createBuffer();geometryGroup.__webglFaceBuffer=_gl.createBuffer();geometryGroup.__webglLineBuffer=_gl.createBuffer();_this.info.memory.geometries++;}function createLineBuffers(geometry){geometry.__webglVertexBuffer=_gl.createBuffer();geometry.__webglColorBuffer=_gl.createBuffer();_this.info.memory.geometries++;}function addBuffer(objlist,buffer,object){objlist.push({buffer:buffer,object:object,opaque:null,transparent:null});}function setupMatrices(object,camera){object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object._normalMatrix.getInverse(object._modelViewMatrix);object._normalMatrix.transpose();}function isPowerOfTwo(value){return(value&value-1)===0;}// Fallback filters for non-power-of-2 textures\n\tfunction filterFallback(f){return _gl.LINEAR;}function setTextureParameters(textureType,texture,isImagePowerOfTwo){if(isImagePowerOfTwo){_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,paramToGL(texture.wrapS));_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,paramToGL(texture.wrapT));_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,paramToGL(texture.magFilter));_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,paramToGL(texture.minFilter));}else{_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE);_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE);_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,filterFallback(texture.magFilter));_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,filterFallback(texture.minFilter));}}this.setTexture=function(texture,slot){if(texture.needsUpdate){if(!texture.__webglInit){texture.__webglInit=true;texture.addEventListener('dispose',onTextureDispose);texture.__webglTexture=_gl.createTexture();_this.info.memory.textures++;}_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_2D,texture.__webglTexture);_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultiplyAlpha);_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,texture.unpackAlignment);var image=texture.image,isImagePowerOfTwo=isPowerOfTwo(image.width)&&isPowerOfTwo(image.height),glFormat=paramToGL(texture.format),glType=paramToGL(texture.type);setTextureParameters(_gl.TEXTURE_2D,texture,isImagePowerOfTwo);var mipmap,mipmaps=texture.mipmaps;// regular Texture (image, video, canvas)\n\t// use manually created mipmaps if available\n\t// if there are no manual mipmaps\n\t// set 0 level mipmap and then use GL to generate other mipmap\n\t// levels\n\tif(mipmaps.length>0&&isImagePowerOfTwo){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,glFormat,glType,mipmap);}texture.generateMipmaps=false;}else _gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,glFormat,glType,texture.image);if(texture.generateMipmaps&&isImagePowerOfTwo)_gl.generateMipmap(_gl.TEXTURE_2D);texture.needsUpdate=false;if(texture.onUpdate)texture.onUpdate();}else{_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_2D,texture.__webglTexture);}};// Map constants to WebGL constants\n\tfunction paramToGL(p){if(p===$3Dmol.UnsignedByteType)return _gl.UNSIGNED_BYTE;if(p===$3Dmol.RGBAFormat)return _gl.RGBA;return 0;}function setupLights(program,lights){var l,ll,light,n,r=0,g=0,b=0,color,position,intensity,distance,zlights=_lights,dirColors=zlights.directional.colors,dirPositions=zlights.directional.positions,dirCount=0,dirLength=0,dirOffset=0;for(l=0,ll=lights.length;l<ll;l++){light=lights[l];color=light.color;intensity=light.intensity;distance=light.distance;if(light instanceof $3Dmol.Light){dirCount++;_direction.getPositionFromMatrix(light.matrixWorld);_vector3.getPositionFromMatrix(light.target.matrixWorld);_direction.sub(_vector3);_direction.normalize();if(_direction.x===0&&_direction.y===0&&_direction.z===0)continue;dirPositions[dirOffset]=_direction.x;dirPositions[dirOffset+1]=_direction.y;dirPositions[dirOffset+2]=_direction.z;dirColors[dirOffset]=color.r*intensity;dirColors[dirOffset+1]=color.g*intensity;dirColors[dirOffset+2]=color.b*intensity;dirOffset+=3;dirLength++;}}zlights.ambient[0]=r;zlights.ambient[1]=g;zlights.ambient[2]=b;zlights.directional.length=dirLength;}function initGL(){try{if(!(_gl=_canvas.getContext('experimental-webgl',{alpha:_alpha,premultipliedAlpha:_premultipliedAlpha,antialias:_antialias,stencil:_stencil,preserveDrawingBuffer:_preserveDrawingBuffer}))){if(!(_gl=_canvas.getContext('webgl',{alpha:_alpha,premultipliedAlpha:_premultipliedAlpha,antialias:_antialias,stencil:_stencil,preserveDrawingBuffer:_preserveDrawingBuffer}))){throw'Error creating WebGL context.';}}}catch(error){console.error(error);}}function setDefaultGLState(){_gl.clearColor(0,0,0,1);_gl.clearDepth(1);_gl.clearStencil(0);_gl.enable(_gl.DEPTH_TEST);_gl.depthFunc(_gl.LEQUAL);_gl.frontFace(_gl.CCW);_gl.cullFace(_gl.BACK);_gl.enable(_gl.CULL_FACE);_gl.enable(_gl.BLEND);_gl.blendEquation(_gl.FUNC_ADD);_gl.blendFunc(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA);_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha);}this.addPostPlugin(new $3Dmol.SpritePlugin());};/*\n\t * Scene class\n\t *//** @constructor */$3Dmol.Scene=function(){$3Dmol.Object3D.call(this);this.fog=null;//May not need...\n\tthis.overrideMaterial=null;this.matrixAutoUpdate=false;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[];};$3Dmol.Scene.prototype=Object.create($3Dmol.Object3D.prototype);$3Dmol.Scene.prototype.__addObject=function(object){//Directional Lighting\n\tif(object instanceof $3Dmol.Light){if(this.__lights.indexOf(object)===-1)this.__lights.push(object);//TODO: Do I need this??\n\tif(object.target&&object.target.parent===undefined)this.add(object.target);}//Rotation group\n\telse{if(this.__objects.indexOf(object)===-1){this.__objects.push(object);this.__objectsAdded.push(object);//Check if previously removed\n\tvar idx=this.__objectsRemoved.indexOf(object);if(idx!==-1)this.__objectsRemoved.splice(i,1);}}//Add object's children\n\tfor(var i=0;i<object.children.length;i++){this.__addObject(object.children[i]);}};$3Dmol.Scene.prototype.__removeObject=function(object){var idx;if(object instanceof $3Dmol.Light){idx=this.__lights.indexOf(object);if(idx!==-1)this.__lights.splice(idx,1);}//Object3D\n\telse{idx=this.__objects.indexOf(object);if(idx!==-1){this.__objects.splice(idx,1);this.__objectsRemoved.push(object);//Check if previously added\n\tvar ai=this.__objectsAdded.indexOf(object);if(ai!==-1)this.__objectsAdded.splice(idx,1);}}//Remove object's children\n\tfor(var i=0;i<object.children.length;i++){this.__removeObject(object.children[i]);}};/*\n\t * Fog Class\n\t *//** @constructor */$3Dmol.Fog=function(hex,near,far){this.name='';this.color=new $3Dmol.Color(hex);this.near=near!==undefined?near:1;this.far=far!==undefined?far:1000;};$3Dmol.Fog.prototype.clone=function(){return new $3Dmol.Fog(this.color.getHex(),this.near,this.far);};$3Dmol.ShaderUtils={clone:function clone(uniforms_src){var u,p,parameter,parameter_src,uniforms_clone={};for(u in uniforms_src){uniforms_clone[u]={};uniforms_clone[u].type=uniforms_src[u].type;var srcValue=uniforms_src[u].value;if(srcValue instanceof $3Dmol.Color)uniforms_clone[u].value=srcValue.clone();else if(typeof srcValue===\"number\")uniforms_clone[u].value=srcValue;else if(srcValue instanceof Array)uniforms_clone[u].value=[];else console.error(\"Error copying shader uniforms from ShaderLib: unknown type for uniform\");}return uniforms_clone;},//fragment shader reused by outline shader\n\tstickimposterFragmentShader:[\"uniform float opacity;\",\"uniform mat4 projectionMatrix;\",\"uniform vec3 fogColor;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"varying vec3 vLight;\",\"varying vec3 vColor;\",\"varying vec3 cposition;\",\"varying vec3 p1;\",\"varying vec3 p2;\",\"varying float r;\",//cylinder-ray intersection testing taken from http://mrl.nyu.edu/~dzorin/cg05/lecture12.pdf\n\t//also useful: http://stackoverflow.com/questions/9595300/cylinder-impostor-in-glsl\n\t//with a bit more care (caps) this could be a general cylinder imposter (see also outline)\n\t\"void main() {\",\"    vec3 color = abs(vColor);\",\"    vec3 pos = cposition;\",\"    vec3 p = pos;\",//ray point\n\t\"    vec3 v = normalize(pos);\",//ray normal\n\t\"    vec3 pa = p1;\",//cyl start\n\t\"    vec3 va = normalize(p2-p1);\",//cyl norm\n\t\"    vec3 tmp1 = v-(dot(v,va)*va);\",\"    vec3 deltap = p-pa;\",\"    float A = dot(tmp1,tmp1);\",\"    if(A == 0.0) discard;\",\"    vec3 tmp2 = deltap-(dot(deltap,va)*va);\",\"    float B = 2.0*dot(tmp1, tmp2);\",\"    float C = dot(tmp2,tmp2)-r*r;\",//quadratic equation!\n\t\"    float det = (B*B) - (4.0*A*C);\",\"    if(det < 0.0) discard;\",\"    float sqrtDet = sqrt(det);\",\"    float posT = (-B+sqrtDet)/(2.0*A);\",\"    float negT = (-B-sqrtDet)/(2.0*A);\",\"    float intersectionT = min(posT,negT);\",\"    vec3 qi = p+v*intersectionT;\",\"    float dotp1 = dot(va,qi-p1);\",\"    float dotp2 = dot(va,qi-p2);\",\"    vec3 norm;\",\"    if( dotp1 < 0.0 || dotp2 > 0.0) {\",//(p-c)^2 + 2(p-c)vt +v^2+t^2 - r^2 = 0\n\t\"       vec3 cp;\",\"       if( dotp1 < 0.0) {\"+//\"        if(vColor.x < 0.0 ) discard;\", //color sign bit indicates if we should cap or not\n\t\"        cp = p1;\",\"       } else {\",//\"          if(vColor.y < 0.0 ) discard;\",\n\t\"          cp = p2;\",\"       }\",\"       vec3 diff = p-cp;\",\"       A = dot(v,v);\",\"       B = dot(diff,v)*2.0;\",\"       C = dot(diff,diff)-r*r;\",\"       det = (B*B) - (4.0*C);\",\"       if(det < 0.0) discard;\",\"       sqrtDet = sqrt(det);\",\"       posT = (-B+sqrtDet)/(2.0);\",\"       negT = (-B-sqrtDet)/(2.0);\",\"       float t = min(posT,negT);\",\"       qi = p+v*t;\",\"       norm = normalize(qi-cp);\",\"    } else {\",\"       norm = normalize(qi-(dotp1*va + p1));\",\"    }\",\"    vec4 clipPos = projectionMatrix * vec4(qi, 1.0);\",\"    float ndcDepth = clipPos.z / clipPos.w;\",\"    float depth = ((gl_DepthRange.diff * ndcDepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\",\"    gl_FragDepthEXT = depth;\"].join(\"\\n\")};$3Dmol.ShaderLib={'basic':{fragmentShader:[\"uniform mat4 viewMatrix;\",\"uniform float opacity;\",\"uniform vec3 fogColor;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"varying vec3 vColor;\",\"void main() {\",\"    gl_FragColor = vec4( vColor, opacity );\",\"    float depth = gl_FragCoord.z / gl_FragCoord.w;\",\"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\"}\"].join(\"\\n\"),vertexShader:[\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"attribute vec3 position;\",\"attribute vec3 color;\",\"varying vec3 vColor;\",\"void main() {\",\"    vColor = color;\",\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"    gl_Position = projectionMatrix * mvPosition;\",\"}\"].join(\"\\n\"),uniforms:{opacity:{type:'f',value:1.0},fogColor:{type:'c',value:new $3Dmol.Color(1.0,1.0,1.0)},fogNear:{type:'f',value:1.0},fogFar:{type:'f',value:2000}}},'sphereimposter':{fragmentShader:[\"uniform mat4 viewMatrix;\",\"uniform float opacity;\",\"uniform mat4 projectionMatrix;\",\"uniform vec3 fogColor;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"uniform float uDepth;\",\"uniform vec3 directionalLightColor[ 1 ];\",\"varying vec3 vColor;\",\"varying vec2 mapping;\",\"varying float rval;\",\"varying vec3 vLight;\",\"varying vec3 center;\",\"void main() {\",\"    float lensqr = dot(mapping,mapping);\",\"    float rsqr = rval*rval;\",\"    if(lensqr > rsqr)\",\"       discard;\",\"    float z = sqrt(rsqr-lensqr);\",\"    vec3 cameraPos = center+ vec3(mapping.x,mapping.y,z);\",\"    vec4 clipPos = projectionMatrix * vec4(cameraPos, 1.0);\",\"    float ndcDepth = clipPos.z / clipPos.w;\",\"    gl_FragDepthEXT = ((gl_DepthRange.diff * ndcDepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\",\"    vec3 norm = normalize(vec3(mapping.x,mapping.y,z));\",\"    float dotProduct = dot( norm, vLight );\",\"    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\"    vec3 vLight = directionalLightColor[ 0 ] * directionalLightWeighting;\",\"    gl_FragColor = vec4(vLight*vColor, opacity*opacity );\",\"    float fogFactor = smoothstep( fogNear, fogFar, gl_FragDepthEXT/gl_FragCoord.w );\",\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\"}\"].join(\"\\n\"),vertexShader:[\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 directionalLightColor[ 1 ];\",\"uniform vec3 directionalLightDirection[ 1 ];\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec3 color;\",\"varying vec2 mapping;\",\"varying vec3 vColor;\",\"varying float rval;\",\"varying vec3 vLight;\",\"varying vec3 center;\",\"void main() {\",\"    vColor = color;\",\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"    center = mvPosition.xyz;\",\"    vec4 projPosition = projectionMatrix * mvPosition;\",\"    vec4 adjust = projectionMatrix* vec4(normal,0.0); adjust.z = 0.0; adjust.w = 0.0;\",\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\"    vLight = normalize( lDirection.xyz );\",\"    mapping = normal.xy;\",\"    rval = abs(normal.x);\",\"    gl_Position = projPosition+adjust;\",\"}\"].join(\"\\n\"),uniforms:{opacity:{type:'f',value:1.0},fogColor:{type:'c',value:new $3Dmol.Color(1.0,1.0,1.0)},fogNear:{type:'f',value:1.0},fogFar:{type:'f',value:2000},directionalLightColor:{type:'fv',value:[]},directionalLightDirection:{type:'fv',value:[]}}},'lambert':{fragmentShader:[\"uniform mat4 viewMatrix;\",\"uniform float opacity;\",\"uniform vec3 fogColor;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"varying vec3 vLightFront;\",\"varying vec3 vColor;\",\"void main() {\",\"    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\"    #ifndef WIREFRAME\",\"    gl_FragColor.xyz *= vLightFront;\",\"    #endif\",\"    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\",\"    float depth = gl_FragCoord.z / gl_FragCoord.w;\",\"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\"}\"].join(\"\\n\"),vertexShader:[\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 directionalLightColor[ 1 ];\",\"uniform vec3 directionalLightDirection[ 1 ];\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec3 color;\",\"varying vec3 vColor;\",\"varying vec3 vLightFront;\",\"void main() {\",\"    vColor = color;\",\"    vec3 objectNormal = normal;\",\"    vec3 transformedNormal = normalMatrix * objectNormal;\",\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"    vLightFront = vec3( 0.0 );\",\"    transformedNormal = normalize( transformedNormal );\",\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\"    vec3 dirVector = normalize( lDirection.xyz );\",\"    float dotProduct = dot( transformedNormal, dirVector );\",\"    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\"    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\",\"    gl_Position = projectionMatrix * mvPosition;\",\"}\"].join(\"\\n\"),uniforms:{opacity:{type:'f',value:1.0},fogColor:{type:'c',value:new $3Dmol.Color(1.0,1.0,1.0)},fogNear:{type:'f',value:1.0},fogFar:{type:'f',value:2000},directionalLightColor:{type:'fv',value:[]},directionalLightDirection:{type:'fv',value:[]}}},'instanced':{fragmentShader:[\"uniform mat4 viewMatrix;\",\"uniform float opacity;\",\"uniform vec3 fogColor;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"varying vec3 vLightFront;\",\"varying vec3 vColor;\",\"void main() {\",\"    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\"    #ifndef WIREFRAME\",\"    gl_FragColor.xyz *= vLightFront;\",\"    #endif\",\"    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\",\"    float depth = gl_FragCoord.z / gl_FragCoord.w;\",\"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\"}\"].join(\"\\n\"),vertexShader:[\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 directionalLightColor[ 1 ];\",\"uniform vec3 directionalLightDirection[ 1 ];\",\"attribute vec3 offset;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec3 color;\",\"attribute float radius;\",\"varying vec3 vColor;\",\"varying vec3 vLightFront;\",\"void main() {\",\"    vColor = color;\",\"    vec3 objectNormal = normal;\",\"    vec3 transformedNormal = normalMatrix * objectNormal;\",\"    vec4 mvPosition = modelViewMatrix * vec4( position * radius + offset, 1.0 );\",\"    vLightFront = vec3( 0.0 );\",\"    transformedNormal = normalize( transformedNormal );\",\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\"    vec3 dirVector = normalize( lDirection.xyz );\",\"    float dotProduct = dot( transformedNormal, dirVector );\",\"    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\"    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\",\"    gl_Position = projectionMatrix * mvPosition;\",\"}\"].join(\"\\n\"),uniforms:{opacity:{type:'f',value:1.0},fogColor:{type:'c',value:new $3Dmol.Color(1.0,1.0,1.0)},fogNear:{type:'f',value:1.0},fogFar:{type:'f',value:2000},directionalLightColor:{type:'fv',value:[]},directionalLightDirection:{type:'fv',value:[]}}},//for outline\n\t'outline':{fragmentShader:[\"uniform float opacity;\",\"uniform vec3 outlineColor;\",\"uniform vec3 fogColor;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"void main() {\",\"    gl_FragColor = vec4( outlineColor, 1 );\",\"}\"].join(\"\\n\"),vertexShader:[\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform float outlineWidth;\",\"uniform float outlinePushback;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec3 color;\",\"void main() {\",\"    vec4 norm = modelViewMatrix*vec4(normalize(normal),0.0);\",\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"    mvPosition.xy += norm.xy*outlineWidth;\",\"    gl_Position = projectionMatrix * mvPosition;\",\"    mvPosition.z -= outlinePushback;\",//go backwards in model space\n\t\"    vec4 pushpos = projectionMatrix*mvPosition;\",//project to get z in projection space, I'm probably missing some simple math to do the same thing..\n\t\"    gl_Position.z = gl_Position.w*pushpos.z/pushpos.w;\",\"}\"].join(\"\\n\"),uniforms:{opacity:{type:'f',value:1.0},outlineColor:{type:'c',value:new $3Dmol.Color(0.0,0.0,0.0)},fogColor:{type:'c',value:new $3Dmol.Color(1.0,1.0,1.0)},fogNear:{type:'f',value:1.0},fogFar:{type:'f',value:2000},outlineWidth:{type:'f',value:0.1},outlinePushback:{type:'f',value:1.0}}},//for outlining sphere imposter\n\t'sphereimposteroutline':{fragmentShader:[\"uniform float opacity;\",\"uniform vec3 outlineColor;\",\"uniform vec3 fogColor;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"uniform mat4 projectionMatrix;\",\"varying vec2 mapping;\",\"varying float rval;\",\"varying vec3 center;\",\"uniform float outlinePushback;\",\"void main() {\",\"    float lensqr = dot(mapping,mapping);\",\"    float rsqr = rval*rval;\",\"    if(lensqr > rsqr)\",\"       discard;\",\"    float z = sqrt(rsqr-lensqr);\",\"    vec3 cameraPos = center+ vec3(mapping.x,mapping.y,z-outlinePushback);\",\"    vec4 clipPos = projectionMatrix * vec4(cameraPos, 1.0);\",\"    float ndcDepth = clipPos.z / clipPos.w;\",\"    gl_FragDepthEXT = ((gl_DepthRange.diff * ndcDepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\",\"    gl_FragColor = vec4(outlineColor, 1 );\",\"}\"].join(\"\\n\"),vertexShader:[\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform float outlineWidth;\",\"uniform float outlinePushback;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec3 color;\",\"varying vec2 mapping;\",\"varying float rval;\",\"varying vec3 center;\",\"void main() {\",\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"    center = mvPosition.xyz;\",\"    vec4 projPosition = projectionMatrix * mvPosition;\",\"    vec2 norm = normal.xy + vec2(sign(normal.x)*outlineWidth,sign(normal.y)*outlineWidth);\",\"    vec4 adjust = projectionMatrix* vec4(norm,normal.z,0.0); adjust.z = 0.0; adjust.w = 0.0;\",\"    mapping = norm.xy;\",\"    rval = abs(norm.x);\",\"    gl_Position = projPosition+adjust;\",\"}\"].join(\"\\n\"),uniforms:{opacity:{type:'f',value:1.0},outlineColor:{type:'c',value:new $3Dmol.Color(0.0,0.0,0.0)},fogColor:{type:'c',value:new $3Dmol.Color(1.0,1.0,1.0)},fogNear:{type:'f',value:1.0},fogFar:{type:'f',value:2000},outlineWidth:{type:'f',value:0.1},outlinePushback:{type:'f',value:1.0}}},//stick imposters\n\t'stickimposter':{fragmentShader:[$3Dmol.ShaderUtils.stickimposterFragmentShader,\"    float dotProduct = dot( norm, vLight );\",\"    vec3 light = vec3( max( dotProduct, 0.0 ) );\",\"    gl_FragColor = vec4(light*color, opacity*opacity );\",\"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\"}\"].join(\"\\n\"),vertexShader:[\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 directionalLightColor[ 1 ];\",\"uniform vec3 directionalLightDirection[ 1 ];\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec3 color;\",\"attribute float radius;\",\"varying vec3 vColor;\",\"varying vec3 vLight;\",\"varying vec3 cposition;\",\"varying vec3 p1;\",\"varying vec3 p2;\",\"varying float r;\",\"void main() {\",\"    vColor = color; vColor.z = abs(vColor.z);\",//z indicates which vertex and so would vary\n\t\"    r = abs(radius);\",\"    vec4 to = modelViewMatrix*vec4(normal, 1.0);\",//normal is other point of cylinder\n\t\"    vec4 pt = modelViewMatrix*vec4(position, 1.0);\",\"    vec4 mvPosition = pt;\",\"    p1 = pt.xyz; p2 = to.xyz;\",\"    vec3 norm = to.xyz-pt.xyz;\",\"\"+\"    float mult = 1.1;\",//slop to account for perspective of sphere\n\t\"    if(length(p1) > length(p2)) {\",//billboard at level of closest point\n\t\"       mvPosition = to;\",\"    }\",\"    vec3 n = normalize(mvPosition.xyz);\",//intersect with the plane defined by the camera looking at the billboard point\n\t\"    if(color.z >= 0.0) {\",//p1\n\t\"       vec3 pnorm = normalize(p1);\",\"       float t = dot(mvPosition.xyz-p1,n)/dot(pnorm,n);\",\"       mvPosition.xyz = p1+t*pnorm;\",\"    } else {\",\"       vec3 pnorm = normalize(p2);\",\"       float t = dot(mvPosition.xyz-p2,n)/dot(pnorm,n);\",\"       mvPosition.xyz = p2+t*pnorm;\",\"       mult *= -1.0;\",\"    }\",\"    vec3 cr = normalize(cross(mvPosition.xyz,norm))*radius;\",\"    vec3 doublecr = normalize(cross(mvPosition.xyz,cr))*radius;\",\"    mvPosition.xy +=  mult*(cr + doublecr).xy;\",\"    cposition = mvPosition.xyz;\",\"    gl_Position = projectionMatrix * mvPosition;\",\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\"    vLight = normalize( lDirection.xyz )*directionalLightColor[0];\",//not really sure this is right, but color is always white so..\n\t\"}\"].join(\"\\n\"),uniforms:{opacity:{type:'f',value:1.0},fogColor:{type:'c',value:new $3Dmol.Color(1.0,1.0,1.0)},fogNear:{type:'f',value:1.0},fogFar:{type:'f',value:2000},directionalLightColor:{type:'fv',value:[]},directionalLightDirection:{type:'fv',value:[]}}},//stick imposter outlines\n\t'stickimposteroutline':{fragmentShader:$3Dmol.ShaderUtils.stickimposterFragmentShader+'gl_FragColor = vec4(color,1.0);}',vertexShader:[\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 directionalLightColor[ 1 ];\",\"uniform vec3 directionalLightDirection[ 1 ];\",\"uniform vec3 outlineColor;\",\"uniform float outlineWidth;\",\"uniform float outlinePushback;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec3 color;\",\"attribute float radius;\",\"varying vec3 vColor;\",\"varying vec3 vLight;\",\"varying vec3 cposition;\",\"varying vec3 p1;\",\"varying vec3 p2;\",\"varying float r;\",\"void main() {\",\"    vColor = outlineColor;\",\"    float rad = radius+sign(radius)*outlineWidth;\",\"    r = abs(rad);\",\"    vec4 to = modelViewMatrix*vec4(normal, 1.0);\",//normal is other point of cylinder\n\t\"    vec4 pt = modelViewMatrix*vec4(position, 1.0);\",//pushback\n\t\"    to.xyz += normalize(to.xyz)*outlinePushback;\",\"    pt.xyz += normalize(pt.xyz)*outlinePushback;\",\"    vec4 mvPosition = pt;\",\"    p1 = pt.xyz; p2 = to.xyz;\",\"    vec3 norm = to.xyz-pt.xyz;\",\"\"+\"    float mult = 1.1;\",//slop to account for perspective of sphere\n\t\"    if(length(p1) > length(p2)) {\",//billboard at level of closest point\n\t\"       mvPosition = to;\",\"    }\",\"    vec3 n = normalize(mvPosition.xyz);\",//intersect with the plane defined by the camera looking at the billboard point\n\t\"    if(color.z >= 0.0) {\",//p1\n\t\"       vec3 pnorm = normalize(p1);\",\"       float t = dot(mvPosition.xyz-p1,n)/dot(pnorm,n);\",\"       mvPosition.xyz = p1+t*pnorm;\",\"    } else {\",\"       vec3 pnorm = normalize(p2);\",\"       float t = dot(mvPosition.xyz-p2,n)/dot(pnorm,n);\",\"       mvPosition.xyz = p2+t*pnorm;\",\"       mult *= -1.0;\",\"    }\",\"    vec3 cr = normalize(cross(mvPosition.xyz,norm))*rad;\",\"    vec3 doublecr = normalize(cross(mvPosition.xyz,cr))*rad;\",\"    mvPosition.xy +=  mult*(cr + doublecr).xy;\",\"    cposition = mvPosition.xyz;\",\"    gl_Position = projectionMatrix * mvPosition;\",\"    vLight = vec3(1.0,1.0,1.0);\",\"}\"].join(\"\\n\"),uniforms:{opacity:{type:'f',value:1.0},fogColor:{type:'c',value:new $3Dmol.Color(1.0,1.0,1.0)},fogNear:{type:'f',value:1.0},fogFar:{type:'f',value:2000},outlineColor:{type:'c',value:new $3Dmol.Color(0.0,0.0,0.0)},outlineWidth:{type:'f',value:0.1},outlinePushback:{type:'f',value:1.0}}},//for double sided lighting\n\t'lambertdouble':{fragmentShader:[\"uniform mat4 viewMatrix;\",\"uniform float opacity;\",\"uniform vec3 fogColor;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"varying vec3 vLightFront;\",\"varying vec3 vLightBack;\",\"varying vec3 vColor;\",\"void main() {\",\"    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\"    #ifndef WIREFRAME\",\"    if ( gl_FrontFacing )\",\"       gl_FragColor.xyz *= vLightFront;\",\"    else\",\"       gl_FragColor.xyz *= vLightBack;\",\"    #endif\",\"    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\",\"    float depth = gl_FragCoord.z / gl_FragCoord.w;\",\"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\"}\"].join(\"\\n\"),vertexShader:[\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 directionalLightColor[ 1 ];\",\"uniform vec3 directionalLightDirection[ 1 ];\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec3 color;\",\"varying vec3 vColor;\",\"varying vec3 vLightFront;\",\"varying vec3 vLightBack;\",\"void main() {\",\"    vColor = color;\",\"    vec3 objectNormal = normal;\",\"    vec3 transformedNormal = normalMatrix * objectNormal;\",\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"    vLightFront = vec3( 0.0 );\",\"    vLightBack = vec3( 0.0 );\",\"    transformedNormal = normalize( transformedNormal );\",\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\"    vec3 dirVector = normalize( lDirection.xyz );\",\"    float dotProduct = dot( transformedNormal, dirVector );\",\"    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\"    vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\"    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\",\"    vLightBack += directionalLightColor[ 0 ] * directionalLightWeightingBack;\",\"    gl_Position = projectionMatrix * mvPosition;\",\"}\"].join(\"\\n\"),uniforms:{opacity:{type:'f',value:1.0},fogColor:{type:'c',value:new $3Dmol.Color(1.0,1.0,1.0)},fogNear:{type:'f',value:1.0},fogFar:{type:'f',value:2000},directionalLightColor:{type:'fv',value:[]},directionalLightDirection:{type:'fv',value:[]}}},'sprite':{fragmentShader:[\"uniform vec3 color;\",\"uniform sampler2D map;\",\"uniform float opacity;\",\"uniform int fogType;\",\"uniform vec3 fogColor;\",\"uniform float fogDensity;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"uniform float alphaTest;\",\"varying vec2 vUV;\",\"void main() {\",\"    vec4 texture = texture2D(map, vUV);\",\"    if (texture.a < alphaTest) discard;\",\"    gl_FragColor = vec4(color * texture.xyz, texture.a * opacity);\",\"    if (fogType > 0) {\",\"        float depth = gl_FragCoord.z / gl_FragCoord.w;\",\"        float fogFactor = 0.0;\",\"        if (fogType == 1) {\",\"            fogFactor = smoothstep(fogNear, fogFar, depth);\",\"        }\",\"        else {\",\"            const float LOG2 = 1.442695;\",\"            float fogFactor = exp2(- fogDensity * fogDensity * depth * depth * LOG2);\",\"            fogFactor = 1.0 - clamp(fogFactor, 0.0, 1.0);\",\"        }\",\"        gl_FragColor = mix(gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor);\",\"    }\",\"}\"].join(\"\\n\"),vertexShader:[\"uniform int useScreenCoordinates;\",\"uniform vec3 screenPosition;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform float rotation;\",\"uniform vec2 scale;\",\"uniform vec2 alignment;\",\"uniform vec2 uvOffset;\",\"uniform vec2 uvScale;\",\"attribute vec2 position;\",\"attribute vec2 uv;\",\"varying vec2 vUV;\",\"void main() {\",\"    vUV = uvOffset + uv * uvScale;\",\"    vec2 alignedPosition = position + alignment;\",\"    vec2 rotatedPosition;\",\"    rotatedPosition.x = ( cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y ) * scale.x;\",\"    rotatedPosition.y = ( sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y ) * scale.y;\",\"    vec4 finalPosition;\",\"    if(useScreenCoordinates != 0) {\",\"        finalPosition = vec4(screenPosition.xy + rotatedPosition, screenPosition.z, 1.0);\",\"    }\",\"    else {\",\"        finalPosition = projectionMatrix * modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0); finalPosition /= finalPosition.w;\",\"        finalPosition.xy += rotatedPosition; \",\"    }\",\"    gl_Position = finalPosition;\",\"}\"].join(\"\\n\"),uniforms:{}}};/*  ProteinSurface.js by biochem_fan\n\t\n\tPorted and modified for Javascript based on EDTSurf,\n\t  whose license is as follows.\n\t\n\tPermission to use, copy, modify, and distribute this program for any\n\tpurpose, with or without fee, is hereby granted, provided that this\n\tcopyright notice and the reference information appear in all copies or\n\tsubstantial portions of the Software. It is provided \"as is\" without\n\texpress or implied warranty.\n\t\n\tReference:\n\thttp://zhanglab.ccmb.med.umich.edu/EDTSurf/\n\tD. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular Surfaces\n\tby Euclidean Distance Transform. PLoS ONE 4(12): e8140.\n\t\n\t=======\n\t\n\tTODO: Improved performance on Firefox\n\t      Reduce memory consumption\n\t      Refactor!\n\t */// dkoes\n\t// Surface calculations.  This must be safe to use within a web worker.\n\tif(typeof console==='undefined'){// this should only be true inside of a webworker\n\tconsole={log:function log(){}};}$3Dmol.ProteinSurface=function(){// constants for vpbits bitmasks\n\t/** @const */var INOUT=1;/** @const */var ISDONE=2;/** @const */var ISBOUND=4;var ptranx=0,ptrany=0,ptranz=0;var probeRadius=1.4;var defaultScaleFactor=2;var scaleFactor=defaultScaleFactor;// 2 is .5A grid; if this is made user configurable,\n\t// also have to adjust offset used to find non-shown\n\t// atoms\n\tvar pHeight=0,pWidth=0,pLength=0;var cutRadius=0;var vpBits=null;// uint8 array of bitmasks\n\tvar vpDistance=null;// floatarray of _squared_ distances\n\tvar vpAtomID=null;// intarray\n\tvar vertnumber=0,facenumber=0;var pminx=0,pminy=0,pminz=0,pmaxx=0,pmaxy=0,pmaxz=0;var vdwRadii={\"H\":1.2,\"Li\":1.82,\"Na\":2.27,\"K\":2.75,\"C\":1.7,\"N\":1.55,\"O\":1.52,\"F\":1.47,\"P\":1.80,\"S\":1.80,\"CL\":1.75,\"BR\":1.85,\"SE\":1.90,\"ZN\":1.39,\"CU\":1.4,\"NI\":1.63,\"X\":2};/** @param {AtomSpec} atom */var getVDWIndex=function getVDWIndex(atom){if(!atom.elem||typeof vdwRadii[atom.elem]==\"undefined\"){return\"X\";}return atom.elem;};var depty={},widxz={};var faces,verts;var nb=[new Int32Array([1,0,0]),new Int32Array([-1,0,0]),new Int32Array([0,1,0]),new Int32Array([0,-1,0]),new Int32Array([0,0,1]),new Int32Array([0,0,-1]),new Int32Array([1,1,0]),new Int32Array([1,-1,0]),new Int32Array([-1,1,0]),new Int32Array([-1,-1,0]),new Int32Array([1,0,1]),new Int32Array([1,0,-1]),new Int32Array([-1,0,1]),new Int32Array([-1,0,-1]),new Int32Array([0,1,1]),new Int32Array([0,1,-1]),new Int32Array([0,-1,1]),new Int32Array([0,-1,-1]),new Int32Array([1,1,1]),new Int32Array([1,1,-1]),new Int32Array([1,-1,1]),new Int32Array([-1,1,1]),new Int32Array([1,-1,-1]),new Int32Array([-1,-1,1]),new Int32Array([-1,1,-1]),new Int32Array([-1,-1,-1])];var origextent;var inOrigExtent=function inOrigExtent(x,y,z){if(x<origextent[0][0]||x>origextent[1][0])return false;if(y<origextent[0][1]||y>origextent[1][1])return false;if(z<origextent[0][2]||z>origextent[1][2])return false;return true;};this.getFacesAndVertices=function(atomlist){var atomsToShow={};var i,il;for(i=0,il=atomlist.length;i<il;i++){atomsToShow[atomlist[i]]=true;}var vertices=verts;for(i=0,il=vertices.length;i<il;i++){vertices[i].x=vertices[i].x/scaleFactor-ptranx;vertices[i].y=vertices[i].y/scaleFactor-ptrany;vertices[i].z=vertices[i].z/scaleFactor-ptranz;}var finalfaces=[];for(i=0,il=faces.length;i<il;i+=3){//var f = faces[i];\n\tvar fa=faces[i],fb=faces[i+1],fc=faces[i+2];var a=vertices[fa]['atomid'],b=vertices[fb]['atomid'],c=vertices[fc]['atomid'];// must be a unique face for each atom\n\tvar which=a;if(b<which)which=b;if(c<which)which=c;if(!atomsToShow[which]){continue;}var av=vertices[faces[i]];var bv=vertices[faces[i+1]];var cv=vertices[faces[i+2]];if(fa!==fb&&fb!==fc&&fa!==fc){finalfaces.push(fa);finalfaces.push(fb);finalfaces.push(fc);}}//try to help the garbage collector\n\tvpBits=null;// uint8 array of bitmasks\n\tvpDistance=null;// floatarray\n\tvpAtomID=null;// intarray\n\treturn{'vertices':vertices,'faces':finalfaces};};this.initparm=function(extent,btype,volume){if(volume>1000000)//heuristical decrease resolution to avoid large memory consumption\n\tscaleFactor=defaultScaleFactor/2;var margin=1/scaleFactor*5.5;// need margin to avoid\n\t// boundary/round off effects\n\torigextent=extent;pminx=extent[0][0];pmaxx=extent[1][0];pminy=extent[0][1];pmaxy=extent[1][1];pminz=extent[0][2];pmaxz=extent[1][2];if(!btype){pminx-=margin;pminy-=margin;pminz-=margin;pmaxx+=margin;pmaxy+=margin;pmaxz+=margin;}else{pminx-=probeRadius+margin;pminy-=probeRadius+margin;pminz-=probeRadius+margin;pmaxx+=probeRadius+margin;pmaxy+=probeRadius+margin;pmaxz+=probeRadius+margin;}pminx=Math.floor(pminx*scaleFactor)/scaleFactor;pminy=Math.floor(pminy*scaleFactor)/scaleFactor;pminz=Math.floor(pminz*scaleFactor)/scaleFactor;pmaxx=Math.ceil(pmaxx*scaleFactor)/scaleFactor;pmaxy=Math.ceil(pmaxy*scaleFactor)/scaleFactor;pmaxz=Math.ceil(pmaxz*scaleFactor)/scaleFactor;ptranx=-pminx;ptrany=-pminy;ptranz=-pminz;pLength=Math.ceil(scaleFactor*(pmaxx-pminx))+1;pWidth=Math.ceil(scaleFactor*(pmaxy-pminy))+1;pHeight=Math.ceil(scaleFactor*(pmaxz-pminz))+1;this.boundingatom(btype);cutRadius=probeRadius*scaleFactor;vpBits=new Uint8Array(pLength*pWidth*pHeight);vpDistance=new Float64Array(pLength*pWidth*pHeight);// float 32\n\t// doesn't\n\t// play\n\t// nicely\n\t// with\n\t// native\n\t// floats\n\tvpAtomID=new Int32Array(pLength*pWidth*pHeight);//console.log(\"Box size: \", pLength, pWidth, pHeight, vpBits.length);\n\t};this.boundingatom=function(btype){var tradius=[];var txz,tdept,sradius,idx;flagradius=btype;for(var i in vdwRadii){if(!vdwRadii.hasOwnProperty(i))continue;var r=vdwRadii[i];if(!btype)tradius[i]=r*scaleFactor+0.5;else tradius[i]=(r+probeRadius)*scaleFactor+0.5;sradius=tradius[i]*tradius[i];widxz[i]=Math.floor(tradius[i])+1;depty[i]=new Int32Array(widxz[i]*widxz[i]);indx=0;for(j=0;j<widxz[i];j++){for(k=0;k<widxz[i];k++){txz=j*j+k*k;if(txz>sradius)depty[i][indx]=-1;// outside\n\telse{tdept=Math.sqrt(sradius-txz);depty[i][indx]=Math.floor(tdept);}indx++;}}}};this.fillvoxels=function(atoms,atomlist){// (int seqinit,int\n\t// seqterm,bool\n\t// atomtype,atom*\n\t// proseq,bool bcolor)\n\tvar i,il;for(i=0,il=vpBits.length;i<il;i++){vpBits[i]=0;vpDistance[i]=-1.0;vpAtomID[i]=-1;}for(i in atomlist){var atom=atoms[atomlist[i]];if(atom===undefined)continue;this.fillAtom(atom,atoms);}for(i=0,il=vpBits.length;i<il;i++){if(vpBits[i]&INOUT)vpBits[i]|=ISDONE;}};this.fillAtom=function(atom,atoms){var cx,cy,cz,ox,oy,oz,mi,mj,mk,i,j,k,si,sj,sk;var ii,jj,kk,n;cx=Math.floor(0.5+scaleFactor*(atom.x+ptranx));cy=Math.floor(0.5+scaleFactor*(atom.y+ptrany));cz=Math.floor(0.5+scaleFactor*(atom.z+ptranz));var at=getVDWIndex(atom);var nind=0;var cnt=0;var pWH=pWidth*pHeight;for(i=0,n=widxz[at];i<n;i++){for(j=0;j<n;j++){if(depty[at][nind]!=-1){for(ii=-1;ii<2;ii++){for(jj=-1;jj<2;jj++){for(kk=-1;kk<2;kk++){if(ii!==0&&jj!==0&&kk!==0){mi=ii*i;mk=kk*j;for(k=0;k<=depty[at][nind];k++){mj=k*jj;si=cx+mi;sj=cy+mj;sk=cz+mk;if(si<0||sj<0||sk<0||si>=pLength||sj>=pWidth||sk>=pHeight)continue;var index=si*pWH+sj*pHeight+sk;if(!(vpBits[index]&INOUT)){vpBits[index]|=INOUT;vpAtomID[index]=atom.serial;}else{var atom2=atoms[vpAtomID[index]];if(atom2.serial!=atom.serial){ox=cx+mi-Math.floor(0.5+scaleFactor*(atom2.x+ptranx));oy=cy+mj-Math.floor(0.5+scaleFactor*(atom2.y+ptrany));oz=cz+mk-Math.floor(0.5+scaleFactor*(atom2.z+ptranz));if(mi*mi+mj*mj+mk*mk<ox*ox+oy*oy+oz*oz)vpAtomID[index]=atom.serial;}}}// k\n\t}// if\n\t}// kk\n\t}// jj\n\t}// ii\n\t}// if\n\tnind++;}// j\n\t}// i\n\t};this.fillvoxelswaals=function(atoms,atomlist){var i,il;for(i=0,il=vpBits.length;i<il;i++){vpBits[i]&=~ISDONE;}// not isdone\n\tfor(i in atomlist){var atom=atoms[atomlist[i]];if(atom===undefined)continue;this.fillAtomWaals(atom,atoms);}};this.fillAtomWaals=function(atom,atoms){var cx,cy,cz,ox,oy,oz,nind=0;var mi,mj,mk,si,sj,sk,i,j,k,ii,jj,kk,n;cx=Math.floor(0.5+scaleFactor*(atom.x+ptranx));cy=Math.floor(0.5+scaleFactor*(atom.y+ptrany));cz=Math.floor(0.5+scaleFactor*(atom.z+ptranz));var at=getVDWIndex(atom);var pWH=pWidth*pHeight;for(i=0,n=widxz[at];i<n;i++){for(j=0;j<n;j++){if(depty[at][nind]!=-1){for(ii=-1;ii<2;ii++){for(jj=-1;jj<2;jj++){for(kk=-1;kk<2;kk++){if(ii!==0&&jj!==0&&kk!==0){mi=ii*i;mk=kk*j;for(k=0;k<=depty[at][nind];k++){mj=k*jj;si=cx+mi;sj=cy+mj;sk=cz+mk;if(si<0||sj<0||sk<0||si>=pLength||sj>=pWidth||sk>=pHeight)continue;var index=si*pWH+sj*pHeight+sk;if(!(vpBits[index]&ISDONE)){vpBits[index]|=ISDONE;vpAtomID[index]=atom.serial;}else{var atom2=atoms[vpAtomID[index]];if(atom2.serial!=atom.serial){ox=cx+mi-Math.floor(0.5+scaleFactor*(atom2.x+ptranx));oy=cy+mj-Math.floor(0.5+scaleFactor*(atom2.y+ptrany));oz=cz+mk-Math.floor(0.5+scaleFactor*(atom2.z+ptranz));if(mi*mi+mj*mj+mk*mk<ox*ox+oy*oy+oz*oz)vpAtomID[index]=atom.serial;}}}// k\n\t}// if\n\t}// kk\n\t}// jj\n\t}// ii\n\t}// if\n\tnind++;}// j\n\t}// i\n\t};this.buildboundary=function(){var pWH=pWidth*pHeight;for(i=0;i<pLength;i++){for(j=0;j<pHeight;j++){for(k=0;k<pWidth;k++){var index=i*pWH+k*pHeight+j;if(vpBits[index]&INOUT){var flagbound=false;var ii=0;while(ii<26){var ti=i+nb[ii][0],tj=j+nb[ii][2],tk=k+nb[ii][1];if(ti>-1&&ti<pLength&&tk>-1&&tk<pWidth&&tj>-1&&tj<pHeight&&!(vpBits[ti*pWH+tk*pHeight+tj]&INOUT)){vpBits[index]|=ISBOUND;break;}else ii++;}}}}}};// a little class for 3d array, should really generalize this and\n\t// use throughout...\n\tvar PointGrid=function PointGrid(length,width,height){// the standard says this is zero initialized\n\tvar data=new Int32Array(length*width*height*3);// set position x,y,z to pt, which has ix,iy,and iz\n\tthis.set=function(x,y,z,pt){var index=((x*width+y)*height+z)*3;data[index]=pt.ix;data[index+1]=pt.iy;data[index+2]=pt.iz;};// return point at x,y,z\n\tthis.get=function(x,y,z){var index=((x*width+y)*height+z)*3;return{ix:data[index],iy:data[index+1],iz:data[index+2]};};};this.fastdistancemap=function(){var eliminate=0;var certificate;var i,j,k,n;var boundPoint=new PointGrid(pLength,pWidth,pHeight);var pWH=pWidth*pHeight;var cutRSq=cutRadius*cutRadius;var inarray=[];var outarray=[];var index;for(i=0;i<pLength;i++){for(j=0;j<pWidth;j++){for(k=0;k<pHeight;k++){index=i*pWH+j*pHeight+k;vpBits[index]&=~ISDONE;// isdone = false\n\tif(vpBits[index]&INOUT){if(vpBits[index]&ISBOUND){var triple={ix:i,iy:j,iz:k};boundPoint.set(i,j,k,triple);inarray.push(triple);vpDistance[index]=0;vpBits[index]|=ISDONE;vpBits[index]&=~ISBOUND;}}}}}do{outarray=this.fastoneshell(inarray,boundPoint);inarray=[];for(i=0,n=outarray.length;i<n;i++){index=pWH*outarray[i].ix+pHeight*outarray[i].iy+outarray[i].iz;vpBits[index]&=~ISBOUND;if(vpDistance[index]<=1.0404*cutRSq){inarray.push({ix:outarray[i].ix,iy:outarray[i].iy,iz:outarray[i].iz});}}}while(inarray.length!==0);inarray=[];outarray=[];boundPoint=null;var cutsf=scaleFactor-0.5;if(cutsf<0)cutsf=0;var cutoff=cutRSq-0.50/(0.1+cutsf);for(i=0;i<pLength;i++){for(j=0;j<pWidth;j++){for(k=0;k<pHeight;k++){index=i*pWH+j*pHeight+k;vpBits[index]&=~ISBOUND;// ses solid\n\tif(vpBits[index]&INOUT){if(!(vpBits[index]&ISDONE)||vpBits[index]&ISDONE&&vpDistance[index]>=cutoff){vpBits[index]|=ISBOUND;}}}}}};this.fastoneshell=function(inarray,boundPoint){// (int* innum,int\n\t// *allocout,voxel2\n\t// ***boundPoint, int*\n\t// outnum, int *elimi)\n\tvar tx,ty,tz;var dx,dy,dz;var i,j,n;var square;var bp,index;var outarray=[];if(inarray.length===0)return outarray;tnv={ix:-1,iy:-1,iz:-1};var pWH=pWidth*pHeight;for(i=0,n=inarray.length;i<n;i++){tx=inarray[i].ix;ty=inarray[i].iy;tz=inarray[i].iz;bp=boundPoint.get(tx,ty,tz);for(j=0;j<6;j++){tnv.ix=tx+nb[j][0];tnv.iy=ty+nb[j][1];tnv.iz=tz+nb[j][2];if(tnv.ix<pLength&&tnv.ix>-1&&tnv.iy<pWidth&&tnv.iy>-1&&tnv.iz<pHeight&&tnv.iz>-1){index=tnv.ix*pWH+pHeight*tnv.iy+tnv.iz;if(vpBits[index]&INOUT&&!(vpBits[index]&ISDONE)){boundPoint.set(tnv.ix,tnv.iy,tz+nb[j][2],bp);dx=tnv.ix-bp.ix;dy=tnv.iy-bp.iy;dz=tnv.iz-bp.iz;square=dx*dx+dy*dy+dz*dz;vpDistance[index]=square;vpBits[index]|=ISDONE;vpBits[index]|=ISBOUND;outarray.push({ix:tnv.ix,iy:tnv.iy,iz:tnv.iz});}else if(vpBits[index]&INOUT&&vpBits[index]&ISDONE){dx=tnv.ix-bp.ix;dy=tnv.iy-bp.iy;dz=tnv.iz-bp.iz;square=dx*dx+dy*dy+dz*dz;if(square<vpDistance[index]){boundPoint.set(tnv.ix,tnv.iy,tnv.iz,bp);vpDistance[index]=square;if(!(vpBits[index]&ISBOUND)){vpBits[index]|=ISBOUND;outarray.push({ix:tnv.ix,iy:tnv.iy,iz:tnv.iz});}}}}}}// console.log(\"part1\", positout);\n\tfor(i=0,n=inarray.length;i<n;i++){tx=inarray[i].ix;ty=inarray[i].iy;tz=inarray[i].iz;bp=boundPoint.get(tx,ty,tz);for(j=6;j<18;j++){tnv.ix=tx+nb[j][0];tnv.iy=ty+nb[j][1];tnv.iz=tz+nb[j][2];if(tnv.ix<pLength&&tnv.ix>-1&&tnv.iy<pWidth&&tnv.iy>-1&&tnv.iz<pHeight&&tnv.iz>-1){index=tnv.ix*pWH+pHeight*tnv.iy+tnv.iz;if(vpBits[index]&INOUT&&!(vpBits[index]&ISDONE)){boundPoint.set(tnv.ix,tnv.iy,tz+nb[j][2],bp);dx=tnv.ix-bp.ix;dy=tnv.iy-bp.iy;dz=tnv.iz-bp.iz;square=dx*dx+dy*dy+dz*dz;vpDistance[index]=square;vpBits[index]|=ISDONE;vpBits[index]|=ISBOUND;outarray.push({ix:tnv.ix,iy:tnv.iy,iz:tnv.iz});}else if(vpBits[index]&INOUT&&vpBits[index]&ISDONE){dx=tnv.ix-bp.ix;dy=tnv.iy-bp.iy;dz=tnv.iz-bp.iz;square=dx*dx+dy*dy+dz*dz;if(square<vpDistance[index]){boundPoint.set(tnv.ix,tnv.iy,tnv.iz,bp);vpDistance[index]=square;if(!(vpBits[index]&ISBOUND)){vpBits[index]|=ISBOUND;outarray.push({ix:tnv.ix,iy:tnv.iy,iz:tnv.iz});}}}}}}// console.log(\"part2\", positout);\n\tfor(i=0,n=inarray.length;i<n;i++){tx=inarray[i].ix;ty=inarray[i].iy;tz=inarray[i].iz;bp=boundPoint.get(tx,ty,tz);for(j=18;j<26;j++){tnv.ix=tx+nb[j][0];tnv.iy=ty+nb[j][1];tnv.iz=tz+nb[j][2];if(tnv.ix<pLength&&tnv.ix>-1&&tnv.iy<pWidth&&tnv.iy>-1&&tnv.iz<pHeight&&tnv.iz>-1){index=tnv.ix*pWH+pHeight*tnv.iy+tnv.iz;if(vpBits[index]&INOUT&&!(vpBits[index]&ISDONE)){boundPoint.set(tnv.ix,tnv.iy,tz+nb[j][2],bp);dx=tnv.ix-bp.ix;dy=tnv.iy-bp.iy;dz=tnv.iz-bp.iz;square=dx*dx+dy*dy+dz*dz;vpDistance[index]=square;vpBits[index]|=ISDONE;vpBits[index]|=ISBOUND;outarray.push({ix:tnv.ix,iy:tnv.iy,iz:tnv.iz});}else if(vpBits[index]&INOUT&&vpBits[index]&ISDONE){dx=tnv.ix-bp.ix;dy=tnv.iy-bp.iy;dz=tnv.iz-bp.iz;square=dx*dx+dy*dy+dz*dz;if(square<vpDistance[index]){boundPoint.set(tnv.ix,tnv.iy,tnv.iz,bp);vpDistance[index]=square;if(!(vpBits[index]&ISBOUND)){vpBits[index]|=ISBOUND;outarray.push({ix:tnv.ix,iy:tnv.iy,iz:tnv.iz});}}}}}}// console.log(\"part3\", positout);\n\treturn outarray;};this.marchingcubeinit=function(stype){for(var i=0,lim=vpBits.length;i<lim;i++){if(stype==1){// vdw\n\tvpBits[i]&=~ISBOUND;}else if(stype==4){// ses\n\tvpBits[i]&=~ISDONE;if(vpBits[i]&ISBOUND)vpBits[i]|=ISDONE;vpBits[i]&=~ISBOUND;}else if(stype==2){// after vdw\n\tif(vpBits[i]&ISBOUND&&vpBits[i]&ISDONE)vpBits[i]&=~ISBOUND;else if(vpBits[i]&ISBOUND&&!(vpBits[i]&ISDONE))vpBits[i]|=ISDONE;}else if(stype==3){// sas\n\tvpBits[i]&=~ISBOUND;}}};// this code allows me to empirically prune the marching cubes code tables\n\t// to more efficiently handle discrete data\n\tvar counter=function counter(){var data=Array(256);for(var i=0;i<256;i++){data[i]=[];}this.incrementUsed=function(i,j){if(typeof data[i][j]==='undefined')data[i][j]={used:0,unused:0};data[i][j].used++;};this.incrementUnused=function(i,j){if(typeof data[i][j]==='undefined')data[i][j]={used:0,unused:0};data[i][j].unused++;};var redoTable=function redoTable(triTable){var str=\"[\";for(var i=0;i<triTable.length;i++){var code=0;var table=triTable[i];for(var j=0;j<table.length;j++){code|=1<<table[j];}str+=\"0x\"+code.toString(16)+\", \";}str+=\"]\";console.log(str);};this.print=function(){var table=MarchingCube.triTable;var str;var newtable=[];for(var i=0;i<table.length;i++){var newarr=[];for(var j=0;j<table[i].length;j+=3){var k=j/3;if(typeof data[i][k]==='undefined'||!data[i][k].unused){newarr.push(table[i][j]);newarr.push(table[i][j+1]);newarr.push(table[i][j+2]);}if(typeof data[i][k]==='undefined')console.log(\"undef \"+i+\",\"+k);}newtable.push(newarr);}console.log(JSON.stringify(newtable));redoTable(newtable);};};this.marchingcube=function(stype){this.marchingcubeinit(stype);verts=[];faces=[];$3Dmol.MarchingCube.march(vpBits,verts,faces,{smooth:1,nX:pLength,nY:pWidth,nZ:pHeight});var pWH=pWidth*pHeight;for(var i=0,vlen=verts.length;i<vlen;i++){verts[i]['atomid']=vpAtomID[verts[i].x*pWH+pHeight*verts[i].y+verts[i].z];}$3Dmol.MarchingCube.laplacianSmooth(1,verts,faces);};};//auto-initialization\n\t//Create embedded viewer from HTML attributes if true\n\t$(document).ready(function(){if($(\".viewer_3Dmoljs\")[0]!==undefined)$3Dmol.autoinit=true;if($3Dmol.autoinit){$3Dmol.viewers={};var nviewers=0;$(\".viewer_3Dmoljs\").each(function(){var viewerdiv=$(this);var datauri=null;if(viewerdiv.css('position')=='static'){//slight hack - canvas needs this element to be positioned\n\tviewerdiv.css('position','relative');}var callback=typeof window[viewerdiv.data(\"callback\")]==='function'?window[viewerdiv.data(\"callback\")]:null;var type=null;if(viewerdiv.data(\"pdb\")){datauri=\"http://www.rcsb.org/pdb/files/\"+viewerdiv.data(\"pdb\")+\".pdb\";type=\"pdb\";}else if(viewerdiv.data(\"cid\")){//this doesn't actually work since pubchem does have CORS enabled\n\ttype=\"sdf\";datauri=\"http://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/\"+viewerdiv.data(\"cid\")+\"/SDF?record_type=3d\";}else if(viewerdiv.data(\"href\"))datauri=viewerdiv.data(\"href\");var bgcolor=$3Dmol.CC.color(viewerdiv.data(\"backgroundcolor\"));var style={line:{}};if(viewerdiv.data(\"style\"))style=$3Dmol.specStringToObject(viewerdiv.data(\"style\"));var select={};if(viewerdiv.data(\"select\"))select=$3Dmol.specStringToObject(viewerdiv.data(\"select\"));var selectstylelist=[];var surfaces=[];var labels=[];var d=viewerdiv.data();//let users specify individual but matching select/style tags, eg.\n\t//data-select1 data-style1\n\tvar stylere=/style(.+)/;var surfre=/surface(.*)/;var reslabre=/labelres(.*)/;var keys=[];for(var dataname in d){if(d.hasOwnProperty(dataname)){keys.push(dataname);}}keys.sort();for(var i=0;i<keys.length;i++){var dataname=keys[i];var m=stylere.exec(dataname);if(m){var selname=\"select\"+m[1];var newsel=$3Dmol.specStringToObject(d[selname]);var styleobj=$3Dmol.specStringToObject(d[dataname]);selectstylelist.push([newsel,styleobj]);}m=surfre.exec(dataname);if(m){var selname=\"select\"+m[1];var newsel=$3Dmol.specStringToObject(d[selname]);var styleobj=$3Dmol.specStringToObject(d[dataname]);surfaces.push([newsel,styleobj]);}m=reslabre.exec(dataname);if(m){var selname=\"select\"+m[1];var newsel=$3Dmol.specStringToObject(d[selname]);var styleobj=$3Dmol.specStringToObject(d[dataname]);labels.push([newsel,styleobj]);}}//apply all the selections/styles parsed out above to the passed viewer\n\tvar applyStyles=function applyStyles(glviewer){glviewer.setStyle(select,style);for(var i=0;i<selectstylelist.length;i++){var sel=selectstylelist[i][0]||{};var sty=selectstylelist[i][1]||{\"line\":{}};glviewer.setStyle(sel,sty);}for(var i=0;i<surfaces.length;i++){var sel=surfaces[i][0]||{};var sty=surfaces[i][1]||{};glviewer.addSurface($3Dmol.SurfaceType.VDW,sty,sel,sel);}for(var i=0;i<labels.length;i++){var sel=labels[i][0]||{};var sty=labels[i][1]||{};glviewer.addResLabels(sel,sty);}glviewer.zoomTo();glviewer.render();};var glviewer=null;try{glviewer=$3Dmol.viewers[this.id||nviewers++]=$3Dmol.createViewer(viewerdiv,{defaultcolors:$3Dmol.rasmolElementColors});glviewer.setBackgroundColor(bgcolor);}catch(error){//for autoload, provide a useful error message\n\twindow.location=\"http://get.webgl.org\";}if(datauri){type=viewerdiv.data(\"type\")||viewerdiv.data(\"datatype\")||type;if(!type){type=datauri.substr(datauri.lastIndexOf('.')+1);}$.get(datauri,function(ret){glviewer.addModel(ret,type);applyStyles(glviewer);if(callback)callback(glviewer);},'text');}else{if(viewerdiv.data(\"element\")){var moldata=$(\"#\"+viewerdiv.data(\"element\")).val()||\"\";var type=viewerdiv.data(\"type\")||viewerdiv.data(\"datatype\");if(!type){console.log(\"Warning: No type specified for embedded viewer with moldata from \"+viewerdiv.data(\"element\")+\"\\n assuming type 'pdb'\");type='pdb';}glviewer.addModel(moldata,type);}applyStyles(glviewer);if(callback)callback(glviewer);}});}});//this is only used for create the enum documentation in JSDoc\n\t(function(){/**\n\t * Color representation.\n\t * @typedef ColorSpec\n\t * @prop {string} 0xAF10AB - any hex number\n\t * @prop {string} white   - 0xFFFFFF\n\t * @prop {string} silver  - 0xC0C0C0\n\t * @prop {string} gray    - 0x808080\n\t * @prop {string} grey    - 0x808080\n\t * @prop {string} black   - 0x000000\n\t * @prop {string} red     - 0xFF0000\n\t * @prop {string} maroon  - 0x800000\n\t * @prop {string} yellow  - 0xFFFF00\n\t * @prop {string} orange  - 0xFF6600\n\t * @prop {string} olive   - 0x808000\n\t * @prop {string} lime    - 0x00FF00\n\t * @prop {string} green   - 0x008000\n\t * @prop {string} aqua    - 0x00FFFF\n\t * @prop {string} cyan    - 0x00FFFF\n\t * @prop {string} teal    - 0x008080\n\t * @prop {string} blue    - 0x0000FF\n\t * @prop {string} navy    - 0x000080\n\t * @prop {string} fuchsia - 0xFF00FF\n\t * @prop {string} magenta - 0xFF00FF\n\t * @prop {string} purple  - 0x800080\n\t */$3Dmol.elementColors.greenCarbon['C']=0x00ff00;$3Dmol.elementColors.cyanCarbon['C']=0x00ffff;$3Dmol.elementColors.magentaCarbon['C']=0xff00ff;$3Dmol.elementColors.yellowCarbon['C']=0xffff00;$3Dmol.elementColors.whiteCarbon['C']=0xffffff;$3Dmol.elementColors.orangeCarbon['C']=0xff6600;$3Dmol.elementColors.purpleCarbon['C']=0x800080;$3Dmol.elementColors.blueCarbon['C']=0x0000ff;/**\n\t * Color scheme representation.\n\t * @typedef ColorschemeSpec\n\t * @prop {string} greenCarbon   - 0x00FF00\n\t * @prop {string} cyanCarbon    - 0x00FFFF\n\t * @prop {string} magentaCarbon - 0xFF00FF\n\t * @prop {string} yellowCarbon  - 0xFFFF00\n\t * @prop {string} whiteCarbon   - 0xFFFFFF\n\t * @prop {string} orangeCarbon  - 0xFF6600\n\t * @prop {string} purpleCarbon  - 0x100080\n\t * @prop {string} blueCarbon    - 0x0000FF\n\t */});// in an attempt to reduce memory overhead, cache all $3Dmol.Colors\n\t// this makes things a little faster\n\t$3Dmol.CC={cache:{0:new $3Dmol.Color(0)},color:function color_(hex){// Undefined values default to black\n\tif(!hex)return this.cache[0];// cache hits\n\tif(typeof this.cache[hex]!==\"undefined\"){return this.cache[hex];}// arrays\n\telse if(hex&&hex.constructor===Array){// parse elements recursively\n\treturn hex.map(color_,this);}// numbers and hex strings\n\thex=this.getHex(hex);if(typeof hex==='number'){var c=new $3Dmol.Color(hex);this.cache[hex]=c;return c;}else{// pass through $3Dmol.Color & other objects\n\treturn hex;}},colorTab:{'white':0xFFFFFF,'silver':0xC0C0C0,'gray':0x808080,'grey':0x808080,'black':0x000000,'red':0xFF0000,'maroon':0x800000,'yellow':0xFFFF00,'orange':0xFF6600,'olive':0x808000,'lime':0x00FF00,'green':0x008000,'aqua':0x00FFFF,'cyan':0x00FFFF,'teal':0x008080,'blue':0x0000FF,'navy':0x000080,'fuchsia':0xFF00FF,'magenta':0xFF00FF,'purple':0x800080},getHex:function getHex(hex){if(!isNaN(parseInt(hex)))return parseInt(hex);else if(typeof hex==='string'){return this.colorTab[hex.trim().toLowerCase()]||0x000000;}return hex;}};$3Dmol['CC']=$3Dmol.CC;$3Dmol['CC']['color']=$3Dmol.CC.color;/** Return proper color for atom given style\n\t * @param {AtomSpec} atom\n\t * @param {AtomStyle} style\n\t * @return {$3Dmol.Color}\n\t */$3Dmol.getColorFromStyle=function(atom,style){var color=atom.color;if(typeof style.color!=\"undefined\"&&style.color!=\"spectrum\")color=style.color;if(typeof style.colorscheme!=\"undefined\"){if(typeof $3Dmol.elementColors[style.colorscheme]!=\"undefined\"){//name of builtin colorscheme\n\tvar scheme=$3Dmol.elementColors[style.colorscheme];if(typeof scheme[atom.elem]!=\"undefined\"){color=scheme[atom.elem];}}else if(typeof style.colorscheme[atom.elem]!='undefined'){//actual color scheme provided\n\tcolor=style.colorscheme[atom.elem];}else if(typeof style.colorscheme.prop!='undefined'&&typeof style.colorscheme.gradient!='undefined'){//apply a property mapping\n\tvar prop=style.colorscheme.prop;var scheme=style.colorscheme.gradient;var range=scheme.range()||[-1,1];//sensible default\n\tvar val=$3Dmol.getAtomProperty(atom,prop);if(val!=null){color=scheme.valueToHex(val,range);}}else if(typeof style.colorscheme.prop!='undefined'&&typeof style.colorscheme.map!='undefined'){//apply a discrete property mapping\n\tvar prop=style.colorscheme.prop;var val=$3Dmol.getAtomProperty(atom,prop);if(typeof style.colorscheme.map[val]!='undefined'){color=style.colorscheme.map[val];}}}else if(typeof style.colorfunc!=\"undefined\"){//this is a user provided function for turning an atom into a color\n\tcolor=style.colorfunc(atom);}var C=$3Dmol.CC.color(color);return C;};/** Preset secondary structure color scheme\n\t * @struct\n\t */$3Dmol.ssColors=$3Dmol.ssColors||{};//names are in helix-sheet-coil order\n\t$3Dmol.ssColors.pyMOL={'h':0xff0000,'s':0xffff00,'c':0x00ff00};$3Dmol.ssColors.Jmol={'h':0xff0080,'s':0xffc800,'c':0xffffff};/** Preset element coloring - from individual element colors to entire mappings (e.g. '$3Dmol.elementColors.Jmol' colors atoms with Jmol stylings)\n\t * @struct\n\t */$3Dmol.elementColors=$3Dmol.elementColors||{};$3Dmol.elementColors.defaultColor=0xff1493;/** @property Jmol-like element colors*/$3Dmol.elementColors.Jmol={'H':0xFFFFFF,'He':0xD9FFFF,'HE':0xD9FFFF,'Li':0xCC80FF,'LI':0xCC80FF,'B':0xFFB5B5,'C':0x909090,'N':0x3050F8,'O':0xFF0D0D,'F':0x90E050,'Na':0xAB5CF2,'NA':0xAB5CF2,'Mg':0x8AFF00,'MG':0x8AFF00,'Al':0xBFA6A6,'AL':0xBFA6A6,'Si':0xF0C8A0,'SI':0xF0C8A0,'P':0xFF8000,'S':0xFFFF30,'Cl':0x1FF01F,'CL':0x1FF01F,'Ca':0x3DFF00,'CA':0x3DFF00,'Ti':0xBFC2C7,'TI':0xBFC2C7,'Cr':0x8A99C7,'CR':0x8A99C7,'Mn':0x9C7AC7,'MN':0x9C7AC7,'Fe':0xE06633,'FE':0xE06633,'Ni':0x50D050,'NI':0x50D050,'Cu':0xC88033,'CU':0xC88033,'Zn':0x7D80B0,'ZN':0x7D80B0,'Br':0xA62929,'BR':0xA62929,'Ag':0xC0C0C0,'AG':0xC0C0C0,'I':0x940094,'Ba':0x00C900,'BA':0x00C900,'Au':0xFFD123,'AU':0xFFD123};/** @property rasmol-like element colors */$3Dmol.elementColors.rasmol={'H':0xFFFFFF,'He':0xFFC0CB,'HE':0xFFC0CB,'Li':0xB22222,'LI':0xB22222,'B':0x00FF00,'C':0xC8C8C8,'N':0x8F8FFF,'O':0xF00000,'F':0xDAA520,'Na':0x0000FF,'NA':0x0000FF,'Mg':0x228B22,'MG':0x228B22,'Al':0x808090,'AL':0x808090,'Si':0xDAA520,'SI':0xDAA520,'P':0xFFA500,'S':0xFFC832,'Cl':0x00FF00,'CL':0x00FF00,'Ca':0x808090,'CA':0x808090,'Ti':0x808090,'TI':0x808090,'Cr':0x808090,'CR':0x808090,'Mn':0x808090,'MN':0x808090,'Fe':0xFFA500,'FE':0xFFA500,'Ni':0xA52A2A,'NI':0xA52A2A,'Cu':0xA52A2A,'CU':0xA52A2A,'Zn':0xA52A2A,'ZN':0xA52A2A,'Br':0xA52A2A,'BR':0xA52A2A,'Ag':0x808090,'AG':0x808090,'I':0xA020F0,'Ba':0xFFA500,'BA':0xFFA500,'Au':0xDAA520,'AU':0xDAA520};$3Dmol.elementColors.defaultColors=$3Dmol.elementColors.rasmol;$3Dmol.elementColors.greenCarbon=$.extend({},$3Dmol.elementColors.defaultColors);$3Dmol.elementColors.greenCarbon['C']=0x00ff00;$3Dmol.elementColors.cyanCarbon=$.extend({},$3Dmol.elementColors.defaultColors);$3Dmol.elementColors.cyanCarbon['C']=0x00ffff;$3Dmol.elementColors.magentaCarbon=$.extend({},$3Dmol.elementColors.defaultColors);$3Dmol.elementColors.magentaCarbon['C']=0xff00ff;$3Dmol.elementColors.yellowCarbon=$.extend({},$3Dmol.elementColors.defaultColors);$3Dmol.elementColors.yellowCarbon['C']=0xffff00;$3Dmol.elementColors.whiteCarbon=$.extend({},$3Dmol.elementColors.defaultColors);$3Dmol.elementColors.whiteCarbon['C']=0xffffff;$3Dmol.elementColors.orangeCarbon=$.extend({},$3Dmol.elementColors.defaultColors);$3Dmol.elementColors.orangeCarbon['C']=0xff6600;$3Dmol.elementColors.purpleCarbon=$.extend({},$3Dmol.elementColors.defaultColors);$3Dmol.elementColors.purpleCarbon['C']=0x800080;$3Dmol.elementColors.blueCarbon=$.extend({},$3Dmol.elementColors.defaultColors);$3Dmol.elementColors.blueCarbon['C']=0x0000ff;//glcartoon.js\n\t//This contains all the routines for rendering a cartoon given a set\n\t//of atoms with assigned secondary structure\n\t//TODO: generate normals directly in drawStrip and drawThinStrip\n\tvar $3Dmol=$3Dmol||{};/**\n\t * @typedef CartoonStyleSpec\n\t * @prop {ColorSpec} color - strand color, may specify as 'spectrum'\n\t * @prop {string} style - style of cartoon rendering (trace, oval, rectangle\n\t *       (default), parabola, edged)\n\t * @prop {boolean} ribbon - whether to use constant strand width, disregarding\n\t *       secondary structure; use thickness to adjust radius\n\t * @prop {boolean} arrows - whether to add arrows showing beta-sheet\n\t *       directionality; does not apply to trace or ribbon\n\t * @prop {boolean} tubes - whether to display alpha helices as simple cylinders;\n\t *       does not apply to trace\n\t * @prop {number} thickness - cartoon strand thickness, default is 0.4\n\t * @prop {number} width - cartoon strand width, default is secondary\n\t *       structure-dependent; does not apply to trace or ribbon\n\t * @prop {number} opacity - set opacity from 0-1; transparency is set per-chain\n\t *       with a warning outputted in the event of ambiguity\n\t * @prop {} In nucleic acids, the base cylinders obtain their color from the\n\t *       atom to which the cylinder is drawn, which is 'N1' for purines (resn:\n\t *       'A', 'G', 'DA', 'DG') and 'N3' for pyrimidines (resn: 'C', 'U', 'DC',\n\t *       'DT'). The different nucleobases can therefore be distinguished as\n\t *       follows:\n\t * @example viewer.setStyle({resn:'DA', atom:'N1'}, {cartoon:{color:'red'}});\n\t *          viewer.setStyle({resn:'DG', atom:'N1'}, {cartoon:{color:'green'}});\n\t *          viewer.setStyle({resn:'DC', atom:'N3'}, {cartoon:{color:'blue'}});\n\t *          viewer.setStyle({resn:'DT', atom:'N3'}, {cartoon:{color:'yellow'}});\n\t *//**\n\t * @ignore\n\t * @param {$3Dmol.Object3D}\n\t *            group\n\t * @param {AtomSpec}\n\t *            atomlist\n\t * @param {$3Dmol.Gradient}\n\t *            gradientscheme\n\t */$3Dmol.drawCartoon=function(){var defaultNum=5;// for cross-sectional shape\n\tvar defaultDiv=5;// for length-wise splicing\n\tvar coilWidth=0.5;var helixSheetWidth=1.3;var nucleicAcidWidth=0.8;var arrowTipWidth=0.1;var defaultThickness=0.4;// helper functions\n\t// Catmull-Rom subdivision\n\tvar subdivide=function subdivide(_points,DIV){// points as Vector3\n\tvar ret=[];var points=_points;points=[];// Smoothing test\n\tpoints.push(_points[0]);var i,lim,size;var p0,p1,p2,p3,v0,v1;for(i=1,lim=_points.length-1;i<lim;i++){p1=_points[i];p2=_points[i+1];if(p1.smoothen)points.push(new $3Dmol.Vector3((p1.x+p2.x)/2,(p1.y+p2.y)/2,(p1.z+p2.z)/2));else points.push(p1);}points.push(_points[_points.length-1]);for(i=-1,size=points.length;i<=size-3;i++){p0=points[i===-1?0:i];p1=points[i+1];p2=points[i+2];p3=points[i===size-3?size-1:i+3];v0=new $3Dmol.Vector3().subVectors(p2,p0).multiplyScalar(0.5);v1=new $3Dmol.Vector3().subVectors(p3,p1).multiplyScalar(0.5);if(p2.skip)continue;for(var j=0;j<DIV;j++){var t=1.0/DIV*j;var x=p1.x+t*v0.x+t*t*(-3*p1.x+3*p2.x-2*v0.x-v1.x)+t*t*t*(2*p1.x-2*p2.x+v0.x+v1.x);var y=p1.y+t*v0.y+t*t*(-3*p1.y+3*p2.y-2*v0.y-v1.y)+t*t*t*(2*p1.y-2*p2.y+v0.y+v1.y);var z=p1.z+t*v0.z+t*t*(-3*p1.z+3*p2.z-2*v0.z-v1.z)+t*t*t*(2*p1.z-2*p2.z+v0.z+v1.z);var pt=new $3Dmol.Vector3(x,y,z);var atomIndex=Math.floor((ret.length+2)/DIV);if(_points[atomIndex]!==undefined&&_points[atomIndex].atom!==undefined)pt.atom=_points[atomIndex].atom;ret.push(pt);}}ret.push(points[points.length-1]);return ret;};var drawThinStrip=function drawThinStrip(geo,p1,p2,colors,div,opacity){var offset,vertoffset;var color,colori;for(var i=0,lim=p1.length;i<lim;i++){colori=Math.round(i*(colors.length-1)/lim);color=$3Dmol.CC.color(colors[colori]);geoGroup=geo.updateGeoGroup(2);var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;var faceArray=geoGroup.faceArray;offset=geoGroup.vertices;vertoffset=offset*3;vertexArray[vertoffset]=p1[i].x;vertexArray[vertoffset+1]=p1[i].y;vertexArray[vertoffset+2]=p1[i].z;vertexArray[vertoffset+3]=p2[i].x;vertexArray[vertoffset+4]=p2[i].y;vertexArray[vertoffset+5]=p2[i].z;for(var j=0;j<6;++j){colorArray[vertoffset+3*j]=color.r;colorArray[vertoffset+1+3*j]=color.g;colorArray[vertoffset+2+3*j]=color.b;}if(i>0){var faces=[offset,offset+1,offset-1,offset-2];var faceoffset=geoGroup.faceidx;faceArray[faceoffset]=faces[0];faceArray[faceoffset+1]=faces[1];faceArray[faceoffset+2]=faces[3];faceArray[faceoffset+3]=faces[1];faceArray[faceoffset+4]=faces[2];faceArray[faceoffset+5]=faces[3];geoGroup.faceidx+=6;}geoGroup.vertices+=2;}};var drawShapeStrip=function drawShapeStrip(geo,points,colors,div,thickness,opacity,shape){// points is a 2D array, dimensionality given by [num = cross-sectional\n\t// resolution][len = length of strip]\n\tvar i,j,num,len;num=points.length;if(num<2||points[0].length<2)return;div=div||axisDIV;for(i=0;i<num;i++){// spline to generate greater length-wise\n\t// resolution\n\tpoints[i]=subdivide(points[i],div);}len=points[0].length;if(!thickness)// if thickness is 0, we can use a smaller geometry than\n\t// this function generates\n\treturn drawThinStrip(geo,points[0],points[num-1],colors,div,opacity);var axis,cs_shape,cs_bottom,cs_top,last_cs_bottom,last_cs_top;// cache the available cross-sectional shapes\n\tvar cs_ellipse=[],cs_rectangle=[],cs_parabola=[];for(j=0;j<num;j++){cs_ellipse.push(0.25+1.5*Math.sqrt((num-1)*j-Math.pow(j,2))/(num-1));cs_rectangle.push(0.5);cs_parabola.push(2*(Math.pow(j/num,2)-j/num)+0.6);}/*\n\t     * face_refs array is used to generate faces from vertexArray\n\t     * iteratively. As we move through each cross-sectional segment of\n\t     * points, we draw lateral faces backwards to the previous\n\t     * cross-sectional segment.\n\t     *\n\t     * To correctly identify the points needed to make each face we use this\n\t     * array as a lookup table for the relative indices of each needed point\n\t     * in the vertices array.\n\t     *\n\t     * 4 points are used to create 2 faces.\n\t     */var face_refs=[];for(j=0;j<num*2-1;j++){/*\n\t       * [curr vertex in curr cross-section, next vertex in curr\n\t       * cross-section, next vertex in prev cross-section, curr vertex in\n\t       * prev cross-section]\n\t       */face_refs[j]=[j,j+1,j+1-2*num,j-2*num];}// last face is different. easier to conceptualize this by drawing a\n\t// diagram\n\tface_refs[num*2-1]=[j,j+1-2*num,j+1-4*num,j-2*num];var v_offset,va_offset,f_offset;var currentAtom,lastAtom;var color,colori;var geoGroup=geo.updateGeoGroup(2*num*len);// ensure vertex\n\t// capacity\n\tfor(i=0;i<len;i++){colori=Math.round(i*(colors.length-1)/len);color=$3Dmol.CC.color(colors[colori]);last_cs_bottom=cs_bottom;last_cs_top=cs_top;cs_bottom=[];cs_top=[];axis=[];if(points[0][i].atom!==undefined)// TODO better edge case\n\t// handling\n\t{currentAtom=points[0][i].atom;if(shape===\"oval\")cs_shape=cs_ellipse;else if(shape===\"rectangle\")cs_shape=cs_rectangle;else if(shape===\"parabola\")cs_shape=cs_parabola;}if(!cs_shape)cs_shape=cs_rectangle;// calculate thickness at each width point, from cross-sectional\n\t// shape\n\tvar toNext,toSide;for(j=0;j<num;j++){if(i<len-1)toNext=points[j][i+1].clone().sub(points[j][i]);else toNext=points[j][i-1].clone().sub(points[j][i]).negate();if(j<num-1)toSide=points[j+1][i].clone().sub(points[j][i]);else toSide=points[j-1][i].clone().sub(points[j][i]).negate();axis[j]=toSide.cross(toNext).normalize().multiplyScalar(thickness*cs_shape[j]);}// generate vertices by applying cross-sectional shape thickness to\n\t// input points\n\tfor(j=0;j<num;j++){cs_bottom[j]=points[j][i].clone().add(axis[j].clone().negate());}for(j=0;j<num;j++){cs_top[j]=points[j][i].clone().add(axis[j]);}/*\n\t       * Until this point the vertices have been dealt with as\n\t       * $3Dmol.Vector3() objects, but we need to serialize them into the\n\t       * geoGroup.vertexArray, where every three indices represents the\n\t       * next vertex. The colorArray is analogous.\n\t       *\n\t       * In the following for-loops, j iterates through VERTICES so we\n\t       * need to index them in vertexArray by 3*j + either 0, 1, or 2 for\n\t       * xyz or rgb component.\n\t       */var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;var faceArray=geoGroup.faceArray;v_offset=geoGroup.vertices;va_offset=v_offset*3;// in case geoGroup already contains\n\t// vertices\n\t// bottom edge of cross-section, vertices [0, num)\n\tfor(j=0;j<num;j++){vertexArray[va_offset+3*j+0]=cs_bottom[j].x;vertexArray[va_offset+3*j+1]=cs_bottom[j].y;vertexArray[va_offset+3*j+2]=cs_bottom[j].z;}// top edge of cross-section, vertices [num, 2*num)\n\t// add these backwards, so that each cross-section's vertices are\n\t// added sequentially to vertexArray\n\tfor(j=0;j<num;j++){vertexArray[va_offset+3*j+0+3*num]=cs_top[num-1-j].x;vertexArray[va_offset+3*j+1+3*num]=cs_top[num-1-j].y;vertexArray[va_offset+3*j+2+3*num]=cs_top[num-1-j].z;}for(j=0;j<2*num;++j){colorArray[va_offset+3*j+0]=color.r;colorArray[va_offset+3*j+1]=color.g;colorArray[va_offset+3*j+2]=color.b;}if(i>0){for(j=0;j<num*2;j++){// get VERTEX indices of the 4 points of a rectangular face\n\t// (as opposed to literal vertexArray indices)\n\tvar face=[v_offset+face_refs[j][0],v_offset+face_refs[j][1],v_offset+face_refs[j][2],v_offset+face_refs[j][3]];f_offset=geoGroup.faceidx;// need 2 triangles to draw a face between 4 points\n\tfaceArray[f_offset]=face[0];faceArray[f_offset+1]=face[1];faceArray[f_offset+2]=face[3];faceArray[f_offset+3]=face[1];faceArray[f_offset+4]=face[2];faceArray[f_offset+5]=face[3];geoGroup.faceidx+=6;// TODO implement clickable the right way. midpoints of\n\t// strand between consecutive atoms\n\t}if(currentAtom.clickable){var faces=[];faces.push(new $3Dmol.Triangle(last_cs_bottom[0],cs_bottom[0],cs_bottom[num-1]));faces.push(new $3Dmol.Triangle(last_cs_bottom[0],cs_bottom[num-1],last_cs_bottom[num-1]));faces.push(new $3Dmol.Triangle(last_cs_bottom[num-1],cs_bottom[num-1],cs_top[num-1]));faces.push(new $3Dmol.Triangle(last_cs_bottom[num-1],cs_top[num-1],last_cs_top[num-1]));faces.push(new $3Dmol.Triangle(cs_top[0],last_cs_top[0],last_cs_top[num-1]));faces.push(new $3Dmol.Triangle(cs_top[num-1],cs_top[0],last_cs_top[num-1]));faces.push(new $3Dmol.Triangle(cs_bottom[0],last_cs_bottom[0],last_cs_top[0]));faces.push(new $3Dmol.Triangle(cs_top[0],cs_bottom[0],last_cs_top[0]));for(j in faces){currentAtom.intersectionShape.triangle.push(faces[j]);}}}geoGroup.vertices+=2*num;lastAtom=currentAtom;}// for terminal faces\n\tvar vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;var faceArray=geoGroup.faceArray;v_offset=geoGroup.vertices;va_offset=v_offset*3;f_offset=geoGroup.faceidx;for(i=0;i<num-1;i++)// \"rear\" face\n\t{var face=[i,i+1,2*num-2-i,2*num-1-i];f_offset=geoGroup.faceidx;faceArray[f_offset]=face[0];faceArray[f_offset+1]=face[1];faceArray[f_offset+2]=face[3];faceArray[f_offset+3]=face[1];faceArray[f_offset+4]=face[2];faceArray[f_offset+5]=face[3];geoGroup.faceidx+=6;}for(i=0;i<num-1;i++)// \"front\" face\n\t{var face=[v_offset-1-i,v_offset-2-i,v_offset-2*num+i+1,v_offset-2*num+i];f_offset=geoGroup.faceidx;faceArray[f_offset]=face[0];faceArray[f_offset+1]=face[1];faceArray[f_offset+2]=face[3];faceArray[f_offset+3]=face[1];faceArray[f_offset+4]=face[2];faceArray[f_offset+5]=face[3];geoGroup.faceidx+=6;}};var drawPlainStrip=function drawPlainStrip(geo,points,colors,div,thickness,opacity){if(points.length<2)return;var p1,p2;p1=points[0];p2=points[points.length-1];div=div||axisDIV;p1=subdivide(p1,div);p2=subdivide(p2,div);if(!thickness)return drawThinStrip(geo,p1,p2,colors,div,opacity);// var vs = geo.vertices, fs = geo.faces;\n\tvar vs=[],fs=[];var axis,p1v,p2v,a1v,a2v;var faces=[[0,2,-6,-8],[-4,-2,6,4],[7,-1,-5,3],[-3,5,1,-7]];var offset,vertoffset,faceoffset;var color,colori;var currentAtom,lastAtom;var i,lim,j;var face1,face2,face3;var geoGroup;for(i=0,lim=p1.length;i<lim;i++){colori=Math.round(i*(colors.length-1)/lim);color=$3Dmol.CC.color(colors[colori]);vs.push(p1v=p1[i]);// 0\n\tvs.push(p1v);// 1\n\tvs.push(p2v=p2[i]);// 2\n\tvs.push(p2v);// 3\n\tif(i<lim-1){var toNext=p1[i+1].clone().sub(p1[i]);var toSide=p2[i].clone().sub(p1[i]);axis=toSide.cross(toNext).normalize().multiplyScalar(thickness);}vs.push(a1v=p1[i].clone().add(axis));// 4\n\tvs.push(a1v);// 5\n\tvs.push(a2v=p2[i].clone().add(axis));// 6\n\tvs.push(a2v);// 7\n\tif(p1v.atom!==undefined)currentAtom=p1v.atom;geoGroup=geo.updateGeoGroup(8);var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;var faceArray=geoGroup.faceArray;offset=geoGroup.vertices;vertoffset=offset*3;vertexArray[vertoffset]=p1v.x;vertexArray[vertoffset+1]=p1v.y;vertexArray[vertoffset+2]=p1v.z;vertexArray[vertoffset+3]=p1v.x;vertexArray[vertoffset+4]=p1v.y;vertexArray[vertoffset+5]=p1v.z;vertexArray[vertoffset+6]=p2v.x;vertexArray[vertoffset+7]=p2v.y;vertexArray[vertoffset+8]=p2v.z;vertexArray[vertoffset+9]=p2v.x;vertexArray[vertoffset+10]=p2v.y;vertexArray[vertoffset+11]=p2v.z;vertexArray[vertoffset+12]=a1v.x;vertexArray[vertoffset+13]=a1v.y;vertexArray[vertoffset+14]=a1v.z;vertexArray[vertoffset+15]=a1v.x;vertexArray[vertoffset+16]=a1v.y;vertexArray[vertoffset+17]=a1v.z;vertexArray[vertoffset+18]=a2v.x;vertexArray[vertoffset+19]=a2v.y;vertexArray[vertoffset+20]=a2v.z;vertexArray[vertoffset+21]=a2v.x;vertexArray[vertoffset+22]=a2v.y;vertexArray[vertoffset+23]=a2v.z;for(j=0;j<8;++j){colorArray[vertoffset+3*j]=color.r;colorArray[vertoffset+1+3*j]=color.g;colorArray[vertoffset+2+3*j]=color.b;}if(i>0){// both points have distinct atoms\n\tvar diffAtoms=lastAtom!==undefined&&currentAtom!==undefined&&lastAtom.serial!==currentAtom.serial;for(j=0;j<4;j++){var face=[offset+faces[j][0],offset+faces[j][1],offset+faces[j][2],offset+faces[j][3]];faceoffset=geoGroup.faceidx;faceArray[faceoffset]=face[0];faceArray[faceoffset+1]=face[1];faceArray[faceoffset+2]=face[3];faceArray[faceoffset+3]=face[1];faceArray[faceoffset+4]=face[2];faceArray[faceoffset+5]=face[3];geoGroup.faceidx+=6;if(currentAtom.clickable||lastAtom.clickable){var p1a=vs[face[3]].clone(),p1b=vs[face[0]].clone(),p2a=vs[face[2]].clone(),p2b=vs[face[1]].clone();p1a.atom=vs[face[3]].atom||null;// should be\n\t// same\n\tp2a.atom=vs[face[2]].atom||null;p1b.atom=vs[face[0]].atom||null;// should be\n\t// same\n\tp2b.atom=vs[face[1]].atom||null;if(diffAtoms){var m1=p1a.clone().add(p1b).multiplyScalar(0.5);var m2=p2a.clone().add(p2b).multiplyScalar(0.5);var m=p1a.clone().add(p2b).multiplyScalar(0.5);if(j%2===0){if(lastAtom.clickable){face1=new $3Dmol.Triangle(m1,m,p1a);face2=new $3Dmol.Triangle(m2,p2a,m);face3=new $3Dmol.Triangle(m,p2a,p1a);lastAtom.intersectionShape.triangle.push(face1);lastAtom.intersectionShape.triangle.push(face2);lastAtom.intersectionShape.triangle.push(face3);}if(currentAtom.clickable){face1=new $3Dmol.Triangle(p1b,p2b,m);face2=new $3Dmol.Triangle(p2b,m2,m);face3=new $3Dmol.Triangle(p1b,m,m1);currentAtom.intersectionShape.triangle.push(face1);currentAtom.intersectionShape.triangle.push(face2);currentAtom.intersectionShape.triangle.push(face3);}}else{if(currentAtom.clickable){face1=new $3Dmol.Triangle(m1,m,p1a);face2=new $3Dmol.Triangle(m2,p2a,m);face3=new $3Dmol.Triangle(m,p2a,p1a);currentAtom.intersectionShape.triangle.push(face1);currentAtom.intersectionShape.triangle.push(face2);currentAtom.intersectionShape.triangle.push(face3);}if(lastAtom.clickable){face1=new $3Dmol.Triangle(p1b,p2b,m);face2=new $3Dmol.Triangle(p2b,m2,m);face3=new $3Dmol.Triangle(p1b,m,m1);lastAtom.intersectionShape.triangle.push(face1);lastAtom.intersectionShape.triangle.push(face2);lastAtom.intersectionShape.triangle.push(face3);}}}// face for single atom\n\telse if(currentAtom.clickable){face1=new $3Dmol.Triangle(p1b,p2b,p1a);face2=new $3Dmol.Triangle(p2b,p2a,p1a);currentAtom.intersectionShape.triangle.push(face1);currentAtom.intersectionShape.triangle.push(face2);}}}}geoGroup.vertices+=8;lastAtom=currentAtom;}var vsize=vs.length-8;// Cap\n\tgeoGroup=geo.updateGeoGroup(8);var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;var faceArray=geoGroup.faceArray;offset=geoGroup.vertices;vertoffset=offset*3;faceoffset=geoGroup.faceidx;for(i=0;i<4;i++){vs.push(vs[i*2]);vs.push(vs[vsize+i*2]);var v1=vs[i*2],v2=vs[vsize+i*2];vertexArray[vertoffset+6*i]=v1.x;vertexArray[vertoffset+1+6*i]=v1.y;vertexArray[vertoffset+2+6*i]=v1.z;vertexArray[vertoffset+3+6*i]=v2.x;vertexArray[vertoffset+4+6*i]=v2.y;vertexArray[vertoffset+5+6*i]=v2.z;colorArray[vertoffset+6*i]=color.r;colorArray[vertoffset+1+6*i]=color.g;colorArray[vertoffset+2+6*i]=color.b;colorArray[vertoffset+3+6*i]=color.r;colorArray[vertoffset+4+6*i]=color.g;colorArray[vertoffset+5+6*i]=color.b;}vsize+=8;face1=[offset,offset+2,offset+6,offset+4];face2=[offset+1,offset+5,offset+7,offset+3];faceArray[faceoffset]=face1[0];faceArray[faceoffset+1]=face1[1];faceArray[faceoffset+2]=face1[3];faceArray[faceoffset+3]=face1[1];faceArray[faceoffset+4]=face1[2];faceArray[faceoffset+5]=face1[3];faceArray[faceoffset+6]=face2[0];faceArray[faceoffset+7]=face2[1];faceArray[faceoffset+8]=face2[3];faceArray[faceoffset+9]=face2[1];faceArray[faceoffset+10]=face2[2];faceArray[faceoffset+11]=face2[3];geoGroup.faceidx+=12;geoGroup.vertices+=8;// TODO: Add intersection planes for caps\n\t// HalfEdgeRec used to store adjacency info of mesh\n\tvar HalfEdge=function HalfEdge(vertIdx){this.vert=vertIdx;// Vertex index at the end of this half-edge\n\tthis.twin=null;// Oppositely oriented adjacent half-edge\n\tthis.next=null;// Next half-edge around the face\n\t};var computeAdjacency=function computeAdjacency(faces,faceCount,vertCount){// all pieces of the half-edge data structure\n\tedges=[];// a hash table to hold the adjaceney info\n\t// - Keys are pairs of vertex indices\n\t// - Values are pointers to half-edge\n\tvar edgeTable={};var len=0;// Plow through faces and fill all half-edge info except twin\n\t// pointers:\n\tfor(var i=0;i<faceCount;i+=3){var A=faces[i];var B=faces[i+1];var C=faces[i+2];// console.log(\"A=\"+A+ \" B=\"+ B+ \" C=\"+C);\n\t// create the half-edge that goes from C to A\n\tvar CA=new HalfEdge(A);edges.push(CA);// create the half-edge that goes from A to B\n\tvar AB=new HalfEdge(B);edges.push(AB);// create the half-edge that goes from B to C\n\tvar BC=new HalfEdge(C);edges.push(BC);CA.next=AB;AB.next=BC;BC.next=CA;edgeTable[C|A<<16]=CA;edgeTable[A|B<<16]=AB;edgeTable[B|C<<16]=BC;}// verify that the mesh is clean\n\tfor(var key in edgeTable){if(edgeTable.hasOwnProperty(key)){len++;}}if(len!=faceCount*3){console.warn(\"Bad mesh: duplicated edges or inconsistent winding.len=\"+len+\" faceCount=\"+faceCount+\" vertCount=\"+vertCount);}// Populate the twin pointers by iterating over the hash table\n\tvar boundaryCount=0;for(var key in edgeTable){if(edgeTable.hasOwnProperty(key)){var twinKey=(key&0xffff)<<16|key>>16;if(edgeTable.hasOwnProperty(twinKey)){edgeTable[key].twin=edgeTable[twinKey];edgeTable[twinKey].twin=edgeTable[key];}else{boundaryCount+=1;}}}var ret=new Uint16Array(faceCount*6);// Now that we have a half-edge structure, it's easy to create\n\t// adjacency info for WebGL\n\tif(boundaryCount>0){console.log(\"Mesh is not watertight. Contains \"+boundaryCount+\" edges\");for(var i=0;i<faceCount;i+=3){ret[i*2+0]=edges[i+2].vert;ret[i*2+1]=edges[i+0].twin==null?ret[i*2+0]:edges[i+0].twin.next.vert;ret[i*2+2]=edges[i+0].vert;ret[i*2+3]=edges[i+1].twin==null?ret[i*2+1]:edges[i+1].twin.next.vert;ret[i*2+4]=edges[i+1].vert;ret[i*2+5]=edges[i+2].twin==null?ret[i*2+2]:edges[i+2].twin.next.vert;}}else{for(var i=0;i<faceCount;i+=3){ret[i*2+0]=edges[i+2].vert;ret[i*2+1]=edges[i+0].twin.next.vert;ret[i*2+2]=edges[i+0].vert;ret[i*2+3]=edges[i+1].twin.next.vert;ret[i*2+4]=edges[i+1].vert;ret[i*2+5]=edges[i+2].twin.next.vert;}}return ret;};// geoGroup.adjFaceArray =\n\t// computeAdjacency(faceArray,faceArray.length,offset);\n\t};// TODO: Need to update this (will we ever use this?)\n\tvar drawSmoothCurve=function drawSmoothCurve(group,_points,width,colors,div){if(_points.length===0)return;div=div===undefined?5:div;var geo=new $3Dmol.Geometry();var points=subdivide(_points,div);/*\n\t     * for ( var i = 0; i < points.length; i++) {\n\t     * geo.vertices.push(points[i]); geo.colors.push($3Dmol.color(colors[(i ==\n\t     * 0) ? 0 : Math.round((i - 1) / div)])); }\n\t     */var lineMaterial=new $3Dmol.LineBasicMaterial({linewidth:width});lineMaterial.vertexColors=true;var line=new $3Dmol.Line(geo,lineMaterial);line.type=$3Dmol.LineStrip;group.add(line);};var drawStrip=function drawStrip(geo,points,colors,div,thickness,opacity,shape){if(!shape||shape===\"default\")shape=\"rectangle\";if(shape==='edged')drawPlainStrip(geo,points,colors,div,thickness,opacity);else if(shape===\"rectangle\"||shape===\"oval\"||shape===\"parabola\")drawShapeStrip(geo,points,colors,div,thickness,opacity,shape);};// check if given atom is an alpha carbon\n\tvar isAlphaCarbon=function isAlphaCarbon(atom){return atom&&atom.elem===\"C\"&&atom.atom===\"CA\";// note that\n\t// calcium is\n\t// also CA\n\t};// check whether two atoms are members of the same residue or subsequent,\n\t// connected residues (a before b)\n\tvar inConnectedResidues=function inConnectedResidues(a,b){if(a&&b&&a.chain===b.chain){if(a.reschain===b.reschain&&(a.resi===b.resi||a.resi===b.resi-1))return true;if(a.resi<b.resi){// some PDBs have gaps in the numbering but the residues are\n\t// still connected\n\t// assume if within 4A they are connected\n\tvar dx=a.x-b.x;var dy=a.y-b.y;var dz=a.z-b.z;var dist=dx*dx+dy*dy+dz*dz;if(dist<16.0)return true;// calpha dist\n\t}}return false;};// add geo to the group\n\tvar setGeo=function setGeo(group,geo,opacity,outline,setNormals){if(geo==null||geo.vertices==0)return;if(setNormals){geo.initTypedArrays();geo.setUpNormals();}var cartoonMaterial=new $3Dmol.MeshDoubleLambertMaterial();cartoonMaterial.vertexColors=$3Dmol.FaceColors;if(typeof opacity===\"number\"&&opacity>=0&&opacity<1){cartoonMaterial.transparent=true;cartoonMaterial.opacity=opacity;}cartoonMaterial.outline=outline;var cartoonMesh=new $3Dmol.Mesh(geo,cartoonMaterial);group.add(cartoonMesh);};// proteins na backbone na terminus nucleobases\n\tvar cartoonAtoms={\"C\":true,\"CA\":true,\"O\":true,\"P\":true,\"OP2\":true,\"O2P\":true,\"O5'\":true,\"O3'\":true,\"C5'\":true,\"C2'\":true,\"O5*\":true,\"O3*\":true,\"C5*\":true,\"C2*\":true,\"N1\":true,\"N3\":true};var purResns={\"DA\":true,\"DG\":true,\"A\":true,\"G\":true};var pyrResns={\"DT\":true,\"DC\":true,\"U\":true,\"C\":true,\"T\":true};var naResns={\"DA\":true,\"DG\":true,\"A\":true,\"G\":true,\"DT\":true,\"DC\":true,\"U\":true,\"C\":true,\"T\":true};var drawCartoon=function drawCartoon(group,atomList,gradientScheme,fill,doNotSmoothen,num,div){num=num||defaultNum;div=div||defaultDiv;var cartoon,prev,curr,next,currColor,nextColor,thickness,i,nextResAtom,arrow;var backbonePt,orientPt,prevOrientPt,terminalPt,termOrientPt,baseStartPt,baseEndPt;var tubeStart,tubeEnd,drawingTube;var shapeGeo=new $3Dmol.Geometry(true);// for shapes that don't need normals computed\n\tvar geo=new $3Dmol.Geometry(true);var colors=[];var points=[];var opacity=1;var outline=false;for(var i=0;i<num;i++){points[i]=[];}// first determine where beta sheet arrows and alpha helix tubes belong\n\tvar inSheet=false;var inHelix=false;i=0;var atoms=[];for(i in atomList){next=atomList[i];if(next.elem==='C'&&next.atom==='CA'){var connected=inConnectedResidues(curr,next);// last two residues in a beta sheet become arrowhead\n\tif(connected&&next.ss===\"s\"){inSheet=true;}else if(inSheet){if(curr&&prev&&curr.style.cartoon.arrows&&prev.style.cartoon.arrows){curr.ss=\"arrow end\";prev.ss=\"arrow start\";}inSheet=false;}// first and last residues in a helix are used to draw tube\n\tif(connected&&curr.ss===\"h\"){if(!inHelix&&next.style.cartoon.tubes)next.ss=\"tube start\";inHelix=true;}else if(inHelix&&curr.ss!==\"tube start\"){if(prev&&prev.style.cartoon.tubes)prev.ss=\"tube end\";inHelix=false;}prev=curr;curr=next;}if(next&&next.atom in cartoonAtoms){atoms.push(next);}}var flushGeom=function flushGeom(){//write out points, update geom,etc\n\tfor(var i=0;!thickness&&i<num;i++){drawSmoothCurve(group,points[i],1,colors,div,opacity);}if(fill&&points[0].length>0){drawStrip(geo,points,colors,div,thickness,opacity,points.style);}points=[];for(i=0;i<num;i++){points[i]=[];}colors=[];setGeo(group,geo,opacity,outline,true);setGeo(group,shapeGeo,opacity,outline,false);geo=new $3Dmol.Geometry(true);shapeGeo=new $3Dmol.Geometry(true);};// then accumulate points\n\tcurr=undefined;for(var a=0;a<atoms.length;a++){next=atoms[a];var nextresn=next.resn.trim();var inNucleicAcid=nextresn in naResns;opacity=1;// determine cartoon style\n\tcartoon=next.style.cartoon;if(curr&&curr.style.cartoon)opacity=curr.style.cartoon.opacity;if(curr&&curr.style.cartoon&&curr.style.cartoon.outline)outline=curr.style.cartoon.outline;// create a new geometry when opacity changes\n\t//the should work fine if opacity is set by chain, but will\n\t//break if it changes within the chain\n\tif(curr&&curr.style.cartoon&&(!next.style.cartoon||curr.style.cartoon.opacity!=next.style.cartoon.opacity)){flushGeom();}if(cartoon.style===\"trace\")// draw cylinders connecting\n\t// consecutive 'backbone' atoms\n\t{/*\n\t         * \"trace\" style just draws cylinders between consecutive\n\t         * 'backbone' atoms, such as alpha carbon for polypeptides and\n\t         * phosphorus for DNA.\n\t         */if(next.elem==='C'&&next.atom==='CA'||inNucleicAcid&&next.atom===\"P\"){// determine cylinder color\n\tif(gradientScheme&&cartoon.color==='spectrum')nextColor=gradientScheme.valueToHex(next.resi,gradientScheme.range());else nextColor=$3Dmol.getColorFromStyle(next,cartoon).getHex();// determine cylinder thickness\n\tif($.isNumeric(cartoon.thickness))thickness=cartoon.thickness;else thickness=defaultThickness;if(inConnectedResidues(curr,next)){// if both atoms are same color, draw single cylinder\n\tif(nextColor==currColor){var color=$3Dmol.CC.color(nextColor);$3Dmol.GLDraw.drawCylinder(shapeGeo,curr,next,thickness,color,2,2);}else// otherwise draw cylinders for each color\n\t// (split down the middle)\n\t{var midpoint=new $3Dmol.Vector3().addVectors(curr,next).multiplyScalar(0.5);var color1=$3Dmol.CC.color(currColor);var color2=$3Dmol.CC.color(nextColor);$3Dmol.GLDraw.drawCylinder(shapeGeo,curr,midpoint,thickness,color1,2,0);$3Dmol.GLDraw.drawCylinder(shapeGeo,midpoint,next,thickness,color2,0,2);}// note that an atom object can be duck-typed as a\n\t// $3Dmol.Vector3 in this case\n\t}curr=next;currColor=nextColor;}}else// draw default-style cartoons based on secondary structure\n\t{// draw backbone through these atoms\n\tif(isAlphaCarbon(next)||inNucleicAcid&&(next.atom===\"P\"||next.atom.indexOf('O5')==0)){if(drawingTube){if(next.ss===\"tube end\"){drawingTube=false;tubeEnd=new $3Dmol.Vector3(next.x,next.y,next.z);$3Dmol.GLDraw.drawCylinder(shapeGeo,tubeStart,tubeEnd,2,$3Dmol.CC.color(currColor),1,1);next.ss=\"h\";}else continue;// don't accumulate strand points while\n\t// in the middle of drawing a tube\n\t}// end of a chain of connected residues (of same style)\n\tif(curr&&(!inConnectedResidues(curr,next)||curr.ss===\"tube start\")){if(curr.ss===\"tube start\"){drawingTube=true;tubeStart=new $3Dmol.Vector3(curr.x,curr.y,curr.z);curr.ss=\"h\";}if(baseEndPt)// draw the last base if it's a NA chain\n\t{if(terminalPt)baseStartPt=new $3Dmol.Vector3().addVectors(curr,terminalPt).multiplyScalar(0.5);else baseStartPt=new $3Dmol.Vector3(curr.x,curr.y,curr.z);$3Dmol.GLDraw.drawCylinder(shapeGeo,baseStartPt,baseEndPt,0.4,$3Dmol.CC.color(baseEndPt.color),0,2);arrow=addBackbonePoints(points,num,!doNotSmoothen,terminalPt,termOrientPt,prevOrientPt,curr,atoms,a);colors.push(nextColor);if(arrow)colors.push(nextColor);baseStartPt=null;baseEndPt=null;}// draw accumulated strand points\n\tfor(i=0;!thickness&&i<num;i++){drawSmoothCurve(group,points[i],1,colors,div,opacity);}if(fill&&points[0].length>0)drawStrip(geo,points,colors,div,thickness,opacity,points.style);// clear arrays for points and colors\n\tpoints=[];for(i=0;i<num;i++){points[i]=[];}colors=[];}// reached next residue (potentially the first residue)\n\tif(curr===undefined||curr.rescode!=next.rescode||curr.resi!=next.resi){if(baseEndPt)// draw last NA residue's base\n\t{// start the cylinder at the midpoint between\n\t// consecutive backbone atoms\n\tbaseStartPt=new $3Dmol.Vector3().addVectors(curr,next).multiplyScalar(0.5);var startFix=baseStartPt.clone().sub(baseEndPt).multiplyScalar(0.02);// TODO: apply this\n\t// as function of\n\t// thickness\n\tbaseStartPt.add(startFix);$3Dmol.GLDraw.drawCylinder(shapeGeo,baseStartPt,baseEndPt,0.4,$3Dmol.CC.color(baseEndPt.color),0,2);baseStartPt=null;baseEndPt=null;}// determine color and thickness of the next strand\n\t// segment\n\tif(gradientScheme&&cartoon.color==='spectrum')nextColor=gradientScheme.valueToHex(next.resi,gradientScheme.range());else nextColor=$3Dmol.getColorFromStyle(next,cartoon).getHex();colors.push(nextColor);if($.isNumeric(cartoon.thickness))thickness=cartoon.thickness;else thickness=defaultThickness;curr=next;// advance backbone\n\tbackbonePt=new $3Dmol.Vector3(curr.x,curr.y,curr.z);backbonePt.resi=curr.resi;currColor=nextColor;}// click handling\n\tif(next.clickable===true&&(next.intersectionShape===undefined||next.intersectionShape.triangle===undefined))next.intersectionShape={sphere:null,cylinder:[],line:[],triangle:[]};}// atoms used to orient the backbone strand\n\telse if(isAlphaCarbon(curr)&&next.atom===\"O\"||inNucleicAcid&&curr.atom===\"P\"&&(next.atom===\"OP2\"||next.atom===\"O2P\")||inNucleicAcid&&curr.atom.indexOf(\"O5\")==0&&next.atom.indexOf(\"C5\")==0){orientPt=new $3Dmol.Vector3(next.x,next.y,next.z);orientPt.resi=next.resi;if(next.atom===\"OP2\"||next.atom===\"O2P\")// for NA 3'\n\t// terminus\n\ttermOrientPt=new $3Dmol.Vector3(next.x,next.y,next.z);}// NA 3' terminus is an edge case, need a vector for most recent\n\t// O3'\n\telse if(inNucleicAcid&&next.atom.indexOf(\"O3\")==0){terminalPt=new $3Dmol.Vector3(next.x,next.y,next.z);}// atoms used for drawing the NA base cylinders (diff for\n\t// purines and pyramidines)\n\telse if(next.atom===\"N1\"&&nextresn in purResns||next.atom===\"N3\"&&nextresn in pyrResns){baseEndPt=new $3Dmol.Vector3(next.x,next.y,next.z);baseEndPt.color=$3Dmol.getColorFromStyle(next,cartoon).getHex();}// when we have a backbone point and orientation point in the\n\t// same residue, accumulate strand points\n\tif(orientPt&&backbonePt&&orientPt.resi===backbonePt.resi){arrow=addBackbonePoints(points,num,!doNotSmoothen,backbonePt,orientPt,prevOrientPt,curr,atoms,a);prevOrientPt=orientPt;backbonePt=null;orientPt=null;colors.push(nextColor);if(arrow)colors.push(nextColor);}}}if(baseEndPt)// draw last NA base if needed\n\t{if(terminalPt)baseStartPt=new $3Dmol.Vector3().addVectors(curr,terminalPt).multiplyScalar(0.5);else baseStartPt=new $3Dmol.Vector3(curr.x,curr.y,curr.z);$3Dmol.GLDraw.drawCylinder(shapeGeo,baseStartPt,baseEndPt,0.4,$3Dmol.CC.color(baseEndPt.color),0,2);arrow=addBackbonePoints(points,num,!doNotSmoothen,terminalPt,termOrientPt,prevOrientPt,curr,atoms,a);colors.push(nextColor);if(arrow)colors.push(nextColor);}// for default style, draw the last strand\n\tflushGeom();};var addBackbonePoints=function addBackbonePoints(points,num,smoothen,backbonePt,orientPt,prevOrientPt,backboneAtom,atoms,atomi){var widthScalar,i,delta,v,addArrowPoints,testOpacity,testStyle;if(!backbonePt||!orientPt||!backboneAtom)return;// the side vector points along the axis from backbone atom to\n\t// orientation atom (eg. CA to O, in peptides)\n\tvar sideVec=orientPt.sub(backbonePt);sideVec.normalize();//find next atom like this one\n\tvar forwardVec=atoms[atomi];for(var i=atomi+1;i<atoms.length;i++){forwardVec=atoms[i];if(forwardVec.atom==backboneAtom.atom)break;}// the forward vector points along the axis from backbone atom to next\n\t// backbone atom\n\tforwardVec=forwardVec?new $3Dmol.Vector3(forwardVec.x,forwardVec.y,forwardVec.z):new $3Dmol.Vector3(0,0,0);forwardVec.sub(backbonePt);// adjustments for proper beta arrow appearance\n\tif(backboneAtom.ss===\"arrow start\"){var adjustment=forwardVec.clone().multiplyScalar(0.3).cross(orientPt);// adjust perpendicularly to strand face\n\tbackbonePt.add(adjustment);var upVec=forwardVec.clone().cross(sideVec).normalize();sideVec.rotateAboutVector(upVec,0.43);}// determine from cartoon style or secondary structure how wide the\n\t// strand should be here\n\t// ribbon shape should have same width as thickness\n\tif(backboneAtom.style.cartoon.ribbon){widthScalar=backboneAtom.style.cartoon.thickness||defaultThickness;}else// depending on secondary structure, multiply the orientation\n\t// vector by some scalar\n\t{if(!backboneAtom.style.cartoon.width){if(backboneAtom.ss===\"c\"){if(backboneAtom.atom===\"P\")widthScalar=nucleicAcidWidth;else widthScalar=coilWidth;}else if(backboneAtom.ss===\"arrow start\"){widthScalar=helixSheetWidth;addArrowPoints=true;}else if(backboneAtom.ss===\"arrow end\")widthScalar=coilWidth;else if(backboneAtom.ss===\"h\"&&backboneAtom.style.cartoon.tubes||backboneAtom.ss===\"tube start\")widthScalar=coilWidth;else widthScalar=helixSheetWidth;}else widthScalar=backboneAtom.style.cartoon.width;}// make sure the strand orientation doesn't twist more than 90 degrees\n\tif(prevOrientPt!=null&&sideVec.dot(prevOrientPt)<0)sideVec.negate();sideVec.multiplyScalar(widthScalar);for(i=0;i<num;i++){// produces NUM incremental points from backbone atom minus\n\t// orientation vector\n\t// to backbone atom plus orientation vector\n\tdelta=-1+i*2/(num-1);// -1 to 1 incrementing by num\n\tv=new $3Dmol.Vector3(backbonePt.x+delta*sideVec.x,backbonePt.y+delta*sideVec.y,backbonePt.z+delta*sideVec.z);v.atom=backboneAtom;if(smoothen&&backboneAtom.ss===\"s\")v.smoothen=true;points[i].push(v);// a num-length array of arrays, where each\n\t// inner array contains length-wise points\n\t// along the backbone offset by some constant pertaining to its cell\n\t// in the outer array\n\t}if(addArrowPoints){sideVec.multiplyScalar(2);for(i=0;i<num;i++){delta=-1+i*2/(num-1);// -1 to 1 incrementing by num\n\tv=new $3Dmol.Vector3(backbonePt.x+delta*sideVec.x,backbonePt.y+delta*sideVec.y,backbonePt.z+delta*sideVec.z);v.atom=backboneAtom;v.smoothen=false;v.skip=true;points[i].push(v);}}// make sure the strand is all the same style\n\ttestStyle=backboneAtom.style.cartoon.style||'default';if(points.style){if(points.style!=testStyle){console.log(\"Warning: a cartoon chain's strand-style is ambiguous\");points.style='default';}}else points.style=testStyle;// revert ss keywords used for arrow rendering back to original value\n\tif(backboneAtom.ss===\"arrow start\"||backboneAtom.ss===\"arrow end\")backboneAtom.ss=\"s\";return addArrowPoints;};var defaultDrawCartoon=function defaultDrawCartoon(group,atomList,gradientScheme,quality){quality=parseInt(parseFloat(quality)*5)||5;drawCartoon(group,atomList,gradientScheme,true,false,quality,quality);};return defaultDrawCartoon;}();//\n\tvar $3Dmol=$3Dmol||{};/**\n\t * Lower level utilities for creating WebGL shape geometries.\n\t * These are not intended for general consumption.\n\t * @namespace $3Dmol.GLDraw\n\t  */$3Dmol.GLDraw=function(){var draw={};// object for exporting functions\n\t// Rotation matrix around z and x axis -\n\t// according to y basis vector\n\t// TODO: Try to optimize this (square roots?)\n\tvar getRotationMatrix=function(){var d=new $3Dmol.Vector3();// var rot = new Float32Array(9);\n\treturn function(dir){d.set(dir[0],dir[1],dir[2]);var dx=d.x,dy=d.y,dz=d.z;var dxy=Math.sqrt(dx*dx+dy*dy);var dxz,dyz;var sinA,cosA,sinB,cosB,sinC,cosC;// about z axis - Phi\n\tif(dxy<0.0001){sinA=0;cosA=1;}else{sinA=-dx/dxy;cosA=dy/dxy;}// recast dy in terms of new axes - z is the same\n\tdy=-sinA*dx+cosA*dy;dyz=Math.sqrt(dy*dy+dz*dz);// about new x axis - Theta\n\tif(dyz<0.0001){sinB=0;cosB=1;}else{sinB=dz/dyz;cosB=dy/dyz;}var rot=new Float32Array(9);rot[0]=cosA;rot[1]=sinA;rot[2]=0;rot[3]=-sinA*cosB;rot[4]=cosA*cosB;rot[5]=sinB;rot[6]=sinA*sinB;rot[7]=-cosA*sinB;rot[8]=cosB;return rot;};}();// Ortho normal vectors for cylinder radius/ sphere cap equator and cones\n\t// Direction is j basis (0,1,0)\n\tvar basisVectors=function(){var ret={vertices:[],norms:[]};var nvecs=[];var subdivisions=4;// including the initial 2, eg. 4 => 16 subintervals\n\tvar N=Math.pow(2,subdivisions);// eg. 2**4 = 16 subintervals in total\n\tvar i=2;// start with 2 subdivisions already done\n\tvar M=Math.pow(2,i);// 4\n\tvar spacing=N/M;// 16/4 = 4; if there were 5 subdivs, then 32/4 = 8.\n\tvar j;nvecs[0]=new $3Dmol.Vector3(-1,0,0);nvecs[spacing]=new $3Dmol.Vector3(0,0,1);nvecs[spacing*2]=new $3Dmol.Vector3(1,0,0);nvecs[spacing*3]=new $3Dmol.Vector3(0,0,-1);for(i=3;i<=subdivisions;i++){// eg. i=3, we need to add 2**(3-1) = 4 new vecs. Call it M.\n\t// their spacing is N/M, eg. N=16, M=4, N/M=4; M=8, N/M=2.\n\t// they start off at half this spacing\n\t// and are equal to the average of the two vectors on either side\n\tM=Math.pow(2,i-1);spacing=N/M;for(j=0;j<M-1;j++){nvecs[spacing/2+j*spacing]=nvecs[j*spacing].clone().add(nvecs[(j+1)*spacing]).normalize();}// treat the last one specially so it wraps around to zero\n\tj=M-1;nvecs[spacing/2+j*spacing]=nvecs[j*spacing].clone().add(nvecs[0]).normalize();}/*\n\t         * nvecs[0] = new $3Dmol.Vector3(-1,0,0); nvecs[1] = new\n\t         * $3Dmol.Vector3(0,0,1); nvecs[2] = new $3Dmol.Vector3(1,0,0);\n\t         * nvecs[3] = new $3Dmol.Vector3(0,0,-1);\n\t         */return nvecs;}();// memoize capped cylinder for given radius\n\tvar cylVertexCache={// memoize both rounded and flat caps (hemisphere and circle)\n\tcache:{false:{},true:{}},getVerticesForRadius:function getVerticesForRadius(radius,flat){if(this.cache[flat][radius]!==undefined)return this.cache[flat][radius];var dir=new $3Dmol.Vector3(0,1,0);var w=basisVectors.length;var nvecs=[],norms=[];var n;for(var i=0;i<w;i++){// bottom\n\tnvecs.push(basisVectors[i].clone().multiplyScalar(radius));// top\n\tnvecs.push(basisVectors[i].clone().multiplyScalar(radius));// NOTE: this normal is used for constructing sphere caps -\n\t// cylinder normals taken care of in drawCylinder\n\tn=basisVectors[i].clone().normalize();norms.push(n);norms.push(n);}// norms[0]\n\tvar verticesRows=[];// Require that heightSegments is even and >= 2\n\t// Equator points at h/2 (theta = pi/2)\n\t// (repeated) polar points at 0 and h (theta = 0 and pi)\n\tvar heightSegments=10,widthSegments=w;// 16 or however many\n\t// basis vectors for\n\t// cylinder\n\tif(heightSegments%2!==0||!heightSegments){console.error(\"heightSegments must be even\");return null;}var phiStart=0;var phiLength=Math.PI*2;var thetaStart=0;var thetaLength=Math.PI;var x,y;var polar=false,equator=false;for(y=0;y<=heightSegments;y++){polar=y===0||y===heightSegments?true:false;equator=y===heightSegments/2?true:false;var verticesRow=[],toRow=[];for(x=0;x<=widthSegments;x++){// Two vertices rows for equator pointing to previously\n\t// constructed cyl points\n\tif(equator){var xi=x<widthSegments?2*x:0;toRow.push(xi+1);verticesRow.push(xi);continue;}var u=x/widthSegments;var v=y/heightSegments;// Only push first polar point\n\tif(!polar||x===0){if(x<widthSegments){var vertex=new $3Dmol.Vector3();vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=flat?0:radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);if(Math.abs(vertex.x)<1e-5)vertex.x=0;if(Math.abs(vertex.y)<1e-5)vertex.y=0;if(Math.abs(vertex.z)<1e-5)vertex.z=0;if(flat){n=new $3Dmol.Vector3(0,Math.cos(thetaStart+v*thetaLength),0);n.normalize();}else{n=new $3Dmol.Vector3(vertex.x,vertex.y,vertex.z);n.normalize();}nvecs.push(vertex);norms.push(n);verticesRow.push(nvecs.length-1);}// last point is just the first point for this row\n\telse{verticesRow.push(nvecs.length-widthSegments);}}// x > 0; index to already added point\n\telse if(polar)verticesRow.push(nvecs.length-1);}// extra equator row\n\tif(equator)verticesRows.push(toRow);verticesRows.push(verticesRow);}var obj={vertices:nvecs,normals:norms,verticesRows:verticesRows,w:widthSegments,h:heightSegments};this.cache[flat][radius]=obj;return obj;}};// creates a cylinder\n\tvar drawnC=0;/** Create a cylinder\n\t     * @function $3Dmol.GLDraw.drawCylinder\n\t     * @param {geometry}\n\t     *            geo\n\t     * @param {Point}\n\t     *            from\n\t     * @param {Point}\n\t     *            to\n\t     * @param {float}\n\t     *            radius\n\t     * @param {$3Dmol.Color}\n\t     *            color\n\t     * @param {integer} fromCap - 0 for none, 1 for flat, 2 for round; Note: currently do not support different styles of caps on the same cylinder.\n\t     * @param {integer} toCap = 0 for none, 1 for flat, 2 for round\n\t     *\n\t     * */draw.drawCylinder=function(geo,from,to,radius,color,fromCap,toCap){if(!from||!to)return;drawnC++;// vertices\n\tvar drawcaps=fromCap||toCap;var flat=false;if(fromCap==1&&toCap==1)// 0 is none, 1 is flat, 2 is round\n\tflat=true;color=color||{r:0,g:0,b:0};/** @type {Array.<number>} */var dir=[to.x,to.y,to.z];dir[0]-=from.x;dir[1]-=from.y;dir[2]-=from.z;var e=getRotationMatrix(dir);// get orthonormal vectors from cache\n\t// TODO: Will have orient with model view matrix according to direction\n\tvar vobj=cylVertexCache.getVerticesForRadius(radius,flat);// w (n) corresponds to the number of orthonormal vectors for cylinder\n\t// (default 16)\n\tvar n=vobj.w,h=vobj.h;var w=n;// get orthonormal vector\n\tvar n_verts=drawcaps?h*n+2:2*n;var geoGroup=geo.updateGeoGroup(n_verts);var vertices=vobj.vertices,normals=vobj.normals,verticesRows=vobj.verticesRows;var toRow=verticesRows[h/2],fromRow=verticesRows[h/2+1];var start=geoGroup.vertices;var offset,faceoffset;var i,x,y,z;var vertexArray=geoGroup.vertexArray;var normalArray=geoGroup.normalArray;var colorArray=geoGroup.colorArray;var faceArray=geoGroup.faceArray;// add vertices, opposing vertices paired together\n\tfor(i=0;i<n;++i){var vi=2*i;x=e[0]*vertices[vi].x+e[3]*vertices[vi].y+e[6]*vertices[vi].z;y=e[1]*vertices[vi].x+e[4]*vertices[vi].y+e[7]*vertices[vi].z;z=e[5]*vertices[vi].y+e[8]*vertices[vi].z;// var xn = x/radius, yn = y/radius, zn = z/radius;\n\toffset=3*(start+vi);faceoffset=geoGroup.faceidx;// from\n\tvertexArray[offset]=x+from.x;vertexArray[offset+1]=y+from.y;vertexArray[offset+2]=z+from.z;// to\n\tvertexArray[offset+3]=x+to.x;vertexArray[offset+4]=y+to.y;vertexArray[offset+5]=z+to.z;// normals\n\tnormalArray[offset]=x;normalArray[offset+3]=x;normalArray[offset+1]=y;normalArray[offset+4]=y;normalArray[offset+2]=z;normalArray[offset+5]=z;// colors\n\tcolorArray[offset]=color.r;colorArray[offset+3]=color.r;colorArray[offset+1]=color.g;colorArray[offset+4]=color.g;colorArray[offset+2]=color.b;colorArray[offset+5]=color.b;// faces\n\t// 0 - 2 - 1\n\tfaceArray[faceoffset]=fromRow[i]+start;faceArray[faceoffset+1]=fromRow[i+1]+start;faceArray[faceoffset+2]=toRow[i]+start;// 1 - 2 - 3\n\tfaceArray[faceoffset+3]=toRow[i]+start;faceArray[faceoffset+4]=fromRow[i+1]+start;faceArray[faceoffset+5]=toRow[i+1]+start;geoGroup.faceidx+=6;}// SPHERE CAPS\n\tif(drawcaps){// h - sphere rows, verticesRows.length - 2\n\tvar ystart=toCap?0:h/2;var yend=fromCap?h+1:h/2+1;var v1,v2,v3,v4,x1,x2,x3,x4,y1,y2,y3,y4,z1,z2,z3,z4,nx1,nx2,nx3,nx4,ny1,ny2,ny3,ny4,nz1,nz2,nz3,nz4,v1offset,v2offset,v3offset,v4offset;for(y=ystart;y<yend;y++){if(y===h/2)continue;// n number of points for each level (verticesRows[i].length -\n\t// 1)\n\tvar cap=y<=h/2?to:from;for(x=0;x<n;x++){faceoffset=geoGroup.faceidx;v1=verticesRows[y][x+1];v1offset=(v1+start)*3;v2=verticesRows[y][x];v2offset=(v2+start)*3;v3=verticesRows[y+1][x];v3offset=(v3+start)*3;v4=verticesRows[y+1][x+1];v4offset=(v4+start)*3;// rotate sphere vectors\n\tx1=e[0]*vertices[v1].x+e[3]*vertices[v1].y+e[6]*vertices[v1].z;x2=e[0]*vertices[v2].x+e[3]*vertices[v2].y+e[6]*vertices[v2].z;x3=e[0]*vertices[v3].x+e[3]*vertices[v3].y+e[6]*vertices[v3].z;x4=e[0]*vertices[v4].x+e[3]*vertices[v4].y+e[6]*vertices[v4].z;y1=e[1]*vertices[v1].x+e[4]*vertices[v1].y+e[7]*vertices[v1].z;y2=e[1]*vertices[v2].x+e[4]*vertices[v2].y+e[7]*vertices[v2].z;y3=e[1]*vertices[v3].x+e[4]*vertices[v3].y+e[7]*vertices[v3].z;y4=e[1]*vertices[v4].x+e[4]*vertices[v4].y+e[7]*vertices[v4].z;z1=e[5]*vertices[v1].y+e[8]*vertices[v1].z;z2=e[5]*vertices[v2].y+e[8]*vertices[v2].z;z3=e[5]*vertices[v3].y+e[8]*vertices[v3].z;z4=e[5]*vertices[v4].y+e[8]*vertices[v4].z;vertexArray[v1offset]=x1+cap.x;vertexArray[v2offset]=x2+cap.x;vertexArray[v3offset]=x3+cap.x;vertexArray[v4offset]=x4+cap.x;vertexArray[v1offset+1]=y1+cap.y;vertexArray[v2offset+1]=y2+cap.y;vertexArray[v3offset+1]=y3+cap.y;vertexArray[v4offset+1]=y4+cap.y;vertexArray[v1offset+2]=z1+cap.z;vertexArray[v2offset+2]=z2+cap.z;vertexArray[v3offset+2]=z3+cap.z;vertexArray[v4offset+2]=z4+cap.z;colorArray[v1offset]=color.r;colorArray[v2offset]=color.r;colorArray[v3offset]=color.r;colorArray[v4offset]=color.r;colorArray[v1offset+1]=color.g;colorArray[v2offset+1]=color.g;colorArray[v3offset+1]=color.g;colorArray[v4offset+1]=color.g;colorArray[v1offset+2]=color.b;colorArray[v2offset+2]=color.b;colorArray[v3offset+2]=color.b;colorArray[v4offset+2]=color.b;nx1=e[0]*normals[v1].x+e[3]*normals[v1].y+e[6]*normals[v1].z;nx2=e[0]*normals[v2].x+e[3]*normals[v2].y+e[6]*normals[v2].z;nx3=e[0]*normals[v3].x+e[3]*normals[v3].y+e[6]*normals[v3].z;nx4=e[0]*normals[v4].x+e[3]*normals[v4].y+e[6]*normals[v4].z;ny1=e[1]*normals[v1].x+e[4]*normals[v1].y+e[7]*normals[v1].z;ny2=e[1]*normals[v2].x+e[4]*normals[v2].y+e[7]*normals[v2].z;ny3=e[1]*normals[v3].x+e[4]*normals[v3].y+e[7]*normals[v3].z;ny4=e[1]*normals[v4].x+e[4]*normals[v4].y+e[7]*normals[v4].z;nz1=e[5]*normals[v1].y+e[8]*normals[v1].z;nz2=e[5]*normals[v2].y+e[8]*normals[v2].z;nz3=e[5]*normals[v3].y+e[8]*normals[v3].z;nz4=e[5]*normals[v4].y+e[8]*normals[v4].z;// if (Math.abs(vobj.sphereVertices[v1].y) === radius) {\n\tif(y===0){// face = [v1, v3, v4];\n\t// norm = [n1, n3, n4];\n\tnormalArray[v1offset]=nx1;normalArray[v3offset]=nx3;normalArray[v4offset]=nx4;normalArray[v1offset+1]=ny1;normalArray[v3offset+1]=ny3;normalArray[v4offset+1]=ny4;normalArray[v1offset+2]=nz1;normalArray[v3offset+2]=nz3;normalArray[v4offset+2]=nz4;faceArray[faceoffset]=v1+start;faceArray[faceoffset+1]=v3+start;faceArray[faceoffset+2]=v4+start;geoGroup.faceidx+=3;}// else if (Math.abs(vobj.sphereVertices[v3].y) === radius)\n\t// {\n\telse if(y===yend-1){// face = [v1, v2, v3];\n\t// norm = [n1, n2, n3];\n\tnormalArray[v1offset]=nx1;normalArray[v2offset]=nx2;normalArray[v3offset]=nx3;normalArray[v1offset+1]=ny1;normalArray[v2offset+1]=ny2;normalArray[v3offset+1]=ny3;normalArray[v1offset+2]=nz1;normalArray[v2offset+2]=nz2;normalArray[v3offset+2]=nz3;faceArray[faceoffset]=v1+start;faceArray[faceoffset+1]=v2+start;faceArray[faceoffset+2]=v3+start;geoGroup.faceidx+=3;}else{// face = [v1, v2, v3, v4];\n\t// norm = [n1, n2, n3, n4];\n\tnormalArray[v1offset]=nx1;normalArray[v2offset]=nx2;normalArray[v4offset]=nx4;normalArray[v1offset+1]=ny1;normalArray[v2offset+1]=ny2;normalArray[v4offset+1]=ny4;normalArray[v1offset+2]=nz1;normalArray[v2offset+2]=nz2;normalArray[v4offset+2]=nz4;normalArray[v2offset]=nx2;normalArray[v3offset]=nx3;normalArray[v4offset]=nx4;normalArray[v2offset+1]=ny2;normalArray[v3offset+1]=ny3;normalArray[v4offset+1]=ny4;normalArray[v2offset+2]=nz2;normalArray[v3offset+2]=nz3;normalArray[v4offset+2]=nz4;faceArray[faceoffset]=v1+start;faceArray[faceoffset+1]=v2+start;faceArray[faceoffset+2]=v4+start;faceArray[faceoffset+3]=v2+start;faceArray[faceoffset+4]=v3+start;faceArray[faceoffset+5]=v4+start;geoGroup.faceidx+=6;}}}}geoGroup.vertices+=n_verts;};/** Create a cone\n\t     * @function $3Dmol.GLDraw.drawCone\n\t     * @param {geometry}\n\t     *            geo\n\t     * @param {Point}\n\t     *            from\n\t     * @param {Point}\n\t     *            to\n\t     * @param {float}\n\t     *            radius\n\t     * @param {$3Dmol.Color}\n\t     *            color\n\t     *            */draw.drawCone=function(geo,from,to,radius,color){if(!from||!to)return;color=color||{r:0,g:0,b:0};var dir=[to.x,to.y,to.z];dir.x-=from.x;dir.y-=from.y;dir.z-=from.z;var e=getRotationMatrix(dir);// n vertices around bottom plust the two points\n\tvar n=basisVectors.length;var basis=basisVectors;var n_verts=n+2;//setup geo structures\n\tvar geoGroup=geo.updateGeoGroup(n_verts);var start=geoGroup.vertices;var offset,faceoffset;var i,x,y,z;var vertexArray=geoGroup.vertexArray;var normalArray=geoGroup.normalArray;var colorArray=geoGroup.colorArray;var faceArray=geoGroup.faceArray;var offset=start*3;var ndir=new $3Dmol.Vector3(dir[0],dir[1],dir[2]).normalize();//base point first vertex\n\tvertexArray[offset]=from.x;vertexArray[offset+1]=from.y;vertexArray[offset+2]=from.z;normalArray[offset]=-ndir.x;normalArray[offset+1]=-ndir.y;normalArray[offset+2]=-ndir.z;colorArray[offset]=color.r;colorArray[offset+1]=color.g;colorArray[offset+2]=color.b;//second vertex top\n\tvertexArray[offset+3]=to.x;vertexArray[offset+4]=to.y;vertexArray[offset+5]=to.z;normalArray[offset+3]=ndir.x;normalArray[offset+4]=ndir.y;normalArray[offset+5]=ndir.z;colorArray[offset+3]=color.r;colorArray[offset+4]=color.g;colorArray[offset+5]=color.b;offset+=6;// add circle vertices\n\tfor(i=0;i<n;++i){var vec=basis[i].clone();vec.multiplyScalar(radius);x=e[0]*vec.x+e[3]*vec.y+e[6]*vec.z;y=e[1]*vec.x+e[4]*vec.y+e[7]*vec.z;z=e[5]*vec.y+e[8]*vec.z;// from\n\tvertexArray[offset]=x+from.x;vertexArray[offset+1]=y+from.y;vertexArray[offset+2]=z+from.z;// normals\n\tnormalArray[offset]=x;normalArray[offset+1]=y;normalArray[offset+2]=z;// colors\n\tcolorArray[offset]=color.r;colorArray[offset+1]=color.g;colorArray[offset+2]=color.b;offset+=3;}geoGroup.vertices+=n+2;//faces\n\tvar faceoffset=geoGroup.faceidx;for(i=0;i<n;i++){//two neighboring circle vertices\n\tvar v1=start+2+i;var v2=start+2+(i+1)%n;faceArray[faceoffset]=v1;faceArray[faceoffset+1]=v2;faceArray[faceoffset+2]=start;faceoffset+=3;faceArray[faceoffset]=v1;faceArray[faceoffset+1]=v2;faceArray[faceoffset+2]=start+1;faceoffset+=3;}geoGroup.faceidx+=6*n;};// Sphere component\n\tvar sphereVertexCache={cache:{},getVerticesForRadius:function getVerticesForRadius(radius){if(typeof this.cache[radius]!==\"undefined\")return this.cache[radius];var obj={vertices:[],verticesRows:[],normals:[]};// scale quality with radius heuristically\n\tvar sphereQuality=1;var widthSegments=16*sphereQuality;var heightSegments=10*sphereQuality;if(radius<1){widthSegments=10*sphereQuality;heightSegments=8*sphereQuality;}var phiStart=0;var phiLength=Math.PI*2;var thetaStart=0;var thetaLength=Math.PI;var x,y,vertices=[],uvs=[];for(y=0;y<=heightSegments;y++){var verticesRow=[];for(x=0;x<=widthSegments;x++){var u=x/widthSegments;var v=y/heightSegments;var vertex={};vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);var n=new $3Dmol.Vector3(vertex.x,vertex.y,vertex.z);n.normalize();obj.vertices.push(vertex);obj.normals.push(n);verticesRow.push(obj.vertices.length-1);}obj.verticesRows.push(verticesRow);}this.cache[radius]=obj;return obj;}};/** Create a sphere.\n\t     * @function $3Dmol.GLDraw.drawSphere\n\t     * @param {geometry}\n\t     *            geo\n\t     * @param {Point}\n\t     *            pos\n\t     * @param {float}\n\t     *            radius\n\t     * @param {$3Dmol.Color}\n\t     *            color\n\t     */draw.drawSphere=function(geo,pos,radius,color){var center=new $3Dmol.Vector3(pos.x,pos.y,pos.z);var x,y;var vobj=sphereVertexCache.getVerticesForRadius(radius);var vertices=vobj.vertices;var normals=vobj.normals;var geoGroup=geo.updateGeoGroup(vertices.length);var start=geoGroup.vertices;var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;var faceArray=geoGroup.faceArray;var lineArray=geoGroup.lineArray;var normalArray=geoGroup.normalArray;for(var i=0,il=vertices.length;i<il;++i){var offset=3*(start+i);var v=vertices[i];vertexArray[offset]=v.x+pos.x;vertexArray[offset+1]=v.y+pos.y;vertexArray[offset+2]=v.z+pos.z;colorArray[offset]=color.r;colorArray[offset+1]=color.g;colorArray[offset+2]=color.b;}geoGroup.vertices+=vertices.length;var verticesRows=vobj.verticesRows;var h=verticesRows.length-1;for(y=0;y<h;y++){var w=verticesRows[y].length-1;for(x=0;x<w;x++){var faceoffset=geoGroup.faceidx,lineoffset=geoGroup.lineidx;var v1=verticesRows[y][x+1]+start,v1offset=v1*3;var v2=verticesRows[y][x]+start,v2offset=v2*3;var v3=verticesRows[y+1][x]+start,v3offset=v3*3;var v4=verticesRows[y+1][x+1]+start,v4offset=v4*3;var n1=normals[v1-start];var n2=normals[v2-start];var n3=normals[v3-start];var n4=normals[v4-start];var face,norm;if(Math.abs(vertices[v1-start].y)===radius){// face = [v1, v3, v4];\n\t// norm = [n1, n3, n4];\n\tnormalArray[v1offset]=n1.x;normalArray[v3offset]=n3.x;normalArray[v4offset]=n4.x;normalArray[v1offset+1]=n1.y;normalArray[v3offset+1]=n3.y;normalArray[v4offset+1]=n4.y;normalArray[v1offset+2]=n1.z;normalArray[v3offset+2]=n3.z;normalArray[v4offset+2]=n4.z;faceArray[faceoffset]=v1;faceArray[faceoffset+1]=v3;faceArray[faceoffset+2]=v4;lineArray[lineoffset]=v1;lineArray[lineoffset+1]=v3;lineArray[lineoffset+2]=v1;lineArray[lineoffset+3]=v4;lineArray[lineoffset+4]=v3;lineArray[lineoffset+5]=v4;geoGroup.faceidx+=3;geoGroup.lineidx+=6;}else if(Math.abs(vertices[v3-start].y)===radius){// face = [v1, v2, v3];\n\t// norm = [n1, n2, n3];\n\tnormalArray[v1offset]=n1.x;normalArray[v2offset]=n2.x;normalArray[v3offset]=n3.x;normalArray[v1offset+1]=n1.y;normalArray[v2offset+1]=n2.y;normalArray[v3offset+1]=n3.y;normalArray[v1offset+2]=n1.z;normalArray[v2offset+2]=n2.z;normalArray[v3offset+2]=n3.z;faceArray[faceoffset]=v1;faceArray[faceoffset+1]=v2;faceArray[faceoffset+2]=v3;lineArray[lineoffset]=v1;lineArray[lineoffset+1]=v2;lineArray[lineoffset+2]=v1;lineArray[lineoffset+3]=v3;lineArray[lineoffset+4]=v2;lineArray[lineoffset+5]=v3;geoGroup.faceidx+=3;geoGroup.lineidx+=6;}else{// face = [v1, v2, v3, v4];\n\t// norm = [n1, n2, n3, n4];\n\tnormalArray[v1offset]=n1.x;normalArray[v2offset]=n2.x;normalArray[v4offset]=n4.x;normalArray[v1offset+1]=n1.y;normalArray[v2offset+1]=n2.y;normalArray[v4offset+1]=n4.y;normalArray[v1offset+2]=n1.z;normalArray[v2offset+2]=n2.z;normalArray[v4offset+2]=n4.z;normalArray[v2offset]=n2.x;normalArray[v3offset]=n3.x;normalArray[v4offset]=n4.x;normalArray[v2offset+1]=n2.y;normalArray[v3offset+1]=n3.y;normalArray[v4offset+1]=n4.y;normalArray[v2offset+2]=n2.z;normalArray[v3offset+2]=n3.z;normalArray[v4offset+2]=n4.z;faceArray[faceoffset]=v1;faceArray[faceoffset+1]=v2;faceArray[faceoffset+2]=v4;faceArray[faceoffset+3]=v2;faceArray[faceoffset+4]=v3;faceArray[faceoffset+5]=v4;lineArray[lineoffset]=v1;lineArray[lineoffset+1]=v2;lineArray[lineoffset+2]=v1;lineArray[lineoffset+3]=v4;lineArray[lineoffset+4]=v2;lineArray[lineoffset+5]=v3;lineArray[lineoffset+6]=v3;lineArray[lineoffset+7]=v4;geoGroup.faceidx+=6;geoGroup.lineidx+=8;}}}};return draw;}();// A model is a collection of related atoms.  Bonds are only allowed between\n\t//atoms in the same model.  An atom is uniquely specified by its model id and\n\t//its serial number.\n\t//A glmodel knows how to apply the styles on each atom to create a gl object\n\tvar $3Dmol=$3Dmol||{};/**\n\t * GLModel represents a group of related atoms\n\t * @constructor\n\t * @param {number=} mid\n\t * @param {Object=} defaultcolors Object defining default atom colors as atom => color property value pairs\n\t * @see $3Dmol.download\n\t */$3Dmol.GLModel=function(){// class variables go here\n\tvar defaultAtomStyle={line:{}};var Nucleotides=['  G','  A','  T','  C','  U',' DG',' DA',' DT',' DC',' DU'];var defaultlineWidth=1.0;// Reference: A. Bondi, J. Phys. Chem., 1964, 68, 441.\n\tvar vdwRadii={\"H\":1.2,\"Li\":1.82,\"LI\":1.82,\"Na\":2.27,\"NA\":2.27,\"K\":2.75,\"C\":1.7,\"N\":1.55,\"O\":1.52,\"F\":1.47,\"P\":1.80,\"S\":1.80,\"CL\":1.75,\"Cl\":1.75,\"BR\":1.85,\"Br\":1.85,\"SE\":1.90,\"Se\":1.90,\"ZN\":1.39,\"Zn\":1.39,\"CU\":1.4,\"Cu\":1.4,\"NI\":1.63,\"Ni\":1.63};var validAtomSpecs=[\"resn\",// Parent residue name\n\t\"x\",// Atom's x coordinate\n\t\"y\",// Atom's y coordinate\n\t\"z\",// Atom's z coordinate\n\t\"color\",// Atom's color, as hex code\n\t\"surfaceColor\",// Hex code for color to be used for surface patch over this atom\n\t\"elem\",// Element abbreviation (e.g. 'H', 'Ca', etc)\n\t\"hetflag\",// Set to true if atom is a heteroatom\n\t\"chain\",// Chain this atom belongs to, if specified in input file (e.g 'A' for chain A)\n\t\"resi\",// Residue number\n\t\"icode\",\"rescode\",\"serial\",// Atom's serial id numbermodels\n\t\"atom\",// Atom name; may be more specific than 'elem' (e.g 'CA' for alpha carbon)\n\t\"bonds\",// Array of atom ids this atom is bonded to\n\t\"ss\",// Secondary structure identifier (for cartoon render; e.g. 'h' for helix)\n\t\"singleBonds\",// true if this atom forms only single bonds or no bonds at all\n\t\"bondOrder\",// Array of this atom's bond orders, corresponding to bonds identfied by 'bonds'\n\t\"properties\",// Optional mapping of additional properties\n\t\"b\",// Atom b factor data\n\t\"pdbline\",// If applicable, this atom's record entry from the input PDB file (used to output new PDB from models)\n\t\"clickable\",// Set this flag to true to enable click selection handling for this atom\n\t\"callback\",// Callback click handler function to be executed on this atom and its parent viewer\n\t\"invert\"// for selection, inverts the meaning of the selection\n\t];var validAtomSelectionSpecs=validAtomSpecs.concat([// valid atom specs are ok too\n\t\"model\",// a single model or list of models from which atoms should be selected\n\t\"bonds\",// overloaded to select number of bonds, e.g. {bonds: 0} will select all nonbonded atoms\n\t\"predicate\",// user supplied function that gets passed an {AtomSpec} and should return true if the atom should be selected\n\t\"invert\",// if set, inverts the meaning of the selection\n\t\"byres\",// if set, expands the selection to include all atoms of any residue that has any atom selected\n\t\"expand\",// expands the selection to include all atoms within a given distance from the selection\n\t\"within\"// intersects the selection with the set of atoms within a given distance from another selection\n\t]);var validAtomStyleSpecs=[\"line\",// draw bonds as lines\n\t\"cross\",// draw atoms as crossed lines (aka stars)\n\t\"stick\",// draw bonds as capped cylinders\n\t\"sphere\",// draw atoms as spheres\n\t\"cartoon\"// draw cartoon representation of secondary structure\n\t];// class functions\n\t// return true if a and b represent the same style\n\tvar sameObj=function sameObj(a,b){if(a&&b)return JSON.stringify(a)==JSON.stringify(b);else return a==b;};function GLModel(mid,defaultcolors){// private variables\n\tvar atoms=[];var frames=[];var id=mid;var hidden=false;var molObj=null;var renderedMolObj=null;var lastColors=null;var modelData={};var idMatrix=new $3Dmol.Matrix4();var dontDuplicateAtoms;var defaultColor=$3Dmol.elementColors.defaultColor;var ElementColors=defaultcolors?defaultcolors:$3Dmol.elementColors.defaultColors;// drawing functions must be associated with model object since\n\t// geometries can't span multiple canvases\n\t// sphere drawing\n\tvar defaultSphereRadius=1.5;// return proper radius for atom given style\n\t/**\n\t         *\n\t         * @param {AtomSpec} atom\n\t         * @param {atomstyle} style\n\t         * @return {number}\n\t         *\n\t         */var getRadiusFromStyle=function getRadiusFromStyle(atom,style){var r=defaultSphereRadius;if(typeof style.radius!=\"undefined\")r=style.radius;else if(vdwRadii[atom.elem])r=vdwRadii[atom.elem];if(typeof style.scale!=\"undefined\")r*=style.scale;return r;};// cross drawing\n\t/** @typedef CrossStyleSpec\n\t         * @prop {boolean} hidden - do not show\n\t         * @prop {number} linewidth\n\t         * @prop {number} radius\n\t         * @prop {number} scale - scale radius by specified amount\n\t         * @prop {ColorschemeSpec} colorscheme - element based coloring\n\t         * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n\t         *//**\n\t         *\n\t         * @param {AtomSpec} atom\n\t         * @param {$3Dmol.Geometry[]} geos\n\t         */var drawAtomCross=function drawAtomCross(atom,geos){if(!atom.style.cross)return;var style=atom.style.cross;if(style.hidden)return;var linewidth=style.linewidth||defaultlineWidth;if(!geos[linewidth])geos[linewidth]=new $3Dmol.Geometry();var geoGroup=geos[linewidth].updateGeoGroup(6);var delta=getRadiusFromStyle(atom,style);var points=[[delta,0,0],[-delta,0,0],[0,delta,0],[0,-delta,0],[0,0,delta],[0,0,-delta]];var clickable=atom.clickable||atom.hoverable;if(clickable&&atom.intersectionShape===undefined)atom.intersectionShape={sphere:[],cylinder:[],line:[]};var c=$3Dmol.getColorFromStyle(atom,style);var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;for(var j=0;j<6;j++){var offset=geoGroup.vertices*3;geoGroup.vertices++;vertexArray[offset]=atom.x+points[j][0];vertexArray[offset+1]=atom.y+points[j][1];vertexArray[offset+2]=atom.z+points[j][2];colorArray[offset]=c.r;colorArray[offset+1]=c.g;colorArray[offset+2]=c.b;if(clickable){var point=new $3Dmol.Vector3(points[j][0],points[j][1],points[j][2]);//decrease cross size for selection to prevent misselection from atom overlap\n\tpoint.multiplyScalar(0.1);point.set(point.x+atom.x,point.y+atom.y,point.z+atom.z);atom.intersectionShape.line.push(point);}}};//from atom, return a normalized vector v that is orthogonal and along which\n\t//it is appropraite to draw multiple bonds\n\tvar getSideBondV=function getSideBondV(atom,atom2,i){var p1=new $3Dmol.Vector3(atom.x,atom.y,atom.z);var p2=new $3Dmol.Vector3(atom2.x,atom2.y,atom2.z);var dir=p2.clone();var v=null;dir.sub(p1);var p1a,p1b,p2a,p2b;var i2,j2,atom3,p3,dir2;if(atom.bonds.length===1){if(atom2.bonds.length===1){v=dir.clone();if(Math.abs(v.x)>0.0001)v.y+=1;else v.x+=1;}else{i2=(i+1)%atom2.bonds.length;j2=atom2.bonds[i2];atom3=atoms[j2];p3=new $3Dmol.Vector3(atom3.x,atom3.y,atom3.z);dir2=p3.clone();dir2.sub(p1);v=dir2.clone();v.cross(dir);}}else{// get vector 2 different neighboring atom\n\ti2=(i+1)%atom.bonds.length;j2=atom.bonds[i2];atom3=atoms[j2];p3=new $3Dmol.Vector3(atom3.x,atom3.y,atom3.z);dir2=p3.clone();dir2.sub(p1);v=dir2.clone();v.cross(dir);}// especially for C#C (triple bond) dir and dir2\n\t// may be opposites resulting in a zero v\n\tif(v.lengthSq()<0.01){v=dir.clone();if(Math.abs(v.x)>0.0001)v.y+=1;else v.x+=1;}v.cross(dir);v.normalize();return v;//v.multiplyScalar(r * 1.5);\n\t};var getTripleBondPoints=function getTripleBondPoints(){v.cross(dir);v.normalize();v.multiplyScalar(r*3);p1a=p1.clone();p1a.add(v);p1b=p1.clone();p1b.sub(v);p2a=p1a.clone();p2a.add(dir);p2b=p1b.clone();p2b.add(dir);};var addLine=function addLine(vertexArray,colorArray,offset,p1,p2,c1){//make line from p1 to p2, does not incremeant counts\n\tvertexArray[offset]=p1.x;vertexArray[offset+1]=p1.y;vertexArray[offset+2]=p1.z;colorArray[offset]=c1.r;colorArray[offset+1]=c1.g;colorArray[offset+2]=c1.b;vertexArray[offset+3]=p2.x;vertexArray[offset+4]=p2.y;vertexArray[offset+5]=p2.z;colorArray[offset+3]=c1.r;colorArray[offset+4]=c1.g;colorArray[offset+5]=c1.b;};/**@typedef LineStyleSpec\n\t         * @prop {boolean} hidden - do not show line\n\t         * @prop {number} linewidth\n\t         * @prop {ColorschemeSpec} colorscheme - element based coloring\n\t         * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n\t         */// bonds - both atoms must match bond style\n\t// standardize on only drawing for lowest to highest\n\t/**\n\t         *\n\t         * @param {AtomSpec}\n\t         *            atom\n\t         * @param {AtomSpec[]} atoms\n\t         * @param {$3Dmol.Geometry[]} geos\n\t         */var drawBondLines=function drawBondLines(atom,atoms,geos){if(!atom.style.line)return;var style=atom.style.line;if(style.hidden)return;// have a separate geometry for each linewidth\n\tvar linewidth=style.linewidth||defaultlineWidth;if(!geos[linewidth])geos[linewidth]=new $3Dmol.Geometry();/** @type {geometryGroup} */var geoGroup=geos[linewidth].updateGeoGroup(6*atom.bonds.length);//reserve enough space even for triple bonds\n\tvar vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;for(var i=0;i<atom.bonds.length;i++){var j=atom.bonds[i];// our neighbor\n\tvar atom2=atoms[j];if(!atom2.style.line)continue;// don't sweat the details\n\tif(atom.serial>=atom2.serial)// only draw if less, this way we can do multi bonds correctly\n\tcontinue;var p1=new $3Dmol.Vector3(atom.x,atom.y,atom.z);var p2=new $3Dmol.Vector3(atom2.x,atom2.y,atom2.z);var mp=p1.clone().add(p2).multiplyScalar(0.5);var singleBond=false;if(atom.clickable||atom.hoverable){if(atom.intersectionShape===undefined)atom.intersectionShape={sphere:[],cylinder:[],line:[],triangle:[]};atom.intersectionShape.line.push(p1);atom.intersectionShape.line.push(p2);}var c1=$3Dmol.getColorFromStyle(atom,atom.style.line);var c2=$3Dmol.getColorFromStyle(atom2,atom2.style.line);if(atom.bondStyles&&atom.bondStyles[i]){var bstyle=atom.bondStyles[i];if(!bstyle.iswire){continue;}if(bstyle.radius)bondR=bstyle.radius;if(bstyle.singleBond)singleBond=true;if(typeof bstyle.color1!=\"undefined\"){c1=$3Dmol.CC.color(bstyle.color1);}if(typeof bstyle.color2!=\"undefined\"){c2=$3Dmol.CC.color(bstyle.color2);}}var offset=geoGroup.vertices*3;if(atom.bondOrder[i]>1&&atom.bondOrder[i]<4&&!singleBond){var v=getSideBondV(atom,atom2,i);var dir=p2.clone();dir.sub(p1);if(atom.bondOrder[i]==2){//double\n\tv.multiplyScalar(.1);p1a=p1.clone();p1a.add(v);p1b=p1.clone();p1b.sub(v);p2a=p1a.clone();p2a.add(dir);p2b=p1b.clone();p2b.add(dir);if(c1==c2){geoGroup.vertices+=4;addLine(vertexArray,colorArray,offset,p1a,p2a,c1);addLine(vertexArray,colorArray,offset+6,p1b,p2b,c1);}else{geoGroup.vertices+=8;dir.multiplyScalar(0.5);var mpa=p1a.clone();mpa.add(dir);var mpb=p1b.clone();mpb.add(dir);addLine(vertexArray,colorArray,offset,p1a,mpa,c1);addLine(vertexArray,colorArray,offset+6,mpa,p2a,c2);addLine(vertexArray,colorArray,offset+12,p1b,mpb,c1);addLine(vertexArray,colorArray,offset+18,mpb,p2b,c2);}}else if(atom.bondOrder[i]==3){//triple\n\tv.multiplyScalar(.1);p1a=p1.clone();p1a.add(v);p1b=p1.clone();p1b.sub(v);p2a=p1a.clone();p2a.add(dir);p2b=p1b.clone();p2b.add(dir);if(c1==c2){geoGroup.vertices+=6;addLine(vertexArray,colorArray,offset,p1,p2,c1);addLine(vertexArray,colorArray,offset+6,p1a,p2a,c1);addLine(vertexArray,colorArray,offset+12,p1b,p2b,c1);}else{geoGroup.vertices+=12;dir.multiplyScalar(0.5);var mpa=p1a.clone();mpa.add(dir);var mpb=p1b.clone();mpb.add(dir);addLine(vertexArray,colorArray,offset,p1,mp,c1);addLine(vertexArray,colorArray,offset+6,mp,p2,c2);addLine(vertexArray,colorArray,offset+12,p1a,mpa,c1);addLine(vertexArray,colorArray,offset+18,mpa,p2a,c2);addLine(vertexArray,colorArray,offset+24,p1b,mpb,c1);addLine(vertexArray,colorArray,offset+30,mpb,p2b,c2);}}}else{//single bond\n\tif(c1==c2){geoGroup.vertices+=2;addLine(vertexArray,colorArray,offset,p1,p2,c1);}else{geoGroup.vertices+=4;addLine(vertexArray,colorArray,offset,p1,mp,c1);addLine(vertexArray,colorArray,offset+6,mp,p2,c2);}}}};// bonds as cylinders\n\tvar defaultStickRadius=0.25;/**@typedef SphereStyleSpec\n\t         * @prop {boolean} hidden - do not show atom\n\t         * @prop {number} radius - override van der waals radius\n\t         * @prop {number} scale - scale radius by specified amount\n\t         * @prop {ColorschemeSpec} colorscheme - element based coloring\n\t         * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n\t         *///sphere drawing\n\t//See also: drawCylinder\n\t/**\n\t         *\n\t         * @param {AtomSpec} atom\n\t         * @param {$3Dmol.Geometry} geo\n\t         */var drawAtomSphere=function drawAtomSphere(atom,geo){if(!atom.style.sphere)return;var style=atom.style.sphere;if(style.hidden)return;var C=$3Dmol.getColorFromStyle(atom,style);var x,y;var radius=getRadiusFromStyle(atom,style);if((atom.clickable===true||atom.hoverable)&&atom.intersectionShape!==undefined){var center=new $3Dmol.Vector3(atom.x,atom.y,atom.z);atom.intersectionShape.sphere.push(new $3Dmol.Sphere(center,radius));}$3Dmol.GLDraw.drawSphere(geo,atom,radius,C);};var drawAtomInstanced=function drawAtomInstanced(atom,geo){if(!atom.style.sphere)return;var style=atom.style.sphere;if(style.hidden)return;var radius=getRadiusFromStyle(atom,style);var C=$3Dmol.getColorFromStyle(atom,style);var geoGroup=geo.updateGeoGroup(1);var startv=geoGroup.vertices;var start=startv*3;var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;var radiusArray=geoGroup.radiusArray;vertexArray[start]=atom.x;vertexArray[start+1]=atom.y;vertexArray[start+2]=atom.z;var normalArray=geoGroup.normalArray;var colorArray=geoGroup.colorArray;colorArray[start]=C.r;colorArray[start+1]=C.g;colorArray[start+2]=C.b;radiusArray[startv]=radius;if((atom.clickable===true||atom.hoverable)&&atom.intersectionShape!==undefined){var center=new $3Dmol.Vector3(atom.x,atom.y,atom.z);atom.intersectionShape.sphere.push(new $3Dmol.Sphere(center,radius));}geoGroup.vertices+=1;};var drawSphereImposter=function drawSphereImposter(geo,center,radius,C){//create flat square\n\tvar geoGroup=geo.updateGeoGroup(4);var startv=geoGroup.vertices;var start=startv*3;var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;//use center point for each vertex\n\tfor(var i=0;i<4;i++){vertexArray[start+3*i]=center.x;vertexArray[start+3*i+1]=center.y;vertexArray[start+3*i+2]=center.z;}//same colors for all 4 vertices\n\tvar normalArray=geoGroup.normalArray;var colorArray=geoGroup.colorArray;for(var i=0;i<4;i++){colorArray[start+3*i]=C.r;colorArray[start+3*i+1]=C.g;colorArray[start+3*i+2]=C.b;}normalArray[start+0]=-radius;normalArray[start+1]=radius;normalArray[start+2]=0;normalArray[start+3]=-radius;normalArray[start+4]=-radius;normalArray[start+5]=0;normalArray[start+6]=radius;normalArray[start+7]=-radius;normalArray[start+8]=0;normalArray[start+9]=radius;normalArray[start+10]=radius;normalArray[start+11]=0;geoGroup.vertices+=4;//two faces\n\tvar faceArray=geoGroup.faceArray;var faceoffset=geoGroup.faceidx;//not number faces, but index\n\tfaceArray[faceoffset+0]=startv;faceArray[faceoffset+1]=startv+1;faceArray[faceoffset+2]=startv+2;faceArray[faceoffset+3]=startv+2;faceArray[faceoffset+4]=startv+3;faceArray[faceoffset+5]=startv;geoGroup.faceidx+=6;};//dkoes -  code for sphere imposters\n\tvar drawAtomImposter=function drawAtomImposter(atom,geo){if(!atom.style.sphere)return;var style=atom.style.sphere;if(style.hidden)return;var radius=getRadiusFromStyle(atom,style);var C=$3Dmol.getColorFromStyle(atom,style);if((atom.clickable===true||atom.hoverable)&&atom.intersectionShape!==undefined){var center=new $3Dmol.Vector3(atom.x,atom.y,atom.z);atom.intersectionShape.sphere.push(new $3Dmol.Sphere(center,radius));}drawSphereImposter(geo,atom,radius,C);};var drawStickImposter=function drawStickImposter(geo,from,to,radius,color,fromCap,toCap){//we need the four corners - two have from coord, two have to coord, the normal\n\t//is the opposing point, from which we can get the normal and length\n\t//also need the radius\n\tvar geoGroup=geo.updateGeoGroup(4);var startv=geoGroup.vertices;var start=startv*3;var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;var radiusArray=geoGroup.radiusArray;var normalArray=geoGroup.normalArray;//encode extra bits of information in the color\n\tvar r=color.r;var g=color.g;var b=color.b;var negateColor=function negateColor(c){//set sign bit\n\tvar n=-c;if(n==0)n=-0.0001;return n;};/* for sticks, always draw caps, but we could in theory set caps in color *///4 vertices, distinguish between p1 and p2 with neg blue\n\tvar pos=start;for(var i=0;i<4;i++){vertexArray[pos]=from.x;normalArray[pos]=to.x;colorArray[pos]=r;pos++;vertexArray[pos]=from.y;normalArray[pos]=to.y;colorArray[pos]=g;pos++;vertexArray[pos]=from.z;normalArray[pos]=to.z;if(i<2)colorArray[pos]=b;else colorArray[pos]=negateColor(b);pos++;}geoGroup.vertices+=4;radiusArray[startv]=-radius;radiusArray[startv+1]=radius;radiusArray[startv+2]=-radius;radiusArray[startv+3]=radius;//two faces\n\tvar faceArray=geoGroup.faceArray;var faceoffset=geoGroup.faceidx;//not number faces, but index\n\tfaceArray[faceoffset+0]=startv;faceArray[faceoffset+1]=startv+1;faceArray[faceoffset+2]=startv+2;faceArray[faceoffset+3]=startv+2;faceArray[faceoffset+4]=startv+3;faceArray[faceoffset+5]=startv;geoGroup.faceidx+=6;};/**@typedef StickStyleSpec\n\t         * @prop {boolean} hidden - do not show\n\t         * @prop {number} radius\n\t         * @prop {boolean} singleBonds - draw all bonds as single bonds if set\n\t         * @prop {ColorschemeSpec} colorscheme - element based coloring\n\t         * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n\t         */// draws cylinders and small spheres (at bond radius)\n\tvar drawBondSticks=function drawBondSticks(atom,atoms,geo){if(!atom.style.stick)return;var style=atom.style.stick;if(style.hidden)return;var atomBondR=style.radius||defaultStickRadius;var bondR=atomBondR;var atomSingleBond=style.singleBonds||false;var fromCap=0,toCap=0;var C1=$3Dmol.getColorFromStyle(atom,style);var mp,mp1,mp2;if(!atom.capDrawn&&atom.bonds.length<4)fromCap=2;var drawCyl=$3Dmol.GLDraw.drawCylinder;//mesh cylinder\n\tif(geo.imposter)drawCyl=drawStickImposter;for(var i=0;i<atom.bonds.length;i++){var j=atom.bonds[i];// our neighbor\n\tvar atom2=atoms[j];//parsePDB, etc should only add defined bonds\n\tif(atom.serial<atom2.serial){// only draw if less, this\n\t// lets us combine\n\t// cylinders of the same\n\t// color\n\tvar style2=atom2.style;if(!style2.stick)continue;// don't sweat the details\n\tvar C2=$3Dmol.getColorFromStyle(atom2,style2.stick);//support bond specific styles\n\tbondR=atomBondR;var singleBond=atomSingleBond;if(atom.bondStyles&&atom.bondStyles[i]){var bstyle=atom.bondStyles[i];if(bstyle.iswire){continue;}if(bstyle.radius)bondR=bstyle.radius;if(bstyle.singleBond)singleBond=true;if(typeof bstyle.color1!=\"undefined\"){C1=$3Dmol.CC.color(bstyle.color1);}if(typeof bstyle.color2!=\"undefined\"){C2=$3Dmol.CC.color(bstyle.color2);}}var p1=new $3Dmol.Vector3(atom.x,atom.y,atom.z);var p2=new $3Dmol.Vector3(atom2.x,atom2.y,atom2.z);// draw cylinders\n\tif(atom.bondOrder[i]===1||singleBond){if(!atom2.capDrawn&&atom2.bonds.length<4)toCap=2;if(C1!=C2){mp=new $3Dmol.Vector3().addVectors(p1,p2).multiplyScalar(0.5);drawCyl(geo,p1,mp,bondR,C1,fromCap,0);drawCyl(geo,mp,p2,bondR,C2,0,toCap);}else{drawCyl(geo,p1,p2,bondR,C1,fromCap,toCap);}if(atom.clickable||atom2.clickable){mp=new $3Dmol.Vector3().addVectors(p1,p2).multiplyScalar(0.5);if(atom.clickable||atom.hoverable){var cylinder1=new $3Dmol.Cylinder(p1,mp,bondR);var sphere1=new $3Dmol.Sphere(p1,bondR);atom.intersectionShape.cylinder.push(cylinder1);atom.intersectionShape.sphere.push(sphere1);}if(atom2.clickable||atom2.hoverable){var cylinder2=new $3Dmol.Cylinder(p2,mp,bondR);var sphere2=new $3Dmol.Sphere(p2,bondR);atom2.intersectionShape.cylinder.push(cylinder2);atom2.intersectionShape.sphere.push(sphere2);}}}else if(atom.bondOrder[i]>1){var mfromCap=0;var mtoCap=0;//multi bond caps\n\tif(bondR!=atomBondR){//assume jmol style multiple bonds - the radius doesn't fit within atom sphere\n\tmfromCap=2;mtoCap=2;}var dir=p2.clone();var v=null;dir.sub(p1);var r,p1a,p1b,p2a,p2b;var v=getSideBondV(atom,atom2,i);if(atom.bondOrder[i]==2){var r=bondR/2.5;var v=getSideBondV(atom,atom2,i);v.multiplyScalar(r*1.5);p1a=p1.clone();p1a.add(v);p1b=p1.clone();p1b.sub(v);p2a=p1a.clone();p2a.add(dir);p2b=p1b.clone();p2b.add(dir);if(C1!=C2){mp=new $3Dmol.Vector3().addVectors(p1a,p2a).multiplyScalar(0.5);mp2=new $3Dmol.Vector3().addVectors(p1b,p2b).multiplyScalar(0.5);drawCyl(geo,p1a,mp,r,C1,mfromCap,0);drawCyl(geo,mp,p2a,r,C2,0,mtoCap);drawCyl(geo,p1b,mp2,r,C1,mfromCap,0);drawCyl(geo,mp2,p2b,r,C2,0,mtoCap);}else{drawCyl(geo,p1a,p2a,r,C1,mfromCap,mtoCap);drawCyl(geo,p1b,p2b,r,C1,mfromCap,mtoCap);}if(atom.clickable||atom2.clickable){mp=new $3Dmol.Vector3().addVectors(p1a,p2a).multiplyScalar(0.5);mp2=new $3Dmol.Vector3().addVectors(p1b,p2b).multiplyScalar(0.5);if(atom.clickable||atom.hoverable){var cylinder1a=new $3Dmol.Cylinder(p1a,mp,r);var cylinder1b=new $3Dmol.Cylinder(p1b,mp2,r);atom.intersectionShape.cylinder.push(cylinder1a);atom.intersectionShape.cylinder.push(cylinder1b);}if(atom2.clickable||atom2.hoverable){var cylinder2a=new $3Dmol.Cylinder(p2a,mp,r);var cylinder2b=new $3Dmol.Cylinder(p2b,mp2,r);atom2.intersectionShape.cylinder.push(cylinder2a);atom2.intersectionShape.cylinder.push(cylinder2b);}}}else if(atom.bondOrder[i]==3){r=bondR/4;v.cross(dir);v.normalize();v.multiplyScalar(r*3);p1a=p1.clone();p1a.add(v);p1b=p1.clone();p1b.sub(v);p2a=p1a.clone();p2a.add(dir);p2b=p1b.clone();p2b.add(dir);if(C1!=C2){mp=new $3Dmol.Vector3().addVectors(p1a,p2a).multiplyScalar(0.5);mp2=new $3Dmol.Vector3().addVectors(p1b,p2b).multiplyScalar(0.5);mp3=new $3Dmol.Vector3().addVectors(p1,p2).multiplyScalar(0.5);drawCyl(geo,p1a,mp,r,C1,mfromCap,0);drawCyl(geo,mp,p2a,r,C2,0,mtoCap);drawCyl(geo,p1,mp3,r,C1,fromCap,0);drawCyl(geo,mp3,p2,r,C2,0,toCap);drawCyl(geo,p1b,mp2,r,C1,mfromCap,0);drawCyl(geo,mp2,p2b,r,C2,0,mtoCap);}else{drawCyl(geo,p1a,p2a,r,C1,mfromCap,mtoCap);drawCyl(geo,p1,p2,r,C1,fromCap,toCap);drawCyl(geo,p1b,p2b,r,C1,mfromCap,mtoCap);}if(atom.clickable||atom2.clickable){mp=new $3Dmol.Vector3().addVectors(p1a,p2a).multiplyScalar(0.5);mp2=new $3Dmol.Vector3().addVectors(p1b,p2b).multiplyScalar(0.5);mp3=new $3Dmol.Vector3().addVectors(p1,p2).multiplyScalar(0.5);if(atom.clickable||atom.hoverable){var cylinder1a=new $3Dmol.Cylinder(p1a.clone(),mp.clone(),r);var cylinder1b=new $3Dmol.Cylinder(p1b.clone(),mp2.clone(),r);var cylinder1c=new $3Dmol.Cylinder(p1.clone(),mp3.clone(),r);atom.intersectionShape.cylinder.push(cylinder1a);atom.intersectionShape.cylinder.push(cylinder1b);atom.intersectionShape.cylinder.push(cylinder1c);}if(atom2.clickable||atom2.hoverable){var cylinder2a=new $3Dmol.Cylinder(p2a.clone(),mp.clone(),r);var cylinder2b=new $3Dmol.Cylinder(p2b.clone(),mp2.clone(),r);var cylinder2c=new $3Dmol.Cylinder(p2.clone(),mp3.clone(),r);atom2.intersectionShape.cylinder.push(cylinder2a);atom2.intersectionShape.cylinder.push(cylinder2b);atom2.intersectionShape.cylinder.push(cylinder2c);}}}}}}// draw non bonded heteroatoms as spheres\n\tvar drawSphere=false;var numsinglebonds=0;var differentradii=false;//also, if any bonds were drawn as multiples, need sphere\n\tfor(var i=0;i<atom.bonds.length;i++){var singleBond=atomSingleBond;if(atom.bondStyles&&atom.bondStyles[i]){var bstyle=atom.bondStyles[i];if(bstyle.singleBond)singleBond=true;if(bstyle.radius&&bstyle.radius!=atomBondR){differentradii=true;}}if(singleBond||atom.bondOrder[i]==1){numsinglebonds++;}}if(differentradii){//jmol style double/triple bonds - no sphere\n\tif(numsinglebonds>0)drawSphere=true;//unless needed as a cap\n\t}else if(numsinglebonds==0&&atom.bonds.length>0){drawSphere=true;}if(drawSphere){var savedstyle=atom.style;bondR=atomBondR;//do not use bond style as this can be variable, particularly\n\t//with jmol export of double/triple bonds\n\tif(geo.imposter){drawSphereImposter(geo.sphereGeometry,atom,bondR,C1);}else{$3Dmol.GLDraw.drawSphere(geo,atom,bondR,C1);}}};// go through all the atoms and regenerate their geometries\n\t// we try to have one geometry for each style since this is much much\n\t// faster\n\t// at some point we should optimize this to avoid unnecessary\n\t// recalculation\n\t/** param {AtomSpec[]} atoms */var createMolObj=function createMolObj(atoms,options){options=options||{};var ret=new $3Dmol.Object3D();var cartoonAtoms=[];var lineGeometries={};var crossGeometries={};var drawSphereFunc=drawAtomSphere;var sphereGeometry=null;var stickGeometry=null;if(options.supportsImposters){drawSphereFunc=drawAtomImposter;sphereGeometry=new $3Dmol.Geometry(true);sphereGeometry.imposter=true;stickGeometry=new $3Dmol.Geometry(true,true);stickGeometry.imposter=true;stickGeometry.sphereGeometry=sphereGeometry;//for caps\n\tstickGeometry.drawnCaps={};}else if(options.supportsAIA){drawSphereFunc=drawAtomInstanced;sphereGeometry=new $3Dmol.Geometry(false,true,true);sphereGeometry.instanced=true;stickGeometry=new $3Dmol.Geometry(true);//don't actually have instanced sticks\n\t}else{sphereGeometry=new $3Dmol.Geometry(true);stickGeometry=new $3Dmol.Geometry(true);}var i,j,n,testOpacities;var opacities={};var range=[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY];for(i=0,n=atoms.length;i<n;i++){var atom=atoms[i];// recreate gl info for each atom as necessary\n\t// set up appropriate intersection spheres for clickable atoms\n\tif(atom&&atom.style){if((atom.clickable||atom.hoverable)&&atom.intersectionShape===undefined)atom.intersectionShape={sphere:[],cylinder:[],line:[],triangle:[]};testOpacities={line:undefined,cross:undefined,stick:undefined,sphere:undefined};for(j in testOpacities){if(atom.style[j]){if(atom.style[j].opacity)testOpacities[j]=parseFloat(atom.style[j].opacity);else testOpacities[j]=1;}else testOpacities[j]=undefined;if(opacities[j]){if(testOpacities[j]!=undefined&&opacities[j]!=testOpacities[j]){console.log(\"Warning: \"+j+\" opacity is ambiguous\");opacities[j]=1;}}else opacities[j]=testOpacities[j];}drawSphereFunc(atom,sphereGeometry);drawAtomCross(atom,crossGeometries);drawBondLines(atom,atoms,lineGeometries);drawBondSticks(atom,atoms,stickGeometry);if(typeof atom.style.cartoon!==\"undefined\"&&!atom.style.cartoon.hidden){//gradient color scheme range\n\tif(atom.style.cartoon.color===\"spectrum\"&&typeof atom.resi===\"number\"&&!atom.hetflag){if(atom.resi<range[0])range[0]=atom.resi;if(atom.resi>range[1])range[1]=atom.resi;}cartoonAtoms.push(atom);}}}// create cartoon if needed - this is a whole model analysis\n\tif(cartoonAtoms.length>0){var gradientscheme=null;//TODO: Should have an option to choose gradient type\n\tif(range[0]<range[1])gradientscheme=new $3Dmol.Gradient.Sinebow(range[0],range[1]);$3Dmol.drawCartoon(ret,cartoonAtoms,gradientscheme);}// add sphere geometry\n\tif(sphereGeometry&&sphereGeometry.vertices>0){//Initialize buffers in geometry\n\tsphereGeometry.initTypedArrays();var sphereMaterial=null;//create appropriate material\n\tif(sphereGeometry.imposter){sphereMaterial=new $3Dmol.SphereImposterMaterial({ambient:0x000000,vertexColors:true,reflectivity:0});}else if(sphereGeometry.instanced){var sphere=new $3Dmol.Geometry(true);$3Dmol.GLDraw.drawSphere(sphere,{x:0,y:0,z:0},1,new $3Dmol.Color(0.5,0.5,0.5));sphere.initTypedArrays();sphereMaterial=new $3Dmol.InstancedMaterial({sphereMaterial:new $3Dmol.MeshLambertMaterial({ambient:0x000000,vertexColors:true,reflectivity:0}),sphere:sphere});}else{//regular mesh\n\tvar sphereMaterial=new $3Dmol.MeshLambertMaterial({ambient:0x000000,vertexColors:true,reflectivity:0});}if(opacities.sphere<1&&opacities.sphere>=0){sphereMaterial.transparent=true;sphereMaterial.opacity=opacities.sphere;}var sphere=new $3Dmol.Mesh(sphereGeometry,sphereMaterial);ret.add(sphere);}// add stick geometry\n\tif(stickGeometry.vertices>0){if(stickGeometry.imposter){var imposterMaterial=new $3Dmol.StickImposterMaterial({ambient:0x000000,vertexColors:true,reflectivity:0});//Initialize buffers in geometry\n\tstickGeometry.initTypedArrays();var sticks=new $3Dmol.Mesh(stickGeometry,imposterMaterial);ret.add(sticks);}else{var cylinderMaterial=new $3Dmol.MeshLambertMaterial({vertexColors:true,ambient:0x000000,reflectivity:0});if(opacities.stick<1&&opacities.stick>=0){cylinderMaterial.transparent=true;cylinderMaterial.opacity=opacities.stick;}//Initialize buffers in geometry\n\tstickGeometry.initTypedArrays();if(cylinderMaterial.wireframe)stickGeometry.setUpWireframe();var sticks=new $3Dmol.Mesh(stickGeometry,cylinderMaterial);ret.add(sticks);}}//var linewidth;\n\t// add any line geometries, distinguished by line width\n\tfor(i in lineGeometries){if(lineGeometries.hasOwnProperty(i)){var linewidth=i;var lineMaterial=new $3Dmol.LineBasicMaterial({linewidth:linewidth,vertexColors:true});if(opacities.line<1&&opacities.line>=0){lineMaterial.transparent=true;lineMaterial.opacity=opacities.line;}lineGeometries[i].initTypedArrays();var line=new $3Dmol.Line(lineGeometries[i],lineMaterial,$3Dmol.LinePieces);ret.add(line);}}// add any cross geometries\n\tfor(i in crossGeometries){if(crossGeometries.hasOwnProperty(i)){var linewidth=i;var crossMaterial=new $3Dmol.LineBasicMaterial({linewidth:linewidth,vertexColors:true});if(opacities.cross<1&&opacities.cross>=0){crossMaterial.transparent=true;crossMaterial.opacity=opacities.cross;}crossGeometries[i].initTypedArrays();var cross=new $3Dmol.Line(crossGeometries[i],crossMaterial,$3Dmol.LinePieces);ret.add(cross);}}//for BIOMT assembly\n\tif(dontDuplicateAtoms&&modelData.symmetries&&modelData.symmetries.length>0){var finalRet=new $3Dmol.Object3D();var t;for(t=0;t<modelData.symmetries.length;t++){var transformedRet=new $3Dmol.Object3D();transformedRet=ret.clone();transformedRet.matrix.copy(modelData.symmetries[t]);transformedRet.matrixAutoUpdate=false;finalRet.add(transformedRet);}return finalRet;}return ret;};this.getCrystData=function(){if(modelData.cryst){return modelData.cryst;}else{return null;}};/**\n\t         * Returns list of rotational/translational matrices if there is BIOMT data\n\t         * Otherwise returns a list of just the ID matrix\n\t         *\n\t         * @function $3Dmol.GlModel#getSymmetries\n\t         * @return {Array<$3Dmol.Matrix4>}\n\t         *\n\t         */this.getSymmetries=function(){if(typeof modelData.symmetries=='undefined'){modelData.symmetries=[idMatrix];}return modelData.symmetries;};/**\n\t         * Sets symmetries based on specified matrices in list\n\t         *\n\t         * @function $3Dmol.GlModel#setSymmetries\n\t         * @param {Array<$3Dmol.Matrix4>} list\n\t         *\n\t         */this.setSymmetries=function(list){if(typeof list==\"undefined\"){//delete sym data\n\tmodelData.symmetries=[idMatrix];}else{modelData.symmetries=list;}};/**\n\t         * Returns model id number\n\t         *\n\t         * @function $3Dmol.GLModel#getID\n\t         * @return {number} Model ID\n\t         */this.getID=function(){return id;};/**\n\t         * Returns model's frames property, a list of atom lists\n\t         *\n\t         * @function $3Dmol.GLModel#getFrames\n\t         * @return {Array.<Object>}\n\t         */this.getFrames=function(){return frames;};// AMV HACK\n\tthis.forceRedraw=function(){molObj=null;};/**\n\t         * Sets model's atomlist to specified frame\n\t         * Sets to last frame if framenum out of range\n\t         *\n\t         * @function $3Dmol.GLModel#setFrame\n\t         * @param {number} framenum - model's atoms are set to this index in frames list\n\t         */this.setFrame=function(framenum){if(frames.length==0){return;}if(framenum>=0&&framenum<frames.length){atoms=frames[framenum];}else{atoms=frames[frames.length-1];}molObj=null;};/**\n\t         * Add atoms as frames of model\n\t         *\n\t         * @function $3Dmol.GLModel#addFrame\n\t         * @param {AtomSpec} atom - atoms to be added\n\t         */this.addFrame=function(atoms){frames.push(atoms);};/**\n\t         * If model atoms have dx, dy, dz properties (in some xyz files), vibrate populates the model's frame property based on parameters.\n\t         * Model can then be animated\n\t         *\n\t         * @function $3Dmol.GLModel#vibrate\n\t         * @param {number} numFrames - number of frames to be created, default to 10\n\t         * @param {number} amplitude - amplitude of distortion, default to 1 (full)\n\t         */this.vibrate=function(numFrames,amplitude){var vectors=[];var amplitude=amplitude||1;var numFrames=numFrames||10;for(var i=0;i<atoms.length;i++){var vector=new $3Dmol.Vector3(atoms[i].dx,atoms[i].dy,atoms[i].dz);vectors.push(vector);}numFrames--;for(var i=1;i<=numFrames;i++){var newAtoms=[];for(var j=0;j<atoms.length;j++){var newVector=new $3Dmol.Vector3(atoms[j].dx,atoms[j].dy,atoms[j].dz);var starting=new $3Dmol.Vector3(atoms[j].x,atoms[j].y,atoms[j].z);newVector.sub(starting);newVector.multiplyScalar(i*amplitude/numFrames);starting.add(newVector);var newAtom={};for(var k in atoms[j]){newAtom[k]=atoms[j][k];}newAtom.x=starting.x;newAtom.y=starting.y;newAtom.z=starting.z;newAtoms.push(newAtom);}frames.push(newAtoms);}frames.unshift(atoms);//add 1st frame\n\t};// set default style and colors for atoms\n\tthis.setAtomDefaults=function(atoms){for(var i=0;i<atoms.length;i++){var atom=atoms[i];if(atom){atom.style=atom.style||defaultAtomStyle;atom.color=atom.color||ElementColors[atom.elem]||defaultColor;atom.model=id;if(atom.clickable||atom.hoverable)atom.intersectionShape={sphere:[],cylinder:[],line:[],triangle:[]};}}};/** add atoms to this model from molecular data string\n\t         *\n\t         * @function $3Dmol.GLModel#addMolData\n\t         * @param {string|ArrayBuffer} data - atom structure file input data string, for gzipped input use ArrayBuffer\n\t         * @param {string} format - input file string format (e.g 'pdb', 'sdf', 'sdf.gz', etc.)\n\t         * @param {Object} options - format dependent options (e.g. 'options.keepH' to keep hydrogens)\n\t         */this.addMolData=function(data,format,options){options=options||{};var parsedAtoms=$3Dmol.GLModel.parseMolData(data,format,options);dontDuplicateAtoms=!options.duplicateAssemblyAtoms;var mData=parsedAtoms.modelData;if(mData){if(Array.isArray(mData)){modelData=mData[0];}else{modelData=mData;}}if(frames.length==0){//first call\n\tfor(var i=0;i<parsedAtoms.length;i++){if(parsedAtoms[i].length!=0)frames.push(parsedAtoms[i]);}if(frames[0])atoms=frames[0];}else{//subsequent calls\n\tif(options.frames){//add to new frame\n\tfor(var i=0;i<parsedAtoms.length;i++){frames.push(parsedAtoms[i]);}}else{//add atoms to current frame\n\tfor(var i=0;i<parsedAtoms.length;i++){this.addAtoms(parsedAtoms[i]);}}}for(var i=0;i<frames.length;i++){this.setAtomDefaults(frames[i],id);}if(options.vibrate&&options.vibrate.frames&&options.vibrate.amplitude){//fill in vibrational modes\n\tthis.vibrate(options.vibrate.frames,options.vibrate.amplitude);}};this.setDontDuplicateAtoms=function(dup){dontDuplicateAtoms=dup;};this.setModelData=function(mData){modelData=mData;};/** given a selection specification, return true if atom is selected\n\t         *\n\t         * @function $3Dmol.GLModel#atomIsSelected\n\t         * @param {AtomSpec} atom\n\t         * @param {AtomSelectionSpec} sel\n\t         * @return {boolean}\n\t         */this.atomIsSelected=function(atom,sel){if(typeof sel===\"undefined\")return true;// undef gets all\n\tvar invert=!!sel.invert;var ret=true;for(var key in sel){if(key==='predicate'){//a user supplied function for evaluating atoms\n\tif(!sel['predicate'](atom)){ret=false;break;}}else if(key==\"properties\"&&atom[key]){for(var propkey in sel.properties){if(typeof atom.properties[propkey]==='undefined'){ret=false;break;}if(atom.properties[propkey]!=sel.properties[propkey]){ret=false;break;}}}else if(sel.hasOwnProperty(key)&&key!=\"props\"&&key!=\"invert\"&&key!=\"model\"&&key!=\"byres\"&&key!=\"expand\"&&key!=\"within\"){// if something is in sel, atom must have it\n\tif(typeof atom[key]===\"undefined\"){ret=false;break;}var isokay=false;if(key===\"bonds\"){//special case counting number of bonds, for selecting nonbonded mostly\n\tvar val=sel[key];if(val!=atom.bonds.length){ret=false;break;}}else if($.isArray(sel[key])){// can be any of the listed values\n\tvar valarr=sel[key];for(var i=0;i<valarr.length;i++){if(atom[key]==valarr[i]){isokay=true;break;}}if(!isokay){ret=false;break;}}else{// single match\n\tvar val=sel[key];if(atom[key]!=val){ret=false;break;}}}}return invert?!ret:ret;};/** return list of atoms selected by sel, this is specific to glmodel\n\t         *\n\t         * @function $3Dmol.GLModel#selectedAtoms\n\t         * @param {AtomSelectionSpec} sel\n\t         * @return {Array.<Object>}\n\t         */this.selectedAtoms=function(sel,from){var ret=[];sel=sel||{};if(!from)from=atoms;var aLength=from.length;for(var i=0;i<aLength;i++){var atom=from[i];if(atom){if(this.atomIsSelected(atom,sel))ret.push(atom);}}// expand selection by some distance\n\tif(sel.hasOwnProperty(\"expand\")){// get atoms in expanded bounding box\n\tvar expand=expandAtomList(ret,parseFloat(sel.expand));var retlen=ret.length;for(var i=0;i<expand.length;i++){for(var j=0;j<retlen;j++){var dist=squaredDistance(expand[i],ret[j]);var thresh=Math.pow(sel.expand,2);if(dist<thresh&&dist>0){ret.push(expand[i]);}}}}// selection within distance of sub-selection\n\tif(sel.hasOwnProperty(\"within\")&&sel.within.hasOwnProperty(\"sel\")&&sel.within.hasOwnProperty(\"distance\")){// get atoms in second selection\n\tvar sel2=this.selectedAtoms(sel.within.sel,atoms);var within=[];for(var i=0;i<sel2.length;i++){for(var j=0;j<ret.length;j++){var dist=squaredDistance(sel2[i],ret[j]);var thresh=Math.pow(parseFloat(sel.within.distance),2);if(dist<thresh&&dist>0){within.push(ret[j]);}}}ret=within;}// byres selection flag\n\tif(sel.hasOwnProperty(\"byres\")){// Keep track of visited residues, visited atoms, and atom stack\n\tvar vResis={};var vAtoms=[];var stack=[];for(var i=0;i<ret.length;i++){// Check if atom is part of a residue, and that the residue hasn't been traversed yet\n\tvar atom=ret[i];var c=atom.chain;var r=atom.resi;if(vResis[c]===undefined)vResis[c]={};if(atom.hasOwnProperty(\"resi\")&&vResis[c][r]===undefined){// Perform a depth-first search of atoms with the same resi\n\tvResis[c][r]=true;stack.push(atom);while(stack.length>0){atom=stack.pop();c=atom.chain;r=atom.resi;if(vAtoms[atom.index]===undefined){vAtoms[atom.index]=true;for(var j=0;j<atom.bonds.length;j++){var atom2=atoms[atom.bonds[j]];if(vAtoms[atom2.index]===undefined&&atom2.hasOwnProperty(\"resi\")&&atom2.chain==c&&atom2.resi==r){stack.push(atom2);ret.push(atom2);}}}}}}}return ret;};var squaredDistance=function squaredDistance(atom1,atom2){var xd=atom2.x-atom1.x;var yd=atom2.y-atom1.y;var zd=atom2.z-atom1.z;return Math.pow(xd,2)+Math.pow(yd,2)+Math.pow(zd,2);};/** returns a list of atoms in the expanded bounding box, but not in the current one\n\t         *\n\t         *  Bounding box:\n\t         *\n\t         *    [ [ xmin, ymin, zmin ],\n\t         *      [ xmax, ymax, zmax ],\n\t         *      [ xctr, yctr, zctr ] ]\n\t         *\n\t         **/var expandAtomList=function expandAtomList(atomList,amt){if(amt<=0)return atomList;var pb=$3Dmol.getExtent(atomList);// previous bounding box\n\tvar nb=[[],[],[]];// expanded bounding box\n\tfor(var i=0;i<3;i++){nb[0][i]=pb[0][i]-amt;nb[1][i]=pb[1][i]+amt;nb[2][i]=pb[2][i];}// look in added box \"shell\" for new atoms\n\tvar expand=[];for(var i=0;i<atoms.length;i++){var x=atoms[i].x;var y=atoms[i].y;var z=atoms[i].z;if(x>=nb[0][0]&&x<=nb[1][0]&&y>=nb[0][1]&&y<=nb[1][1]&&z>=nb[0][2]&&z<=nb[1][2]){if(!(x>=pb[0][0]&&x<=pb[1][0]&&y>=pb[0][1]&&y<=pb[1][1]&&z>=pb[0][2]&&z<=pb[1][2])){expand.push(atoms[i]);}}}return expand;};/** Add list of new atoms to model.  Adjusts bonds appropriately.\n\t         *\n\t         * @function $3Dmol.GLModel#addAtoms\n\t         * @param {type} newatoms\n\t         */this.addAtoms=function(newatoms){molObj=null;var start=atoms.length;var indexmap=[];// mapping from old index to new index\n\tvar i;for(i=0;i<newatoms.length;i++){if(typeof newatoms[i].index==\"undefined\")newatoms[i].index=i;if(typeof newatoms[i].serial==\"undefined\")newatoms[i].serial=i;indexmap[newatoms[i].index]=start+i;}// copy and push newatoms onto atoms\n\tfor(i=0;i<newatoms.length;i++){var olda=newatoms[i];var nindex=indexmap[olda.index];var a=$.extend(false,{},olda);a.index=nindex;a.bonds=[];a.bondOrder=[];a.model=id;a.style=a.style||defaultAtomStyle;if(typeof a.color==\"undefined\")a.color=ElementColors[a.elem]||defaultColor;// copy over all bonds contained in selection,\n\t// updating indices appropriately\n\tvar nbonds=olda.bonds?olda.bonds.length:0;for(var j=0;j<nbonds;j++){var neigh=indexmap[olda.bonds[j]];if(typeof neigh!=\"undefined\"){a.bonds.push(neigh);a.bondOrder.push(olda.bondOrder?olda.bondOrder[j]:1);}}atoms.push(a);}};/** Remove specified atoms from model\n\t         *\n\t         * @function $3Dmol.GLModel#removeAtoms\n\t         * @param {type} badatoms\n\t         * @return {removeAtoms}\n\t         */this.removeAtoms=function(badatoms){molObj=null;// make map of all baddies\n\tvar baddies=[];var i;for(i=0;i<badatoms.length;i++){baddies[badatoms[i].index]=true;}// create list of good atoms\n\tvar newatoms=[];for(i=0;i<atoms.length;i++){var a=atoms[i];if(!baddies[a.index])newatoms.push(a);}// clear it all out\n\tatoms=[];// and add back in to get updated bonds\n\tthis.addAtoms(newatoms);};/** Set atom style of selected atoms\n\t         *\n\t         * @function $3Dmol.GLModel#setStyle\n\t         * @param {AtomSelectionSpec} sel\n\t         * @param {AtomStyleSpec} style\n\t         * @param {boolean} add - if true, add to current style, don't replace\n\t         */this.setStyle=function(sel,style,add){if(typeof style==='undefined'&&typeof add=='undefined'){//if a single argument is provided, assume it is a style and select all\n\tstyle=sel;sel={};}// report to console if this is not a valid selector\n\tvar s;for(s in sel){if(validAtomSelectionSpecs.indexOf(s)===-1){console.log('Unknown selector '+s);}}// report to console if this is not a valid style\n\tfor(s in style){if(validAtomStyleSpecs.indexOf(s)===-1){console.log('Unknown style '+s);}}var changedAtoms=false;// somethings we only calculate if there is a change in a certain\n\t// style, although these checks will only catch cases where both\n\t// are either null or undefined\n\tvar setStyleHelper=function setStyleHelper(atomArr){var selected=that.selectedAtoms(sel,atomArr);for(var i=0;i<atomArr.length;i++){if(atomArr[i])atomArr[i].capDrawn=false;//reset for proper stick render\n\t}for(var i=0;i<selected.length;i++){changedAtoms=true;if(selected[i].clickable||selected[i].hoverable)selected[i].intersectionShape={sphere:[],cylinder:[],line:[],triangle:[]};if(!add)selected[i].style={};for(s in style){if(style.hasOwnProperty(s)){selected[i].style[s]=selected[i].style[s]||{};//create distinct object for each atom\n\tfor(var prop in style[s]){selected[i].style[s][prop]=style[s][prop];}}}}};var that=this;setStyleHelper(atoms);for(var i=0;i<frames.length;i++){setStyleHelper(frames[i]);}if(changedAtoms)molObj=null;//force rebuild\n\t};/** Set clickable and callback of selected atoms\n\t         *\n\t         * @function $3Dmol.GLModel#setClickable\n\t         * @param {AtomSelectionSpec} sel - atom selection to apply clickable settings to\n\t         * @param {boolean} clickable - whether click-handling is enabled for the selection\n\t         * @param {function} callback - function called when an atom in the selection is clicked\n\t         */this.setClickable=function(sel,clickable,callback){// report to console if this is not a valid selector\n\tvar s;for(s in sel){if(validAtomSelectionSpecs.indexOf(s)===-1){console.log('Unknown selector '+s);}}// make sure clickable is a boolean\n\tclickable=!!clickable;// report to console if callback is not a valid function\n\tif(callback&&typeof callback!=\"function\"){console.log(\"Callback is not a function\");return;}var i;var selected=this.selectedAtoms(sel,atoms);var len=selected.length;for(i=0;i<len;i++){selected[i].intersectionShape={sphere:[],cylinder:[],line:[],triangle:[]};selected[i].clickable=clickable;if(callback)selected[i].callback=callback;}if(len>0)molObj=null;// force rebuild to get correct intersection shapes\n\t};this.setHoverable=function(sel,hoverable,hover_callback,unhover_callback){var s;for(s in sel){if(validAtomSelectionSpecs.indexOf(s)===-1){console.log('Unknown selector '+s);}}// make sure hoverable is a boolean\n\thoverable=!!hoverable;// report to console if hover_callback is not a valid function\n\tif(hover_callback&&typeof hover_callback!=\"function\"){console.log(\"Hover_callback is not a function\");return;}// report to console if unhover_callback is not a valid function\n\tif(unhover_callback&&typeof unhover_callback!=\"function\"){console.log(\"Unhover_callback is not a function\");return;}var i;var selected=this.selectedAtoms(sel,atoms);var len=selected.length;for(i=0;i<len;i++){selected[i].intersectionShape={sphere:[],cylinder:[],line:[],triangle:[]};selected[i].hoverable=hoverable;if(hover_callback)selected[i].hover_callback=hover_callback;if(unhover_callback)selected[i].unhover_callback=unhover_callback;}if(len>0)molObj=null;// force rebuild to get correct intersection shapes\n\t};/** given a mapping from element to color, set atom colors\n\t         *\n\t         * @function $3Dmol.GLModel#setColorByElement\n\t         * @param {type} sel\n\t         * @param {type} colors\n\t         */this.setColorByElement=function(sel,colors){if(molObj!==null&&sameObj(colors,lastColors))return;// don't recompute\n\tlastColors=colors;var atoms=this.selectedAtoms(sel,atoms);if(atoms.length>0)molObj=null;// force rebuild\n\tfor(var i=0;i<atoms.length;i++){var a=atoms[i];if(typeof colors[a.elem]!==\"undefined\"){a.color=colors[a.elem];}}};/**\n\t         * @function $3Dmol.GLModel.setColorByProperty\n\t         * @param {type} sel\n\t         * @param {type} prop\n\t         * @param {type} scheme\n\t         */this.setColorByProperty=function(sel,prop,scheme,range){var atoms=this.selectedAtoms(sel,atoms);lastColors=null;// don't bother memoizing\n\tif(atoms.length>0)molObj=null;// force rebuild\n\tvar min=Number.POSITIVE_INFINITY;var max=Number.NEGATIVE_INFINITY;var i,a;if(!range){//no explicit range, get from scheme\n\trange=scheme.range();}if(!range){//no range in scheme, compute the range for this model\n\trange=$3Dmol.getPropertyRange(atoms,prop);}// now apply colors using scheme\n\tfor(i=0;i<atoms.length;i++){a=atoms[i];var val=$3Dmol.getAtomProperty(a,prop);if(val!=null){a.color=scheme.valueToHex(parseFloat(a.properties[prop]),[range[0],range[1]]);}}};/**\n\t         * @function $3Dmol.GLModel.setColorByFunction\n\t         * @param {type} sel\n\t         * @param {type} func\n\t         */this.setColorByFunction=function(sel,colorfun){var atoms=this.selectedAtoms(sel,atoms);lastColors=null;// don't bother memoizing\n\tif(atoms.length>0)molObj=null;// force rebuild\n\t// now apply colorfun\n\tfor(i=0;i<atoms.length;i++){a=atoms[i];a.color=colorfun(a);}};/** Convert the model into an object in the format of a ChemDoodle JSON model.\n\t         *\n\t         * @function $3Dmol.GLModel#toCDObject\n\t         * @param {boolean} whether or not to include style information. Defaults to false.\n\t         * @return {Object}\n\t         */this.toCDObject=function(includeStyles){var out={a:[],b:[]};if(includeStyles){out.s=[];}for(var i=0;i<atoms.length;i++){var atomJSON={};var atom=atoms[i];atomJSON.x=atom.x;atomJSON.y=atom.y;atomJSON.z=atom.z;if(atom.elem!=\"C\"){atomJSON.l=atom.elem;}if(includeStyles){var s=0;while(s<out.s.length&&JSON.stringify(atom.style)!==JSON.stringify(out.s[s])){s++;}if(s===out.s.length){out.s.push(atom.style);}if(s!==0){atomJSON.s=s;}}out.a.push(atomJSON);for(var b=0;b<atom.bonds.length;b++){var firstAtom=i;var secondAtom=atom.bonds[b];if(firstAtom>=secondAtom)continue;var bond={b:firstAtom,e:secondAtom};var bondOrder=atom.bondOrder[b];if(bondOrder!=1){bond.o=bondOrder;}out.b.push(bond);}}return out;};/** manage the globj for this model in the possed modelGroup - if it has to be regenerated, remove and add\n\t         *\n\t         * @function $3Dmol.GLModel#globj\n\t         * @param {$3Dmol.Object3D} group\n\t         * @param Object options\n\t         */this.globj=function(group,options){var time=new Date();if(molObj===null){// have to regenerate\n\tmolObj=createMolObj(atoms,options);var time2=new Date();//console.log(\"object creation time: \" + (time2 - time));\n\tif(renderedMolObj){// previously rendered, remove\n\tgroup.remove(renderedMolObj);renderedMolObj=null;}renderedMolObj=molObj.clone();if(hidden){renderedMolObj.setVisible(false);molObj.setVisible(false);}group.add(renderedMolObj);}};/** Remove any renderable mol object from scene\n\t         *\n\t         * @function $3Dmol.GLModel#removegl\n\t         * @param {$3Dmol.Object3D} group\n\t         */this.removegl=function(group){if(renderedMolObj){//dispose of geos and materials\n\tif(renderedMolObj.geometry!==undefined)renderedMolObj.geometry.dispose();if(renderedMolObj.material!==undefined)renderedMolObj.material.dispose();group.remove(renderedMolObj);renderedMolObj=null;}molObj=null;};/** Don't show this model is future renderings.  Keep all styles and state\n\t         * so it can be efficiencly shown again.\n\t         *\n\t         * @function $3Dmol.GLModel#hide\n\t         */this.hide=function(){hidden=true;if(renderedMolObj)renderedMolObj.setVisible(false);if(molObj)molObj.setVisible(false);};this.show=function(){hidden=false;if(renderedMolObj)renderedMolObj.setVisible(true);if(molObj)molObj.setVisible(true);};/** Create labels for residues of selected atoms.\n\t         * Will create a single label at the center of mass of all atoms\n\t         * with the same chain,resn, and resi.\n\t         * @function $3Dmol.GLModel#addResLabels\n\t         *\n\t         * @param {AtomSelectionSpec} sel\n\t         * @param {$3Dmol.GLViewer} viewer\n\t         */this.addResLabels=function(sel,viewer,style){var atoms=this.selectedAtoms(sel,atoms);var bylabel={};//collect by chain:resn:resi\n\tfor(var i=0;i<atoms.length;i++){var a=atoms[i];var c=a.chain;var resn=a.resn;var resi=a.resi;var label=resn+''+resi;if(!bylabel[c])bylabel[c]={};if(!bylabel[c][label])bylabel[c][label]=[];bylabel[c][label].push(a);}var mystyle=$.extend(true,{},style);//now compute centers of mass\n\tfor(var c in bylabel){if(bylabel.hasOwnProperty(c)){var labels=bylabel[c];for(var label in labels){if(labels.hasOwnProperty(label)){var atoms=labels[label];var sum=new $3Dmol.Vector3(0,0,0);for(var i=0;i<atoms.length;i++){var a=atoms[i];sum.x+=a.x;sum.y+=a.y;sum.z+=a.z;}sum.divideScalar(atoms.length);mystyle.position=sum;viewer.addLabel(label,mystyle);}}}}};/**\n\t  * Set coordinates for the atoms parsed from the prmtop file.\n\t  * @function $3Dmol.GLModel#setCoordinates\n\t  * @param {string} str - contains the data of the file\n\t  * @param {string} format - contains the format of the file\n\t  * @param {function} callback - function called when a inpcrd or a mdcrd file is uploaded\n\t   */this.setCoordinates=function(str,format){format=format||\"\";if(!str)return[];//leave an empty model\n\tif(/\\.gz$/.test(format)){//unzip gzipped files\n\tformat=format.replace(/\\.gz$/,'');try{str=pako.inflate(str,{to:'string'});}catch(err){console.log(err);}}if(format==\"mdcrd\"||format==\"inpcrd\"){frames=[];var atomCount=atoms.length;var values=GLModel.parseCrd(str,format);var count=0;while(count<values.length){var temp=JSON.parse(JSON.stringify(atoms));for(i=0;i<atomCount;i++){temp[i].x=values[count++];temp[i].y=values[count++];temp[i].z=values[count++];}frames.push(temp);}atoms=frames[0];return frames;}return[];};}GLModel.parseCrd=function(data,format){var values=[];//this will contain the all the float values in the file.\n\tvar valueLength=8;var index=data.indexOf(\"\\n\");data=data.slice(index+1);//remove the first line containing title.\n\tif(format==\"inpcrd\"){index=data.indexOf(\"\\n\");data=data.slice(index+1);//remove the second line containing number of atoms.\n\tvalueLength=12;}index=0;var counter=0;while(index<data.length-valueLength){if(data[index]==\"\\n\")index++;if(data[index]!=\"\\n\"){values[counter]=parseFloat(data.slice(index,index+valueLength));index=index+valueLength;counter++;}}return values;};GLModel.parseMolData=function(data,format,options){format=format||\"\";if(!data)return[];//leave an empty model\n\tif(/\\.gz$/.test(format)){//unzip gzipped files\n\tformat=format.replace(/\\.gz$/,'');try{data=pako.inflate(data,{to:'string'});}catch(err){console.log(err);}}if(typeof $3Dmol.Parsers[format]==\"undefined\"){//let someone provide a file name and get format from extension\n\tformat=format.split('.').pop();if(typeof $3Dmol.Parsers[format]==\"undefined\"){console.log(\"Unknown format: \"+format);//try to guess correct format from data contents\n\tif(data.match(/^@<TRIPOS>MOLECULE/gm)){format=\"mol2\";}else if(data.match(/^HETATM/gm)||data.match(/^ATOM/gm)){format=\"pdb\";}else if(data.match(/^.*\\n.*\\n.\\s*(\\d+)\\s+(\\d+)/gm)){format=\"sdf\";//could look at line 3\n\t}else if(data.match(/^%VERSION\\s+\\VERSION_STAMP/gm)){format=\"prmtop\";}else{format=\"xyz\";}console.log(\"Best guess: \"+format);}}var parse=$3Dmol.Parsers[format];var parsedAtoms=parse(data,options);return parsedAtoms;};// set default style and colors for atoms\n\tGLModel.setAtomDefaults=function(atoms,id){for(var i=0;i<atoms.length;i++){var atom=atoms[i];if(atom){atom.style=atom.style||defaultAtomStyle;atom.color=atom.color||ElementColors[atom.elem]||defaultColor;atom.model=id;if(atom.clickable||atom.hoverable)atom.intersectionShape={sphere:[],cylinder:[],line:[],triangle:[]};}}};return GLModel;}();/**\n\t * A GLShape is a collection of user specified shapes.\n\t *\n\t * @constructor $3Dmol.GLShape\n\t * @extends {ShapeSpec}\n\t * @param {number} sid - Unique identifier\n\t * @param {ShapeSpec} stylespec - shape style specification\n\t */$3Dmol.GLShape=function(){// Marching cube, to match with protein surface generation\n\tvar ISDONE=2;var finalizeGeo=function finalizeGeo(geo){//to avoid creating a bunch of geometries, we leave geoGroup untruncated\n\t//until render is called, at which point we truncate;\n\t//successive called up updateGeo will return a new geometry\n\tvar geoGroup=geo.updateGeoGroup(0);if(geoGroup.vertices>0){geoGroup.truncateArrayBuffers(true,true);}};/**\n\t     *\n\t     * @param {$3Dmol.Geometry}\n\t     *            geo\n\t     * @param {$3Dmol.Color |\n\t     *            colorlike} color\n\t     */var updateColor=function updateColor(geo,color){var C=color||$3Dmol.CC.color(color);geo.colorsNeedUpdate=true;var r,g,b;if(!(color.constructor===Array)){r=color.r;g=color.g;b=color.b;}for(var gg in geo.geometryGroups){var geoGroup=geo.geometryGroups[gg];var colorArr=geoGroup.colorArray;for(var i=0,il=geoGroup.vertices;i<il;++i){if(color.constructor===Array){var c=color[i];r=c.r;g=c.g;b=c.b;}colorArr[i*3]=r;colorArr[i*3+1]=g;colorArr[i*3+2]=b;}}};/**\n\t     * @param {$3Dmol.GLShape}\n\t     *            shape\n\t     * @param {geometryGroup}\n\t     *            geoGroup\n\t     * @param {ArrowSpec}\n\t     *            spec\n\t     */var drawArrow=function drawArrow(shape,geo,spec){var from=spec.start,end=spec.end,radius=spec.radius,radiusRatio=spec.radiusRatio,mid=spec.mid;if(!(from&&end))return;var geoGroup=geo.updateGeoGroup(51);// vertices\n\tvar dir=end.clone();dir.sub(from).multiplyScalar(mid);var to=from.clone().add(dir);var negDir=dir.clone().negate();shape.intersectionShape.cylinder.push(new $3Dmol.Cylinder(from.clone(),to.clone(),radius));shape.intersectionShape.sphere.push(new $3Dmol.Sphere(from.clone(),radius));// get orthonormal vector\n\tvar nvecs=[];nvecs[0]=dir.clone();if(Math.abs(nvecs[0].x)>0.0001)nvecs[0].y+=1;else nvecs[0].x+=1;nvecs[0].cross(dir);nvecs[0].normalize();nvecs[0]=nvecs[0];// another orth vector\n\tnvecs[4]=nvecs[0].clone();nvecs[4].crossVectors(nvecs[0],dir);nvecs[4].normalize();nvecs[8]=nvecs[0].clone().negate();nvecs[12]=nvecs[4].clone().negate();// now quarter positions\n\tnvecs[2]=nvecs[0].clone().add(nvecs[4]).normalize();nvecs[6]=nvecs[4].clone().add(nvecs[8]).normalize();nvecs[10]=nvecs[8].clone().add(nvecs[12]).normalize();nvecs[14]=nvecs[12].clone().add(nvecs[0]).normalize();// eights\n\tnvecs[1]=nvecs[0].clone().add(nvecs[2]).normalize();nvecs[3]=nvecs[2].clone().add(nvecs[4]).normalize();nvecs[5]=nvecs[4].clone().add(nvecs[6]).normalize();nvecs[7]=nvecs[6].clone().add(nvecs[8]).normalize();nvecs[9]=nvecs[8].clone().add(nvecs[10]).normalize();nvecs[11]=nvecs[10].clone().add(nvecs[12]).normalize();nvecs[13]=nvecs[12].clone().add(nvecs[14]).normalize();nvecs[15]=nvecs[14].clone().add(nvecs[0]).normalize();var start=geoGroup.vertices;var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;var faceArray=geoGroup.faceArray;var normalArray=geoGroup.normalArray;var lineArray=geoGroup.lineArray;var offset,i,n;// add vertices, opposing vertices paired together\n\tfor(i=0,n=nvecs.length;i<n;++i){offset=3*(start+3*i);var bottom=nvecs[i].clone().multiplyScalar(radius).add(from);var top=nvecs[i].clone().multiplyScalar(radius).add(to);var conebase=nvecs[i].clone().multiplyScalar(radius*radiusRatio).add(to);vertexArray[offset]=bottom.x;vertexArray[offset+1]=bottom.y;vertexArray[offset+2]=bottom.z;vertexArray[offset+3]=top.x;vertexArray[offset+4]=top.y;vertexArray[offset+5]=top.z;vertexArray[offset+6]=conebase.x;vertexArray[offset+7]=conebase.y;vertexArray[offset+8]=conebase.z;if(i>0){var prev_x=vertexArray[offset-3];var prev_y=vertexArray[offset-2];var prev_z=vertexArray[offset-1];var c=new $3Dmol.Vector3(prev_x,prev_y,prev_z);var b=end.clone(),b2=to.clone();var a=new $3Dmol.Vector3(conebase.x,conebase.y,conebase.z);shape.intersectionShape.triangle.push(new $3Dmol.Triangle(a,b,c));shape.intersectionShape.triangle.push(new $3Dmol.Triangle(c.clone(),b2,a.clone()));}}geoGroup.vertices+=48;offset=geoGroup.vertices*3;// caps\n\tvertexArray[offset]=from.x;vertexArray[offset+1]=from.y;vertexArray[offset+2]=from.z;vertexArray[offset+3]=to.x;vertexArray[offset+4]=to.y;vertexArray[offset+5]=to.z;vertexArray[offset+6]=end.x;vertexArray[offset+7]=end.y;vertexArray[offset+8]=end.z;geoGroup.vertices+=3;// now faces\n\tvar face,norm,faceoffset,lineoffset;var t1,t2,t2b,t3,t3b,t4,t1offset,t2offset,t2boffset,t3offset,t3boffset,t4offset;var n1,n2,n3,n4;var n_vertices=0;var fromi=geoGroup.vertices-3,toi=geoGroup.vertices-2,endi=geoGroup.vertices-1;var fromoffset=fromi*3,tooffset=toi*3,endoffset=endi*3;for(i=0,n=nvecs.length-1;i<n;++i){var ti=start+3*i;offset=ti*3;faceoffset=geoGroup.faceidx;lineoffset=geoGroup.lineidx;t1=ti;t1offset=t1*3;t2=ti+1;t2offset=t2*3;t2b=ti+2;t2boffset=t2b*3;t3=ti+4;t3offset=t3*3;t3b=ti+5;t3boffset=t3b*3;t4=ti+3;t4offset=t4*3;// face = [t1, t2, t4], [t2, t3, t4];\n\t// face = [t1, t2, t3, t4];\n\tnorm=[nvecs[i],nvecs[i],nvecs[i+1],nvecs[i+1]];n1=n2=nvecs[i];n3=n4=nvecs[i+1];normalArray[t1offset]=n1.x;normalArray[t2offset]=n2.x;normalArray[t4offset]=n4.x;normalArray[t1offset+1]=n1.y;normalArray[t2offset+1]=n2.y;normalArray[t4offset+1]=n4.y;normalArray[t1offset+2]=n1.z;normalArray[t2offset+2]=n2.z;normalArray[t4offset+2]=n4.z;normalArray[t2offset]=n2.x;normalArray[t3offset]=n3.x;normalArray[t4offset]=n4.x;normalArray[t2offset+1]=n2.y;normalArray[t3offset+1]=n3.y;normalArray[t4offset+1]=n4.y;normalArray[t2offset+2]=n2.z;normalArray[t3offset+2]=n3.z;normalArray[t4offset+2]=n4.z;normalArray[t2boffset]=n2.x;normalArray[t3boffset]=n3.x;normalArray[t2boffset+1]=n2.y;normalArray[t3boffset+1]=n3.y;normalArray[t2boffset+2]=n2.z;normalArray[t3boffset+2]=n3.z;// sides\n\tfaceArray[faceoffset]=t1;faceArray[faceoffset+1]=t2;faceArray[faceoffset+2]=t4;faceArray[faceoffset+3]=t2;faceArray[faceoffset+4]=t3;faceArray[faceoffset+5]=t4;// caps\n\tfaceArray[faceoffset+6]=t1;faceArray[faceoffset+7]=t4;faceArray[faceoffset+8]=fromi;faceArray[faceoffset+9]=t2b;faceArray[faceoffset+10]=toi;faceArray[faceoffset+11]=t3b;// arrowhead\n\tfaceArray[faceoffset+12]=t2b;faceArray[faceoffset+13]=endi;faceArray[faceoffset+14]=t3b;// sides\n\tlineArray[lineoffset]=t1;lineArray[lineoffset+1]=t2;lineArray[lineoffset+2]=t1;lineArray[lineoffset+3]=t4;// lineArray[lineoffset+4] = t2, lineArray[lineoffset+5] = t3;\n\tlineArray[lineoffset+4]=t3;lineArray[lineoffset+5]=t4;// caps\n\tlineArray[lineoffset+6]=t1;lineArray[lineoffset+7]=t4;// lineArray[lineoffset+10] = t1, lineArray[lineoffset+11] = fromi;\n\t// lineArray[lineoffset+12] = t4, lineArray[lineoffset+13] = fromi;\n\tlineArray[lineoffset+8]=t2b;lineArray[lineoffset+9]=t2;// toi\n\tlineArray[lineoffset+10]=t2b;lineArray[lineoffset+11]=t3b;lineArray[lineoffset+12]=t3;lineArray[lineoffset+13]=t3b;// toi\n\t// arrowhead\n\tlineArray[lineoffset+14]=t2b;lineArray[lineoffset+15]=endi;lineArray[lineoffset+16]=t2b;lineArray[lineoffset+17]=t3b;lineArray[lineoffset+18]=endi;lineArray[lineoffset+19]=t3b;geoGroup.faceidx+=15;geoGroup.lineidx+=20;}// final face\n\tface=[start+45,start+46,start+1,start,start+47,start+2];norm=[nvecs[15],nvecs[15],nvecs[0],nvecs[0]];faceoffset=geoGroup.faceidx;lineoffset=geoGroup.lineidx;t1=face[0];t1offset=t1*3;t2=face[1];t2offset=t2*3;t2b=face[4];t2boffset=t2b*3;t3=face[2];t3offset=t3*3;t3b=face[5];t3boffset=t3b*3;t4=face[3];t4offset=t4*3;n1=n2=nvecs[15];n3=n4=nvecs[0];normalArray[t1offset]=n1.x;normalArray[t2offset]=n2.x;normalArray[t4offset]=n4.x;normalArray[t1offset+1]=n1.y;normalArray[t2offset+1]=n2.y;normalArray[t4offset+1]=n4.y;normalArray[t1offset+2]=n1.z;normalArray[t2offset+2]=n2.z;normalArray[t4offset+2]=n4.z;normalArray[t2offset]=n2.x;normalArray[t3offset]=n3.x;normalArray[t4offset]=n4.x;normalArray[t2offset+1]=n2.y;normalArray[t3offset+1]=n3.y;normalArray[t4offset+1]=n4.y;normalArray[t2offset+2]=n2.z;normalArray[t3offset+2]=n3.z;normalArray[t4offset+2]=n4.z;normalArray[t2boffset]=n2.x;normalArray[t3boffset]=n3.x;normalArray[t2boffset+1]=n2.y;normalArray[t3boffset+1]=n3.y;normalArray[t2boffset+2]=n2.z;normalArray[t3boffset+2]=n3.z;// Cap normals\n\tdir.normalize();negDir.normalize();normalArray[fromoffset]=negDir.x;normalArray[tooffset]=normalArray[endoffset]=dir.x;normalArray[fromoffset+1]=negDir.y;normalArray[tooffset+1]=normalArray[endoffset+1]=dir.y;normalArray[fromoffset+2]=negDir.z;normalArray[tooffset+2]=normalArray[endoffset+2]=dir.z;// Final side\n\tfaceArray[faceoffset]=t1;faceArray[faceoffset+1]=t2;faceArray[faceoffset+2]=t4;faceArray[faceoffset+3]=t2;faceArray[faceoffset+4]=t3;faceArray[faceoffset+5]=t4;// final caps\n\tfaceArray[faceoffset+6]=t1;faceArray[faceoffset+7]=t4;faceArray[faceoffset+8]=fromi;faceArray[faceoffset+9]=t2b;faceArray[faceoffset+10]=toi;faceArray[faceoffset+11]=t3b;// final arrowhead\n\tfaceArray[faceoffset+12]=t2b;faceArray[faceoffset+13]=endi;faceArray[faceoffset+14]=t3b;// sides\n\tlineArray[lineoffset]=t1;lineArray[lineoffset+1]=t2;lineArray[lineoffset+2]=t1;lineArray[lineoffset+3]=t4;// lineArray[lineoffset+4] = t2, lineArray[lineoffset+5] = t3;\n\tlineArray[lineoffset+4]=t3;lineArray[lineoffset+5]=t4;// caps\n\tlineArray[lineoffset+6]=t1;lineArray[lineoffset+7]=t4;// lineArray[lineoffset+10] = t1, lineArray[lineoffset+11] = fromi;\n\t// lineArray[lineoffset+12] = t4, lineArray[lineoffset+13] = fromi;\n\tlineArray[lineoffset+8]=t2b;lineArray[lineoffset+9]=t2;// toi\n\tlineArray[lineoffset+10]=t2b;lineArray[lineoffset+11]=t3b;lineArray[lineoffset+12]=t3;lineArray[lineoffset+13]=t3b;// toi\n\t// arrowhead\n\tlineArray[lineoffset+14]=t2b;lineArray[lineoffset+15]=endi;lineArray[lineoffset+16]=t2b;lineArray[lineoffset+17]=t3b;lineArray[lineoffset+18]=endi;lineArray[lineoffset+19]=t3b;geoGroup.faceidx+=15;geoGroup.lineidx+=20;};//helper function for adding an appropriately sized mesh\n\tvar addCustomGeo=function addCustomGeo(shape,geo,mesh,color,clickable){var geoGroup=geo.addGeoGroup();var vertexArr=mesh.vertexArr,normalArr=mesh.normalArr,faceArr=mesh.faceArr;geoGroup.vertices=vertexArr.length;geoGroup.faceidx=faceArr.length;var offset,v,a,b,c,i,il;var vertexArray=geoGroup.vertexArray;var colorArray=geoGroup.colorArray;if(!(color.constructor===Array)){var r=color.r;var g=color.g;var b=color.b;}for(i=0,il=geoGroup.vertices;i<il;++i){offset=i*3;v=vertexArr[i];vertexArray[offset]=v.x;vertexArray[offset+1]=v.y;vertexArray[offset+2]=v.z;if(color.constructor===Array){var c=color[i];var r=c.r;var g=c.g;var b=c.b;}colorArray[offset]=r;colorArray[offset+1]=g;colorArray[offset+2]=b;}if(clickable){for(i=0,il=geoGroup.faceidx/3;i<il;++i){offset=i*3;a=faceArr[offset];b=faceArr[offset+1];c=faceArr[offset+2];var vA=new $3Dmol.Vector3(),vB=new $3Dmol.Vector3(),vC=new $3Dmol.Vector3();shape.intersectionShape.triangle.push(new $3Dmol.Triangle(vA.copy(vertexArr[a]),vB.copy(vertexArr[b]),vC.copy(vertexArr[c])));}}if(clickable){var center=new $3Dmol.Vector3(0,0,0);var cnt=0;for(var g=0;g<geo.geometryGroups.length;g++){center.add(geo.geometryGroups[g].getCentroid());cnt++;}center.divideScalar(cnt);updateBoundingFromPoints(shape.boundingSphere,{centroid:center},vertexArray);}geoGroup.faceArray=new Uint16Array(faceArr);geoGroup.truncateArrayBuffers(true,true);if(normalArr.length<geoGroup.vertices)geoGroup.setNormals();else{var normalArray=geoGroup.normalArray=new Float32Array(geoGroup.vertices*3);var n;for(i=0,il=geoGroup.vertices;i<il;++i){offset=i*3;n=normalArr[i];normalArray[offset]=n.x;normalArray[offset+1]=n.y;normalArray[offset+2]=n.z;}}geoGroup.setLineIndices();geoGroup.lineidx=geoGroup.lineArray.length;};// handles custom shape generation from user supplied arrays\n\t// May need to generate normal and/or line indices\n\t/**\n\t     * @param {$3Dmol.GLShape}\n\t     *            shape\n\t     * @param {geometry}\n\t     *            geo\n\t     * @param {CustomSpec}\n\t     *            customSpec\n\t     */var drawCustom=function drawCustom(shape,geo,customSpec){var mesh=customSpec;var vertexArr=mesh.vertexArr,normalArr=mesh.normalArr,faceArr=mesh.faceArr;if(vertexArr.length===0||faceArr.length===0){console.warn(\"Error adding custom shape component: No vertices and/or face indices supplied!\");}var color=customSpec.color;if(typeof color=='undefined'){color=shape.color;}color=$3Dmol.CC.color(color);//var firstgeo = geo.geometryGroups.length;\n\tvar splits=$3Dmol.splitMesh(mesh);for(var i=0,n=splits.length;i<n;i++){addCustomGeo(shape,geo,splits[i],splits[i].colorArr?splits[i].colorArr:color,customSpec.clickable);}};// Update a bounding sphere's position and radius\n\t// from list of centroids and new points\n\t/**\n\t     * @param {$3Dmol.Sphere}\n\t     *            sphere\n\t     * @param {Object}\n\t     *            components\n\t     * @param {Array}\n\t     *            points\n\t     */var updateBoundingFromPoints=function updateBoundingFromPoints(sphere,components,points){sphere.center.set(0,0,0);var i,il;if(components.length>0){for(i=0,il=components.length;i<il;++i){var centroid=components[i].centroid;sphere.center.add(centroid);}sphere.center.divideScalar(components.length);}var maxRadiusSq=sphere.radius*sphere.radius;for(i=0,il=points.length/3;i<il;i++){var x=points[i*3],y=points[i*3+1],z=points[i*3+2];var radiusSq=sphere.center.distanceToSquared({x:x,y:y,z:z});maxRadiusSq=Math.max(maxRadiusSq,radiusSq);}sphere.radius=Math.sqrt(maxRadiusSq);};/**\n\t     *\n\t     * @param {$3Dmol.GLShape}\n\t     *            shape\n\t     * @param {ShapeSpec}\n\t     *            stylespec\n\t     * @returns {undefined}\n\t     */var updateFromStyle=function updateFromStyle(shape,stylespec){if(typeof stylespec.color!='undefined'){shape.color=stylespec.color||new $3Dmol.Color();if(!(stylespec.color instanceof $3Dmol.Color))shape.color=$3Dmol.CC.color(stylespec.color);}shape.wireframe=stylespec.wireframe?true:false;//opacity is the preferred nomenclature, support alpha for backwards compat\n\tshape.opacity=stylespec.alpha?$3Dmol.Math.clamp(stylespec.alpha,0.0,1.0):1.0;if(typeof stylespec.opacity!='undefined'){shape.opacity=$3Dmol.Math.clamp(stylespec.opacity,0.0,1.0);}shape.side=stylespec.side!==undefined?stylespec.side:$3Dmol.DoubleSide;shape.linewidth=typeof stylespec.linewidth=='undefined'?1:stylespec.linewidth;// Click handling\n\tshape.clickable=stylespec.clickable?true:false;shape.callback=typeof stylespec.callback===\"function\"?stylespec.callback:null;shape.hoverable=stylespec.hoverable?true:false;shape.hover_callback=typeof stylespec.hover_callback===\"function\"?stylespec.hover_callback:null;shape.unhover_callback=typeof stylespec.unhover_callback===\"function\"?stylespec.unhover_callback:null;shape.hidden=stylespec.hidden;};/**\n\t     * Custom renderable shape\n\t     *\n\t     * @constructor $3Dmol.GLShape\n\t     *\n\t     * @param {Object}\n\t     *            stylespec\n\t     * @returns {$3Dmol.GLShape}\n\t     */function GLShape(stylespec){stylespec=stylespec||{};$3Dmol.ShapeIDCount++;this.boundingSphere=new $3Dmol.Sphere();/** @type {IntersectionShapes} */this.intersectionShape={sphere:[],cylinder:[],line:[],triangle:[]};updateFromStyle(this,stylespec);// Keep track of shape components and their centroids\n\tvar components=[];var shapeObj=null;var renderedShapeObj=null;var geo=new $3Dmol.Geometry(true);var linegeo=new $3Dmol.Geometry(true);/** Update shape with new style specification\n\t         * @param {ShapeSpec} newspec\n\t         * @return {$3Dmol.GLShape}\n\t         */this.updateStyle=function(newspec){for(var prop in newspec){stylespec[prop]=newspec[prop];}updateFromStyle(this,stylespec);};/**\n\t         * Creates a custom shape from supplied vertex and face arrays\n\t         * @function $3Dmol.GLShape#addCustom\n\t         * @param {CustomSpec} customSpec\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addCustom=function(customSpec){customSpec.vertexArr=customSpec.vertexArr||[];customSpec.faceArr=customSpec.faceArr||[];customSpec.normalArr=customSpec.normalArr||[];var firstgeo=geo.geometryGroups.length;// will split mesh as needed\n\tdrawCustom(this,geo,customSpec);};/**\n\t         * Creates a sphere shape\n\t         * @function $3Dmol.GLShape#addSphere\n\t         * @param {SphereSpec} sphereSpec\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addSphere=function(sphereSpec){sphereSpec.center=sphereSpec.center||{x:0,y:0,z:0};sphereSpec.radius=sphereSpec.radius?$3Dmol.Math.clamp(sphereSpec.radius,0,Infinity):1.5;sphereSpec.color=$3Dmol.CC.color(sphereSpec.color);this.intersectionShape.sphere.push(new $3Dmol.Sphere(sphereSpec.center,sphereSpec.radius));$3Dmol.GLDraw.drawSphere(geo,sphereSpec.center,sphereSpec.radius,sphereSpec.color);components.push({centroid:new $3Dmol.Vector3(sphereSpec.center.x,sphereSpec.center.y,sphereSpec.center.z)});var geoGroup=geo.updateGeoGroup(0);updateBoundingFromPoints(this.boundingSphere,components,geoGroup.vertexArray);};/**\n\t         * Creates a cylinder shape\n\t         * @function $3Dmol.GLShape#addCylinder\n\t         * @param {CylinderSpec} cylinderSpec\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addCylinder=function(cylinderSpec){cylinderSpec.start=cylinderSpec.start||{};cylinderSpec.end=cylinderSpec.end||{};var start=new $3Dmol.Vector3(cylinderSpec.start.x||0,cylinderSpec.start.y||0,cylinderSpec.start.z||0);var end=new $3Dmol.Vector3(cylinderSpec.end.x,cylinderSpec.end.y||0,cylinderSpec.end.z||0);if(typeof end.x=='undefined')end.x=3;//show something even if undefined\n\tvar radius=cylinderSpec.radius||0.1;var color=$3Dmol.CC.color(cylinderSpec.color);this.intersectionShape.cylinder.push(new $3Dmol.Cylinder(start,end,radius));$3Dmol.GLDraw.drawCylinder(geo,start,end,radius,color,cylinderSpec.fromCap,cylinderSpec.toCap);var centroid=new $3Dmol.Vector3();components.push({centroid:centroid.addVectors(start,end).multiplyScalar(0.5)});var geoGroup=geo.updateGeoGroup(0);updateBoundingFromPoints(this.boundingSphere,components,geoGroup.vertexArray);};/**\n\t         * Creates a line shape\n\t         * @function $3Dmol.GLShape#addLine\n\t         * @param {LineSpec} lineSpec\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addLine=function(lineSpec){lineSpec.start=lineSpec.start||{};lineSpec.end=lineSpec.end||{};var start=new $3Dmol.Vector3(lineSpec.start.x||0,lineSpec.start.y||0,lineSpec.start.z||0);var end=new $3Dmol.Vector3(lineSpec.end.x,lineSpec.end.y||0,lineSpec.end.z||0);if(typeof end.x=='undefined')end.x=3;//show something even if undefined\n\tvar geoGroup=geo.updateGeoGroup(2);//make line from start to end\n\t//for consistency with rest of shapes, uses vertices and lines rather\n\t//than a separate line geometry\n\tvar vstart=geoGroup.vertices;var i=vstart*3;var vertexArray=geoGroup.vertexArray;vertexArray[i]=start.x;vertexArray[i+1]=start.y;vertexArray[i+2]=start.z;vertexArray[i+3]=end.x;vertexArray[i+4]=end.y;vertexArray[i+5]=end.z;geoGroup.vertices+=2;var lineArray=geoGroup.lineArray;var li=geoGroup.lineidx;lineArray[li]=vstart;lineArray[li+1]=vstart+1;geoGroup.lineidx+=2;};/**\n\t         * Creates an arrow shape\n\t         * @function $3Dmol.GLShape#addArrow\n\t         * @param {ArrowSpec} arrowSpec\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addArrow=function(arrowSpec){arrowSpec.start=arrowSpec.start||{};arrowSpec.end=arrowSpec.end||{};arrowSpec.start=new $3Dmol.Vector3(arrowSpec.start.x||0,arrowSpec.start.y||0,arrowSpec.start.z||0);if(arrowSpec.dir instanceof $3Dmol.Vector3&&arrowSpec.length instanceof number){var end=arrowSpec.dir.clone().multiplyScalar(arrowSpec.length).add(start);arrowSpec.end=end;}else{arrowSpec.end=new $3Dmol.Vector3(arrowSpec.end.x,arrowSpec.end.y||0,arrowSpec.end.z||0);if(typeof arrowSpec.end.x=='undefined')arrowSpec.end.x=3;//show something even if undefined\n\t}arrowSpec.radius=arrowSpec.radius||0.1;arrowSpec.radiusRatio=arrowSpec.radiusRatio||1.618034;arrowSpec.mid=0<arrowSpec.mid&&arrowSpec.mid<1?arrowSpec.mid:0.618034;drawArrow(this,geo,arrowSpec);var centroid=new $3Dmol.Vector3();components.push({centroid:centroid.addVectors(arrowSpec.start,arrowSpec.end).multiplyScalar(0.5)});var geoGroup=geo.updateGeoGroup(0);updateBoundingFromPoints(this.boundingSphere,components,geoGroup.vertexArray);};/**\n\t         * Create isosurface from voluemetric data.\n\t         * @function $3Dmol.GLShape#addIsosurface\n\t         * @param {$3Dmol.VolumeData} data - volumetric input data\n\t         * @param {IsoSurfaceSpec} isoSpec - volumetric data shape specification\n\t         */this.addIsosurface=function(data,volSpec){var isoval=volSpec.isoval!==undefined&&typeof volSpec.isoval===\"number\"?volSpec.isoval:0.0;var voxel=volSpec.voxel?true:false;var smoothness=volSpec.smoothness===undefined?1:volSpec.smoothness;var nX=data.size.x;var nY=data.size.y;var nZ=data.size.z;var vertnums=new Int16Array(nX*nY*nZ);var vals=data.data;var i,il;for(i=0,il=vertnums.length;i<il;++i){vertnums[i]=-1;}var bitdata=new Uint8Array(nX*nY*nZ);//mark locations partitioned by isoval\n\tfor(i=0,il=vals.length;i<il;++i){var val=isoval>=0?vals[i]-isoval:isoval-vals[i];if(val>0)bitdata[i]|=ISDONE;}if(volSpec.selectedRegion!==undefined){for(var i=0;i<nX;i++){for(var j=0;j<nY;j++){for(var k=0;k<nZ;k++){var coordinate=convert(i,j,k,data);//sortSelectedRegion(volSpec.selectedRegion);\n\tif(!inSelectedRegion(coordinate,volSpec.selectedRegion,volSpec.selectedOffset,volSpec.radius)){var gridindex=(i*nY+j)*nZ+k;bitdata[gridindex]=0;}}}}}var verts=[],faces=[];$3Dmol.MarchingCube.march(bitdata,verts,faces,{fulltable:true,voxel:voxel,unitCube:data.unit,origin:data.origin,matrix:data.matrix,nX:nX,nY:nY,nZ:nZ});if(!voxel&&smoothness>0)$3Dmol.MarchingCube.laplacianSmooth(smoothness,verts,faces);drawCustom(this,geo,{vertexArr:verts,faceArr:faces,normalArr:[],clickable:volSpec.clickable,hoverable:volSpec.hoverable});this.updateStyle(volSpec);//computing bounding sphere from vertices\n\tvar origin=new $3Dmol.Vector3(data.origin.x,data.origin.y,data.origin.z);var size=new $3Dmol.Vector3(data.size.x*data.unit.x,data.size.y*data.unit.y,data.size.z*data.unit.z);var total=new $3Dmol.Vector3(0,0,0);var maxv=origin.clone();var minv=origin.clone().add(size);for(var i=0;i<verts.length;i++){total.add(verts[i]);maxv.max(verts[i]);minv.min(verts[i]);}total.divideScalar(verts.length);var len1=total.distanceTo(minv);var len2=total.distanceTo(maxv);this.boundingSphere.center=total;this.boundingSphere.radius=Math.max(len1,len2);};var inSelectedRegion=function inSelectedRegion(coordinate,selectedRegion,offset,radius){//takes up most of the time\n\tfor(var i=0;i<selectedRegion.length;i++){if(distance_from(selectedRegion[i],coordinate)<=radius)return true;}return false;};/*\n\t        var sortSelectedRegion= function(selectedRegion){//sorts by x value\n\t            for(var i=1; i<selectedRegion.length;i++){\n\t                var currentValue= selectedRegion[i].x;\n\t                var position=i;\n\t\n\t                while(position >0 && selectedRegion[position-1].x>currentValue){\n\t                    selectedRegion[position].x=selectedRegion[position-1].x;\n\t                    position=position-1;\n\t\n\t                }\n\t                selectedRegion[position].x=currentValue\n\t            }\n\t        }\n\t        */var distance_from=function distance_from(c1,c2){return Math.sqrt(Math.pow(c1.x-c2.x,2)+Math.pow(c1.y-c2.y,2)+Math.pow(c1.z-c2.z,2));};var convert=function convert(i,j,k,data){var pt;if(data.matrix){pt=new $3Dmol.Vector3(i,j,k);pt=pt.applyMatrix4(data.matrix);pt={x:pt.x,y:pt.y,z:pt.z};//remove vector gunk\n\t}else{pt.x=data.origin.x+data.unit.x*i;pt.y=data.origin.y+data.unit.y*j;pt.z=data.origin.z+data.unit.z*k;}//console.log(pt.x+\",\"+pt.y+\",\"+pt.z);\n\treturn pt;};/**\n\t         * @deprecated Use addIsosurface instead\n\t         * Creates custom shape from volumetric data\n\t         * @param {string} data - Volumetric input data\n\t         * @param {string} fmt - Input data format (e.g. 'cube' for cube file format)\n\t         * @param {IsoSurfaceSpec} isoSpec - Volumetric data shape specification\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addVolumetricData=function(data,fmt,volSpec){var data=new $3Dmol.VolumeData(data,fmt);this.addIsosurface(data,volSpec);};/**\n\t         * Initialize webgl objects for rendering\n\t         * @param {$3Dmol.Object3D} group\n\t         *\n\t         */this.globj=function(group){if(renderedShapeObj){group.remove(renderedShapeObj);renderedShapeObj=null;}if(this.hidden)return;finalizeGeo(geo);geo.initTypedArrays();if(typeof this.color!='undefined')updateColor(geo,this.color);shapeObj=new $3Dmol.Object3D();var material=null;if(this.side==$3Dmol.DoubleSide){var material=new $3Dmol.MeshDoubleLambertMaterial({wireframe:this.wireframe,side:this.side,transparent:this.opacity<1?true:false,opacity:this.opacity,wireframeLinewidth:this.linewidth});}else{var material=new $3Dmol.MeshLambertMaterial({wireframe:this.wireframe,side:this.side,transparent:this.opacity<1?true:false,opacity:this.opacity,wireframeLinewidth:this.linewidth});}var mesh=new $3Dmol.Mesh(geo,material);shapeObj.add(mesh);var lineMaterial=new $3Dmol.LineBasicMaterial({linewidth:this.linewidth,color:this.color});var line=new $3Dmol.Line(linegeo,lineMaterial,$3Dmol.LinePieces);shapeObj.add(line);renderedShapeObj=shapeObj.clone();group.add(renderedShapeObj);};this.removegl=function(group){if(renderedShapeObj){// dispose of geos and materials\n\tif(renderedShapeObj.geometry!==undefined)renderedShapeObj.geometry.dispose();if(renderedShapeObj.material!==undefined)renderedShapeObj.material.dispose();group.remove(renderedShapeObj);renderedShapeObj=null;}shapeObj=null;};};Object.defineProperty(GLShape.prototype,\"position\",{get:function get(){return this.boundingSphere.center;}});Object.defineProperty(GLShape.prototype,\"x\",{get:function get(){return this.boundingSphere.center.x;}});Object.defineProperty(GLShape.prototype,\"y\",{get:function get(){return this.boundingSphere.center.y;}});Object.defineProperty(GLShape.prototype,\"z\",{get:function get(){return this.boundingSphere.center.z;}});return GLShape;}();$3Dmol.ShapeIDCount=0;$3Dmol.splitMesh=function(mesh){var MAXVERT=64000;//webgl only supports 2^16 elements, leave a little breathing room (require at least 2)\n\t//peel off 64k vertices rsvh into their own mesh\n\t//duplicating vertices and normals as necessary to preserve faces and lines\n\tif(mesh.vertexArr.length<MAXVERT)return[mesh];//typical case\n\tvar nverts=mesh.vertexArr.length;var slices=[{vertexArr:[],normalArr:[],faceArr:[]}];if(mesh.colorArr)slices.colorArr=[];var vertSlice=[];//indexed by original vertex to get current slice\n\tvar vertIndex=[];//indexed by original vertex to get index within slice\n\tvar currentSlice=0;//for each face, make sure all three vertices (or copies) are in the same slice\n\tvar faces=mesh.faceArr;var vs=[0,0,0];for(var i=0,nf=faces.length;i<nf;i+=3){var slice=slices[currentSlice];for(var j=0;j<3;j++){//process each vertex to make sure it is assigned a slice\n\t//all vertices of a face must belong to the same slice\n\tvar v=faces[i+j];if(vertSlice[v]!==currentSlice){//true if undefined\n\tvertSlice[v]=currentSlice;vertIndex[v]=slice.vertexArr.length;slice.vertexArr.push(mesh.vertexArr[v]);if(mesh.normalArr&&mesh.normalArr[v])slice.normalArr.push(mesh.normalArr[v]);if(mesh.colorArr&&mesh.colorArr[v])slice.colorArr.push(mesh.colorArr[v]);}slice.faceArr.push(vertIndex[v]);}if(slice.vertexArr.length>=MAXVERT){//new slice\n\tslices.push({vertexArr:[],normalArr:[],faceArr:[]});if(mesh.colorArr)slices.colorArr=[];currentSlice++;}}return slices;};//a molecular viewer based on GLMol\n\t/**\n\t * WebGL-based 3Dmol.js viewer\n\t * Note: The preferred method of instantiating a GLViewer is through {@link $3Dmol.createViewer}\n\t *\n\t * @constructor\n\t * @param {Object} element HTML element within which to create viewer\n\t * @param {function} callback - Callback function to be immediately executed on this viewer\n\t * @param {Object} defaultcolors - Object defining default atom colors as atom => color property value pairs for all models within this viewer\n\t */$3Dmol.GLViewer=function(){// private class variables\n\tvar numWorkers=4;// number of threads for surface generation\n\tvar maxVolume=64000;// how much to break up surface calculations\n\t// private class helper functions\n\tfunction GLViewer(element,config){// set variables\n\tconfig=config||{};var callback=config.callback;var defaultcolors=config.defaultcolors;if(!defaultcolors)defaultcolors=$3Dmol.elementColors.defaultColors;var nomouse=config.nomouse;var bgColor=0;if(_typeof(config.backgroundColor)!=undefined){bgColor=$3Dmol.CC.color(config.backgroundColor).getHex();}var camerax=0;if(_typeof(config.camerax)!=undefined){camerax=parseFloat(config.camerax);}var _viewer=this;var container=element;var id=container.id;var glDOM=null;var models=[];// atomistic molecular models\n\tvar surfaces={};var shapes=[];// Generic shapes\n\tvar labels=[];var clickables=[];//things you can click on\n\tvar hoverables=[];//things you can hover over\n\tvar popups=[];var current_hover=null;var WIDTH=container.width();var HEIGHT=container.height();// set dimensions\n\t// $(container).width(WIDTH);\n\t// $(container).height(HEIGHT);\n\tvar ASPECT=WIDTH/HEIGHT;var NEAR=1,FAR=800;var CAMERA_Z=150;var fov=20;var linkedViewers=[];var renderer=new $3Dmol.Renderer({antialias:true,preserveDrawingBuffer:true,//so we can export images\n\tpremultipliedAlpha:false/* more traditional compositing with background */});renderer.domElement.style.width=\"100%\";renderer.domElement.style.height=\"100%\";renderer.domElement.style.padding=\"0\";renderer.domElement.style.position=\"absolute\";//TODO: get rid of this\n\trenderer.domElement.style.top=\"0px\";renderer.domElement.style.left=\"0px\";renderer.domElement.style.zIndex=\"0\";var camera=new $3Dmol.Camera(fov,ASPECT,NEAR,FAR,config.orthographic);camera.position=new $3Dmol.Vector3(camerax,0,CAMERA_Z);var lookingAt=new $3Dmol.Vector3();camera.lookAt(lookingAt);var raycaster=new $3Dmol.Raycaster(new $3Dmol.Vector3(0,0,0),new $3Dmol.Vector3(0,0,0));var projector=new $3Dmol.Projector();var mouseVector=new $3Dmol.Vector3(0,0,0);var scene=null;var rotationGroup=null;// which contains modelGroup\n\tvar modelGroup=null;var fogStart=0.4;var slabNear=-50;// relative to the center of rotationGroup\n\tvar slabFar=50;// UI variables\n\tvar cq=new $3Dmol.Quaternion(0,0,0,1);var dq=new $3Dmol.Quaternion(0,0,0,1);var animated=false;var isDragging=false;var mouseStartX=0;var mouseStartY=0;var touchDistanceStart=0;var currentModelPos=0;var cz=0;var cslabNear=0;var cslabFar=0;var nextSurfID=function nextSurfID(){//compute the next highest surface id directly from surfaces\n\t//this is necessary to support linking of model data\n\tvar max=0;for(i in surfaces){// this is an object with possible holes\n\tif(!surfaces.hasOwnProperty(i))continue;if(i>max)max=i;}return max+1;};var setSlabAndFog=function setSlabAndFog(){var center=camera.position.z-rotationGroup.position.z;if(center<1)center=1;camera.near=center+slabNear;if(camera.near<1)camera.near=1;camera.far=center+slabFar;if(camera.near+1>camera.far)camera.far=camera.near+1;camera.fov=fov;camera.right=center*Math.tan(Math.PI/180*fov);camera.left=-camera.right;camera.top=camera.right/ASPECT;camera.bottom=-camera.top;camera.updateProjectionMatrix();scene.fog.near=camera.near+fogStart*(camera.far-camera.near);// if (scene.fog.near > center) scene.fog.near = center;\n\tscene.fog.far=camera.far;};// display scene\n\t//if nolink is set/true, don't propagate changes to linked viewers\n\tvar show=function show(nolink){if(!scene)return;// var time = new Date();\n\tsetSlabAndFog();renderer.render(scene,camera);// console.log(\"rendered in \" + (+new Date() - time) + \"ms\");\n\tif(!nolink&&linkedViewers.length>0){var view=_viewer.getView();for(var i=0;i<linkedViewers.length;i++){var other=linkedViewers[i];other.setView(view,true);}}};var initializeScene=function initializeScene(){scene=new $3Dmol.Scene();scene.fog=new $3Dmol.Fog(bgColor,100,200);modelGroup=new $3Dmol.Object3D();rotationGroup=new $3Dmol.Object3D();rotationGroup.useQuaternion=true;rotationGroup.quaternion=new $3Dmol.Quaternion(0,0,0,1);rotationGroup.add(modelGroup);scene.add(rotationGroup);// setup lights\n\tvar directionalLight=new $3Dmol.Light(0xFFFFFF);directionalLight.position=new $3Dmol.Vector3(0.2,0.2,1).normalize();directionalLight.intensity=1.0;scene.add(directionalLight);};initializeScene();renderer.setClearColorHex(bgColor,1.0);scene.fog.color=$3Dmol.CC.color(bgColor);var clickedAtom=null;// enable mouse support\n\t//regenerate the list of clickables\n\t//also updates hoverables\n\tvar updateClickables=function updateClickables(){clickables.splice(0,clickables.length);hoverables.splice(0,hoverables.length);var i,il;for(i=0,il=models.length;i<il;i++){var model=models[i];if(model){var atoms=model.selectedAtoms({clickable:true});var hoverable_atoms=model.selectedAtoms({hoverable:true});Array.prototype.push.apply(hoverables,hoverable_atoms);Array.prototype.push.apply(clickables,atoms);//add atoms into clickables\n\t}}for(i=0,il=shapes.length;i<il;i++){var shape=shapes[i];if(shape&&shape.clickable){clickables.push(shape);}if(shape&&shape.hoverable){hoverables.push(shape);}}};// Checks for selection intersects on mousedown\n\tvar handleClickSelection=function handleClickSelection(mouseX,mouseY,event){if(clickables.length==0)return;var mouse={x:mouseX,y:mouseY,z:-1.0};mouseVector.set(mouse.x,mouse.y,mouse.z);projector.unprojectVector(mouseVector,camera);mouseVector.sub(camera.position).normalize();raycaster.set(camera.position,mouseVector);var intersects=[];intersects=raycaster.intersectObjects(modelGroup,clickables);if(intersects.length){var selected=intersects[0].clickable;if(selected.callback!==undefined&&typeof selected.callback===\"function\"){selected.callback(selected,_viewer,event,container);}}};//checks for selection intersects on hover\n\tvar handleHoverSelection=function handleHoverSelection(mouseX,mouseY,event){if(hoverables.length==0)return;var mouse={x:mouseX,y:mouseY,z:-1.0};mouseVector.set(mouse.x,mouse.y,mouse.z);projector.unprojectVector(mouseVector,camera);mouseVector.sub(camera.position).normalize();raycaster.set(camera.position,mouseVector);var intersects=[];intersects=raycaster.intersectObjects(modelGroup,hoverables);if(intersects.length){var selected=intersects[0].clickable;current_hover=selected;if(selected.hover_callback!==undefined&&typeof selected.hover_callback===\"function\"){selected.hover_callback(selected,_viewer,event,container);}}else{current_hover=null;}};//sees if the mouse is still on the object that invoked a hover event and if not then the unhover callback is called\n\tvar handleHoverContinue=function handleHoverContinue(mouseX,mouseY,event){console.log(\"continue\");var mouse={x:mouseX,y:mouseY,z:-1.0};mouseVector.set(mouse.x,mouse.y,mouse.z);projector.unprojectVector(mouseVector,camera);mouseVector.sub(camera.position).normalize();raycaster.set(camera.position,mouseVector);var intersects=[];intersects=raycaster.intersectObjects(modelGroup,hoverables);if(intersects[0]===undefined){current_hover.unhover_callback(current_hover,_viewer,event,container);current_hover=null;}if(intersects[0]!==undefined)if(intersects[0].clickable!==current_hover){current_hover.unhover_callback(current_hover,_viewer,event,container);current_hover=null;}};var calcTouchDistance=function calcTouchDistance(ev){// distance between first two\n\t// fingers\n\tvar xdiff=ev.originalEvent.targetTouches[0].pageX-ev.originalEvent.targetTouches[1].pageX;var ydiff=ev.originalEvent.targetTouches[0].pageY-ev.originalEvent.targetTouches[1].pageY;return Math.sqrt(xdiff*xdiff+ydiff*ydiff);};//check targetTouches as well\n\tvar getXY=function getXY(ev){var x=ev.pageX,y=ev.pageY;if(ev.originalEvent.targetTouches&&ev.originalEvent.targetTouches[0]){x=ev.originalEvent.targetTouches[0].pageX;y=ev.originalEvent.targetTouches[0].pageY;}else if(ev.originalEvent.changedTouches&&ev.originalEvent.changedTouches[0]){x=ev.originalEvent.changedTouches[0].pageX;y=ev.originalEvent.changedTouches[0].pageY;}return[x,y];};//for a given screen (x,y) displacement return model displacement\n\tvar screenXY2model=function screenXY2model(x,y){var dx=x/WIDTH;var dy=y/HEIGHT;var zpos=rotationGroup.position.z;var q=rotationGroup.quaternion;var t=new $3Dmol.Vector3(0,0,zpos);projector.projectVector(t,camera);t.x+=dx*2;t.y-=dy*2;projector.unprojectVector(t,camera);t.z=0;t.applyQuaternion(q);return t;};// this event is bound to the body element, not the container,\n\t// so no need to put it inside initContainer()\n\t$('body').bind('mouseup touchend',function(ev){// handle selection\n\tif(isDragging&&scene){//saw mousedown, haven't moved\n\tvar xy=getXY(ev);var x=xy[0];var y=xy[1];if(x==mouseStartX&&y==mouseStartY){var offset=$('canvas',container).offset();var mouseX=(x-offset.left)/WIDTH*2-1;var mouseY=-((y-offset.top)/HEIGHT)*2+1;handleClickSelection(mouseX,mouseY,ev,container);}}isDragging=false;});var mouseButton;var _handleMouseDown=this._handleMouseDown=function(ev){ev.preventDefault();if(!scene)return;var xy=getXY(ev);var x=xy[0];var y=xy[1];if(x===undefined)return;isDragging=true;clickedAtom=null;mouseButton=ev.which;mouseStartX=x;mouseStartY=y;touchDistanceStart=0;if(ev.originalEvent.targetTouches&&ev.originalEvent.targetTouches.length==2){touchDistanceStart=calcTouchDistance(ev);}cq=rotationGroup.quaternion;cz=rotationGroup.position.z;currentModelPos=modelGroup.position.clone();cslabNear=slabNear;cslabFar=slabFar;};var _handleMouseScroll=this._handleMouseScroll=function(ev){// Zoom\n\tev.preventDefault();if(!scene)return;var scaleFactor=(CAMERA_Z-rotationGroup.position.z)*0.85;var mult=1.0;if(ev.originalEvent.ctrlKey){mult=-1.0;//this is a pinch event turned into a wheel event (or they're just holding down the ctrl)\n\t}if(ev.originalEvent.detail){// Webkit\n\trotationGroup.position.z+=mult*scaleFactor*ev.originalEvent.detail/10;}else if(ev.originalEvent.wheelDelta){// Firefox\n\trotationGroup.position.z-=mult*scaleFactor*ev.originalEvent.wheelDelta/400;}if(rotationGroup.position.z>CAMERA_Z)rotationGroup.position.z=CAMERA_Z*0.999;//avoid getting stuck\n\tshow();};var hoverTimeout;var _handleMouseMove=this._handleMouseMove=function(ev){// touchmove\n\tclearTimeout(hoverTimeout);var offset=$('canvas',container).offset();var mouseX=(getXY(ev)[0]-offset.left)/WIDTH*2-1;var mouseY=-((getXY(ev)[1]-offset.top)/HEIGHT)*2+1;if(current_hover!==null)handleHoverContinue(mouseX,mouseY,ev);hoverTimeout=setTimeout(function(){handleHoverSelection(mouseX,mouseY,ev);},500);WIDTH=container.width();HEIGHT=container.height();ev.preventDefault();if(!scene)return;if(!isDragging)return;var mode=0;var xy=getXY(ev);var x=xy[0];var y=xy[1];if(x===undefined)return;//hover timeout\n\tvar dx=(x-mouseStartX)/WIDTH;var dy=(y-mouseStartY)/HEIGHT;// check for pinch\n\tif(touchDistanceStart!=0&&ev.originalEvent.targetTouches&&ev.originalEvent.targetTouches.length==2){var newdist=calcTouchDistance(ev);// change to zoom\n\tmode=2;dy=(newdist-touchDistanceStart)*2/(WIDTH+HEIGHT);console.log(\"pinch \"+touchDistanceStart+\" dy \"+dy);}else if(ev.originalEvent.targetTouches&&ev.originalEvent.targetTouches.length==3){// translate\n\tmode=1;}var r=Math.sqrt(dx*dx+dy*dy);var scaleFactor;if(mode==3||mouseButton==3&&ev.ctrlKey){// Slab\n\tslabNear=cslabNear+dx*100;slabFar=cslabFar+dy*100;}else if(mode==2||mouseButton==3||ev.shiftKey){// Zoom\n\tscaleFactor=(CAMERA_Z-rotationGroup.position.z)*0.85;if(scaleFactor<80)scaleFactor=80;rotationGroup.position.z=cz+dy*scaleFactor;if(rotationGroup.position.z>CAMERA_Z)rotationGroup.position.z=CAMERA_Z*0.999;//avoid getting stuck\n\t}else if(mode==1||mouseButton==2||ev.ctrlKey){// Translate\n\tvar t=screenXY2model(x-mouseStartX,y-mouseStartY);modelGroup.position.addVectors(currentModelPos,t);}else if((mode===0||mouseButton==1)&&r!==0){// Rotate\n\tvar rs=Math.sin(r*Math.PI)/r;dq.x=Math.cos(r*Math.PI);dq.y=0;dq.z=rs*dx;dq.w=-rs*dy;rotationGroup.quaternion=new $3Dmol.Quaternion(1,0,0,0);rotationGroup.quaternion.multiply(dq);rotationGroup.quaternion.multiply(cq);}show();};var initContainer=function initContainer(element){container=element;WIDTH=container.width();HEIGHT=container.height();ASPECT=WIDTH/HEIGHT;renderer.setSize(WIDTH,HEIGHT);container.append(renderer.domElement);glDOM=$(renderer.domElement);if(!nomouse){// user can request that the mouse handlers not be installed\n\tglDOM.bind('mousedown touchstart',_handleMouseDown);glDOM.bind('DOMMouseScroll mousewheel',_handleMouseScroll);glDOM.bind('mousemove touchmove',_handleMouseMove);glDOM.bind(\"contextmenu\",function(ev){ev.preventDefault();});}};initContainer(container);// public methods\n\t/**\n\t         * Change the viewer's container element\n\t         * Also useful if the original container element was removed from the DOM.\n\t         *\n\t         * @function $3Dmol.GLViewer#resetContainer\n\t         *\n\t         * @param {Object | string} element\n\t         *            Either HTML element or string identifier. Defaults to the element used to initialize the viewer.\n\t         * @example\n\t         * // Assume there exist HTML divs with ids \"gldiv\", \"gldiv2\"\n\t         * var element = $(\"#gldiv\"), element2 = $(\"#gldiv2\");\n\t         * // Create GLViewer within 'gldiv'\n\t         * var myviewer = $3Dmol.createViewer(element);\n\t         * // Move the canvas to the other div\n\t         * myviewer.setContainer(element2)\n\t         *\n\t         * @example\n\t         * // Assume there exists an HTML div with id \"gldiv\"\n\t         * var element = $(\"#gldiv\");\n\t         * // Create GLViewer within 'gldiv'\n\t         * var myviewer = $3Dmol.createViewer(element);\n\t         * // Remove the element from the DOM, and add a new element\n\t         * element.remove()\n\t         * $('body').prepend(\"<div id='newdiv'></div>\")\n\t         * // Show the canvas in the new element\n\t         * myviewer.setContainer('newdiv')\n\t         */this.setContainer=function(element){if($.type(element)===\"string\")element=$(\"#\"+element);if(!element){element=container;};initContainer(element);return this;};/**\n\t         * Set the background color (default white)\n\t         *\n\t         * @function $3Dmol.GLViewer#setBackgroundColor\n\t         * @param {number}\n\t         *            hex Hexcode specified background color, or standard color spec\n\t         * @param {number}\n\t         *            a Alpha level (default 1.0)\n\t         *\n\t         * @example\n\t         *\n\t         * //Set 'myviewer' background color to white\n\t         * myviewer.setBackgroundColor(0xffffff)\n\t         *\n\t         */this.setBackgroundColor=function(hex,a){if(typeof a==\"undefined\"){a=1.0;}else if(a<0||a>1.0){a=1.0;}var c=$3Dmol.CC.color(hex);scene.fog.color=c;bgColor=c.getHex();renderer.setClearColorHex(c.getHex(),a);show();return this;};/**\n\t         * Set view projection scheme.  Either orthographic or perspective.\n\t         * Default is perspective.  Orthographic can also be enabled on viewer creation\n\t         * by setting orthographic to true in the config object.\n\t         *\n\t         * @function $3Dmol.GLViewer#setProjection\n\t         *\n\t         * @example\n\t         * myviewer.setProjection(\"orthographic\");\n\t         *\n\t         */this.setProjection=function(proj){camera.ortho=proj===\"orthographic\";setSlabAndFog();};/**\n\t         * Set global view styles.\n\t         * @function $3Dmol.GLViewer#setViewStyle\n\t         *\n\t         * @example\n\t         * myviewer.setViewStyle({style:\"outline\", color:\"black\", width:0.1})\n\t         *\n\t         */this.setViewStyle=function(parameters){if(parameters[\"style\"]===\"outline\"){var params={};if(parameters.color)params.color=$3Dmol.CC.color(parameters.color);if(parameters.width)params.width=parameters.width;renderer.enableOutline(params);}else{renderer.disableOutline();}return this;};if(config.style){//enable setting style in constructor\n\tthis.setViewStyle(config);}/**\n\t         * Set viewer width\n\t         *\n\t         * @function $3Dmol.GLViewer#setWidth\n\t         * @param {number}\n\t         *            w Width in pixels\n\t         */this.setWidth=function(w){WIDTH=w||WIDTH;renderer.setSize(WIDTH,HEIGHT);return this;};/**\n\t         * Set viewer height\n\t         *\n\t         * @function $3Dmol.GLViewer#setHeight\n\t         * @param {number}\n\t         *            h Height in pixels\n\t         */this.setHeight=function(h){HEIGHT=h||HEIGHT;renderer.setSize(WIDTH,HEIGHT);return this;};/**\n\t         * Resize viewer according to containing HTML element's dimensions\n\t         *\n\t         * @function $3Dmol.GLViewer#resize\n\t         */this.resize=function(){WIDTH=container.width();HEIGHT=container.height();ASPECT=WIDTH/HEIGHT;renderer.setSize(WIDTH,HEIGHT);camera.aspect=ASPECT;camera.updateProjectionMatrix();show();return this;};$(window).resize(this.resize);/**\n\t         * Return specified model\n\t         *\n\t         * @function $3Dmol.GLViewer#getModel\n\t         * @param {number}\n\t         *            [id=last model id] - Retrieve model with specified id\n\t         * @default Returns last model added to viewer\n\t         * @return {GLModel}\n\t         *\n\t         * @example // Retrieve reference to first GLModel added var m =\n\t         *          glviewer.getModel(0);\n\t         */this.getModel=function(id){id=id||models.length-1;return models[id];};/**\n\t         * Rotate scene by angle degrees around axis\n\t         *\n\t         * @function $3Dmol.GLViewer#rotate\n\t         * @param {number}\n\t         *            [angle] - Angle, in degrees, to rotate by.\n\t         * @param {string}\n\t         *            [angle] - Axis (\"x\", \"y\", or \"z\") to rotate around.\n\t         *            Default \"y\"\n\t         *\n\t         */this.rotate=function(angle,axis){if(typeof axis===\"undefined\"){axis=\"y\";}var i=0,j=0,k=0;var rangle=Math.PI*angle/180.0;var s=Math.sin(rangle/2.0);var c=Math.cos(rangle/2.0);if(axis==\"x\")i=s;if(axis==\"y\")j=s;if(axis==\"z\")k=s;var q=new $3Dmol.Quaternion(i,j,k,c).normalize();rotationGroup.quaternion.multiply(q);show();return this;};/** Returns an array representing the current viewpoint.\n\t         * Translation, zoom, and rotation quaternion.\n\t         * @function $3Dmol.GLViewer#getView\n\t         * @returns {Array.<number>} arg\n\t         *  */this.getView=function(){if(!modelGroup)return[0,0,0,0,0,0,0,1];var pos=modelGroup.position;var q=rotationGroup.quaternion;return[pos.x,pos.y,pos.z,rotationGroup.position.z,q.x,q.y,q.z,q.w];};/** Sets the view to the specified translation, zoom, and rotation.\n\t         *\n\t         * @function $3Dmol.GLViewer#setView\n\t         * @param {Array.<number>} arg Array formatted identically to the return value of getView */this.setView=function(arg,nolink){if(arg===undefined||!(arg instanceof Array||arg.length!==8))return this;if(!modelGroup||!rotationGroup)return this;modelGroup.position.x=arg[0];modelGroup.position.y=arg[1];modelGroup.position.z=arg[2];rotationGroup.position.z=arg[3];rotationGroup.quaternion.x=arg[4];rotationGroup.quaternion.y=arg[5];rotationGroup.quaternion.z=arg[6];rotationGroup.quaternion.w=arg[7];if(typeof arg[8]!=\"undefined\"){rotationGroup.position.x=arg[8];rotationGroup.position.y=arg[9];}show(nolink);return this;};// apply styles, models, etc in viewer\n\t/**\n\t         * Render current state of viewer, after\n\t         * adding/removing models, applying styles, etc.\n\t         *\n\t         * @function $3Dmol.GLViewer#render\n\t         */this.render=function(){var time1=new Date();updateClickables();//must render for clickable styles to take effect\n\tvar view=this.getView();var i,n;var exts=renderer.supportedExtensions();for(i=0;i<models.length;i++){if(models[i]){models[i].globj(modelGroup,exts);}}for(i=0;i<shapes.length;i++){if(shapes[i]){shapes[i].globj(modelGroup,exts);}}for(i in surfaces){// this is an object with possible holes\n\tif(!surfaces.hasOwnProperty(i))continue;var surfArr=surfaces[i];for(n=0;n<surfArr.length;n++){if(surfArr.hasOwnProperty(n)){var geo=surfArr[n].geo;// async surface generation can cause\n\t// the geometry to be webgl initialized before it is fully\n\t// formed; force various recalculations until full surface\n\t// is\n\t// available\n\tif(!surfArr[n].finished){geo.verticesNeedUpdate=true;geo.elementsNeedUpdate=true;geo.normalsNeedUpdate=true;geo.colorsNeedUpdate=true;geo.buffersNeedUpdate=true;geo.boundingSphere=null;if(surfArr[n].done)surfArr[n].finished=true;// remove partially rendered surface\n\tif(surfArr[n].lastGL)modelGroup.remove(surfArr[n].lastGL);// create new surface\n\tvar smesh=null;if(surfArr[n].mat instanceof $3Dmol.LineBasicMaterial){//special case line meshes\n\tsmesh=new $3Dmol.Line(geo,surfArr[n].mat);}else{smesh=new $3Dmol.Mesh(geo,surfArr[n].mat);}if(surfArr[n].mat.transparent&&surfArr[n].mat.opacity==0){//don't bother with hidden surfaces\n\tsmesh.visible=false;}else{smesh.visible=true;}if(surfArr[n].symmetries.length>1||surfArr[n].symmetries.length==1&&!surfArr[n].symmetries[n].isIdentity()){var j;var tmeshes=new $3Dmol.Object3D();//transformed meshes\n\tfor(j=0;j<surfArr[n].symmetries.length;j++){var tmesh=smesh.clone();tmesh.matrix=surfArr[n].symmetries[j];tmesh.matrixAutoUpdate=false;tmeshes.add(tmesh);}surfArr[n].lastGL=tmeshes;modelGroup.add(tmeshes);}else{surfArr[n].lastGL=smesh;modelGroup.add(smesh);}}// else final surface already there\n\t}}}this.setView(view);// Calls show() => renderer render\n\tvar time2=new Date();console.log(\"render time: \"+(time2-time1));return this;};/**\n\t         *\n\t         * @param {AtomSelectionSpec}\n\t         *            sel\n\t         * @return {AtomSpec[]}\n\t         */function getAtomsFromSel(sel){var atoms=[];if(typeof sel===\"undefined\")sel={};var ms=[];var i;if(typeof sel.model===\"undefined\"){for(i=0;i<models.length;i++){if(models[i])ms.push(models[i]);}}else{// specific to some models\n\tms=sel.model;if(!$.isArray(ms))ms=[ms];}for(i=0;i<ms.length;i++){atoms=atoms.concat(ms[i].selectedAtoms(sel));}return atoms;}/**\n\t         *\n\t         * @param {AtomSpec}\n\t         *            atom\n\t         * @param {AtomSpec}\n\t         *            sel\n\t         * @return {boolean}\n\t         */function atomIsSelected(atom,sel){if(typeof sel===\"undefined\")sel={};var ms=[];var i;if(typeof sel.model===\"undefined\"){for(i=0;i<models.length;i++){if(models[i])ms.push(models[i]);}}else{// specific to some models\n\tms=sel.model;if(!$.isArray(ms))ms=[ms];}for(i=0;i<ms.length;i++){if(ms[i].atomIsSelected(atom,sel))return true;}return false;}/** return list of atoms selected by sel\n\t         *\n\t         * @function $3Dmol.GLViewer#selectedAtoms\n\t         * @param {AtomSelectionSpec} sel\n\t         * @return {Array.<Object>}\n\t         */this.selectedAtoms=function(sel){return getAtomsFromSel(sel);};/**\n\t         * Return pdb output of selected atoms (if atoms from pdb input)\n\t         *\n\t         * @function $3Dmol.GLViewer#pdbData\n\t         * @param {Object=} [sel] - Selection specification specifying model and atom properties to select.  Default: all atoms in viewer\n\t         * @return {string} PDB string of selected atoms\n\t         */this.pdbData=function(sel){var atoms=getAtomsFromSel(sel);var ret=\"\";for(var i=0,n=atoms.length;i<n;++i){ret+=atoms[i].pdbline+\"\\n\";}return ret;};/**\n\t         * Zoom current view by a constant factor\n\t         *\n\t         * @function $3Dmol.GLViewer#zoom\n\t         * @param {number}\n\t         *            [factor] - Magnification factor. Values greater than 1\n\t         *            will zoom in, less than one will zoom out. Default 2.\n\t         *\n\t         */this.zoom=function(factor){var factor=factor||2;var scale=(CAMERA_Z-rotationGroup.position.z)/factor;rotationGroup.position.z=CAMERA_Z-scale;show();return this;};/**\n\t         * Translate current view by x,y screen coordinates\n\t         * This pans the camera rather than translating the model.\n\t         *\n\t         * @function $3Dmol.GLViewer#translate\n\t         * @param {number} x\n\t         * @param {number} y\n\t         *\n\t         */this.translate=function(x,y){var dx=x/WIDTH;var dy=y/HEIGHT;var v=new $3Dmol.Vector3(0,0,-CAMERA_Z);projector.projectVector(v,camera);v.x-=dx;v.y-=dy;projector.unprojectVector(v,camera);v.z=0;lookingAt.add(v);camera.lookAt(lookingAt);show();return this;};/**\n\t         * Zoom to center of atom selection\n\t         *\n\t         * @function $3Dmol.GLViewer#zoomTo\n\t         * @param {Object}\n\t         *            [sel] - Selection specification specifying model and atom\n\t         *            properties to select. Default: all atoms in viewer\n\t         * @example // Assuming we have created a model of a protein with\n\t         *          multiple chains (e.g. from a PDB file), focus on atoms in\n\t         *          chain B glviewer.zoomTo({chain: 'B'});\n\t         *  // Focus on centroid of all atoms of all models in this\n\t         * viewer glviewer.zoomTo(); // (equivalent to glviewer.zoomTo({}) )\n\t         */this.zoomTo=function(sel){var allatoms,alltmp;sel=sel||{};var atoms=getAtomsFromSel(sel);var tmp=$3Dmol.getExtent(atoms);if($.isEmptyObject(sel)){//include shapes when zooming to full scene\n\t//TODO: figure out a good way to specify shapes as part of a selection\n\t$.each(shapes,function(i,shape){if(shape&&shape.boundingSphere&&shape.boundingSphere.center)var c=shape.boundingSphere.center;var r=shape.boundingSphere.radius;if(r>0){//make sure full shape is visible\n\tatoms.push(new $3Dmol.Vector3(c.x+r,c.y,c.z));atoms.push(new $3Dmol.Vector3(c.x-r,c.y,c.z));atoms.push(new $3Dmol.Vector3(c.x,c.y+r,c.z));atoms.push(new $3Dmol.Vector3(c.x,c.y-r,c.z));atoms.push(new $3Dmol.Vector3(c.x,c.y,c.z+r));atoms.push(new $3Dmol.Vector3(c.x,c.y,c.z-r));}else{atoms.push(c);}});tmp=$3Dmol.getExtent(atoms);allatoms=atoms;alltmp=tmp;}else{allatoms=getAtomsFromSel({});alltmp=$3Dmol.getExtent(allatoms);}// use selection for center\n\tvar center=new $3Dmol.Vector3(tmp[2][0],tmp[2][1],tmp[2][2]);modelGroup.position=center.clone().multiplyScalar(-1);// but all for bounding box\n\tvar x=alltmp[1][0]-alltmp[0][0],y=alltmp[1][1]-alltmp[0][1],z=alltmp[1][2]-alltmp[0][2];var maxD=Math.sqrt(x*x+y*y+z*z);if(maxD<5)maxD=5;// use full bounding box for slab/fog\n\tslabNear=-maxD/1.9;slabFar=maxD/2;// for zoom, use selection box\n\tx=tmp[1][0]-tmp[0][0];y=tmp[1][1]-tmp[0][1];z=tmp[1][2]-tmp[0][2];maxD=Math.sqrt(x*x+y*y+z*z);if(maxD<5)maxD=5;//find the farthest atom from center to get max distance needed for view\n\tvar maxDsq=25;for(var i=0;i<atoms.length;i++){if(atoms[i]){var dsq=center.distanceToSquared(atoms[i]);if(dsq>maxDsq)maxDsq=dsq;}}var maxD=Math.sqrt(maxDsq)*2;rotationGroup.position.z=-(maxD*0.5/Math.tan(Math.PI/180.0*camera.fov/2)-CAMERA_Z);show();return this;};/**\n\t         * Set slab of view (contents outside of slab are clipped). M\n\t         * Must call render to update.\n\t         *\n\t         * @function $3Dmol.GLViewer#setSlab\n\t         * @param {near}\n\t         * @param {far}\n\t         */this.setSlab=function(near,far){slabNear=near;slabFar=far;};/**\n\t         * Get slab of view (contents outside of slab are clipped).\n\t         *\n\t         * @function $3Dmol.GLViewer#setSlab\n\t         * @return {Object} near/far\n\t         */this.getSlab=function(sel){return{near:slabNear,far:slabFar};};/**\n\t         * Add label to viewer\n\t         *\n\t         * @function $3Dmol.GLViewer#addLabel\n\t         * @param {string}\n\t         *            text - Label text\n\t         * @param {Object}\n\t         *            data - Label style specification\n\t         * @return {$3Dmol.Label}\n\t         *\n\t         * @example\n\t         *  // Assuming glviewer contains a model representing a protein, label\n\t         * all alpha carbons with their residue name\n\t         *  // Select all alpha carbons (have property atom : \"CA\") from last\n\t         * model added var atoms =\n\t         * glviewer.getModel().selectedAtoms({atom:\"CA\"}); var labels = [];\n\t         *\n\t         * for (var a in atoms) { var atom = atoms[a];\n\t         *  // Create label at alpha carbon's position displaying atom's residue\n\t         * and residue number var labelText = atom.resname + \" \" + atom.resi;\n\t         *\n\t         * var l = glviewer.createLabel(labelText, {fontSize: 12, position: {x:\n\t         * atom.x, y: atom.y, z: atom.z});\n\t         *\n\t         * labels.push(l); }\n\t         *  // Render labels glviewer.render();\n\t         */this.addLabel=function(text,data){var label=new $3Dmol.Label(text,data);label.setContext();modelGroup.add(label.sprite);labels.push(label);show();return label;};/** Add residue labels.  This will generate one label per a\n\t         * residue within the selected atoms.  The label will be at the\n\t         * centroid of the atoms and styled according to the passed style.\n\t         * The label text will be [resn][resi]\n\t         *\n\t         * @param {Object} sel\n\t         * @param {Object} style\n\t         */this.addResLabels=function(sel,style){applyToModels(\"addResLabels\",sel,this,style);return this;};/**\n\t         * Remove label from viewer\n\t         *\n\t         * @function $3Dmol.GLViewer#removeLabel\n\t         * @param {$3Dmol.Label}\n\t         *            label - $3Dmol label\n\t         *\n\t         * @example // Remove labels created in [addLabel example]{@link $3Dmol.GLViewer#addLabel}\n\t         *\n\t         * for (var i = 0; i < labels.length; i++) {\n\t         * glviewer.removeLabel(label); }\n\t         *\n\t         * glviewer.render();\n\t         */this.removeLabel=function(label){//todo: don't do the linear search\n\tfor(var i=0;i<labels.length;i++){if(labels[i]==label){labels.splice(i,1);label.dispose();modelGroup.remove(label.sprite);break;}}return this;};/**\n\t         * Remove all labels from viewer\n\t         *\n\t         * @function $3Dmol.GLViewer#removeAllLabels\n\t         */this.removeAllLabels=function(){for(var i=0;i<labels.length;i++){modelGroup.remove(labels[i].sprite);}labels.splice(0,labels.length);//don't overwrite in case linked\n\treturn this;};// Modify label style\n\t/**\n\t         * Modify existing label's style\n\t         *\n\t         * @function $3Dmol.GLViewer#setLabelStyle\n\t         * @param {$3Dmol.Label}\n\t         *            label - $3Dmol label\n\t         * @param {Object}\n\t         *            stylespec - Label style specification\n\t         * @return {$3Dmol.Label}\n\t         */this.setLabelStyle=function(label,stylespec){modelGroup.remove(label.sprite);label.dispose();label.stylespec=stylespec;label.setContext();modelGroup.add(label.sprite);show();return label;};// Change label text\n\t/**\n\t         * Modify existing label's text\n\t         *\n\t         * @function $3Dmol.GLViewer#setLabelText\n\t         * @param {$3Dmol.Label}\n\t         *            label - $3Dmol label\n\t         * @param {String}\n\t         *            text - Label text\n\t         * @return {$3Dmol.Label}\n\t         */this.setLabelText=function(label,text){modelGroup.remove(label.sprite);label.dispose();label.text=text;label.setContext();modelGroup.add(label.sprite);show();return label;};/**\n\t         * Add shape object to viewer\n\t         * @see {@link $3Dmol.GLShape}\n\t         *\n\t         * @function $3Dmol.GLViewer#addShape\n\t         * @param {ShapeSpec} shapeSpec - style specification for label\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addShape=function(shapeSpec){shapeSpec=shapeSpec||{};var shape=new $3Dmol.GLShape(shapeSpec);shape.shapePosition=shapes.length;shapes.push(shape);return shape;};/**\n\t         * Remove shape object from viewer\n\t         *\n\t         * @function $3Dmol.GLViewer#removeShape\n\t         * @param {$3Dmol.GLShape} shape - Reference to shape object to remove\n\t         */this.removeShape=function(shape){if(!shape)return this;shape.removegl(modelGroup);delete shapes[shape.shapePosition];// clear off back of model array\n\twhile(shapes.length>0&&typeof shapes[shapes.length-1]===\"undefined\"){shapes.pop();}return this;};/**\n\t         * Remove all shape objects from viewer\n\t         * @function $3Dmol.GLViewer#removeAllShapes\n\t         */this.removeAllShapes=function(){for(var i=0;i<shapes.length;i++){var shape=shapes[i];shape.removegl(modelGroup);}shapes.splice(0,shapes.length);return this;};/**\n\t         * Create and add sphere shape. This method provides a shorthand\n\t         * way to create a spherical shape object\n\t         *\n\t         * @function $3Dmol.GLViewer#addSphere\n\t         * @param {SphereSpec} spec - Sphere shape style specification\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addSphere=function(spec){spec=spec||{};var s=new $3Dmol.GLShape(spec);s.shapePosition=shapes.length;s.addSphere(spec);shapes.push(s);return s;};/**\n\t         * Create and add arrow shape\n\t         *\n\t         * @function $3Dmol.GLViewer#addArrow\n\t         * @param {ArrowSpec} spec - Style specification\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addArrow=function(spec){spec=spec||{};var s=new $3Dmol.GLShape(spec);s.shapePosition=shapes.length;s.addArrow(spec);shapes.push(s);return s;};/**\n\t         * Create and add cylinder shape\n\t         *\n\t         * @function $3Dmol.GLViewer#addCylinder\n\t         * @param {CylinderSpec} spec - Style specification\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addCylinder=function(spec){spec=spec||{};var s=new $3Dmol.GLShape(spec);s.shapePosition=shapes.length;s.addCylinder(spec);shapes.push(s);return s;};/**\n\t         * Create and add line shape\n\t         *\n\t         * @function $3Dmol.GLViewer#addLine\n\t         * @param {LineSpec} spec - Style specification, can specify dashed, dashLength, and gapLength\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addLine=function(spec){spec=spec||{};spec.wireframe=true;var s=new $3Dmol.GLShape(spec);s.shapePosition=shapes.length;if(spec.dashed)s=addLineDashed(spec,s);else s.addLine(spec);shapes.push(s);return s;};/**\n\t         * Create and add unit cell\n\t         *\n\t         * @function $3Dmol.GLViewer#addUnitCell\n\t         * @param {GLModel} Model with unit cell information (e.g., pdb derived).\n\t         * @return {$3Dmol.GLShape}  Line shape delineating unit cell.\n\t         */this.addUnitCell=function(model){var s=new $3Dmol.GLShape({'wireframe':true});s.shapePosition=shapes.length;var data=model.getCrystData();if(data){var a=data.a,b=data.b,c=data.c,alpha=data.alpha,beta=data.beta,gamma=data.gamma;alpha=alpha*Math.PI/180.0;beta=beta*Math.PI/180.0;gamma=gamma*Math.PI/180.0;var u,v,w;u=Math.cos(beta);v=(Math.cos(alpha)-Math.cos(beta)*Math.cos(gamma))/Math.sin(gamma);w=Math.sqrt(Math.max(0,1-u*u-v*v));var matrix=new $3Dmol.Matrix4(a,b*Math.cos(gamma),c*u,0,0,b*Math.sin(gamma),c*v,0,0,0,c*w,0,0,0,0,1);var points=[new $3Dmol.Vector3(0,0,0),new $3Dmol.Vector3(1,0,0),new $3Dmol.Vector3(0,1,0),new $3Dmol.Vector3(0,0,1),new $3Dmol.Vector3(1,1,0),new $3Dmol.Vector3(0,1,1),new $3Dmol.Vector3(1,0,1),new $3Dmol.Vector3(1,1,1)];for(var i=0;i<points.length;i++){points[i]=points[i].applyMatrix4(matrix);}s.addLine({start:points[0],end:points[1]});s.addLine({start:points[0],end:points[2]});s.addLine({start:points[1],end:points[4]});s.addLine({start:points[2],end:points[4]});s.addLine({start:points[0],end:points[3]});s.addLine({start:points[3],end:points[5]});s.addLine({start:points[2],end:points[5]});s.addLine({start:points[1],end:points[6]});s.addLine({start:points[4],end:points[7]});s.addLine({start:points[6],end:points[7]});s.addLine({start:points[3],end:points[6]});s.addLine({start:points[5],end:points[7]});}shapes.push(s);return s;};function addLineDashed(spec,s){spec.dashLength=spec.dashLength||0.5;spec.gapLength=spec.gapLength||0.5;spec.start=spec.start||{};spec.end=spec.end||{};var p1=new $3Dmol.Vector3(spec.start.x||0,spec.start.y||0,spec.start.z||0);var p2=new $3Dmol.Vector3(spec.end.x,spec.end.y||0,spec.end.z||0);var dir=new $3Dmol.Vector3();var dash=new $3Dmol.Vector3();var gap=new $3Dmol.Vector3();var length,dashAmt,gapAmt;var temp=p1.clone();var drawn=0;dir.subVectors(p2,p1);length=dir.length();dir.normalize();dash=dir.clone();gap=dir.clone();dash.multiplyScalar(spec.dashLength);gap.multiplyScalar(spec.gapLength);dashAmt=dash.length();gapAmt=gap.length();while(drawn<length){if(drawn+dashAmt>length){spec.start=p1;spec.end=p2;s.addLine(spec);break;}temp.addVectors(p1,dash);spec.start=p1;spec.end=temp;s.addLine(spec);p1=temp.clone();drawn+=dashAmt;temp.addVectors(p1,gap);p1=temp.clone();drawn+=gapAmt;}return s;}/**\n\t         * Add custom shape component from user supplied function\n\t         *\n\t         * @function $3Dmol.GLViewer#addCustom\n\t         * @param {CustomSpec} spec - Style specification\n\t         * @return {$3Dmol.GLShape}\n\t         */this.addCustom=function(spec){spec=spec||{};var s=new $3Dmol.GLShape(spec);s.shapePosition=shapes.length;s.addCustom(spec);shapes.push(s);return s;};/**\n\t         * Construct isosurface from volumetric data in gaussian cube format\n\t         * @deprecated\n\t         * @function $3Dmol.GLViewer#addVolumetricData\n\t         * @param {String} data - Input file contents\n\t         * @param {String} format - Input file format (currently only supports \"cube\")\n\t         * @param {IsoSurfaceSpec} spec - Shape style specification\n\t         * @return {$3Dmol.GLShape}\n\t         *\n\t         * @example\n\t         * viewer.addVolumetricData(data, \"cube\", {isoval: 0.01, color: \"blue\", opacity: 0.95});\n\t         * viewer.addVolumetricData(data, \"cube\", {isoval: -0.01, color: \"red\", opacity: 0.95});\n\t         */this.addVolumetricData=function(data,format,spec){spec=spec||{};var s=new $3Dmol.GLShape(spec);s.shapePosition=shapes.length;s.addVolumetricData(data,format,spec);shapes.push(s);return s;};/**\n\t         * Construct isosurface from volumetric data\n\t         * @function $3Dmol.GLViewer#addIsosurface\n\t         * @param {$3Dmol.VolumeData} data - volumetric data\n\t         * @param {IsoSurfaceSpec} spec - Shape style specification\n\t         * @return {$3Dmol.GLShape}\n\t         *\n\t         * @example\n\t         * var data = new $3Dmol.VolumeData(str,\"cube\");\n\t         * viewer.addIsosurface(data, {isoval: 0.01, color: \"blue\", opacity: 0.95});\n\t         * viewer.addIsosurface(data, {isoval: -0.01, color: \"red\", opacity: 0.95});\n\t         */this.addIsosurface=function(data,spec){spec=spec||{};var s=new $3Dmol.GLShape(spec);s.shapePosition=shapes.length;s.addIsosurface(data,spec);shapes.push(s);return s;};/**\n\t         * Sets the atomlists of all models in the viewer to specified frame\n\t         * Sets to last frame if framenum out of range\n\t         *\n\t         * @function $3Dmol.GLViewer#setFrame\n\t         * @param {number} framenum - each model in viewer has their atoms set to this index in frames list\n\t         */this.setFrame=function(framenum){for(var i=0;i<models.length;i++){models[i].setFrame(framenum);}return this;};/**\n\t         * Returns the number of frames that the model with the most frames in the viewer has\n\t         *\n\t         * @function $3Dmol.GLViewer#getFrames\n\t         * @return {number}\n\t         */this.getFrames=function(){var mostFrames=0;var modelNum=0;for(var i=0;i<models.length;i++){if(models[i].getFrames().length>mostFrames){modelNum=i;mostFrames=models[i].getFrames().length;}}return mostFrames;};/**\n\t         * Animate all models in viewer from their respective frames\n\t         * @function $3Dmol.GLViewer#animate\n\t         * @param {Object} options - can specify interval (speed of animation), loop (direction\n\t         * of looping, 'backward', 'forward' or 'backAndForth') and reps (numer of repetitions, 0 indicates infinite loop)\n\t         *\n\t         * @example\n\t         * viewer.addModelAsFrames(data, \"pdb\");\n\t         * viewer.animate({interval: 75, loop: \"backward\", reps: 30});\n\t         */this.animate=function(options){animated=true;var interval=100;var loop=\"forward\";var reps=0;options=options||{};if(options.interval){interval=options.interval;}if(options.loop){loop=options.loop;}if(options.reps){reps=options.reps;}var mostFrames=this.getFrames();var that=this;var currFrame=0;var inc=1;var displayCount=0;var displayMax=mostFrames*reps;var display=function display(direction){if(direction==\"forward\"){that.setFrame(currFrame);currFrame=(currFrame+inc)%mostFrames;}else if(direction==\"backward\"){that.setFrame(mostFrames-1-currFrame);currFrame=(currFrame+inc)%mostFrames;}else{//back and forth\n\tthat.setFrame(currFrame);currFrame+=inc;inc*=currFrame%(mostFrames-1)==0?-1:1;}that.render();if(++displayCount==displayMax||!that.isAnimated()){clearInterval(intervalID);}};var intervalID=setInterval(function(){display(loop);},interval);return this;};/**\n\t         * Stop animation of all models in viewer\n\t         * @function $3Dmol.GLViewer#stopAnimate\n\t         */this.stopAnimate=function(){animated=false;return this;};/**\n\t         * Return true if viewer is currently being animated, false otherwise\n\t         * @function $3Dmol.GLViewer#isAnimated\n\t         * @return {boolean}\n\t         */this.isAnimated=function(){return animated;};/**\n\t         * Create and add model to viewer, given molecular data and its format\n\t         * (pdb, sdf, xyz, or mol2)\n\t         *\n\t         * @function $3Dmol.GLViewer#addModel\n\t         * @param {string} data - Input data\n\t         * @param {string} format - Input format ('pdb', 'sdf', 'xyz', or 'mol2')\n\t         * @return {$3Dmol.GLModel}\n\t         */this.addModel=function(data,format,options){var m=new $3Dmol.GLModel(models.length,defaultcolors);m.addMolData(data,format,options);models.push(m);return m;};/**\n\t         * Given multimodel file and its format, add atom data to the viewer as separate models\n\t         * and return list of these models\n\t         *\n\t         * @function $3Dmol.GLViewer#addModels\n\t         * @param {string} data - Input data\n\t         * @param {string} format - Input format ('pdb', 'sdf', 'xyz', or 'mol2')\n\t         * @return {Array<$3Dmol.GLModel>}\n\t         */this.addModels=function(data,format,options){options=options||{};options.multimodel=true;options.frames=true;var modelatoms=$3Dmol.GLModel.parseMolData(data,format,options);for(var i=0;i<modelatoms.length;i++){var newModel=new $3Dmol.GLModel(models.length,defaultcolors);newModel.setAtomDefaults(modelatoms[i]);newModel.addFrame(modelatoms[i]);newModel.setFrame(0);newModel.setModelData(modelatoms.modelData[i]);newModel.setDontDuplicateAtoms(!options.duplicateAssemblyAtoms);models.push(newModel);}return models;};/**\n\t         * Create and add model to viewer. Given multimodel file and its format,\n\t         * different atomlists are stored in model's frame\n\t         * property and model's atoms are set to the 0th frame\n\t         *\n\t         * @function $3Dmol.GLViewer#addModelsAsFrames\n\t         * @param {string} data - Input data\n\t         * @param {string} format - Input format ('pdb', 'sdf', 'xyz', or 'mol2')\n\t         * @return {$3Dmol.GLModel}\n\t         */this.addModelsAsFrames=function(data,format,options){options=options||{};options.multimodel=true;options.frames=true;var m=new $3Dmol.GLModel(models.length,defaultcolors);m.addMolData(data,format,options);models.push(m);return m;};/**\n\t         * Create and add model to viewer. Given multimodel file and its format,\n\t         * all atoms are added to one model\n\t         *\n\t         * @function $3Dmol.GLViewer#addAsOneMolecule\n\t         * @param {string} data - Input data\n\t         * @param {string} format - Input format ('pdb', 'sdf', 'xyz', or 'mol2')\n\t         * @return {$3Dmol.GLModel}\n\t         */this.addAsOneMolecule=function(data,format,options){options=options||{};options.multimodel=true;options.onemol=true;var m=new $3Dmol.GLModel(models.length,defaultcolors);m.addMolData(data,format,options);models.push(m);return m;};/**\n\t         * Delete specified model from viewer\n\t         *\n\t         * @function $3Dmol.GLViewer#removeModel\n\t         * @param {$3Dmol.GLModel} model\n\t         */this.removeModel=function(model){if(!model)return;model.removegl(modelGroup);delete models[model.getID()];// clear off back of model array\n\twhile(models.length>0&&typeof models[models.length-1]===\"undefined\"){models.pop();}return this;};/**\n\t         * Delete all existing models\n\t         * @function $3Dmol.GLViewer#removeAllModels\n\t         */this.removeAllModels=function(){for(var i=0;i<models.length;i++){var model=models[i];model.removegl(modelGroup);}models.splice(0,models.length);//don't simply overwrite array in case linked\n\treturn this;};/**\n\t         * Export one or all of the loaded models into ChemDoodle compatible JSON.\n\t         * @function $3Dmol.GLViewer#exportJSON\n\t         * @param {boolean} includeStyles - Whether or not to include style information.\n\t         * @param {number} modelID - Optional parameter for which model to export. If left out, export all of them.\n\t         * @return {string}\n\t         */this.exportJSON=function(includeStyles,modelID){var object={};if(modelID===undefined){object.m=models.map(function(model){return model.toCDObject(includeStyles);});}else{object.m=[model[modelID].toCDObject()];}return JSON.stringify(object);};/**\n\t         * Create a new model from atoms specified by sel.\n\t         * If extract, removes selected atoms from existing models\n\t         *\n\t         * @function $3Dmol.GLViewer#createModelFrom\n\t         * @param {Object} sel - Atom selection specification\n\t         * @param {boolean=} extract - If true, remove selected atoms from existing models\n\t         * @return {$3Dmol.GLModel}\n\t         */this.createModelFrom=function(sel,extract){var m=new $3Dmol.GLModel(models.length,defaultcolors);for(var i=0;i<models.length;i++){if(models[i]){var atoms=models[i].selectedAtoms(sel);m.addAtoms(atoms);if(extract)models[i].removeAtoms(atoms);}}models.push(m);return m;};function applyToModels(func,sel,value1,value2){//apply func to all models that are selected by sel with value1 and 2\n\tvar ms=[];if(typeof sel.model===\"undefined\"){for(i=0;i<models.length;i++){if(models[i])ms.push(models[i]);}}else{// specific to some models\n\tms=sel.model;if(!$.isArray(ms))ms=[ms];}for(var i=0;i<ms.length;i++){if(ms[i]){ms[i][func](sel,value1,value2);}}}/**\n\t         * Set style properties to all selected atoms\n\t         *\n\t         * @function $3Dmol.GLViewer#setStyle\n\t         * @param {AtomSelectionSpec} sel - Atom selection specification\n\t         * @param {AtomStyleSpec} style - Style spec to apply to specified atoms\n\t         *\n\t         * @example\n\t         * viewer.setStyle({}, {stick:{}}); //set all atoms to stick\n\t         * viewer.setStyle({chain: 'B'}, {cartoon: {color: 'spectrum'}}); //set chain B to rainbow cartoon\n\t         */this.setStyle=function(sel,style){if(typeof style==='undefined'){//if a single argument is provided, assume it is a style and select all\n\tstyle=sel;sel={};}applyToModels(\"setStyle\",sel,style,false);return this;};/**\n\t         * Add style properties to all selected atoms\n\t         *\n\t         * @function $3Dmol.GLViewer#addStyle\n\t         * @param {AtomSelectionSpec} sel - Atom selection specification\n\t         * @param {AtomStyleSpec} style - style spec to add to specified atoms\n\t         */this.addStyle=function(sel,style){if(typeof style==='undefined'){//if a single argument is provided, assume it is a style and select all\n\tstyle=sel;sel={};}applyToModels(\"setStyle\",sel,style,true);return this;};/**\n\t         * Set click-handling properties to all selected atoms\n\t         *\n\t         * @function $3Dmol.GLViewer#setClickable\n\t         * @param {AtomSelectionSpec} sel - atom selection to apply clickable settings to\n\t         * @param {boolean} clickable - whether click-handling is enabled for the selection\n\t         * @param {function} callback - function called when an atom in the selection is clicked\n\t         *\n\t         * @example\n\t         * viewer.setClickable({}, false); // disable click-handling for entire viewer\n\t         * viewer.setClickable({chain: 'B'}, true, function(){ console.log(this.elem); }); // chain B prints the clicked element to console\n\t         */this.setClickable=function(sel,clickable,callback){applyToModels(\"setClickable\",sel,clickable,callback);return this;};this.setHoverable=function(sel,hoverable,hover_callback,unhover_callback){applyToModels(\"setHoverable\",sel,hoverable,hover_callback,unhover_callback);return this;};/**\n\t         * @function $3Dmol.GLViewer#setColorByProperty\n\t         * @param {AtomSelectionSpec} sel\n\t         * @param {type} prop\n\t         * @param {type} scheme\n\t         */this.setColorByProperty=function(sel,prop,scheme){applyToModels(\"setColorByProperty\",sel,prop,scheme);return this;};/**\n\t         * @function $3Dmol.GLViewer#setColorByElement\n\t         * @param {AtomSelectionSpec} sel\n\t         * @param {type} colors\n\t         */this.setColorByElement=function(sel,colors){applyToModels(\"setColorByElement\",sel,colors);return this;};/**\n\t         *\n\t         * @param {AtomSpec[]} atomlist\n\t         * @param {Array}\n\t         *            extent\n\t         * @return {Array}\n\t         */var getAtomsWithin=function getAtomsWithin(atomlist,extent){var ret=[];for(var i=0;i<atomlist.length;i++){var atom=atomlist[i];if(typeof atom==\"undefined\")continue;if(atom.x<extent[0][0]||atom.x>extent[1][0])continue;if(atom.y<extent[0][1]||atom.y>extent[1][1])continue;if(atom.z<extent[0][2]||atom.z>extent[1][2])continue;ret.push(atom);}return ret;};// return volume of extent\n\tvar volume=function volume(extent){var w=extent[1][0]-extent[0][0];var h=extent[1][1]-extent[0][1];var d=extent[1][2]-extent[0][2];return w*h*d;};// volume\n\t/*\n\t         * Break up bounding box/atoms into smaller pieces so we can parallelize\n\t         * with webworkers and also limit the size of the working memory Returns\n\t         * a list of bounding boxes with the corresponding atoms. These extents\n\t         * are expanded by 4 angstroms on each side.\n\t         *//**\n\t         *\n\t         * @param {Array}\n\t         *            extent\n\t         * @param {AtomSpec[]} atomlist\n\t         * @param {AtomSpec[]} atomstoshow\n\t         * @return {Array}\n\t         */var carveUpExtent=function carveUpExtent(extent,atomlist,atomstoshow){var ret=[];var index2atomlist={};//map from atom.index to position in atomlist\n\tfor(var i=0,n=atomlist.length;i<n;i++){index2atomlist[atomlist[i].index]=i;}var atomsToListIndex=function atomsToListIndex(atoms){//return a list of indices into atomlist\n\tvar ret=[];for(var i=0,n=atoms.length;i<n;i++){if(atoms[i].index in index2atomlist)ret.push(index2atomlist[atoms[i].index]);}return ret;};var copyExtent=function copyExtent(extent){// copy just the dimensions\n\tvar ret=[];ret[0]=[extent[0][0],extent[0][1],extent[0][2]];ret[1]=[extent[1][0],extent[1][1],extent[1][2]];return ret;};// copyExtent\n\tvar splitExtentR=function splitExtentR(extent){// recursively split until volume is below maxVol\n\tif(volume(extent)<maxVolume){return[extent];}else{// find longest edge\n\tvar w=extent[1][0]-extent[0][0];var h=extent[1][1]-extent[0][1];var d=extent[1][2]-extent[0][2];var index;if(w>h&&w>d){index=0;}else if(h>w&&h>d){index=1;}else{index=2;}// create two halves, splitting at index\n\tvar a=copyExtent(extent);var b=copyExtent(extent);var mid=(extent[1][index]-extent[0][index])/2+extent[0][index];a[1][index]=mid;b[0][index]=mid;var alist=splitExtentR(a);var blist=splitExtentR(b);return alist.concat(blist);}};// splitExtentR\n\t// divide up extent\n\tvar splits=splitExtentR(extent);// now compute atoms within expanded (this could be more efficient)\n\tvar off=6;// enough for water and 2*r, also depends on scale\n\t// factor\n\tfor(var i=0,n=splits.length;i<n;i++){var e=copyExtent(splits[i]);e[0][0]-=off;e[0][1]-=off;e[0][2]-=off;e[1][0]+=off;e[1][1]+=off;e[1][2]+=off;var atoms=getAtomsWithin(atomlist,e);var toshow=getAtomsWithin(atomstoshow,splits[i]);// ultimately, divide up by atom for best meshing\n\tret.push({extent:splits[i],atoms:atomsToListIndex(atoms),toshow:atomsToListIndex(toshow)});}return ret;};// create a mesh defined from the passed vertices and faces and material\n\t// Just create a single geometry chunk - broken up whether sync or not\n\t/**\n\t         *\n\t         * @param {AtomSpec[]} atoms\n\t         * @param {{vertices:number,faces:number}}\n\t         *            VandF\n\t         * @param {$3Dmol.MeshLambertMaterial}\n\t         *            mat\n\t         * @return {$3Dmol.Mesh}\n\t         */var generateSurfaceMesh=function generateSurfaceMesh(atoms,VandF,mat){var geo=new $3Dmol.Geometry(true);// Only one group per call to generate surface mesh (addSurface\n\t// should split up mesh render)\n\tvar geoGroup=geo.updateGeoGroup(0);// set colors for vertices\n\tvar colors=[];for(i=0,il=atoms.length;i<il;i++){var atom=atoms[i];if(atom){if(typeof atom.surfaceColor!=\"undefined\"){colors[i]=atom.surfaceColor;}else if(atom.color)// map from atom\n\tcolors[i]=$3Dmol.CC.color(atom.color);}}var vertexArray=geoGroup.vertexArray;// reconstruct vertices and faces\n\tvar v=VandF['vertices'];var offset;var i,il;for(i=0,il=v.length;i<il;i++){offset=geoGroup.vertices*3;vertexArray[offset]=v[i].x;vertexArray[offset+1]=v[i].y;vertexArray[offset+2]=v[i].z;geoGroup.vertices++;}//set colorArray of there are per-atom colors\n\tvar colorArray=geoGroup.colorArray;if(mat.voldata&&mat.volscheme){//convert volumetric data into colors\n\tvar scheme=mat.volscheme;var voldata=mat.voldata;var range=scheme.range()||[-1,1];for(i=0,il=v.length;i<il;i++){var val=voldata.getVal(v[i].x,v[i].y,v[i].z);var col=$3Dmol.CC.color(scheme.valueToHex(val,range));var offset=i*3;colorArray[offset]=col.r;colorArray[offset+1]=col.g;colorArray[offset+2]=col.b;}}else if(colors.length>0){//have atom colors\n\tfor(i=0,il=v.length;i<il;i++){var A=v[i].atomid;var offsetA=i*3;colorArray[offsetA]=colors[A].r;colorArray[offsetA+1]=colors[A].g;colorArray[offsetA+2]=colors[A].b;}}var faces=VandF['faces'];geoGroup.faceidx=faces.length;// *3;\n\tgeo.initTypedArrays();var verts=geoGroup.vertexArray;var normalArray=geoGroup.normalArray;var vA,vB,vC,norm;// Setup colors, faces, and normals\n\tfor(i=0,il=faces.length;i<il;i+=3){// var a = faces[i].a, b = faces[i].b, c = faces[i].c;\n\tvar a=faces[i],b=faces[i+1],c=faces[i+2];var A=v[a]['atomid'];var B=v[b]['atomid'];var C=v[c]['atomid'];var offsetA=a*3,offsetB=b*3,offsetC=c*3;// setup Normals\n\t// todo - calculate normals in parallel code\n\tvA=new $3Dmol.Vector3(verts[offsetA],verts[offsetA+1],verts[offsetA+2]);vB=new $3Dmol.Vector3(verts[offsetB],verts[offsetB+1],verts[offsetB+2]);vC=new $3Dmol.Vector3(verts[offsetC],verts[offsetC+1],verts[offsetC+2]);vC.subVectors(vC,vB);vA.subVectors(vA,vB);vC.cross(vA);// face normal\n\tnorm=vC;norm.normalize();normalArray[offsetA]+=norm.x;normalArray[offsetB]+=norm.x;normalArray[offsetC]+=norm.x;normalArray[offsetA+1]+=norm.y;normalArray[offsetB+1]+=norm.y;normalArray[offsetC+1]+=norm.y;normalArray[offsetA+2]+=norm.z;normalArray[offsetB+2]+=norm.z;normalArray[offsetC+2]+=norm.z;}geoGroup.faceArray=new Uint16Array(faces);var mesh=new $3Dmol.Mesh(geo,mat);mesh.doubleSided=true;return mesh;};// do same thing as worker in main thread\n\t/**\n\t         *\n\t         * @param {$3Dmol.SurfaceType}\n\t         *            type\n\t         * @param {Array}\n\t         *            expandedExtent\n\t         * @param {Array}\n\t         *            extendedAtoms\n\t         * @param {Array}\n\t         *            atomsToShow\n\t         * @param {AtomSpec[]} atoms\n\t         * @param {number}\n\t         *            vol\n\t         * @return {Object}\n\t         */var generateMeshSyncHelper=function generateMeshSyncHelper(type,expandedExtent,extendedAtoms,atomsToShow,atoms,vol){var time=new Date();var ps=new $3Dmol.ProteinSurface();ps.initparm(expandedExtent,type===1?false:true,vol);var time2=new Date();//console.log(\"initialize \" + (time2 - time) + \"ms\");\n\tps.fillvoxels(atoms,extendedAtoms);var time3=new Date();//console.log(\"fillvoxels \" + (time3 - time2) + \"  \" + (time3 - time) + \"ms\");\n\tps.buildboundary();if(type==$3Dmol.SurfaceType.SES||type==$3Dmol.SurfaceType.MS){ps.fastdistancemap();ps.boundingatom(false);ps.fillvoxelswaals(atoms,extendedAtoms);}var time4=new Date();//console.log(\"buildboundaryetc \" + (time4 - time3) + \"  \" + (time4 - time) + \"ms\");\n\tps.marchingcube(type);var time5=new Date();//console.log(\"marching cube \" + (time5 - time4) + \"  \"+ (time5 - time) + \"ms\");\n\treturn ps.getFacesAndVertices(atomsToShow);};/**\n\t         *\n\t         * @param {matSpec}\n\t         *            style\n\t         * @return {$3Dmol.MeshLambertMaterial}\n\t         */function getMatWithStyle(style){var mat=new $3Dmol.MeshLambertMaterial();mat.vertexColors=$3Dmol.VertexColors;for(var prop in style){if(prop===\"color\"||prop===\"map\"){// ignore\n\t}else if(style.hasOwnProperty(prop))mat[prop]=style[prop];}if(style.opacity!==undefined){if(style.opacity===1)mat.transparent=false;else mat.transparent=true;}return mat;}/**\n\t         * Adds an explicit mesh as a surface object.\n\t         * @function $3Dmol.GLViewer#addMesh\n\t         * @param {$3Dmol.Mesh}\n\t         *            mesh\n\t         * @param {Object}\n\t         *            style\n\t         * @returns {Number} surfid\n\t         */this.addMesh=function(mesh){var surfobj={geo:mesh.geometry,mat:mesh.material,done:true,finished:false//the rendered finishes surfaces when they are done\n\t};var surfid=nextSurfID();surfaces[surfid]=surfobj;return surfid;};//return a shallow copy of list l, e.g., for atoms so we can\n\t//ignore superficial changes (ie surfacecolor, position) that happen\n\t//while we're surface building\n\tvar shallowCopy=function shallowCopy(l){var ret=[];$.each(l,function(k,v){ret[k]=$.extend({},v);});return ret;};/**\n\t         * Add surface representation to atoms\n\t         *  @function $3Dmol.GLViewer#addSurface\n\t         * @param {$3Dmol.SurfaceType} type - Surface type\n\t         * @param {SurfaceStyleSpec} style - optional style specification for surface material (e.g. for different coloring scheme, etc)\n\t         * @param {AtomSelectionSpec} atomsel - Show surface for atoms in this selection\n\t         * @param {AtomSelectionSpec} allsel - Use atoms in this selection to calculate surface; may be larger group than 'atomsel'\n\t         * @param {AtomSelectionSpec} focus - Optionally begin rendering surface specified atoms\n\t         *\n\t         * @return {number} surfid - Identifying number for this surface\n\t         */this.addSurface=function(type,style,atomsel,allsel,focus){// type 1: VDW 3: SAS 4: MS 2: SES\n\t// if sync is true, does all work in main thread, otherwise uses\n\t// workers\n\t// with workers, must ensure group is the actual modelgroup since\n\t// surface\n\t// will get added asynchronously\n\t// all atoms in atomlist are used to compute surfaces, but only the\n\t// surfaces\n\t// of atomsToShow are displayed (e.g., for showing cavities)\n\t// if focusSele is specified, will start rending surface around the\n\t// atoms specified by this selection\n\tvar atomlist=null,focusSele=null;//TODO: currently generating a shallow copy to avoid problems when atoms are chagned\n\t//during surface generation - come up with a better solution\n\tvar atomsToShow=shallowCopy(getAtomsFromSel(atomsel));if(!allsel){atomlist=atomsToShow;}else{atomlist=shallowCopy(getAtomsFromSel(allsel));}var symmetries=false;var n;for(n=0;n<models.length;n++){if(models[n]){var symMatrices=models[n].getSymmetries();if(symMatrices.length>1||symMatrices.length==1&&!symMatrices[0].isIdentity()){symmetries=true;break;}}}var addSurfaceHelper=function addSurfaceHelper(surfobj,atomlist,atomsToShow){if(!focus){focusSele=atomsToShow;}else{focusSele=shallowCopy(getAtomsFromSel(focus));}var atom;var time=new Date();var extent=$3Dmol.getExtent(atomsToShow,true);var i,il;if(style['map']&&style['map']['prop']){// map color space using already set atom properties\n\t/** @type {AtomSpec} */var prop=style['map']['prop'];/** @type {Gradient} */var scheme=style['map']['scheme']||style['map']['gradient']||new $3Dmol.Gradient.RWB();var range=scheme.range();if(!range){range=$3Dmol.getPropertyRange(atomsToShow,prop);}style.colorscheme={prop:prop,gradient:scheme};}//cache surface color on each atom\n\tfor(i=0,il=atomlist.length;i<il;i++){atom=atomlist[i];atom.surfaceColor=$3Dmol.getColorFromStyle(atom,style);}var totalVol=volume(extent);// used to scale resolution\n\tvar extents=carveUpExtent(extent,atomlist,atomsToShow);if(focusSele&&focusSele.length&&focusSele.length>0){var seleExtent=$3Dmol.getExtent(focusSele,true);// sort by how close to center of seleExtent\n\tvar sortFunc=function sortFunc(a,b){var distSq=function distSq(ex,sele){// distance from e (which has no center of mass) and\n\t// sele which does\n\tvar e=ex.extent;var x=e[1][0]-e[0][0];var y=e[1][1]-e[0][1];var z=e[1][2]-e[0][2];var dx=x-sele[2][0];dx*=dx;var dy=y-sele[2][1];dy*=dy;var dz=z-sele[2][2];dz*=dz;return dx+dy+dz;};var d1=distSq(a,seleExtent);var d2=distSq(b,seleExtent);return d1-d2;};extents.sort(sortFunc);}//console.log(\"Extents \" + extents.length + \"  \"+ (+new Date() - time) + \"ms\");\n\tvar reducedAtoms=[];// to reduce amount data transfered, just pass x,y,z,serial and elem\n\tfor(i=0,il=atomlist.length;i<il;i++){atom=atomlist[i];reducedAtoms[i]={x:atom.x,y:atom.y,z:atom.z,serial:i,elem:atom.elem};}var sync=!!$3Dmol.syncSurface;if(sync){// don't use worker, still break up for memory purposes\n\t// to keep the browser from locking up, call through setTimeout\n\tvar callSyncHelper=function callSyncHelper(i){if(i>=extents.length)return;var VandF=generateMeshSyncHelper(type,extents[i].extent,extents[i].atoms,extents[i].toshow,reducedAtoms,totalVol);var mesh=generateSurfaceMesh(atomlist,VandF,mat);$3Dmol.mergeGeos(surfobj.geo,mesh);_viewer.render();setTimeout(callSyncHelper,1,i+1);};setTimeout(callSyncHelper,1,0);// TODO: Asynchronously generate geometryGroups (not separate\n\t// meshes) and merge them into a single geometry\n\t}else{// use worker\n\tvar workers=[];if(type<0)type=0;// negative reserved for atom data\n\tfor(i=0,il=numWorkers;i<il;i++){// var w = new Worker('3Dmol/SurfaceWorker.js');\n\tvar w=new Worker($3Dmol.SurfaceWorker);workers.push(w);w.postMessage({'type':-1,'atoms':reducedAtoms,'volume':totalVol});}var cnt=0;var rfunction=function rfunction(event){var VandFs=$3Dmol.splitMesh({vertexArr:event.data.vertices,faceArr:event.data.faces});for(var i=0,vl=VandFs.length;i<vl;i++){var VandF={vertices:VandFs[i].vertexArr,faces:VandFs[i].faceArr};var mesh=generateSurfaceMesh(atomlist,VandF,mat);$3Dmol.mergeGeos(surfobj.geo,mesh);_viewer.render();}//    console.log(\"async mesh generation \" + (+new Date() - time) + \"ms\");\n\tcnt++;if(cnt==extents.length)surfobj.done=true;};var efunction=function efunction(event){console.log(event.message+\" (\"+event.filename+\":\"+event.lineno+\")\");};for(i=0;i<extents.length;i++){var worker=workers[i%workers.length];worker.onmessage=rfunction;worker.onerror=efunction;worker.postMessage({'type':type,'expandedExtent':extents[i].extent,'extendedAtoms':extents[i].atoms,'atomsToShow':extents[i].toshow});}}// NOTE: This is misleading if 'async' mesh generation - returns\n\t// immediately\n\t//console.log(\"full mesh generation \" + (+new Date() - time) + \"ms\");\n\t};style=style||{};var mat=getMatWithStyle(style);var surfobj=[];if(symmetries){//do preprocessing\n\tvar modelsAtomList={};var modelsAtomsToShow={};for(n=0;n<models.length;n++){modelsAtomList[n]=[];modelsAtomsToShow[n]=[];}for(n=0;n<atomlist.length;n++){modelsAtomList[atomlist[n].model].push(atomlist[n]);}for(n=0;n<atomsToShow.length;n++){modelsAtomsToShow[atomsToShow[n].model].push(atomsToShow[n]);}for(n=0;n<models.length;n++){surfobj.push({geo:new $3Dmol.Geometry(true),mat:mat,done:false,finished:false,symmetries:models[n].getSymmetries()// also webgl initialized\n\t});addSurfaceHelper(surfobj[n],modelsAtomList[n],modelsAtomsToShow[n]);}}else{surfobj.push({geo:new $3Dmol.Geometry(true),mat:mat,done:false,finished:false,symmetries:[new $3Dmol.Matrix4()]});addSurfaceHelper(surfobj[surfobj.length-1],atomlist,atomsToShow);}var surfid=nextSurfID();surfaces[surfid]=surfobj;return surfid;};/**\n\t         * Set the surface material to something else, must render change\n\t        *  @function $3Dmol.GLViewer#setSurfaceMaterialStyle\n\t         * @param {number} surf - Surface ID to apply changes to\n\t         * @param {matSpec} style - new material style specification\n\t         */this.setSurfaceMaterialStyle=function(surf,style){if(surfaces[surf]){surfArr=surfaces[surf];for(var i=0;i<surfArr.length;i++){surfArr[i].mat=getMatWithStyle(style);surfArr[i].mat.side=$3Dmol.FrontSide;surfArr[i].finished=false;// trigger redraw\n\t}}return this;};/**\n\t         * Remove surface with given ID\n\t         * @function $3Dmol.GLViewer#removeSurface\n\t         * @param {number} surf - surface id\n\t         */this.removeSurface=function(surf){var surfArr=surfaces[surf];for(var i=0;i<surfArr.length;i++){if(surfArr[i]&&surfArr[i].lastGL){if(surfArr[i].geo!==undefined)surfArr[i].geo.dispose();if(surfArr[i].mat!==undefined)surfArr[i].mat.dispose();modelGroup.remove(surfArr[i].lastGL);// remove from scene\n\t}}delete surfaces[surf];show();return this;};/** Remove all surfaces.\n\t         * @function $3Dmol.GLViewer#removeAllSurfaces */this.removeAllSurfaces=function(){for(n in surfaces){if(!surfaces.hasOwnProperty(n))continue;var surfArr=surfaces[n];for(var i=0;i<surfArr.length;i++){if(surfArr[i]&&surfArr[i].lastGL){if(surfArr[i].geo!==undefined)surfArr[i].geo.dispose();if(surfArr[i].mat!==undefined)surfArr[i].mat.dispose();modelGroup.remove(surfArr[i].lastGL);// remove from scene\n\t}}delete surfaces[n];}show();return this;};/** return Jmol moveto command to position this scene */this.jmolMoveTo=function(){var pos=modelGroup.position;// center on same position\n\tvar ret=\"center { \"+-pos.x+\" \"+-pos.y+\" \"+-pos.z+\" }; \";// apply rotation\n\tvar q=rotationGroup.quaternion;ret+=\"moveto .5 quaternion { \"+q.x+\" \"+q.y+\" \"+q.z+\" \"+q.w+\" };\";// zoom is tricky.. maybe i would be best to let callee zoom on\n\t// selection?\n\t// can either do a bunch of math, or maybe zoom to the center with a\n\t// fixed\n\t// but reasonable percentage\n\treturn ret;};/** Clear scene of all objects\n\t         * @function $3Dmol.GLViewer#clear\n\t         * */this.clear=function(){this.removeAllSurfaces();this.removeAllModels();this.removeAllLabels();this.removeAllShapes();show();return this;};// props is a list of objects that select certain atoms and enumerate\n\t// properties for those atoms\n\t/**\n\t         * @function $3Dmol.GLViewer#mapAtomProperties\n\t         * Add specified properties to all atoms matching input argument\n\t         * @function $3Dmol.GLViewer#mapAtomProperties\n\t         * @param {Object} props, either array of atom selectors with associated props, or function that takes atom and sets its properties\n\t         * @param {AtomSelectionSpec} sel\n\t         */this.mapAtomProperties=function(props,sel){sel=sel||{};var atoms=getAtomsFromSel(sel);if(typeof props==\"function\"){for(var a=0,numa=atoms.length;a<numa;a++){var atom=atoms[a];props(atom);}}else{for(var a=0,numa=atoms.length;a<numa;a++){var atom=atoms[a];for(var i=0,n=props.length;i<n;i++){var prop=props[i];if(prop.props){for(var p in prop.props){if(prop.props.hasOwnProperty(p)){// check the atom\n\tif(atomIsSelected(atom,prop)){if(!atom.properties)atom.properties={};atom.properties[p]=prop.props[p];}}}}}}}return this;};/**\n\t         * @function $3Dmol.GLViewer#linkViewer\n\t         * Synchronize this view matrix of this viewer to the passed viewer.\n\t         * When the viewpoint of this viewer changes, the other viewer will\n\t         * be set to this viewer's view.\n\t         * @function $3Dmol.GLViewer#linkViewer\n\t         */this.linkViewer=function(otherviewer){linkedViewers.push(otherviewer);return this;};try{if(typeof callback===\"function\")callback(this);}catch(e){// errors in callback shouldn't invalidate the viewer\n\tconsole.log(\"error with glviewer callback: \"+e);}}return GLViewer;}();$3Dmol['glmolViewer']=$3Dmol.GLViewer;//color scheme mappings\n\tvar $3Dmol=$3Dmol||{};/** Color mapping gradiens\n\t * @interface\n\t * @param {number} min\n\t * @param {number} max\n\t */$3Dmol.Gradient=function(min,max){};/**\n\t * Map value to hex color\n\t * @param {number} val\n\t * @param {number} range\n\t * @returns {number}\n\t */$3Dmol.Gradient.valueToHex=function(val,range){};//return range used for color mapping, null if none set\n\t$3Dmol.Gradient.range=function(){};/**\n\t * Color scheme red to white to blue, for charges\n\t * @constructor\n\t * @implements {$3Dmol.Gradient}\n\t */$3Dmol.Gradient.RWB=function(min,max,mid){var mult=1.0;if(typeof max=='undefined'&&$.isArray(min)&&min.length>=2){//we were passed a single range\n\tmax=min[1];min=min[0];}if(max<min){//reverse the order\n\tmult=-1.0;min*=-1.0;max*=-1.0;}//map value to hex color, range is provided\n\tthis.valueToHex=function(val,range){var lo,hi;val=mult*val;//reverse if necessary\n\tif(range){lo=range[0];hi=range[1];}else{lo=min;hi=max;}if(val===undefined)return 0xffffff;if(val<lo)val=lo;if(val>hi)val=hi;var middle=(hi+lo)/2;if(typeof mid!='undefined')middle=mid;//allow user to specify midpoint\n\tvar scale,color;//scale bottom from red to white\n\tif(val<=middle){scale=Math.floor(255*Math.sqrt((val-lo)/(middle-lo)));color=0xff0000+0x100*scale+scale;return color;}else{//form white to blue\n\tscale=Math.floor(255*Math.sqrt(1-(val-middle)/(hi-middle)));color=0x10000*scale+0x100*scale+0xff;return color;}};//return range used for color mapping, null if none set\n\tthis.range=function(){if(typeof min!=\"undefined\"&&typeof max!=\"undefined\"){return[min,max];}return null;};};/**\n\t * rainbow gradient, but without purple to match jmol\n\t * @constructor\n\t * @implements {$3Dmol.Gradient}\n\t */$3Dmol.Gradient.ROYGB=function(min,max){var mult=1.0;if(typeof max=='undefined'&&$.isArray(min)&&min.length>=2){//we were passed a single range\n\tmax=min[1];min=min[0];}if(max<min){//reverse the order\n\tmult=-1.0;min*=-1.0;max*=-1.0;}//map value to hex color, range is provided\n\tthis.valueToHex=function(val,range){var lo,hi;val=mult*val;if(range){lo=range[0];hi=range[1];}else{lo=min;hi=max;}if(typeof val==\"undefined\")return 0xffffff;if(val<lo)val=lo;if(val>hi)val=hi;var mid=(lo+hi)/2;var q1=(lo+mid)/2;var q3=(mid+hi)/2;var scale,color;if(val<q1){//scale green up, red up, blue down\n\tscale=Math.floor(255*Math.sqrt((val-lo)/(q1-lo)));color=0xff0000+0x100*scale+0;return color;}else if(val<mid){//scale red down, green up, blue down\n\tscale=Math.floor(255*Math.sqrt(1-(val-q1)/(mid-q1)));color=0x010000*scale+0xff00+0x0;return color;}else if(val<q3){//scale blue up, red down, green up\n\tscale=Math.floor(255*Math.sqrt((val-mid)/(q3-mid)));color=0x000000+0xff00+0x1*scale;return color;}else{//scale green down, blue up, red down\n\tscale=Math.floor(255*Math.sqrt(1-(val-q3)/(hi-q3)));color=0x000000+0x0100*scale+0xff;return color;}};//return range used for color mapping, null if none set\n\tthis.range=function(){if(typeof min!=\"undefined\"&&typeof max!=\"undefined\"){return[min,max];}return null;};};/**\n\t * rainbow gradient with constant saturation, all the way to purple!\n\t * @constructor\n\t * @implements {$3Dmol.Gradient}\n\t */$3Dmol.Gradient.Sinebow=function(min,max){var mult=1.0;if(typeof max=='undefined'&&$.isArray(min)&&min.length>=2){//we were passed a single range\n\tmax=min[1];min=min[0];}if(max<min){//reverse the order\n\tmult=-1.0;min*=-1.0;max*=-1.0;}//map value to hex color, range is provided\n\tthis.valueToHex=function(val,range){var lo,hi;val=mult*val;if(range){lo=range[0];hi=range[1];}else{lo=min;hi=max;}if(typeof val==\"undefined\")return 0xffffff;if(val<lo)val=lo;if(val>hi)val=hi;var scale=(val-lo)/(hi-lo);var h=5*scale/6.0+0.5;var r=Math.sin(Math.PI*h);r*=r*255;var g=Math.sin(Math.PI*(h+1/3.0));g*=g*255;var b=Math.sin(Math.PI*(h+2/3.0));b*=b*255;return 0x10000*Math.floor(r)+0x100*Math.floor(b)+0x1*Math.floor(g);};//return range used for color mapping, null if none set\n\tthis.range=function(){if(typeof min!=\"undefined\"&&typeof max!=\"undefined\"){return[min,max];}return null;};};//Adapted from the text sprite example from http://stemkoski.github.io/Three.js/index.html\n\t$3Dmol.LabelCount=0;/**\n\t * Renderable labels\n\t * @constructor $3Dmol.Label\n\t * @param {string} tag - Label text\n\t * @param {LabelSpec} parameters Label style and font specifications\n\t */$3Dmol.Label=function(text,parameters){this.id=$3Dmol.LabelCount++;this.stylespec=parameters||{};this.canvas=document.createElement('canvas');//todo: implement resizing canvas..\n\tthis.canvas.width=134;this.canvas.height=35;this.context=this.canvas.getContext('2d');this.sprite=new $3Dmol.Sprite();this.text=text;};$3Dmol.Label.prototype={constructor:$3Dmol.Label,getStyle:function getStyle(){return this.stylespec;},setContext:function(){// function for drawing rounded rectangles - for Label drawing\n\tvar roundRect=function roundRect(ctx,x,y,w,h,r,drawBorder){ctx.beginPath();ctx.moveTo(x+r,y);ctx.lineTo(x+w-r,y);ctx.quadraticCurveTo(x+w,y,x+w,y+r);ctx.lineTo(x+w,y+h-r);ctx.quadraticCurveTo(x+w,y+h,x+w-r,y+h);ctx.lineTo(x+r,y+h);ctx.quadraticCurveTo(x,y+h,x,y+h-r);ctx.lineTo(x,y+r);ctx.quadraticCurveTo(x,y,x+r,y);ctx.closePath();ctx.fill();if(drawBorder)ctx.stroke();};//do all the checks to figure out what color is desired\n\tvar getColor=function getColor(style,stylealpha,init){var ret=init;if(typeof style!='undefined'){//convet regular colors\n\tif(style instanceof $3Dmol.Color)ret=style.scaled();else//hex or name\n\tret=$3Dmol.CC.color(style).scaled();}if(typeof stylealpha!='undefined'){ret.a=parseFloat(stylealpha);}return ret;};/**\n\t         * Label type specification\n\t         * @typedef LabelSpec\n\t         * @struct\n\t         * @prop {string} font - font name, default sans-serif\n\t         * @prop {number} fontSize - height of text, default 18\n\t         * @prop {ColorSpec} fontColor - font color, default white\n\t         * @prop {number} fontOpacity - font opacity, default 1\n\t         * @prop {number} borderThickness - line width of border around label, default 0\n\t         * @prop {ColorSpec} borderColor - color of border, default backgroundColor\n\t         * @prop {string} borderOpacity - color of border\n\t         * @prop {ColorSpec} backgroundColor - color of background, default black\n\t         * @prop {string} backgroundOpacity - opacity of background, default 1\n\t         * @prop {Object} position - x,y,z coordinates for label\n\t         * @prop {boolean} inFront - always put labels in from of model\n\t         * @prop {boolean} showBackground - show background rounded rectangle, default true\n\t         */return function(){var style=this.stylespec;var useScreen=typeof style.useScreen==\"undefined\"?false:style.useScreen;var showBackground=style.showBackground;if(showBackground==='0'||showBackground==='false')showBackground=false;if(typeof showBackground==\"undefined\")showBackground=true;//default\n\tvar font=style.font?style.font:\"sans-serif\";var fontSize=parseInt(style.fontSize)?parseInt(style.fontSize):18;var fontColor=getColor(style.fontColor,style.fontOpacity,{r:255,g:255,b:255,a:1.0});var padding=style.padding?style.padding:4;var borderThickness=style.borderThickness?style.borderThickness:0;var backgroundColor=getColor(style.backgroundColor,style.backgroundOpacity,{r:0,g:0,b:0,a:1.0});var borderColor=getColor(style.borderColor,style.borderOpacity,backgroundColor);var position=style.position?style.position:{x:-10,y:1,z:1};// Should labels always be in front of model?\n\tvar inFront=style.inFront!==undefined?style.inFront:true;if(inFront==='false'||inFront==='0')inFront=false;// clear canvas\n\tvar spriteAlignment=style.alignment||$3Dmol.SpriteAlignment.topLeft;var bold=\"\";if(style.bold)bold=\"bold \";this.context.font=bold+fontSize+\"px  \"+font;var metrics=this.context.measureText(this.text);var textWidth=metrics.width;if(!showBackground)borderThickness=0;var width=textWidth+2.5*borderThickness+2*padding;var height=fontSize*1.25+2*borderThickness+2*padding;// 1.25 is extra height factor for text below baseline: g,j,p,q.\n\tif(style.backgroundImage){var img=style.backgroundImage;var w=style.backgroundWidth?style.backgroundWidth:img.width;var h=style.backgroundHeight?style.backgroundHeight:img.height;if(w>width)width=w;if(h>height)height=h;}this.canvas.width=width;this.canvas.height=height;this.context.clearRect(0,0,this.canvas.width,this.canvas.height);var bold=\"\";if(style.bold)bold=\"bold \";this.context.font=bold+fontSize+\"px  \"+font;// background color\n\tthis.context.fillStyle=\"rgba(\"+backgroundColor.r+\",\"+backgroundColor.g+\",\"+backgroundColor.b+\",\"+backgroundColor.a+\")\";// border color\n\tthis.context.strokeStyle=\"rgba(\"+borderColor.r+\",\"+borderColor.g+\",\"+borderColor.b+\",\"+borderColor.a+\")\";this.context.lineWidth=borderThickness;if(showBackground){roundRect(this.context,borderThickness,borderThickness,width-2*borderThickness,height-2*borderThickness,6,borderThickness>0);}if(style.backgroundImage){var img=style.backgroundImage;var w=style.backgroundWidth?style.backgroundWidth:img.width;var h=style.backgroundHeight?style.backgroundHeight:img.height;this.context.drawImage(img,0,0,w,h);}// text color\n\tthis.context.fillStyle=\"rgba(\"+fontColor.r+\",\"+fontColor.g+\",\"+fontColor.b+\",\"+fontColor.a+\")\";this.context.fillText(this.text,borderThickness+padding,fontSize+borderThickness+padding,textWidth);// canvas contents will be used for a texture\n\tvar texture=new $3Dmol.Texture(this.canvas);texture.needsUpdate=true;this.sprite.material=new $3Dmol.SpriteMaterial({map:texture,useScreenCoordinates:useScreen,alignment:spriteAlignment,depthTest:!inFront});this.sprite.scale.set(1,1,1);this.sprite.position.set(position.x,position.y,position.z);};}(),// clean up material and texture\n\tdispose:function dispose(){if(this.sprite.material.map!==undefined)this.sprite.material.map.dispose();if(this.sprite.material!==undefined)this.sprite.material.dispose();}};$3Dmol=$3Dmol||{};//Encapsulate marching cube algorithm for isosurface generation\n\t// (currently used by protein surface rendering and generic volumetric data reading)\n\t$3Dmol.MarchingCubeInitializer=function(){//Marching cube algorithm - assume data has been pre-treated so isovalue is 0\n\t// (i.e. select points greater than 0)\n\t//origin -  vector of origin of volumetric data (default is (0,0,0))\n\t// nX, nY, nZ - specifies number of voxels in each dimension\n\t// scale - cube diagonal unit vector scale (3Dmol vector) (specifying distance between data points); diagonal of cube\n\t// - default is 1 - assumes unit cube (1,1,1) diag)\n\t// fulltable - if true, use full marching cubes and tritables - else use trimmed table (e.g. surf render)\n\t// voxel - if true, draws with a blocky voxel style (default false)\n\t// verts, faces - vertex and face arrays to fill up\n\t//to match with protein surface...\n\tvar ISDONE=2;var my={};my.march=function(data,verts,faces,spec){var fulltable=!!spec.fulltable;var origin=spec.hasOwnProperty('origin')&&spec.origin.hasOwnProperty('x')?spec.origin:{x:0,y:0,z:0};var voxel=!!spec.voxel;var transform=spec.matrix;//if this is set, it overrides origin and unitCube\n\tvar nX=spec.nX||0;var nY=spec.nY||0;var nZ=spec.nZ||0;var scale=spec.scale||1.0;var unitCube=null;if(spec.unitCube){unitCube=spec.unitCube;}else{unitCube={x:scale,y:scale,z:scale};}//keep track of calculated vertices to avoid repeats\n\tvar vertnums=new Int32Array(nX*nY*nZ);var i,il;for(i=0,il=vertnums.length;i<il;++i){vertnums[i]=-1;}// create (or retrieve) a vertex at the appropriate point for\n\t// the edge (p1,p2)\n\tvar getVertex=function getVertex(i,j,k,code,p1,p2){var pt={x:0,y:0,z:0};var val1=!!(code&1<<p1);var val2=!!(code&1<<p2);// p1 if they are the same or if !val1\n\tvar p=p1;if(!val1&&val2)p=p2;// adjust i,j,k by p\n\tif(p&1)k++;if(p&2)j++;if(p&4)i++;if(transform){pt=new $3Dmol.Vector3(i,j,k);pt=pt.applyMatrix4(transform);pt={x:pt.x,y:pt.y,z:pt.z};//remove vector gunk\n\t}else{pt.x=origin.x+unitCube.x*i;pt.y=origin.y+unitCube.y*j;pt.z=origin.z+unitCube.z*k;}var index=(nY*i+j)*nZ+k;//Have to add option to do voxels\n\tif(!voxel){if(vertnums[index]<0)// not created yet\n\t{vertnums[index]=verts.length;verts.push(pt);}return vertnums[index];}else{verts.push(pt);return verts.length-1;}};var intersects=new Int32Array(12);var etable=fulltable?edgeTable2:edgeTable;var tritable=fulltable?triTable2:triTable;//Run marching cubes algorithm\n\tfor(i=0;i<nX-1;++i){for(var j=0;j<nY-1;++j){for(var k=0;k<nZ-1;++k){var code=0;for(var p=0;p<8;++p){var index=(nY*(i+((p&4)>>2))+j+((p&2)>>1))*nZ+k+(p&1);//TODO: Need to fix vpBits in protein surface for this to work\n\tvar val=!!(data[index]&ISDONE);//var val = !!(data[index] > 0);\n\tcode|=val<<p;}if(code===0||code===255)continue;var ecode=etable[code];if(ecode===0)continue;var ttable=tritable[code];if(ecode&1)intersects[0]=getVertex(i,j,k,code,0,1);if(ecode&2)intersects[1]=getVertex(i,j,k,code,1,3);if(ecode&4)intersects[2]=getVertex(i,j,k,code,3,2);if(ecode&8)intersects[3]=getVertex(i,j,k,code,2,0);if(ecode&16)intersects[4]=getVertex(i,j,k,code,4,5);if(ecode&32)intersects[5]=getVertex(i,j,k,code,5,7);if(ecode&64)intersects[6]=getVertex(i,j,k,code,7,6);if(ecode&128)intersects[7]=getVertex(i,j,k,code,6,4);if(ecode&256)intersects[8]=getVertex(i,j,k,code,0,4);if(ecode&512)intersects[9]=getVertex(i,j,k,code,1,5);if(ecode&1024)intersects[10]=getVertex(i,j,k,code,3,7);if(ecode&2048)intersects[11]=getVertex(i,j,k,code,2,6);for(var t=0;t<ttable.length;t+=3){var a=intersects[ttable[t]],b=intersects[ttable[t+1]],c=intersects[ttable[t+2]];if(voxel&&t>=3){verts.push(verts[a]);a=verts.length-1;verts.push(verts[b]);b=verts.length-1;verts.push(verts[c]);c=verts.length-1;}faces.push(a);faces.push(b);faces.push(c);}}}}};my.laplacianSmooth=function(numiter,verts,faces){var tps=new Array(verts.length);var i,il,j,jl,k,kl;for(i=0,il=verts.length;i<il;i++){tps[i]={x:0,y:0,z:0};}var vertdeg=new Array(20);var flagvert;for(i=0;i<20;i++){vertdeg[i]=new Array(verts.length);}for(i=0,il=verts.length;i<il;i++){vertdeg[0][i]=0;}for(i=0,il=faces.length/3;i<il;i++){var aoffset=i*3,boffset=i*3+1,coffset=i*3+2;flagvert=true;for(j=0,jl=vertdeg[0][faces[aoffset]];j<jl;j++){if(faces[boffset]==vertdeg[j+1][faces[aoffset]]){flagvert=false;break;}}if(flagvert){vertdeg[0][faces[aoffset]]++;vertdeg[vertdeg[0][faces[aoffset]]][faces[aoffset]]=faces[boffset];}flagvert=true;for(j=0,jl=vertdeg[0][faces[aoffset]];j<jl;j++){if(faces[coffset]==vertdeg[j+1][faces[aoffset]]){flagvert=false;break;}}if(flagvert){vertdeg[0][faces[aoffset]]++;vertdeg[vertdeg[0][faces[aoffset]]][faces[aoffset]]=faces[coffset];}// b\n\tflagvert=true;for(j=0,jl=vertdeg[0][faces[boffset]];j<jl;j++){if(faces[aoffset]==vertdeg[j+1][faces[boffset]]){flagvert=false;break;}}if(flagvert){vertdeg[0][faces[boffset]]++;vertdeg[vertdeg[0][faces[boffset]]][faces[boffset]]=faces[aoffset];}flagvert=true;for(j=0,jl=vertdeg[0][faces[boffset]];j<jl;j++){if(faces[coffset]==vertdeg[j+1][faces[boffset]]){flagvert=false;break;}}if(flagvert){vertdeg[0][faces[boffset]]++;vertdeg[vertdeg[0][faces[boffset]]][faces[boffset]]=faces[coffset];}// c\n\tflagvert=true;for(j=0;j<vertdeg[0][faces[coffset]];j++){if(faces[aoffset]==vertdeg[j+1][faces[coffset]]){flagvert=false;break;}}if(flagvert){vertdeg[0][faces[coffset]]++;vertdeg[vertdeg[0][faces[coffset]]][faces[coffset]]=faces[aoffset];}flagvert=true;for(j=0,jl=vertdeg[0][faces[coffset]];j<jl;j++){if(faces[boffset]==vertdeg[j+1][faces[coffset]]){flagvert=false;break;}}if(flagvert){vertdeg[0][faces[coffset]]++;vertdeg[vertdeg[0][faces[coffset]]][faces[coffset]]=faces[boffset];}}var wt=1.00;var wt2=0.50;var ssign;var scaleFactor=1;var outwt=0.75/(scaleFactor+3.5);// area-preserving\n\tfor(k=0;k<numiter;k++){for(i=0,il=verts.length;i<il;i++){if(vertdeg[0][i]<3){tps[i].x=verts[i].x;tps[i].y=verts[i].y;tps[i].z=verts[i].z;}else if(vertdeg[0][i]==3||vertdeg[0][i]==4){tps[i].x=0;tps[i].y=0;tps[i].z=0;for(j=0,jl=vertdeg[0][i];j<jl;j++){tps[i].x+=verts[vertdeg[j+1][i]].x;tps[i].y+=verts[vertdeg[j+1][i]].y;tps[i].z+=verts[vertdeg[j+1][i]].z;}tps[i].x+=wt2*verts[i].x;tps[i].y+=wt2*verts[i].y;tps[i].z+=wt2*verts[i].z;tps[i].x/=wt2+vertdeg[0][i];tps[i].y/=wt2+vertdeg[0][i];tps[i].z/=wt2+vertdeg[0][i];}else{tps[i].x=0;tps[i].y=0;tps[i].z=0;for(j=0,jl=vertdeg[0][i];j<jl;j++){tps[i].x+=verts[vertdeg[j+1][i]].x;tps[i].y+=verts[vertdeg[j+1][i]].y;tps[i].z+=verts[vertdeg[j+1][i]].z;}tps[i].x+=wt*verts[i].x;tps[i].y+=wt*verts[i].y;tps[i].z+=wt*verts[i].z;tps[i].x/=wt+vertdeg[0][i];tps[i].y/=wt+vertdeg[0][i];tps[i].z/=wt+vertdeg[0][i];}}for(i=0,il=verts.length;i<il;i++){verts[i].x=tps[i].x;verts[i].y=tps[i].y;verts[i].z=tps[i].z;}/*\n\t                     * computenorm(); for (var i = 0; i < vertnumber; i++) { if\n\t                     * (verts[i].inout) ssign = 1; else ssign = -1; verts[i].x += ssign *\n\t                     * outwt * verts[i].pn.x; verts[i].y += ssign * outwt *\n\t                     * verts[i].pn.y; verts[i].z += ssign * outwt * verts[i].pn.z; }\n\t                     */}};/*\n\t     * These tables are based off those by Paul Bourke and Geoffrey Heller:\n\t     * http://paulbourke.net/geometry/polygonise/\n\t     * http://paulbourke.net/geometry/polygonise/table2.txt\n\t     *\n\t     * However, they have been substantially modified to reflect a more\n\t     * sensible corner numbering scheme and the discrete nature of our voxel data\n\t     * (resulting in fewer faces).\n\t     */my.edgeTable=[0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xb00,0x0,0x0,0x0,0x700,0x0,0xd00,0xe00,0xf00,0x0,0x0,0x0,0x8a,0x0,0x15,0x0,0x86,0x0,0x0,0x0,0x28c,0x0,0x813,0xf19,0xe10,0x0,0x0,0x0,0x2a,0x0,0x0,0x0,0x126,0x0,0x0,0x15,0x1c,0x0,0xf23,0x419,0xd20,0x0,0xa8,0xa2,0xaa,0x0,0x285,0x9ab,0x8a2,0x0,0x2af,0x125,0xac,0xfaa,0xea3,0xda9,0xca0,0x0,0x0,0x0,0x0,0x0,0x45,0x0,0x384,0x0,0x0,0x0,0x700,0x8a,0x83,0x648,0x780,0x0,0x51,0x0,0x81a,0x54,0x55,0x54,0x56,0x0,0x51,0x0,0xe5c,0x14a,0x451,0x759,0x650,0x0,0x0,0x0,0x2a,0x0,0x45,0x0,0x1f6,0x0,0x0,0x15,0xdfc,0x8a,0x7f3,0x4f9,0x5f0,0xb00,0x68,0x921,0x6a,0x348,0x245,0x16f,0x66,0xb00,0xe6f,0xd65,0xc6c,0x76a,0x663,0x569,0x460,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xf46,0x0,0x0,0x45,0x24c,0x2a,0x823,0x29,0xb40,0x0,0x0,0x0,0x6ba,0x0,0x8f5,0xfff,0xef6,0x0,0xff,0x2f5,0x2fc,0x9ea,0x8f3,0xbf9,0xaf0,0x0,0x0,0x51,0x152,0x0,0xf55,0x45f,0xd56,0x54,0x357,0x55,0x154,0x852,0xb53,0x59,0x950,0x700,0x2c8,0xc2,0x48a,0xfc4,0xec5,0xdcf,0xcc6,0x2c4,0x2cf,0xc5,0xcc,0xbca,0xac3,0x9c9,0x8c0,0x0,0x0,0x0,0x0,0xa8,0x1a4,0xa8,0x7a6,0xa2,0xa2,0x2a4,0xbac,0xaa,0xa3,0x2a8,0x3a0,0xd00,0xc18,0xd00,0xe3a,0x34,0x35,0x73f,0x636,0x924,0x83f,0xb35,0xa3c,0x12a,0x33,0x339,0x230,0xe00,0xe00,0xc12,0xd9a,0x684,0x795,0x49f,0x596,0x92,0xb9f,0x815,0x99c,0x9a,0x393,0x99,0x190,0xf00,0xe08,0xd01,0xc0a,0x704,0x605,0x50f,0x406,0xb02,0xa0f,0x905,0x80c,0x30a,0x203,0x109,0x0];var edgeTable=new Uint32Array(my.edgeTable);var triTable=my.triTable=[[],[],[],[],[],[],[],[11,9,8],[],[],[],[8,10,9],[],[10,8,11],[9,11,10],[8,10,9,8,11,10],[],[],[],[1,7,3],[],[4,2,0],[],[2,1,7],[],[],[],[2,7,3,2,9,7],[],[1,4,11,1,0,4],[3,8,0,11,9,4,11,10,9],[4,11,9,11,10,9],[],[],[],[5,3,1],[],[],[],[2,5,8,2,1,5],[],[],[2,4,0],[3,2,4],[],[0,9,1,8,10,5,8,11,10],[3,4,0,3,10,4],[5,8,10,8,11,10],[],[3,5,7],[7,1,5],[1,7,3,1,5,7],[],[9,2,0,9,7,2],[0,3,8,1,7,11,1,5,7],[11,1,7,1,5,7],[],[9,1,0,5,3,2,5,7,3],[8,2,5,8,0,2],[2,5,3,5,7,3],[3,9,1,3,8,9,7,11,10,7,10,5],[9,1,0,10,7,11,10,5,7],[3,8,0,7,10,5,7,11,10],[11,5,7,11,10,5],[],[],[],[],[],[0,6,2],[],[7,2,9,7,9,8],[],[],[],[8,10,9],[7,1,3],[7,1,0],[6,9,3,6,10,9],[7,10,8,10,9,8],[],[6,0,4],[],[11,1,4,11,3,1],[2,4,6],[2,0,4,2,4,6],[2,4,6],[1,4,2,4,6,2],[],[6,0,4],[],[2,11,3,6,9,4,6,10,9],[8,6,1,8,1,3],[10,0,6,0,4,6],[8,0,3,9,6,10,9,4,6],[10,4,6,10,9,4],[],[],[],[5,3,1],[],[0,6,2],[],[7,4,8,5,2,1,5,6,2],[],[],[2,4,0],[7,4,8,2,11,3,10,5,6],[7,1,3],[5,6,10,0,9,1,8,7,4],[5,6,10,7,0,3,7,4,0],[10,5,6,4,8,7],[9,11,8],[3,5,6],[0,5,11,0,11,8],[6,3,5,3,1,5],[3,9,6,3,8,9],[9,6,0,6,2,0],[0,3,8,2,5,6,2,1,5],[1,6,2,1,5,6],[9,11,8],[1,0,9,6,10,5,11,3,2],[6,10,5,2,8,0,2,11,8],[3,2,11,10,5,6],[10,5,6,9,3,8,9,1,3],[0,9,1,5,6,10],[8,0,3,10,5,6],[10,5,6],[],[],[],[],[],[],[],[1,10,2,9,11,6,9,8,11],[],[],[6,0,2],[3,6,9,3,2,6],[3,5,1],[0,5,1,0,11,5],[0,3,5],[6,9,11,9,8,11],[],[],[],[4,5,9,7,1,10,7,3,1],[],[11,6,7,2,4,5,2,0,4],[11,6,7,8,0,3,1,10,2,9,4,5],[6,7,11,1,10,2,9,4,5],[],[4,1,0,4,5,1,6,7,3,6,3,2],[9,4,5,0,6,7,0,2,6],[4,5,9,6,3,2,6,7,3],[6,7,11,5,3,8,5,1,3],[6,7,11,4,1,0,4,5,1],[4,5,9,3,8,0,11,6,7],[9,4,5,7,11,6],[],[],[0,6,4],[8,6,4,8,1,6],[],[0,10,2,0,9,10,4,8,11,4,11,6],[10,2,1,6,0,3,6,4,0],[10,2,1,11,4,8,11,6,4],[4,2,6],[1,0,9,2,4,8,2,6,4],[2,4,0,2,6,4],[8,2,4,2,6,4],[11,4,1,11,6,4],[0,9,1,4,11,6,4,8,11],[3,6,0,6,4,0],[8,6,4,8,11,6],[10,8,9],[6,3,9,6,7,3],[6,7,1],[10,7,1,7,3,1],[7,11,6,8,10,2,8,9,10],[11,6,7,10,0,9,10,2,0],[2,1,10,7,11,6,8,0,3],[1,10,2,6,7,11],[7,2,6,7,9,2],[1,0,9,3,6,7,3,2,6],[7,0,6,0,2,6],[2,7,3,2,6,7],[7,11,6,3,9,1,3,8,9],[9,1,0,11,6,7],[0,3,8,11,6,7],[11,6,7],[],[],[],[],[5,3,7],[8,5,2,8,7,5],[5,3,7],[1,10,2,5,8,7,5,9,8],[1,7,5],[1,7,5],[9,2,7,9,7,5],[11,3,2,8,5,9,8,7,5],[1,3,7,1,7,5],[0,7,1,7,5,1],[9,3,5,3,7,5],[9,7,5,9,8,7],[8,10,11],[3,4,10,3,10,11],[8,10,11],[5,9,4,1,11,3,1,10,11],[2,4,5],[5,2,4,2,0,4],[0,3,8,5,9,4,10,2,1],[2,1,10,9,4,5],[2,8,5,2,11,8],[3,2,11,1,4,5,1,0,4],[9,4,5,8,2,11,8,0,2],[11,3,2,9,4,5],[8,5,3,5,1,3],[5,0,4,5,1,0],[3,8,0,4,5,9],[9,4,5],[11,9,10],[11,9,10],[1,11,4,1,10,11],[8,7,4,11,1,10,11,3,1],[2,7,9,2,9,10],[4,8,7,0,10,2,0,9,10],[2,1,10,0,7,4,0,3,7],[10,2,1,8,7,4],[1,7,4],[3,2,11,4,8,7,9,1,0],[11,4,2,4,0,2],[2,11,3,7,4,8],[4,1,7,1,3,7],[1,0,9,8,7,4],[3,4,0,3,7,4],[8,7,4],[8,9,10,8,10,11],[3,9,11,9,10,11],[0,10,8,10,11,8],[10,3,1,10,11,3],[2,8,10,8,9,10],[9,2,0,9,10,2],[8,0,3,1,10,2],[10,2,1],[1,11,9,11,8,9],[11,3,2,0,9,1],[11,0,2,11,8,0],[11,3,2],[8,1,3,8,9,1],[9,1,0],[8,0,3],[]];var edgeTable2=[0x0,0x109,0x203,0x30a,0x80c,0x905,0xa0f,0xb06,0x406,0x50f,0x605,0x70c,0xc0a,0xd03,0xe09,0xf00,0x190,0x99,0x393,0x29a,0x99c,0x895,0xb9f,0xa96,0x596,0x49f,0x795,0x69c,0xd9a,0xc93,0xf99,0xe90,0x230,0x339,0x33,0x13a,0xa3c,0xb35,0x83f,0x936,0x636,0x73f,0x435,0x53c,0xe3a,0xf33,0xc39,0xd30,0x3a0,0x2a9,0x1a3,0xaa,0xbac,0xaa5,0x9af,0x8a6,0x7a6,0x6af,0x5a5,0x4ac,0xfaa,0xea3,0xda9,0xca0,0x8c0,0x9c9,0xac3,0xbca,0xcc,0x1c5,0x2cf,0x3c6,0xcc6,0xdcf,0xec5,0xfcc,0x4ca,0x5c3,0x6c9,0x7c0,0x950,0x859,0xb53,0xa5a,0x15c,0x55,0x35f,0x256,0xd56,0xc5f,0xf55,0xe5c,0x55a,0x453,0x759,0x650,0xaf0,0xbf9,0x8f3,0x9fa,0x2fc,0x3f5,0xff,0x1f6,0xef6,0xfff,0xcf5,0xdfc,0x6fa,0x7f3,0x4f9,0x5f0,0xb60,0xa69,0x963,0x86a,0x36c,0x265,0x16f,0x66,0xf66,0xe6f,0xd65,0xc6c,0x76a,0x663,0x569,0x460,0x460,0x569,0x663,0x76a,0xc6c,0xd65,0xe6f,0xf66,0x66,0x16f,0x265,0x36c,0x86a,0x963,0xa69,0xb60,0x5f0,0x4f9,0x7f3,0x6fa,0xdfc,0xcf5,0xfff,0xef6,0x1f6,0xff,0x3f5,0x2fc,0x9fa,0x8f3,0xbf9,0xaf0,0x650,0x759,0x453,0x55a,0xe5c,0xf55,0xc5f,0xd56,0x256,0x35f,0x55,0x15c,0xa5a,0xb53,0x859,0x950,0x7c0,0x6c9,0x5c3,0x4ca,0xfcc,0xec5,0xdcf,0xcc6,0x3c6,0x2cf,0x1c5,0xcc,0xbca,0xac3,0x9c9,0x8c0,0xca0,0xda9,0xea3,0xfaa,0x4ac,0x5a5,0x6af,0x7a6,0x8a6,0x9af,0xaa5,0xbac,0xaa,0x1a3,0x2a9,0x3a0,0xd30,0xc39,0xf33,0xe3a,0x53c,0x435,0x73f,0x636,0x936,0x83f,0xb35,0xa3c,0x13a,0x33,0x339,0x230,0xe90,0xf99,0xc93,0xd9a,0x69c,0x795,0x49f,0x596,0xa96,0xb9f,0x895,0x99c,0x29a,0x393,0x99,0x190,0xf00,0xe09,0xd03,0xc0a,0x70c,0x605,0x50f,0x406,0xb06,0xa0f,0x905,0x80c,0x30a,0x203,0x109,0x0];var triTable2=[[],[8,3,0],[9,0,1],[8,3,1,8,1,9],[11,2,3],[11,2,0,11,0,8],[11,2,3,0,1,9],[2,1,11,1,9,11,11,9,8],[10,1,2],[8,3,0,1,2,10],[9,0,2,9,2,10],[3,2,8,2,10,8,8,10,9],[10,1,3,10,3,11],[1,0,10,0,8,10,10,8,11],[0,3,9,3,11,9,9,11,10],[8,10,9,8,11,10],[8,4,7],[3,0,4,3,4,7],[1,9,0,8,4,7],[9,4,1,4,7,1,1,7,3],[2,3,11,7,8,4],[7,11,4,11,2,4,4,2,0],[3,11,2,4,7,8,9,0,1],[2,7,11,2,1,7,1,4,7,1,9,4],[10,1,2,8,4,7],[2,10,1,0,4,7,0,7,3],[4,7,8,0,2,10,0,10,9],[2,7,3,2,9,7,7,9,4,2,10,9],[8,4,7,11,10,1,11,1,3],[11,4,7,1,4,11,1,11,10,1,0,4],[3,8,0,7,11,4,11,9,4,11,10,9],[7,11,4,4,11,9,11,10,9],[9,5,4],[3,0,8,4,9,5],[5,4,0,5,0,1],[4,8,5,8,3,5,5,3,1],[11,2,3,9,5,4],[9,5,4,8,11,2,8,2,0],[3,11,2,1,5,4,1,4,0],[8,5,4,2,5,8,2,8,11,2,1,5],[2,10,1,9,5,4],[0,8,3,5,4,9,10,1,2],[10,5,2,5,4,2,2,4,0],[3,4,8,3,2,4,2,5,4,2,10,5],[5,4,9,1,3,11,1,11,10],[0,9,1,4,8,5,8,10,5,8,11,10],[3,4,0,3,10,4,4,10,5,3,11,10],[4,8,5,5,8,10,8,11,10],[9,5,7,9,7,8],[0,9,3,9,5,3,3,5,7],[8,0,7,0,1,7,7,1,5],[1,7,3,1,5,7],[11,2,3,8,9,5,8,5,7],[9,2,0,9,7,2,2,7,11,9,5,7],[0,3,8,2,1,11,1,7,11,1,5,7],[2,1,11,11,1,7,1,5,7],[1,2,10,5,7,8,5,8,9],[9,1,0,10,5,2,5,3,2,5,7,3],[5,2,10,8,2,5,8,5,7,8,0,2],[10,5,2,2,5,3,5,7,3],[3,9,1,3,8,9,7,11,10,7,10,5],[9,1,0,10,7,11,10,5,7],[3,8,0,7,10,5,7,11,10],[11,5,7,11,10,5],[11,7,6],[0,8,3,11,7,6],[9,0,1,11,7,6],[7,6,11,3,1,9,3,9,8],[2,3,7,2,7,6],[8,7,0,7,6,0,0,6,2],[1,9,0,3,7,6,3,6,2],[7,6,2,7,2,9,2,1,9,7,9,8],[1,2,10,6,11,7],[2,10,1,7,6,11,8,3,0],[11,7,6,10,9,0,10,0,2],[7,6,11,3,2,8,8,2,10,8,10,9],[6,10,7,10,1,7,7,1,3],[6,10,1,6,1,7,7,1,0,7,0,8],[9,0,3,6,9,3,6,10,9,6,3,7],[6,10,7,7,10,8,10,9,8],[8,4,6,8,6,11],[11,3,6,3,0,6,6,0,4],[0,1,9,4,6,11,4,11,8],[1,9,4,11,1,4,11,3,1,11,4,6],[3,8,2,8,4,2,2,4,6],[2,0,4,2,4,6],[1,9,0,3,8,2,2,8,4,2,4,6],[9,4,1,1,4,2,4,6,2],[10,1,2,11,8,4,11,4,6],[10,1,2,11,3,6,6,3,0,6,0,4],[0,2,10,0,10,9,4,11,8,4,6,11],[2,11,3,6,9,4,6,10,9],[8,4,6,8,6,1,6,10,1,8,1,3],[1,0,10,10,0,6,0,4,6],[8,0,3,9,6,10,9,4,6],[10,4,6,10,9,4],[9,5,4,7,6,11],[4,9,5,3,0,8,11,7,6],[6,11,7,4,0,1,4,1,5],[6,11,7,4,8,5,5,8,3,5,3,1],[4,9,5,6,2,3,6,3,7],[9,5,4,8,7,0,0,7,6,0,6,2],[4,0,1,4,1,5,6,3,7,6,2,3],[7,4,8,5,2,1,5,6,2],[6,11,7,1,2,10,9,5,4],[11,7,6,8,3,0,1,2,10,9,5,4],[11,7,6,10,5,2,2,5,4,2,4,0],[7,4,8,2,11,3,10,5,6],[4,9,5,6,10,7,7,10,1,7,1,3],[5,6,10,0,9,1,8,7,4],[5,6,10,7,0,3,7,4,0],[10,5,6,4,8,7],[5,6,9,6,11,9,9,11,8],[0,9,5,0,5,3,3,5,6,3,6,11],[0,1,5,0,5,11,5,6,11,0,11,8],[11,3,6,6,3,5,3,1,5],[9,5,6,3,9,6,3,8,9,3,6,2],[5,6,9,9,6,0,6,2,0],[0,3,8,2,5,6,2,1,5],[1,6,2,1,5,6],[1,2,10,5,6,9,9,6,11,9,11,8],[1,0,9,6,10,5,11,3,2],[6,10,5,2,8,0,2,11,8],[3,2,11,10,5,6],[10,5,6,9,3,8,9,1,3],[0,9,1,5,6,10],[8,0,3,10,5,6],[10,5,6],[10,6,5],[8,3,0,10,6,5],[0,1,9,5,10,6],[10,6,5,9,8,3,9,3,1],[3,11,2,10,6,5],[6,5,10,2,0,8,2,8,11],[1,9,0,6,5,10,11,2,3],[1,10,2,5,9,6,9,11,6,9,8,11],[1,2,6,1,6,5],[0,8,3,2,6,5,2,5,1],[5,9,6,9,0,6,6,0,2],[9,6,5,3,6,9,3,9,8,3,2,6],[11,6,3,6,5,3,3,5,1],[0,5,1,0,11,5,5,11,6,0,8,11],[0,5,9,0,3,5,3,6,5,3,11,6],[5,9,6,6,9,11,9,8,11],[10,6,5,4,7,8],[5,10,6,7,3,0,7,0,4],[5,10,6,0,1,9,8,4,7],[4,5,9,6,7,10,7,1,10,7,3,1],[7,8,4,2,3,11,10,6,5],[11,6,7,10,2,5,2,4,5,2,0,4],[11,6,7,8,0,3,1,10,2,9,4,5],[6,7,11,1,10,2,9,4,5],[7,8,4,5,1,2,5,2,6],[4,1,0,4,5,1,6,7,3,6,3,2],[9,4,5,8,0,7,0,6,7,0,2,6],[4,5,9,6,3,2,6,7,3],[6,7,11,4,5,8,5,3,8,5,1,3],[6,7,11,4,1,0,4,5,1],[4,5,9,3,8,0,11,6,7],[9,4,5,7,11,6],[10,6,4,10,4,9],[8,3,0,9,10,6,9,6,4],[1,10,0,10,6,0,0,6,4],[8,6,4,8,1,6,6,1,10,8,3,1],[2,3,11,6,4,9,6,9,10],[0,10,2,0,9,10,4,8,11,4,11,6],[10,2,1,11,6,3,6,0,3,6,4,0],[10,2,1,11,4,8,11,6,4],[9,1,4,1,2,4,4,2,6],[1,0,9,3,2,8,2,4,8,2,6,4],[2,4,0,2,6,4],[3,2,8,8,2,4,2,6,4],[1,4,9,11,4,1,11,1,3,11,6,4],[0,9,1,4,11,6,4,8,11],[11,6,3,3,6,0,6,4,0],[8,6,4,8,11,6],[6,7,10,7,8,10,10,8,9],[9,3,0,6,3,9,6,9,10,6,7,3],[6,1,10,6,7,1,7,0,1,7,8,0],[6,7,10,10,7,1,7,3,1],[7,11,6,3,8,2,8,10,2,8,9,10],[11,6,7,10,0,9,10,2,0],[2,1,10,7,11,6,8,0,3],[1,10,2,6,7,11],[7,2,6,7,9,2,2,9,1,7,8,9],[1,0,9,3,6,7,3,2,6],[8,0,7,7,0,6,0,2,6],[2,7,3,2,6,7],[7,11,6,3,9,1,3,8,9],[9,1,0,11,6,7],[0,3,8,11,6,7],[11,6,7],[11,7,5,11,5,10],[3,0,8,7,5,10,7,10,11],[9,0,1,10,11,7,10,7,5],[3,1,9,3,9,8,7,10,11,7,5,10],[10,2,5,2,3,5,5,3,7],[5,10,2,8,5,2,8,7,5,8,2,0],[9,0,1,10,2,5,5,2,3,5,3,7],[1,10,2,5,8,7,5,9,8],[2,11,1,11,7,1,1,7,5],[0,8,3,2,11,1,1,11,7,1,7,5],[9,0,2,9,2,7,2,11,7,9,7,5],[11,3,2,8,5,9,8,7,5],[1,3,7,1,7,5],[8,7,0,0,7,1,7,5,1],[0,3,9,9,3,5,3,7,5],[9,7,5,9,8,7],[4,5,8,5,10,8,8,10,11],[3,0,4,3,4,10,4,5,10,3,10,11],[0,1,9,4,5,8,8,5,10,8,10,11],[5,9,4,1,11,3,1,10,11],[3,8,4,3,4,2,2,4,5,2,5,10],[10,2,5,5,2,4,2,0,4],[0,3,8,5,9,4,10,2,1],[2,1,10,9,4,5],[8,4,5,2,8,5,2,11,8,2,5,1],[3,2,11,1,4,5,1,0,4],[9,4,5,8,2,11,8,0,2],[11,3,2,9,4,5],[4,5,8,8,5,3,5,1,3],[5,0,4,5,1,0],[3,8,0,4,5,9],[9,4,5],[7,4,11,4,9,11,11,9,10],[3,0,8,7,4,11,11,4,9,11,9,10],[11,7,4,1,11,4,1,10,11,1,4,0],[8,7,4,11,1,10,11,3,1],[2,3,7,2,7,9,7,4,9,2,9,10],[4,8,7,0,10,2,0,9,10],[2,1,10,0,7,4,0,3,7],[10,2,1,8,7,4],[2,11,7,2,7,1,1,7,4,1,4,9],[3,2,11,4,8,7,9,1,0],[7,4,11,11,4,2,4,0,2],[2,11,3,7,4,8],[9,1,4,4,1,7,1,3,7],[1,0,9,8,7,4],[3,4,0,3,7,4],[8,7,4],[8,9,10,8,10,11],[0,9,3,3,9,11,9,10,11],[1,10,0,0,10,8,10,11,8],[10,3,1,10,11,3],[3,8,2,2,8,10,8,9,10],[9,2,0,9,10,2],[8,0,3,1,10,2],[10,2,1],[2,11,1,1,11,9,11,8,9],[11,3,2,0,9,1],[11,0,2,11,8,0],[11,3,2],[8,1,3,8,9,1],[9,1,0],[8,0,3],[]];return my;};//each webworker needs its own marching cube object\n\t$3Dmol.MarchingCube=$3Dmol.MarchingCubeInitializer();/**\n\t * $3Dmol.Parsers stores functions for parsing molecular data. They all take a string of molecular data\n\t * and options. The default behavior is to only read the first model in the case of multimodel files, and\n\t * all parsers return a list of atom list(s)\n\t *\n\t * $3Dmol.Parsers.<ext> corresponds to the parsers for files with extension ext\n\t */$3Dmol.Parsers=function(){var parsers={};/**\n\t     * @param {AtomSpec[]}\n\t     *            atomsarray\n\t     */var assignBonds=function assignBonds(atoms){// assign bonds - yuck, can't count on connect records\n\tfor(var i=0,n=atoms.length;i<n;i++){// Don't reindex if atoms are already indexed\n\tif(!atoms[i].index)atoms[i].index=i;}var grid={};var MAX_BOND_LENGTH=4.95;// (largest bond length, Cs) 2.25 * 2 * 1.1 (fudge factor)\n\tfor(var index=0;index<atoms.length;index++){var atom=atoms[index];var x=Math.floor(atom.x/MAX_BOND_LENGTH);var y=Math.floor(atom.y/MAX_BOND_LENGTH);var z=Math.floor(atom.z/MAX_BOND_LENGTH);if(!grid[x]){grid[x]={};}if(!grid[x][y]){grid[x][y]={};}if(!grid[x][y][z]){grid[x][y][z]=[];}grid[x][y][z].push(atom);}var findConnections=function findConnections(points,otherPoints){for(var i=0;i<points.length;i++){var atom1=points[i];for(var j=0;j<otherPoints.length;j++){var atom2=otherPoints[j];if(areConnected(atom1,atom2)){if(atom1.bonds.indexOf(atom2.index)==-1){atom1.bonds.push(atom2.index);atom1.bondOrder.push(1);atom2.bonds.push(atom1.index);atom2.bondOrder.push(1);}}}}};/*const*/var OFFSETS=[{x:0,y:0,z:1},{x:0,y:1,z:-1},{x:0,y:1,z:0},{x:0,y:1,z:1},{x:1,y:-1,z:-1},{x:1,y:-1,z:0},{x:1,y:-1,z:1},{x:1,y:0,z:-1},{x:1,y:0,z:0},{x:1,y:0,z:1},{x:1,y:1,z:-1},{x:1,y:1,z:0},{x:1,y:1,z:1}];for(var x in grid){x=parseInt(x);for(var y in grid[x]){y=parseInt(y);for(var z in grid[x][y]){z=parseInt(z);var points=grid[x][y][z];for(var i=0;i<points.length;i++){var atom1=points[i];for(var j=i+1;j<points.length;j++){var atom2=points[j];if(areConnected(atom1,atom2)){if(atom1.bonds.indexOf(atom2.index)==-1){atom1.bonds.push(atom2.index);atom1.bondOrder.push(1);atom2.bonds.push(atom1.index);atom2.bondOrder.push(1);}}}}for(var o=0;o<OFFSETS.length;o++){var offset=OFFSETS[o];if(!grid[x+offset.x]||!grid[x+offset.x][y+offset.y]||!grid[x+offset.x][y+offset.y][z+offset.z])continue;var otherPoints=grid[x+offset.x][y+offset.y][z+offset.z];findConnections(points,otherPoints);}}}}};// this is optimized for proteins where it is assumed connected\n\t// atoms are on the same or next residue\n\t/**\n\t     * @param {AtomSpec[]}\n\t     *            atomsarray\n\t     */var assignPDBBonds=function assignPDBBonds(atomsarray){// assign bonds - yuck, can't count on connect records\n\tvar protatoms=[];var hetatoms=[];var i,n;for(i=0,n=atomsarray.length;i<n;i++){var atom=atomsarray[i];atom.index=i;if(atom.hetflag)hetatoms.push(atom);else protatoms.push(atom);}assignBonds(hetatoms);// sort by resid\n\tprotatoms.sort(function(a,b){if(a.chain!=b.chain)return a.chain<b.chain?-1:1;return a.resi-b.resi;});// for identifying connected residues\n\tvar currentResi=-1;var reschain=-1;var lastResConnected;for(i=0,n=protatoms.length;i<n;i++){var ai=protatoms[i];if(ai.resi!==currentResi){currentResi=ai.resi;if(!lastResConnected)reschain++;lastResConnected=false;}ai.reschain=reschain;for(var j=i+1;j<protatoms.length;j++){var aj=protatoms[j];if(aj.chain!=ai.chain)break;if(aj.resi-ai.resi>1)// can't be connected\n\tbreak;if(areConnected(ai,aj)){if(ai.bonds.indexOf(aj.index)===-1){// only add if not already there\n\tai.bonds.push(aj.index);ai.bondOrder.push(1);aj.bonds.push(ai.index);aj.bondOrder.push(1);}if(ai.resi!==aj.resi)lastResConnected=true;}}}};// this will identify all hydrogen bonds between backbone\n\t// atoms; assume atom names are correct, only identifies\n\t// single closest hbond\n\tvar assignBackboneHBonds=function assignBackboneHBonds(atomsarray){var maxlength=3.2;var maxlengthSq=10.24;var atoms=[];var i,j,n;for(i=0,n=atomsarray.length;i<n;i++){atomsarray[i].index=i;// only consider 'N' and 'O'\n\tvar atom=atomsarray[i];if(!atom.hetflag&&(atom.atom===\"N\"||atom.atom===\"O\")){atoms.push(atom);atom.hbondOther=null;atom.hbondDistanceSq=Number.POSITIVE_INFINITY;}}atoms.sort(function(a,b){return a.z-b.z;});for(i=0,n=atoms.length;i<n;i++){var ai=atoms[i];for(j=i+1;j<n;j++){var aj=atoms[j];var zdiff=aj.z-ai.z;if(zdiff>maxlength)// can't be connected\n\tbreak;if(aj.atom==ai.atom)continue;// can't be connected, but later might be\n\tvar ydiff=Math.abs(aj.y-ai.y);if(ydiff>maxlength)continue;var xdiff=Math.abs(aj.x-ai.x);if(xdiff>maxlength)continue;var dist=xdiff*xdiff+ydiff*ydiff+zdiff*zdiff;if(dist>maxlengthSq)continue;if(aj.chain==ai.chain&&Math.abs(aj.resi-ai.resi)<4)continue;// ignore bonds between too close residues\n\t// select closest hbond\n\tif(dist<ai.hbondDistanceSq){ai.hbondOther=aj;ai.hbondDistanceSq=dist;}if(dist<aj.hbondDistanceSq){aj.hbondOther=ai;aj.hbondDistanceSq=dist;}}}};var computeSecondaryStructure=function computeSecondaryStructure(atomsarray){assignBackboneHBonds(atomsarray);// compute, per residue, what the secondary structure is\n\tvar chres={};// lookup by chain and resid\n\tvar i,il,c,r;var atom,val;//identify helices first\n\tfor(i=0,il=atomsarray.length;i<il;i++){atom=atomsarray[i];if(typeof chres[atom.chain]===\"undefined\")chres[atom.chain]=[];if(isFinite(atom.hbondDistanceSq)){var other=atom.hbondOther;if(typeof chres[other.chain]===\"undefined\")chres[other.chain]=[];if(Math.abs(other.resi-atom.resi)===4){// helix\n\tchres[atom.chain][atom.resi]='h';}}}// plug gaps in helices\n\tfor(c in chres){for(r=1;r<chres[c].length-1;r++){var valbefore=chres[c][r-1];var valafter=chres[c][r+1];val=chres[c][r];if(valbefore=='h'&&valbefore==valafter&&val!=valbefore){chres[c][r]=valbefore;}}}//now potential sheets - but only if mate not part of helix\n\tfor(i=0,il=atomsarray.length;i<il;i++){atom=atomsarray[i];if(isFinite(atom.hbondDistanceSq)&&chres[atom.chain][atom.resi]!='h'&&atom.ss!='h'){chres[atom.chain][atom.resi]='maybesheet';}}//sheets must bond to other sheets\n\tfor(i=0,il=atomsarray.length;i<il;i++){atom=atomsarray[i];if(isFinite(atom.hbondDistanceSq)&&chres[atom.chain][atom.resi]=='maybesheet'){var other=atom.hbondOther;var otherval=chres[other.chain][other.resi];if(otherval=='maybesheet'||otherval=='s'){// true sheet\n\tchres[atom.chain][atom.resi]='s';chres[other.chain][other.resi]='s';}}}// plug gaps in sheets and remove singletons\n\tfor(c in chres){for(r=1;r<chres[c].length-1;r++){var valbefore=chres[c][r-1];var valafter=chres[c][r+1];val=chres[c][r];if(valbefore=='s'&&valbefore==valafter&&val!=valbefore){chres[c][r]=valbefore;}}for(r=0;r<chres[c].length;r++){val=chres[c][r];if(val=='h'||val=='s'){if(chres[c][r-1]!=val&&chres[c][r+1]!=val)delete chres[c][r];}}}// assign to all atoms in residue, keep track of start\n\tvar curres=null;for(i=0,il=atomsarray.length;i<il;i++){atom=atomsarray[i];val=chres[atom.chain][atom.resi];if(typeof val==\"undefined\"||val=='maybesheet')continue;atom.ss=val;if(chres[atom.chain][atom.resi-1]!=val)atom.ssbegin=true;if(chres[atom.chain][atom.resi+1]!=val)atom.ssend=true;}};/**\n\t     * @param {string}\n\t     *            str\n\t     * @param {Object}\n\t     *            options\n\t     */parsers.vasp=parsers.VASP=function(str,options){var atoms=[[]];var lattice={};var lines=str.replace(/^\\s+/,\"\").split(/[\\n\\r]/);if(lines.length<3){return atoms;}if(lines[1].match(/\\d+/)){lattice.length=parseFloat(lines[1]);}else{console.log(\"Warning: second line of the vasp structure file must be a number\");return atoms;}if(lattice.length<0){console.log(\"Warning: Vasp implementation for negative lattice lengths is not yet available\");return atoms;}lattice.xVec=new Float32Array(lines[2].replace(/^\\s+/,\"\").split(/\\s+/));lattice.yVec=new Float32Array(lines[3].replace(/^\\s+/,\"\").split(/\\s+/));lattice.zVec=new Float32Array(lines[4].replace(/^\\s+/,\"\").split(/\\s+/));var atomSymbols=lines[5].replace(/\\s+/,\"\").replace(/\\s+$/,\"\").split(/\\s+/);var atomSpeciesNumber=new Int16Array(lines[6].replace(/^\\s+/,\"\").split(/\\s+/));var vaspMode=lines[7].replace(/\\s+/,\"\");if(vaspMode.match(/C/)){vaspMode=\"cartesian\";}else if(vaspMode.match(/D/)){vaspMode=\"direct\";}else{console.log(\"Warning: Unknown vasp mode in POSCAR file: mode must be either C(artesian) or D(irect)\");return atoms;}if(atomSymbols.length!=atomSpeciesNumber.length){console.log(\"Warning: declaration of atomary species wrong:\");console.log(atomSymbols);console.log(atomSpeciesNumber);return atoms;}lines.splice(0,8);var atomCounter=0;for(var i=0,len=atomSymbols.length;i<len;i++){var atomSymbol=atomSymbols[i];for(var j=0,atomLen=atomSpeciesNumber[i];j<atomLen;j++){var coords=new Float32Array(lines[atomCounter+j].replace(/^\\s+/,\"\").split(/\\s+/));atom={};atom.elem=atomSymbol;if(vaspMode==\"cartesian\"){atom.x=lattice.length*coords[0];atom.y=lattice.length*coords[1];atom.z=lattice.length*coords[2];}else{atom.x=lattice.length*(coords[0]*lattice.xVec[0]+coords[1]*lattice.yVec[0]+coords[2]*lattice.zVec[0]);atom.y=lattice.length*(coords[0]*lattice.xVec[1]+coords[1]*lattice.yVec[1]+coords[2]*lattice.zVec[1]);atom.z=lattice.length*(coords[0]*lattice.xVec[2]+coords[1]*lattice.yVec[2]+coords[2]*lattice.zVec[2]);}atom.bonds=[];atoms[0].push(atom);}atomCounter+=atomSpeciesNumber[i];}return atoms;};/**\n\t     * @param {string}\n\t     *            str\n\t     * @param {Object}\n\t     *            options\n\t     */parsers.cube=parsers.CUBE=function(str,options){var atoms=[[]];var lines=str.replace(/^\\s+/,\"\").split(/\\n\\r|\\r+/);if(lines.length<6)return atoms;var lineArr=lines[2].replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");var natoms=Math.abs(parseFloat(lineArr[0]));lineArr=lines[3].replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");// might have to convert from bohr units to angstroms\n\tvar convFactor=parseFloat(lineArr[0])>0?0.529177:1;// Extract atom portion; send to new GLModel...\n\tlines=lines.splice(6,natoms);var start=atoms[atoms.length-1].length;var end=start+lines.length;for(var i=start;i<end;++i){var atom={};atom.serial=i;var line=lines[i-start];var tokens=line.replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");if(tokens[0]==6)atom.elem=\"C\";else if(tokens[0]==1)atom.elem=\"H\";else if(tokens[0]==8)atom.elem=\"O\";else if(tokens[0]==17)atom.elem=\"Cl\";atom.x=parseFloat(tokens[2])*convFactor;atom.y=parseFloat(tokens[3])*convFactor;atom.z=parseFloat(tokens[4])*convFactor;atom.hetflag=true;atom.bonds=[];atom.bondOrder=[];atom.properties={};atoms[atoms.length-1].push(atom);}for(var i=0;i<atoms.length;i++){assignBonds(atoms[i]);}return atoms;};// read an XYZ file from str and return result\n\t/**\n\t     * @param {string}\n\t     *            str\n\t     * @param {Object}\n\t     *            options\n\t     */parsers.xyz=parsers.XYZ=function(str,options){var atoms=[[]];var lines=str.split(/\\r?\\n|\\r/);while(lines.length>0){if(lines.length<3)break;var atomCount=parseInt(lines[0]);if(isNaN(atomCount)||atomCount<=0)break;if(lines.length<atomCount+2)break;var offset=2;var start=atoms[atoms.length-1].length;var end=start+atomCount;for(var i=start;i<end;i++){var line=lines[offset++];var tokens=line.replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");var atom={};atom.serial=i;var elem=tokens[0];atom.atom=atom.elem=elem[0].toUpperCase()+elem.substr(1).toLowerCase();atom.x=parseFloat(tokens[1]);atom.y=parseFloat(tokens[2]);atom.z=parseFloat(tokens[3]);atom.hetflag=true;atom.bonds=[];atom.bondOrder=[];atom.properties={};atoms[atoms.length-1][i]=atom;if(tokens.length>=7){atom.dx=parseFloat(tokens[4]);atom.dy=parseFloat(tokens[5]);atom.dz=parseFloat(tokens[6]);}}if(options.multimodel){atoms.push([]);lines.splice(0,offset);}else{break;}}for(var i=0;i<atoms.length;i++){assignBonds(atoms[i]);}if(options.onemol){var temp=atoms;atoms=[];atoms.push(temp[0]);for(var i=1;i<temp.length;i++){var offset=atoms[0].length;for(var j=0;j<temp[i].length;j++){var a=temp[i][j];for(var k=0;k<a.bonds.length;k++){a.bonds[k]=a.bonds[k]+offset;}a.index=atoms[0].length;a.serial=atoms[0].length;atoms[0].push(a);}}}return atoms;};// put atoms specified in sdf fromat in str into atoms\n\t// adds to atoms, does not replace\n\t/**\n\t     * @param {string}\n\t     *            str\n\t     * @param {Object}\n\t     *            options\n\t     */parsers.sdf=parsers.SDF=function(str,options){var atoms=[[]];var noH=false;if(typeof options.keepH!==\"undefined\")noH=!options.keepH;var lines=str.split(/\\r?\\n|\\r/);while(lines.length>0){if(lines.length<4)break;var atomCount=parseInt(lines[3].substr(0,3));if(isNaN(atomCount)||atomCount<=0)break;var bondCount=parseInt(lines[3].substr(3,3));var offset=4;if(lines.length<4+atomCount+bondCount)break;// serial is atom's index in file; index is atoms index in 'atoms'\n\tvar serialToIndex=[];var start=atoms[atoms.length-1].length;var end=start+atomCount;var i,line;for(i=start;i<end;i++,offset++){line=lines[offset];var atom={};var elem=line.substr(31,3).replace(/ /g,\"\");atom.atom=atom.elem=elem[0].toUpperCase()+elem.substr(1).toLowerCase();if(atom.elem!='H'||!noH){atom.serial=i;serialToIndex[i]=atoms[atoms.length-1].length;atom.x=parseFloat(line.substr(0,10));atom.y=parseFloat(line.substr(10,10));atom.z=parseFloat(line.substr(20,10));atom.hetflag=true;atom.bonds=[];atom.bondOrder=[];atom.properties={};atom.index=atoms[atoms.length-1].length;atoms[atoms.length-1].push(atom);}}for(i=0;i<bondCount;i++,offset++){line=lines[offset];var from=serialToIndex[parseInt(line.substr(0,3))-1+start];var to=serialToIndex[parseInt(line.substr(3,3))-1+start];var order=parseInt(line.substr(6,3));if(typeof from!='undefined'&&typeof to!='undefined'){atoms[atoms.length-1][from].bonds.push(to);atoms[atoms.length-1][from].bondOrder.push(order);atoms[atoms.length-1][to].bonds.push(from);atoms[atoms.length-1][to].bondOrder.push(order);}}if(options.multimodel){if(!options.onemol)atoms.push([]);while(lines[offset]!=\"$$$$\"){offset++;}lines.splice(0,++offset);}else{break;}}return atoms;};// This parses the ChemDoodle json file format. Although this is registered\n\t// for the json file extension, other chemical json file formats exist that\n\t// this can not parse. Check which one you have and do not assume that\n\t// .json can be parsed\n\tparsers.cdjson=parsers.json=function(str,options){var atoms=[[]];if(typeof str===\"string\"){// Str is usually automatically parsed by JQuery\n\tstr=JSON.parse(str);}var molecules=str.m;var atomsInFile=molecules[0].a;// Assumes there is at least one\n\tvar bondsInFile=molecules[0].b;// molecule and ignores any more\n\t// Ignores any shapes\n\tvar styles=molecules[0].s;var parseStyle=options!==undefined&&options.parseStyle!==undefined?options.parseStyle:styles!==undefined;var offset=atoms[atoms.length-1].length;// When adding atoms their index will be\n\t// Offset by the number of existing atoms\n\tfor(var i=0;i<atomsInFile.length;i++){var currentAtom=atomsInFile[i];var atom={};atom.id=currentAtom.i;// Probably won't exist. Doesn't seem to\n\t// break anything.\n\tatom.x=currentAtom.x;atom.y=currentAtom.y;atom.z=currentAtom.z||0;// Default value if file is 2D\n\tatom.bonds=[];atom.bondOrder=[];var elem=currentAtom.l||'C';atom.elem=elem[0].toUpperCase()+elem.substr(1).toLowerCase();atom.serial=atoms[atoms.length-1].length;if(parseStyle){atom.style=styles[currentAtom.s||0];}atoms[atoms.length-1].push(atom);}for(var i=0;i<bondsInFile.length;i++){var currentBond=bondsInFile[i];var beginIndex=currentBond.b+offset;var endIndex=currentBond.e+offset;var bondOrder=currentBond.o||1;var firstAtom=atoms[atoms.length-1][beginIndex];var secondAtom=atoms[atoms.length-1][endIndex];firstAtom.bonds.push(endIndex);firstAtom.bondOrder.push(bondOrder);secondAtom.bonds.push(beginIndex);secondAtom.bondOrder.push(bondOrder);}return atoms;};// puts atoms specified in mmCIF fromat in str into atoms\n\t/**\n\t     * @param {string}\n\t     *            str\n\t     * @param {Object}\n\t     *            options\n\t     */parsers.mcif=parsers.cif=function(str,options){var atoms=[];var noAssembly=!options.doAssembly;// don't assemble by default\n\tvar copyMatrix=!options.duplicateAssemblyAtoms;var modelData=atoms.modelData=[];// Used to handle quotes correctly\n\tfunction splitRespectingQuotes(string,separator){var sections=[];var sectionStart=0;var sectionEnd=0;while(sectionEnd<string.length){while(string.substr(sectionEnd,separator.length)!==separator&&sectionEnd<string.length){// currently does not support escaping quotes\n\tif(string[sectionEnd]===\"'\"){sectionEnd++;while(sectionEnd<string.length&&string[sectionEnd]!==\"'\"){sectionEnd++;}}else if(string[sectionEnd]==='\"'){sectionEnd++;while(sectionEnd<string.length&&string[sectionEnd]!=='\"'){sectionEnd++;}}sectionEnd++;}sections.push(string.substr(sectionStart,sectionEnd-sectionStart));sectionStart=sectionEnd=sectionEnd+separator.length;}return sections;}var lines=str.split(/\\r?\\n|\\r/);// Filter text to remove comments, trailing spaces, and empty lines\n\tvar linesFiltered=[];var trimDisabled=false;for(var lineNum=0;lineNum<lines.length;lineNum++){// first remove comments\n\t// incorrect if #'s are allowed in strings\n\t// comments might only be allowed at beginning of line, not sure\n\tvar line=lines[lineNum].split('#')[0];// inside data blocks, the string must be left verbatim\n\t// datablocks are started with a ';' at the beginning of a line\n\t// and ended with a ';' on its own line.\n\tif(trimDisabled){if(line[0]===';'){trimDisabled=false;}}else{if(line[0]===';'){trimDisabled=true;}}if(trimDisabled||line!==\"\"){if(!trimDisabled){line=line.trim();if(line[0]==='_'){// Replace dot separating category from data item with underscore. Dots aren't guarenteed, to makes\n\t// files consistent.\n\tvar dot=line.split(/\\s/)[0].indexOf('.');if(dot>-1){line[dot]='_';line=line.substr(0,dot)+'_'+line.substr(dot+1);}}}linesFiltered.push(line);}}var lineNum=0;var _loop=function _loop(){while(!linesFiltered[lineNum].startsWith(\"data_\")||linesFiltered[lineNum]===\"data_global\"){lineNum++;}lineNum++;// Process the lines and puts all of the data into an object.\n\tmmCIF={};while(lineNum<linesFiltered.length&&!linesFiltered[lineNum].startsWith(\"data_\")){if(linesFiltered[lineNum][0]===undefined){lineNum++;}else if(linesFiltered[lineNum][0]==='_'){dataItemName=linesFiltered[lineNum].split(/\\s/)[0].toLowerCase();dataItem=mmCIF[dataItemName]=mmCIF[dataItemName]||[];// if nothing left on the line go to the next one\n\trestOfLine=linesFiltered[lineNum].substr(linesFiltered[lineNum].indexOf(dataItemName)+dataItemName.length);if(restOfLine===\"\"){lineNum++;if(linesFiltered[lineNum][0]===';'){dataBlock=linesFiltered[lineNum].substr(1);lineNum++;while(linesFiltered[lineNum]!==';'){dataBlock=dataBlock+'\\n'+linesFiltered[lineNum];lineNum++;}dataItem.push(dataBlock);}else{dataItem.push(linesFiltered[lineNum]);}}else{dataItem.push(restOfLine.trim());}lineNum++;}else if(linesFiltered[lineNum].substr(0,5)===\"loop_\"){lineNum++;dataItems=[];while(linesFiltered[lineNum]===\"\"||linesFiltered[lineNum][0]==='_'){if(linesFiltered[lineNum]!==\"\"){dataItemName=linesFiltered[lineNum].split(/\\s/)[0].toLowerCase();dataItem=mmCIF[dataItemName]=mmCIF[dataItemName]||[];dataItems.push(dataItem);}lineNum++;}currentDataItem=0;while(lineNum<linesFiltered.length&&linesFiltered[lineNum][0]!=='_'&&!linesFiltered[lineNum].startsWith(\"loop_\")&&!linesFiltered[lineNum].startsWith(\"data_\")){line=splitRespectingQuotes(linesFiltered[lineNum],\" \");for(field=0;field<line.length;field++){if(line[field]!==\"\"){dataItems[currentDataItem].push(line[field]);currentDataItem=(currentDataItem+1)%dataItems.length;}}lineNum++;}}else{lineNum++;}}modelData.push({symmetries:[]});// Pulls atom information out of the data\n\tatoms.push([]);currentIndex=0;atomCount=mmCIF._atom_site_id!==undefined?mmCIF._atom_site_id.length:mmCIF._atom_site_label.length;function sqr(n){return n*n;}if(mmCIF._cell_length_a!==undefined){a=parseFloat(mmCIF._cell_length_a);b=parseFloat(mmCIF._cell_length_b);c=parseFloat(mmCIF._cell_length_c);alpha_deg=parseFloat(mmCIF._cell_angle_alpha)||90;beta_deg=parseFloat(mmCIF._cell_angle_beta)||90;gamma_deg=parseFloat(mmCIF._cell_angle_gamma)||90;alpha=alpha_deg*Math.PI/180;beta=beta_deg*Math.PI/180;gamma=gamma_deg*Math.PI/180;cos_alpha=Math.cos(alpha);cos_beta=Math.cos(beta);cos_gamma=Math.cos(gamma);sin_gamma=Math.sin(gamma);conversionMatrix=[[a,b*cos_gamma,c*cos_beta],[0,b*sin_gamma,c*(cos_alpha-cos_beta*cos_gamma)/sin_gamma],[0,0,c*Math.sqrt(1-sqr(cos_alpha)-sqr(cos_beta)-sqr(cos_gamma)+2*cos_alpha*cos_beta*cos_gamma)/sin_gamma]];modelData[modelData.length-1].cryst={'a':a,'b':b,'c':c,'alpha':alpha_deg,'beta':beta_deg,'gamma':gamma_deg};}function fractionalToCartesian(a,b,c){var x=conversionMatrix[0][0]*a+conversionMatrix[0][1]*b+conversionMatrix[0][2]*c;var y=conversionMatrix[1][0]*a+conversionMatrix[1][1]*b+conversionMatrix[1][2]*c;var z=conversionMatrix[2][0]*a+conversionMatrix[2][1]*b+conversionMatrix[2][2]*c;return{x:x,y:y,z:z};}for(i=0;i<atomCount;i++){if(mmCIF._atom_site_group_pdb!==undefined&&mmCIF._atom_site_group_pdb[i]===\"TER\")continue;atom={};if(mmCIF._atom_site_cartn_x!==undefined){atom.x=parseFloat(mmCIF._atom_site_cartn_x[i]);atom.y=parseFloat(mmCIF._atom_site_cartn_y[i]);atom.z=parseFloat(mmCIF._atom_site_cartn_z[i]);}else{coords=fractionalToCartesian(parseFloat(mmCIF._atom_site_fract_x[i]),parseFloat(mmCIF._atom_site_fract_y[i]),parseFloat(mmCIF._atom_site_fract_z[i]));atom.x=coords.x;atom.y=coords.y;atom.z=coords.z;}atom.chain=mmCIF._atom_site_auth_asym_id?mmCIF._atom_site_auth_asym_id[i]:undefined;atom.resi=mmCIF._atom_site_auth_seq_id?parseInt(mmCIF._atom_site_auth_seq_id[i]):undefined;atom.resn=mmCIF._atom_site_auth_comp_id?mmCIF._atom_site_auth_comp_id[i].trim():undefined;atom.atom=mmCIF._atom_site_auth_atom_id?mmCIF._atom_site_auth_atom_id[i].replace(/\"/gm,''):undefined;//\"primed\" names are in quotes\n\tatom.hetflag=!mmCIF._atom_site_group_pdb||mmCIF._atom_site_group_pdb[i]===\"HETA\"||mmCIF._atom_site_group_pdb[i]===\"HETATM\";elem=mmCIF._atom_site_type_symbol[i];atom.elem=elem[0].toUpperCase()+elem.substr(1).toLowerCase();atom.bonds=[];atom.ss='c';atom.serial=i;atom.bondOrder=[];atom.properties={};atoms[atoms.length-1].push(atom);}if(mmCIF._pdbx_struct_oper_list_id!==undefined&&!noAssembly){for(i=0;i<mmCIF._pdbx_struct_oper_list_id.length;i++){matrix11=parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[1][1]'][i]);matrix12=parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[1][2]'][i]);matrix13=parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[1][3]'][i]);vector1=parseFloat(mmCIF['_pdbx_struct_oper_list_vector[1]'][i]);matrix21=parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[2][1]'][i]);matrix22=parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[2][2]'][i]);matrix23=parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[2][3]'][i]);vector2=parseFloat(mmCIF['_pdbx_struct_oper_list_vector[2]'][i]);matrix31=parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[3][1]'][i]);matrix32=parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[3][2]'][i]);matrix33=parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[3][3]'][i]);vector3=parseFloat(mmCIF['_pdbx_struct_oper_list_vector[3]'][i]);matrix=new $3Dmol.Matrix4(matrix11,matrix12,matrix13,vector1,matrix21,matrix22,matrix23,vector2,matrix31,matrix32,matrix33,vector3);modelData[modelData.length-1].symmetries.push(matrix);}for(i=0;i<atoms.length;i++){processSymmetries(modelData[modelData.length-1].symmetries,copyMatrix,atoms[i]);}}function parseTerm(term){var negative=term.match('-');term=term.replace(/[-xyz]/g,\"\");var fractionParts=term.split('/');var numerator,denominator;if(fractionParts[1]===undefined){denominator=1;}else{denominator=parseInt(fractionParts[1]);}if(fractionParts[0]===\"\"){numerator=1;}else{numerator=parseInt(fractionParts[0]);}return numerator/denominator*(negative?-1:1);}if(mmCIF._symmetry_equiv_pos_as_xyz!==undefined){for(sym=0;sym<mmCIF._symmetry_equiv_pos_as_xyz.length;sym++){transform=mmCIF._symmetry_equiv_pos_as_xyz[sym].replace(/[\"' ]/g,\"\");componentStrings=transform.split(',').map(function(val){return val.replace(/-/g,\"+-\");});matrix=new $3Dmol.Matrix4(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1);for(coord=0;coord<3;coord++){terms=componentStrings[coord].split('+');constant=0;xTerm=0;yTerm=0;zTerm=0;for(t=0;t<terms.length;t++){term=terms[t];if(term===\"\")continue;coefficient=parseTerm(term);if(term.match('x')){matrix.elements[coord+0]=coefficient;}else if(term.match('y')){matrix.elements[coord+4]=coefficient;}else if(term.match('z')){matrix.elements[coord+8]=coefficient;}else{matrix.elements[coord+12]=coefficient;}}}conversionMatrix4=new $3Dmol.Matrix4(conversionMatrix[0][0],conversionMatrix[0][1],conversionMatrix[0][2],0,conversionMatrix[1][0],conversionMatrix[1][1],conversionMatrix[1][2],0,conversionMatrix[2][0],conversionMatrix[2][1],conversionMatrix[2][2],0);conversionInverse=new $3Dmol.Matrix4().getInverse(conversionMatrix4,true);matrix=new $3Dmol.Matrix4().multiplyMatrices(matrix,conversionInverse);matrix=new $3Dmol.Matrix4().multiplyMatrices(conversionMatrix4,matrix);modelData[modelData.length-1].symmetries.push(matrix);}}};while(lineNum<linesFiltered.length){var mmCIF;var dataItemName;var dataItem;var restOfLine;var dataBlock;var dataItems;var dataItemName;var dataItem;var currentDataItem;var line;var field;var currentIndex;var atomCount;var conversionMatrix;var a;var b;var c;var alpha_deg;var beta_deg;var gamma_deg;var alpha;var beta;var gamma;var cos_alpha;var cos_beta;var cos_gamma;var sin_gamma;var i;var atom;var coords;var elem;var i;var matrix11;var matrix12;var matrix13;var vector1;var matrix21;var matrix22;var matrix23;var vector2;var matrix31;var matrix32;var matrix33;var vector3;var matrix;var i;var sym;var transform;var componentStrings;var matrix;var coord;var terms;var constant,xTerm,yTerm,zTerm;var t;var term;var coefficient;var conversionMatrix4;var conversionInverse;_loop();}for(var i=0;i<atoms.length;i++){assignBonds(atoms[i]);computeSecondaryStructure(atoms[i]);processSymmetries(modelData[i].symmetries,copyMatrix,atoms[i]);}return atoms;};// parse SYBYL mol2 file from string - assumed to only contain one molecule\n\t// tag\n\t/**\n\t     * @param {string}\n\t     *            str\n\t     * @param {Object}\n\t     *            options\n\t     */parsers.mol2=parsers.MOL2=function(str,options){var atoms=[[]];var noH=false;if(typeof options.keepH!==\"undefined\")noH=!options.keepH;// assert (mol_pos < atom_pos), \"Unexpected formatting of mol2 file\n\t// (expected 'molecule' section before 'atom' section)\";\n\tvar lines=str.substr(mol_pos,str.length).split(/\\r?\\n|\\r/);while(lines.length>0){// Note: these regex's work, though they don't match '<TRIPOS>'\n\t// correctly - something to do with angle brackets\n\tvar mol_pos=str.search(/@<TRIPOS>MOLECULE/);var atom_pos=str.search(/@<TRIPOS>ATOM/);// Assuming both Molecule and Atom sections exist\n\tif(mol_pos==-1||atom_pos==-1)break;// serial is atom's index in file; index is atoms index in 'atoms'\n\tvar serialToIndex=[];var tokens=lines[2].replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");var natoms=parseInt(tokens[0]);var nbonds=0;if(tokens.length>1)nbonds=parseInt(tokens[1]);var offset=4;var i;// Continue until 'Atom' section\n\tfor(i=3;i<lines.length;i++){if(lines[i]==\"@<TRIPOS>ATOM\"){offset=i+1;break;}}var start=atoms[atoms.length-1].length;var end=start+natoms;var line;// Process ATOMS\n\tfor(i=start;i<end;i++){line=lines[offset++];tokens=line.replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");var atom={};// get element\n\tvar elem=tokens[5].split('.')[0];atom.atom=atom.elem=elem[0].toUpperCase()+elem.substr(1).toLowerCase();if(atom.elem=='H'&&noH){// ignore\n\t}else{// 'index' is this atom's index in 'atoms'; 'serial' is this\n\t// atom's\n\t// serial id in mol2 file\n\tvar index=atoms[atoms.length-1].length;var serial=parseInt(tokens[0]);atom.serial=serial;// atom.serial = i;\n\tatom.x=parseFloat(tokens[2]);atom.y=parseFloat(tokens[3]);atom.z=parseFloat(tokens[4]);atom.atom=tokens[5];var charge=parseFloat(tokens[8]);atom.index=index;atom.bonds=[];atom.bondOrder=[];atom.properties={'charge':charge,'partialCharge':charge};serialToIndex[serial]=index;atoms[atoms.length-1].push(atom);}}// Process BONDS\n\tvar bonds_found=false;while(offset<lines.length){if(lines[offset++]==\"@<TRIPOS>BOND\"){bonds_found=true;break;}}if(bonds_found&&nbonds){for(i=0;i<nbonds;i++){line=lines[offset++];tokens=line.replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");var from=parseInt(tokens[1]);fromAtom=atoms[atoms.length-1][serialToIndex[from]];var to=parseInt(tokens[2]);toAtom=atoms[atoms.length-1][serialToIndex[to]];// Won't be able to read aromatic bonds correctly...\n\tvar order=parseInt(tokens[3]);if(isNaN(order))order=1;if(fromAtom!==undefined&&toAtom!==undefined){fromAtom.bonds.push(serialToIndex[to]);fromAtom.bondOrder.push(order);toAtom.bonds.push(serialToIndex[from]);toAtom.bondOrder.push(order);}}}if(options.multimodel){if(!options.onemol)atoms.push([]);lines.splice(0,offset);str=lines.join(\"\\n\");//update for str.search\n\tcontinue;}else{break;}}return atoms;};var bondTable={H:0.37,He:0.32,Li:1.34,Be:0.90,B:0.82,C:0.77,N:0.75,O:0.73,F:0.71,Ne:0.69,Na:1.54,Mg:1.30,Al:1.18,Si:1.11,P:1.06,S:1.02,Cl:0.99,Ar:0.97,K:1.96,Ca:1.74,Sc:1.44,Ti:1.56,V:1.25,/* Cr */Mn:1.39,Fe:1.25,Co:1.26,Ni:1.21,Cu:1.38,Zn:1.31,Ga:1.26,Ge:1.22,/* As */Se:1.16,Br:1.14,Kr:1.10,Rb:2.11,Sr:1.92,Y:1.62,Zr:1.48,Nb:1.37,Mo:1.45,Tc:1.56,Ru:1.26,Rh:1.35,Pd:1.31,Ag:1.53,Cd:1.48,In:1.44,Sn:1.41,Sb:1.38,Te:1.35,I:1.33,Xe:1.30,Cs:2.25,Ba:1.98,Lu:1.60,Hf:1.50,Ta:1.38,W:1.46,Re:1.59,Os:1.44,Ir:1.37,Pt:1.28,Au:1.44,Hg:1.49,Tl:1.48,Pb:1.47,Bi:1.46,/* Po *//* At */Rn:1.45};var bondLength=function bondLength(elem){return bondTable[elem]||1.6;};// return true if atom1 and atom2 are probably bonded to each other\n\t// based on distance alone\n\tvar areConnected=function areConnected(atom1,atom2){var maxsq=bondLength(atom1.elem)+bondLength(atom2.elem);maxsq+=0.25;// fudge factor, especially important for md frames, also see 1i3d\n\tmaxsq*=maxsq;var xdiff=atom1.x-atom2.x;xdiff*=xdiff;if(xdiff>maxsq)return false;var ydiff=atom1.y-atom2.y;ydiff*=ydiff;if(ydiff>maxsq)return false;var zdiff=atom1.z-atom2.z;zdiff*=zdiff;if(zdiff>maxsq)return false;var distSquared=xdiff+ydiff+zdiff;if(isNaN(distSquared))return false;else if(distSquared<0.5)return false;// maybe duplicate position.\n\telse if(distSquared>maxsq)return false;else return true;};//adds symmetry info to either duplicate and rotate/translate biological unit later or add extra atoms now\n\tvar processSymmetries=function processSymmetries(copyMatrices,copyMatrix,atoms){var end=atoms.length;var offset=end;var t,l,n;if(!copyMatrix){// do full assembly\n\tfor(t=0;t<copyMatrices.length;t++){if(!copyMatrices[t].isIdentity()){var xyz=new $3Dmol.Vector3();for(n=0;n<end;n++){var bondsArr=[];for(l=0;l<atoms[n].bonds.length;l++){bondsArr.push(atoms[n].bonds[l]+offset);}xyz.set(atoms[n].x,atoms[n].y,atoms[n].z);xyz.applyMatrix4(copyMatrices[t]);var newAtom={};for(var i in atoms[n]){newAtom[i]=atoms[n][i];}newAtom.x=xyz.x;newAtom.y=xyz.y;newAtom.z=xyz.z;newAtom.bonds=bondsArr;atoms.push(newAtom);}offset=atoms.length;}}}else if(copyMatrices.length>1){for(t=0;t<atoms.length;t++){var symmetries=[];for(l=0;l<copyMatrices.length;l++){if(!copyMatrices[l].isIdentity()){var newXYZ=new $3Dmol.Vector3();newXYZ.set(atoms[t].x,atoms[t].y,atoms[t].z);newXYZ.applyMatrix4(copyMatrices[l]);symmetries.push(newXYZ);}}atoms[t].symmetries=symmetries;}}};var isEmpty=function isEmpty(obj){var name;for(name in obj){return false;}return true;};//return one model worth of pdb, returns atoms, modelData, and remaining lines\n\tvar getSinglePDB=function getSinglePDB(lines,options,sslookup){var atoms=[];var noH=!options.keepH;// suppress hydrogens by default\n\tvar ignoreStruct=!!options.noSecondaryStructure;var computeStruct=!options.noComputeSecondaryStructure;var noAssembly=!options.doAssembly;// don't assemble by default\n\tvar copyMatrix=!options.duplicateAssemblyAtoms;//default true\n\tvar modelData={symmetries:[]};var atom;var remainingLines=[];var hasStruct=false;var serialToIndex=[];// map from pdb serial to index in atoms\n\tvar i,j,k,line;var seenbonds={};//sometimes connect records are duplicated as an unofficial means of relaying bond orders\n\tfor(i=0;i<lines.length;i++){line=lines[i].replace(/^\\s*/,'');// remove indent\n\tvar recordName=line.substr(0,6);var startChain,startResi,endChain,endResi;if(recordName.indexOf(\"END\")==0){remainingLines=lines.slice(i+1);if(recordName==\"END\"){//ass opposed to ENDMDL\n\t//reset secondary structure\n\tfor(var prop in sslookup){if(sslookup.hasOwnProperty(prop)){delete sslookup[prop];}}}break;}else if(recordName=='ATOM  '||recordName=='HETATM'){var resn,chain,resi,icode,x,y,z,hetflag,elem,serial,altLoc,b;altLoc=line.substr(16,1);if(altLoc!=' '&&altLoc!='A')continue;// FIXME: ad hoc\n\tserial=parseInt(line.substr(6,5));atom=line.substr(12,4).replace(/ /g,\"\");resn=line.substr(17,3).replace(/ /g,\"\");chain=line.substr(21,1);resi=parseInt(line.substr(22,4));icode=line.substr(26,1);x=parseFloat(line.substr(30,8));y=parseFloat(line.substr(38,8));z=parseFloat(line.substr(46,8));b=parseFloat(line.substr(60,8));elem=line.substr(76,2).replace(/ /g,\"\");if(elem===''||typeof bondTable[elem]==='undefined'){// for some incorrect PDB files\n\telem=line.substr(12,2).replace(/ /g,\"\");if(elem.length>0&&elem[0]=='H'&&elem!='Hg'){elem='H';//workaround weird hydrogen names from MD, note mercury must use lowercase\n\t}if(elem.length>1){elem=elem[0].toUpperCase()+elem.substr(1).toLowerCase();if(typeof bondTable[elem]==='undefined'){//not a known element, probably should just use first letter\n\telem=elem[0];}else if(line[0]=='A'&&elem=='Ca'){//alpha carbon, not calcium\n\telem=\"C\";}}}else{elem=elem[0].toUpperCase()+elem.substr(1).toLowerCase();}if(elem=='H'&&noH)continue;if(recordName[0]=='H')hetflag=true;else hetflag=false;serialToIndex[serial]=atoms.length;atoms.push({'resn':resn,'x':x,'y':y,'z':z,'elem':elem,'hetflag':hetflag,'chain':chain,'resi':resi,'icode':icode,'rescode':resi+(icode!=' '?\"^\"+icode:\"\"),// combo\n\t// resi\n\t// and\n\t// icode\n\t'serial':serial,'atom':atom,'bonds':[],'ss':'c','bondOrder':[],'properties':{},'b':b,'pdbline':line});}else if(recordName=='SHEET '){hasStruct=true;startChain=line.substr(21,1);startResi=parseInt(line.substr(22,4));endChain=line.substr(32,1);endResi=parseInt(line.substr(33,4));if(!(startChain in sslookup)){sslookup[startChain]={};}//mark start and end with additional character\n\tsslookup[startChain][startResi]='s1';for(var res=startResi+1;res<endResi;res++){sslookup[startChain][res]='s';}sslookup[startChain][endResi]='s2';}else if(recordName=='CONECT'){// MEMO: We don't have to parse SSBOND, LINK because both are\n\t// also\n\t// described in CONECT. But what about 2JYT???\n\tvar from=parseInt(line.substr(6,5));var fromindex=serialToIndex[from];var fromAtom=atoms[fromindex];for(j=0;j<4;j++){var to=parseInt(line.substr([11,16,21,26][j],5));var toindex=serialToIndex[to];var toAtom=atoms[toindex];if(fromAtom!==undefined&&toAtom!==undefined){// duplicated conect records indicate bond order\n\tif(!seenbonds[[fromindex,toindex]]){seenbonds[[fromindex,toindex]]=1;if(fromAtom.bonds.length==0||fromAtom.bonds[fromAtom.bonds.length-1]!=toindex){fromAtom.bonds.push(toindex);fromAtom.bondOrder.push(1);}}else{//update bond order\n\tseenbonds[[fromindex,toindex]]+=1;for(var bi=0;bi<fromAtom.bonds.length;bi++){if(fromAtom.bonds[bi]==toindex){var newbo=seenbonds[[fromindex,toindex]];if(newbo>=4){//aromatic\n\tfromAtom.bondOrder[bi]=1;}else{fromAtom.bondOrder[bi]=newbo;}}}}}}}else if(recordName=='HELIX '){hasStruct=true;startChain=line.substr(19,1);startResi=parseInt(line.substr(21,4));endChain=line.substr(31,1);endResi=parseInt(line.substr(33,4));if(!(startChain in sslookup)){sslookup[startChain]={};}sslookup[startChain][startResi]='h1';for(var res=startResi+1;res<endResi;res++){sslookup[startChain][res]='h';}sslookup[startChain][endResi]='h2';}else if(!noAssembly&&recordName=='REMARK'&&line.substr(13,5)=='BIOMT'){var n;var matrix=new $3Dmol.Matrix4();for(n=1;n<=3;n++){line=lines[i].replace(/^\\s*/,'');if(parseInt(line.substr(18,1))==n){// check for all\n\t// three lines\n\t// by matching #\n\t// @ end of\n\t// \"BIOMT\" to n\n\tmatrix.elements[n-1]=parseFloat(line.substr(23,10));matrix.elements[n-1+4]=parseFloat(line.substr(33,10));matrix.elements[n-1+8]=parseFloat(line.substr(43,10));matrix.elements[n-1+12]=parseFloat(line.substr(53));i++;}else{while(line.substr(13,5)=='BIOMT'){i++;line=lines[i].replace(/^\\s*/,'');}}}matrix.elements[3]=0;matrix.elements[7]=0;matrix.elements[11]=0;matrix.elements[15]=1;modelData.symmetries.push(matrix);i--;// set i back\n\t}else if(recordName=='CRYST1'){var a,b,c,alpha,beta,gamma;a=parseFloat(line.substr(7,8));b=parseFloat(line.substr(16,8));c=parseFloat(line.substr(25,8));alpha=parseFloat(line.substr(34,6));beta=parseFloat(line.substr(41,6));gamma=parseFloat(line.substr(48,6));modelData.cryst={'a':a,'b':b,'c':c,'alpha':alpha,'beta':beta,'gamma':gamma};}}var starttime=new Date().getTime();// assign bonds - yuck, can't count on connect records\n\tassignPDBBonds(atoms);// console.log(\"bond connecting \" + ((new Date()).getTime() -starttime));\n\tif(!noAssembly)processSymmetries(modelData.symmetries,copyMatrix,atoms);if(computeStruct&&!ignoreStruct){starttime=new Date().getTime();computeSecondaryStructure(atoms);// console.log(\"secondary structure \" + ((new Date()).getTime() - starttime));\n\t}starttime=new Date().getTime();// Assign secondary structures from pdb file\n\tif(!isEmpty(sslookup)){for(i=0;i<atoms.length;i++){atom=atoms[i];if(atom===undefined)continue;if(atom.chain in sslookup&&atom.resi in sslookup[atom.chain]){var code=sslookup[atom.chain][atom.resi];atom.ss=code[0];if(code.length>1){if(code[1]=='1')atom.ssbegin=true;else if(code[1]=='2')atom.ssend=true;}}}}//console.log(\"assign structure \" + ((new Date()).getTime() - starttime));\n\treturn[atoms,modelData,remainingLines];};// parse pdb file from str and create atoms\n\t// if computeStruct is true will always perform secondary structure\n\t// analysis,\n\t// otherwise only do analysis of SHEET/HELIX comments are missing\n\t/**\n\t     * @param {string}\n\t     *            str\n\t     * @param {Object}\n\t     *            options - keepH (do not strip hydrogens), noSecondaryStructure\n\t     *            (do not compute ss)\n\t     */parsers.pdb=parsers.PDB=parsers.pdbqt=parsers.PDBQT=function(str,options){var atoms=[];//a separate list for each model\n\tvar sslookup={};//stores SHEET and HELIX info, which is shared across models\n\tatoms.modelData=[];var lines=str.split(/\\r?\\n|\\r/);while(lines.length>0){var pdbinfo=getSinglePDB(lines,options,sslookup);var modelatoms=pdbinfo[0];var modelData=pdbinfo[1];lines=pdbinfo[2];if(modelatoms.length==0){continue;//happens when there are blank lines\n\t}if(options.multimodel&&options.onemol&&atoms.length>0){//merge into existing atoms\n\tvar inc=atoms[0].length;for(var i=0;i<modelatoms.length;i++){//renumber\n\tvar atom=modelatoms[i];atom.index=i;for(var b=0;b<atom.bonds.length;b++){atom.bonds[b]+=inc;}atoms[0].push(atom);}}else{atoms.modelData.push(modelData);atoms.push(modelatoms);}if(!options.multimodel){break;}}return atoms;};/**\n\t     * Parse a pqr file from str and create atoms. A pqr file is assumed to be a\n\t     * whitespace delimited PDB with charge and radius fields.\n\t     *\n\t     * @param {string}\n\t     *            str\n\t     * @param {Object}\n\t     *            options - noSecondaryStructure (do not compute ss)\n\t     */parsers.pqr=parsers.PQR=function(str,options){var atoms=[[]];var atoms_cnt=0;var start=atoms[atoms.length-1].length;var atom;var computeStruct=!options.noSecondaryStructure;var noAssembly=!options.doAssembly;// don't assemble by default\n\tvar copyMatrix=!options.duplicateAssemblyAtoms;//default true\n\tvar modelData=atoms.modelData=[{symmetries:[]}];var serialToIndex=[];// map from pdb serial to index in atoms\n\tvar lines=str.split(/\\r?\\n|\\r/);var i,j,k,line;for(i=0;i<lines.length;i++){line=lines[i].replace(/^\\s*/,'');// remove indent\n\tvar recordName=line.substr(0,6);var startChain,startResi,endChain,endResi;if(recordName.indexOf(\"END\")==0){if(options.multimodel){if(!options.onemol)atoms.push([]);continue;}else{break;}}else if(recordName=='ATOM  '||recordName=='HETATM'){// I would have liked to split based solely on whitespace, but\n\t// it seems that there is no guarantee that all the fields will\n\t// be filled out (e.g. the chain) so this doesn't work\n\tvar serial=parseInt(line.substr(6,5));var atom=line.substr(12,4).replace(/ /g,\"\");var resn=line.substr(17,3);var chain=line.substr(21,1);var resi=parseInt(line.substr(22,4));// however let's split the coordinates, charge and radius by\n\t// whitespace\n\t// to support extra precision\n\tvar vals=line.substr(30).trim().split(/\\s+/);var x=parseFloat(vals[0]);var y=parseFloat(vals[1]);var z=parseFloat(vals[2]);var charge=parseFloat(vals[3]);var radius=parseFloat(vals[4]);var elem=atom[0];if(atom.length>1&&atom[1].toUpperCase()!=atom[1]){// slight hack - identify two character elements by the\n\t// second character in the atom name being lowercase\n\telem=atom.substr(0,2);}if(line[0]=='H')hetflag=true;else hetflag=false;serialToIndex[serial]=atoms[atoms.length-1].length;atoms[atoms.length-1].push({'resn':resn,'x':x,'y':y,'z':z,'elem':elem,'hetflag':hetflag,'chain':chain,'resi':resi,'serial':serial,'atom':atom,'bonds':[],'ss':'c','bondOrder':[],'properties':{'charge':charge,'partialCharge':charge,'radius':radius},'pdbline':line});}else if(recordName=='CONECT'){// MEMO: We don't have to parse SSBOND, LINK because both are\n\t// also\n\t// described in CONECT. But what about 2JYT???\n\tvar from=parseInt(line.substr(6,5));var fromAtom=atoms[atoms.length-1][serialToIndex[from]];for(j=0;j<4;j++){var to=parseInt(line.substr([11,16,21,26][j],5));var toAtom=atoms[atoms.length-1][serialToIndex[to]];if(fromAtom!==undefined&&toAtom!==undefined){fromAtom.bonds.push(serialToIndex[to]);fromAtom.bondOrder.push(1);}}}}// assign bonds - yuck, can't count on connect records\n\tfor(var i=0;i<atoms.length;i++){assignPDBBonds(atoms[i]);if(computeStruct)computeSecondaryStructure(atoms[i]);}return atoms;};var fromCharCode=function fromCharCode(charCodeArray){return String.fromCharCode.apply(null,charCodeArray).replace(/\\0/g,'');};var convertSS=function convertSS(val){//convert mmtf code to 3dmol code\n\tif(val==2)return'h';if(val==3)return's';return'c';};//mmtf shoul be passed as a binary UInt8Array buffer\n\tparsers.mmtf=parsers.MMTF=function(bindata,options){var noH=!options.keepH;// suppress hydrogens by default\n\tvar mmtfData=MMTF.decode(bindata);var atoms=[[]];var modelData=atoms.modelData=[];// setup index counters\n\tvar modelIndex=0;var chainIndex=0;var groupIndex=0;var atomIndex=0;// setup optional fields\n\tvar chainNameList=mmtfData.chainNameList;var secStructList=mmtfData.secStructList;var insCodeList=mmtfData.insCodeList;var sequenceIndexList=mmtfData.sequenceIndexList;var bFactorList=mmtfData.bFactorList;var altLocList=mmtfData.altLocList;var occupancyList=mmtfData.occupancyList;var bondAtomList=mmtfData.bondAtomList;var bondOrderList=mmtfData.bondOrderList;var numModels=mmtfData.numModels;if(numModels==0)return atoms;if(!options.multimodel)numModels=1;//first only\n\t// hoisted loop variables\n\tvar i,j,k,kl,m,n;//extract symmetries - only take first assembly, apply to all models (ignoring changes for now)\n\tvar noAssembly=!options.doAssembly;// don't assemble by default\n\tvar copyMatrix=!options.duplicateAssemblyAtoms;//default true\n\tvar assemblyIndex=options.assemblyIndex?options.assemblyIndex:0;var symmetries=[];if(mmtfData.bioAssemblyList&&mmtfData.bioAssemblyList.length>0){var transforms=mmtfData.bioAssemblyList[assemblyIndex].transformList;for(i=0,n=transforms.length;i<n;i++){var matrix=new $3Dmol.Matrix4(transforms[i].matrix);matrix.transpose();symmetries.push(matrix);}}var bondAtomListStart=0;//for current model\n\t//loop over models,\n\tfor(m=0;m<numModels;m++){var modelChainCount=mmtfData.chainsPerModel[m];var matoms=atoms[atoms.length-1];var serialToIndex=[];// map to matoms index, needed for noh\n\tmodelData.push({symmetries:symmetries});for(i=0;i<modelChainCount;++i){var chainGroupCount=mmtfData.groupsPerChain[chainIndex];var chainId=fromCharCode(mmtfData.chainIdList.subarray(chainIndex*4,chainIndex*4+4));var startGroup=groupIndex;for(j=0;j<chainGroupCount;++j){//over residues (groups)\n\tvar groupData=mmtfData.groupList[mmtfData.groupTypeList[groupIndex]];var groupAtomCount=groupData.atomNameList.length;var secStruct=0;if(secStructList){secStruct=secStructList[groupIndex];}var insCode=null;if(mmtfData.insCodeList){insCode=String.fromCharCode(insCodeList[groupIndex]);}var sequenceIndex=null;if(sequenceIndexList){sequenceIndex=sequenceIndexList[groupIndex];}var groupId=mmtfData.groupIdList[groupIndex];var groupName=groupData.groupName;var startAtom=atomIndex;for(k=0;k<groupAtomCount;++k){var element=groupData.elementList[k];if(noH&&element=='H'){atomIndex+=1;continue;}var bFactor='';if(bFactorList){bFactor=bFactorList[atomIndex];}var altLoc=' ';if(altLocList){altLoc=String.fromCharCode(altLocList[atomIndex]);}var occupancy='';if(occupancyList){occupancy=occupancyList[atomIndex];}var atomId=mmtfData.atomIdList[atomIndex];var atomName=groupData.atomNameList[k];var atomCharge=0;if(groupData.atomChargeList)atomCharge=groupData.atomChargeList[k];var xCoord=mmtfData.xCoordList[atomIndex];var yCoord=mmtfData.yCoordList[atomIndex];var zCoord=mmtfData.zCoordList[atomIndex];serialToIndex[atomIndex]=matoms.length;matoms.push({'resn':groupName,'x':xCoord,'y':yCoord,'z':zCoord,'elem':element,'hetflag':secStruct<0,'chain':chainId,'resi':groupId,'icode':altLoc,'rescode':groupId+(altLoc!=' '?\"^\"+altLoc:\"\"),// combo\n\t// resi\n\t// and\n\t// icode\n\t'serial':atomId,'atom':atomName,'bonds':[],'ss':convertSS(secStruct),'bondOrder':[],'properties':{charge:atomCharge,occupancy:occupancy},'b':bFactor});atomIndex+=1;}// intra group bonds\n\tvar groupBondAtomList=groupData.bondAtomList;for(k=0,kl=groupData.bondOrderList.length;k<kl;++k){var atomIndex1=startAtom+groupBondAtomList[k*2];var atomIndex2=startAtom+groupBondAtomList[k*2+1];var bondOrder=groupData.bondOrderList[k];//I assume bonds are only recorded once\n\tvar i1=serialToIndex[atomIndex1];var i2=serialToIndex[atomIndex2];var a1=matoms[i1];var a2=matoms[i2];if(a1&&a2){a1.bonds.push(i2);a1.bondOrder.push(bondOrder);a2.bonds.push(i1);a2.bondOrder.push(bondOrder);}}groupIndex+=1;}//reset for bonds\n\tgroupIndex=startGroup;for(j=0;j<chainGroupCount;++j){//over residues (groups)\n\tgroupIndex+=1;}chainIndex+=1;}// inter group bonds\n\tif(bondAtomList){for(k=bondAtomListStart,kl=bondAtomList.length;k<kl;k+=2){var atomIndex1=bondAtomList[k];var atomIndex2=bondAtomList[k+1];var bondOrder=bondOrderList?bondOrderList[k/2]:1;if(atomIndex1>=atomIndex){bondAtomListStart=k;break;//on next model\n\t}//I assume bonds are only recorded once\n\tvar i1=serialToIndex[atomIndex1];var i2=serialToIndex[atomIndex2];var a1=matoms[i1];var a2=matoms[i2];if(a1&&a2){a1.bonds.push(i2);a1.bondOrder.push(bondOrder);a2.bonds.push(i1);a2.bondOrder.push(bondOrder);}}}if(options.multimodel){if(!options.onemol)atoms.push([]);}modelIndex+=1;}for(var n=0;n<atoms.length;n++){if(!noAssembly)processSymmetries(modelData[n].symmetries,copyMatrix,atoms[n]);}return atoms;};/**\n\t     * Parse a prmtop file from str and create atoms\n\t     */parsers.prmtop=parsers.PRMTOP=function(str,options){var atoms=[];var count=0;var lines=str.split(/\\r?\\n|\\r/);if(lines.length>0&&lines[0].includes(\"VERSION\")){var sectionList=lines.filter(function(line){//store the relevant section lists\n\treturn line.includes(\"POINTERS\")||line.includes(\"ATOM_NAME\")||line.includes(\"CHARGE\")||line.includes(\"RADII\")||line.includes(\"BONDS_INC_HYDROGEN\")||line.includes(\"BONDS_WITHOUT_HYDROGEN\");});var index=getIndex(\"POINTERS\");if(index==-1)return[];var col=getColEleSize(index);var atomCount=parseInt(lines[index+1].slice(0,col[1]));if(isNaN(atomCount)||atomCount<=0)return[];index=getIndex(\"ATOM_NAME\");if(index==-1)return[];col=getColEleSize(index);var noOfCol=col[0];for(i=0;i<atomCount/col[0];i++){if(i==parseInt(atomCount/col[0]))noOfCol=atomCount%col[0];for(j=0;j<noOfCol;j++){var atom={};var properties={\"charge\":\"\",\"radii\":\"\"};atom.serial=count;atom.x=0;atom.y=0;atom.z=0;atom.atom=lines[index+1].slice(col[1]*j,col[1]*(j+1));atom.elem=lines[index+1].slice(col[1]*j,col[1]*j+1);atom.properties=properties;atom.bonds=[];atom.bondOrder=[];atoms.push(atom);count++;}index++;}index=getIndex(\"CHARGE\");if(index!=-1){col=getColEleSize(index);count=0;noOfCol=col[0];for(i=0;i<atomCount/col[0];i++){if(i==parseInt(atomCount/col[0]))noOfCol=atomCount%col[0];for(j=0;j<noOfCol;j++){atoms[count].properties[\"charge\"]=lines[index+1].slice(col[1]*j,col[1]*(j+1));count++;}index++;}}index=getIndex(\"RADII\");if(index!=-1){col=getColEleSize(index);count=0;noOfCol=col[0];for(i=0;i<atomCount/col[0];i++){if(i==parseInt(atomCount/col[0]))noOfCol=atomCount%col[0];for(j=0;j<noOfCol;j++){atoms[count].properties.radii=lines[index+1].slice(col[1]*j,col[1]*(j+1));count++;}index++;}}index=getIndex(\"BONDS_WITHOUT_HYDROGEN\");if(index!=-1){col=getColEleSize(index);count=0;noOfCol=col[0];var atomIndex;for(i=0;i<atomCount/col[0];i++){if(i==parseInt(atomCount/col[0]))noOfCol=atomCount%col[0];for(j=0;j<noOfCol;j++){if(count%3==0){atomIndex=parseInt(lines[index+1].slice(col[1]*j,col[1]*(j+1))/3+1);}if(count%3==1){atoms[atomIndex].bonds.push(parseInt(lines[index+1].slice(col[1]*j,col[1]*(j+1))/3+1));}count++;}index++;}}index=getIndex(\"BONDS_INC_HYDROGEN\");if(index!=-1){col=getColEleSize(index);count=0;noOfCol=col[0];var atomIndex;for(i=0;i<atomCount/col[0];i++){if(i==parseInt(atomCount/col[0]))noOfCol=atomCount%col[0];for(j=0;j<noOfCol;j++){if(count%3==0){atomIndex=parseInt(lines[index+1].slice(col[1]*j,col[1]*(j+1))/3+1);}if(count%3==1){atoms[atomIndex].bonds.push(parseInt(lines[index+1].slice(col[1]*j,col[1]*(j+1))/3+1));}count++;}index++;}}}else{return[];}function getIndex(section){var index=lines.indexOf(sectionList.filter(function(line){return line.includes(section);})[0]);//returns the index of the line containing FLAG POINTERS\n\tif(Number.isInteger(index)&&index>0){while(!lines[index].includes(\"FORMAT\")){//doing this so as to take comments into consideration\n\tindex++;}return index;}else{return-1;}}function getColEleSize(i){var numberOfCol=lines[i].match(/\\((\\d*)\\S*/);// stores the number of columns\n\tvar elementSize=lines[i].match(/[a-zA-Z](\\d*)\\)\\s*/);if(elementSize==null){elementSize=lines[i].match(/[a-zA-Z](\\d*)\\.\\d*\\)\\s*/);//stores the element size\n\t}return[numberOfCol[1],elementSize[1]];}return[atoms];};return parsers;}();var $3Dmol=$3Dmol||{};//properties for mapping\n\t/* partial charges for proteins */$3Dmol.partialCharges={\"ALA:N\":-0.15,\"ALA:CA\":0.10,\"ALA:CB\":0.00,\"ALA:C\":0.60,\"ALA:O\":-0.55,\"ARG:N\":-0.15,\"ARG:CA\":0.10,\"ARG:CB\":0.00,\"ARG:CG\":0.00,\"ARG:CD\":0.10,\"ARG:NE\":-0.10,\"ARG:CZ\":0.50,\"ARG:NH1\":0.25,\"ARG:NH2\":0.25,\"ARG:C\":0.60,\"ARG:O\":-0.55,\"ASN:N\":-0.15,\"ASN:CA\":0.10,\"ASN:CB\":0.00,\"ASN:CG\":0.55,\"ASN:OD1\":-0.55,\"ASN:ND2\":0.00,\"ASN:C\":0.60,\"ASN:O\":-0.55,\"ASP:N\":-0.15,\"ASP:CA\":0.10,\"ASP:CB\":0.00,\"ASP:CG\":0.14,\"ASP:OD1\":-0.57,\"ASP:OD2\":-0.57,\"ASP:C\":0.60,\"ASP:O\":-0.55,\"CYS:N\":-0.15,\"CYS:CA\":0.10,\"CYS:CB\":0.19,\"CYS:SG\":-0.19,\"CYS:C\":0.60,\"CYS:O\":-0.55,\"GLN:N\":-0.15,\"GLN:CA\":0.10,\"GLN:CB\":0.00,\"GLN:CG\":0.00,\"GLN:CD\":0.55,\"GLN:OE1\":-0.55,\"GLN:NE2\":0.00,\"GLN:C\":0.60,\"GLN:O\":-0.55,\"GLU:N\":-0.15,\"GLU:CA\":0.10,\"GLU:CB\":0.00,\"GLU:CG\":0.00,\"GLU:CD\":0.14,\"GLU:OE1\":-0.57,\"GLU:OE2\":-0.57,\"GLU:C\":0.60,\"GLU:O\":-0.55,\"GLY:N\":-0.15,\"GLY:CA\":0.10,\"GLY:C\":0.60,\"GLY:O\":-0.55,\"HIS:N\":-0.15,\"HIS:CA\":0.10,\"HIS:CB\":0.00,\"HIS:CG\":0.10,\"HIS:ND1\":-0.10,\"HIS:CD2\":0.10,\"HIS:NE2\":-0.40,\"HIS:CE1\":0.30,\"HIS:C\":0.60,\"HIS:O\":-0.55,\"ILE:N\":-0.15,\"ILE:CA\":0.10,\"ILE:CB\":0.00,\"ILE:CG2\":0.00,\"ILE:CG1\":0.00,\"ILE:CD\":0.00,\"ILE:C\":0.60,\"ILE:O\":-0.55,\"LEU:N\":-0.15,\"LEU:CA\":0.10,\"LEU:CB\":0.00,\"LEU:CG\":0.00,\"LEU:CD1\":0.00,\"LEU:CD2\":0.00,\"LEU:C\":0.60,\"LEU:O\":-0.55,\"LYS:N\":-0.15,\"LYS:CA\":0.10,\"LYS:CB\":0.00,\"LYS:CG\":0.00,\"LYS:CD\":0.00,\"LYS:CE\":0.25,\"LYS:NZ\":0.75,\"LYS:C\":0.60,\"LYS:O\":-0.55,\"MET:N\":-0.15,\"MET:CA\":0.10,\"MET:CB\":0.00,\"MET:CG\":0.06,\"MET:SD\":-0.12,\"MET:CE\":0.06,\"MET:C\":0.60,\"MET:O\":-0.55,\"PHE:N\":-0.15,\"PHE:CA\":0.10,\"PHE:CB\":0.00,\"PHE:CG\":0.00,\"PHE:CD1\":0.00,\"PHE:CD2\":0.00,\"PHE:CE1\":0.00,\"PHE:CE2\":0.00,\"PHE:CZ\":0.00,\"PHE:C\":0.60,\"PHE:O\":-0.55,\"PRO:N\":-0.25,\"PRO:CD\":0.10,\"PRO:CA\":0.10,\"PRO:CB\":0.00,\"PRO:CG\":0.00,\"PRO:C\":0.60,\"PRO:O\":-0.55,\"SER:N\":-0.15,\"SER:CA\":0.10,\"SER:CB\":0.25,\"SER:OG\":-0.25,\"SER:C\":0.60,\"SER:O\":-0.55,\"THR:N\":-0.15,\"THR:CA\":0.10,\"THR:CB\":0.25,\"THR:OG1\":-0.25,\"THR:CG2\":0.00,\"THR:C\":0.60,\"THR:O\":-0.55,\"TRP:N\":-0.15,\"TRP:CA\":0.10,\"TRP:CB\":0.00,\"TRP:CG\":-0.03,\"TRP:CD2\":0.10,\"TRP:CE2\":-0.04,\"TRP:CE3\":-0.03,\"TRP:CD1\":0.06,\"TRP:NE1\":-0.06,\"TRP:CZ2\":0.00,\"TRP:CZ3\":0.00,\"TRP:CH2\":0.00,\"TRP:C\":0.60,\"TRP:O\":-0.55,\"TYR:N\":-0.15,\"TYR:CA\":0.10,\"TYR:CB\":0.00,\"TYR:CG\":0.00,\"TYR:CD1\":0.00,\"TYR:CE1\":0.00,\"TYR:CD2\":0.00,\"TYR:CE2\":0.00,\"TYR:CZ\":0.25,\"TYR:OH\":-0.25,\"TYR:C\":0.60,\"TYR:O\":-0.55,\"VAL:N\":-0.15,\"VAL:CA\":0.10,\"VAL:CB\":0.00,\"VAL:CG1\":0.00,\"VAL:CG2\":0.00,\"VAL:C\":0.60,\"VAL:O\":-0.55};//this can be supplied to mapAtomProperties\n\t$3Dmol.applyPartialCharges=function(atom,keepexisting){if(!keepexisting||typeof atom.partialCharge===\"undefined\"){if(atom.resn&&atom.atom){var key=atom.resn+\":\"+atom.atom;atom.properties['partialCharge']=$3Dmol.partialCharges[key];}}};// Specifications for various object types used in 3Dmol.js\n\t// This is primarily for documentation\n\t(function(){/**\n\t * GLViewer input specification\n\t * @typedef ViewerSpec\n\t * @prop {Object} defaultcolors - map of elements to colors\n\t * @prop {boolean} nomouse - if true, disable handling of mouse events\n\t * @prop {ColorSpec} backgroundColor - color of background\n\t *//**\n\t * Atom representation. Depending on the input file format, not all fields may be defined.\n\t * @typedef AtomSpec\n\t * @prop {string} resn - Parent residue name\n\t * @prop {number} x - Atom's x coordinate\n\t * @prop {number} y - Atom's y coordinate\n\t * @prop {number} z - Atom's z coordinate\n\t * @prop {ColorSpec} color - Atom's color, as hex code or built-in color string\n\t * @prop {ColorSpec} surfaceColor - Hex code for color to be used for surface patch over this atom\n\t * @prop {string} elem - Element abbreviation (e.g. 'H', 'Ca', etc)\n\t * @prop {boolean} hetflag - Set to true if atom is a heteroatom\n\t * @prop {string} chain - Chain this atom belongs to, if specified in input file (e.g 'A' for chain A)\n\t * @prop {number} resi - Residue number\n\t * @prop {number} icode\n\t * @prop {number} rescode\n\t * @prop {number} serial - Atom's serial id number\n\t * @prop {string} atom - Atom name; may be more specific than 'elem' (e.g 'CA' for alpha carbon)\n\t * @prop {Array.<number>} bonds - Array of atom ids this atom is bonded to\n\t * @prop {string} ss - Secondary structure identifier (for cartoon render; e.g. 'h' for helix)\n\t * @prop {boolean} singleBonds - true if this atom forms only single bonds or no bonds at all\n\t * @prop {Array.<number>} bondOrder - Array of this atom's bond orders, corresponding to bonds identfied by 'bonds'\n\t * @prop {Object} properties - Optional mapping of additional properties\n\t * @prop {number} b - Atom b factor data\n\t * @prop {string} pdbline - If applicable, this atom's record entry from the input PDB file (used to output new PDB from models)\n\t * @prop {boolean} clickable - Set this flag to true to enable click selection handling for this atom\n\t * @prop {function(this, $3Dmol.GLViewer)} callback - Callback click handler function to be executed on this atom and its parent viewer\n\t * @prop {boolean} invert - for selection, inverts the meaning of the selection\n\t *//**\n\t * Atom selection object. Used to specify what atoms should be selected.  Can include\n\t * any field from {@link AtomSpec} in which case atoms must equal the specified value.\n\t * All fields must match for the selection to hold. If values\n\t * are provided as a list, then only one value of the list must match.\n\t *\n\t * @example\n\t * viewer.addResLabels({resi: [1,2,3,4,5], atom: 'CA'}); // will label alpha carbons (CA) of residues 1-5\n\t *\n\t * @typedef AtomSelectionSpec\n\t * @prop {AtomSpec} ... - any field from {@link AtomSpec}, values may be singletons or lists\n\t * @prop {GLModel} model - a single model or list of models from which atoms should be selected\n\t * @prop {number} bonds - overloaded to select number of bonds, e.g. {bonds: 0} will select all nonbonded atoms\n\t * @prop {function} predicate - user supplied function that gets passed an {AtomSpec} and should return true if the atom should be selected\n\t * @prop {boolean} invert - if set, inverts the meaning of the selection\n\t * @prop {boolean} byres - if set, expands the selection to include all atoms of any residue that has any atom selected\n\t * @prop {number} expand - expands the selection to include all atoms within a given distance from the selection\n\t * @prop {WithinSelectionSpec} within - intersects the selection with the set of atoms within a given distance from another selection\n\t *//**\n\t * Within selection object. Used to find the subset of an atom selection that is within\n\t * some distance from another atom selection. When added as a field of an {@link AtomSelectionSpec},\n\t * intersects the set of atoms in that selection with the set of atoms within a given\n\t * distance from the given {@link AtomSelectionSpec}.\n\t *\n\t * @example\n\t * viewer.setStyle({chain: 'A', within:{distance: 10, sel:{chain: 'B'}}}, {sphere:{}}); // stylizes atoms in chain A that are within 10 angstroms of an atom in chain B\n\t *\n\t * @typedef WithinSelectionSpec\n\t * @prop {number} distance - the distance in angstroms away from the atom selection to include atoms in the parent selection\n\t * @prop {AtomSelectionSpec} sel - the selection of atoms against which to measure the distance from the parent atom selection\n\t *//**\n\t * @typedef AtomStyleSpec\n\t * @prop {LineStyleSpec} line - draw bonds as lines\n\t * @prop {CrossStyleSpec} cross - draw atoms as crossed lines (aka stars)\n\t * @prop {StickStyleSpec} stick  - draw bonds as capped cylinders\n\t * @prop {SphereStyleSpec} sphere - draw atoms as spheres\n\t * @prop {CartoonStyleSpec} cartoon - draw cartoon representation of secondary structure\n\t *//**\n\t * @typedef SurfaceStyleSpec\n\t * @prop {number} opacity - sets the transparency: 0 to hide, 1 for fully opaque\n\t * @prop {ColorschemeSpec} colorscheme - element based coloring\n\t * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n\t * @prop {$3Dmol.VolumeData} voldata - volumetric data for vertex coloring\n\t * @prop {$3Dmol.Gradient} volscheme - coloring scheme for mapping volumetric data to vertex color\n\t * @prop {Object} map - specifies a numeric atom property (prop) and color mapping (scheme) such as {@link $3Dmol.Gradient.RWB}.  Deprecated, use colorscheme instead.\n\t *\n\t * @example\n\t * viewer.addSurface($3Dmol.SurfaceType.MS, {map:{prop:'partialCharge',scheme:new $3Dmol.Gradient.RWB(-.6,.6)}, opacity:0.85});\n\t\n\t *//**\n\t * Isosurface style specification\n\t * @typedef IsoSurfaceSpec\n\t * @prop {number} isoval - specifies the isovalue to draw surface at\n\t * @propr {boolean} voxel - if true uses voxel style rendering\n\t * @prop {ColorSpec} color - solid color\n\t * @prop {number} opacity - transparency, between 0 and 1\n\t * @prop {boolean} wireframe - draw as wireframe, not surface\n\t * @prop {number} linewidth - width of line for wireframe rendering\n\t * @prop {number} smoothness - amount to smooth surface (default 1)\n\t * @prop {AtomSelectionSpec} sel - selection around which to show data\n\t * @prop {list} coords - coordinates around which to include data\n\t * @prop {number} seldist - distance around selection/coords to include data [default = 2.0]\n\t * @prop {boolean} clickable - if true, user can click on object to trigger callback\n\t * @prop {function} callback - function to call on click\n\t *//**\n\t * GLShape style specification\n\t * @typedef ShapeSpec\n\t * @prop {ColorSpec} color - solid color\n\t * @prop {number} alpha - transparency\n\t * @prop {boolean} wireframe - draw as wireframe, not surface\n\t * @prop {number} linewidth - width of line for wireframe rendering\n\t * @prop {boolean} clickable - if true, user can click on object to trigger callback\n\t * @prop {function} callback - function to call on click\n\t *//**\n\t * Specification for adding custom shape. Extends {@link ShapeSpec}.\n\t * @typedef CustomShapeSpec\n\t * @augments ShapeSpec\n\t * @prop {Array.<$3Dmol.Vector3>} vertexArr - List of vertex positions\n\t * @prop {Array.<$3Dmol.Vector3>} normalArr - List of normal vectors for each vertex\n\t * @prop {Array.<number>} faceArr - List of triangles to build the custom shape. Each triangle is defined by the indices of 3 vertices in vertexArr, so the array length should be 3 times the number of faces.\n\t * @prop {ColorSpec | Array.<ColorSpec>} color - Either a single color for the whole object or an array specifying the color at each vertex.\n\t *//**\n\t * Sphere shape specification. Extends {@link ShapeSpec}\n\t *\n\t * @typedef SphereSpec\n\t * @prop {$3Dmol.Vector3} center\n\t * @prop {number} radius\n\t *\n\t *//**\n\t * Arrow shape specification.  Extends {@link ShapeSpec}\n\t * @typedef ArrowSpec\n\t * @prop {$3Dmol.Vector3} start\n\t * @prop {$3Dmol.Vector3} end\n\t * @prop {number} radius\n\t * @prop {number} radiusRatio - ratio of arrow base to cylinder (1.618034 default)\n\t * @prop {number} mid - relative position of arrow base (0.618034 default)\n\t *//**\n\t * Cylinder shape specification.  Extends {@link ShapeSpec}\n\t * @typedef CylinderSpec\n\t * @prop {$3Dmol.Vector3} start\n\t * @prop {$3Dmol.Vector3} end\n\t * @prop {number} radius\n\t * @prop {boolean} fromCap\n\t * @prop {boolean} toCap\n\t *//**\n\t * Line shape specification.  Extends {@link ShapeSpec}  (but defaults to wireframe)\n\t * @typedef LineSpec\n\t * @prop {$3Dmol.Vector3} start\n\t * @prop {$3Dmol.Vector3} end\n\t */});/**\n\t * $3Dmol.VolumeData stores volumetric data. This includes file parsing\n\t * functionality.\n\t *\n\t * @class\n\t * @param {string} str - volumetric data\n\t * @param {string} format - format of supplied data (cube)\n\t * @param {Object} options - normalize (zero mean, unit variance), negate\n\t */$3Dmol.VolumeData=function(str,format,options){this.unit={x:1,y:1,z:1};// scale of each voxel\n\tthis.origin={x:0,y:0,z:0};// origin (bottom \"left\", not center)\n\tthis.size={x:0,y:0,z:0};// number of voxels in each direction\n\tthis.data=new Float32Array([]);// actual floating point data, arranged\n\t// x->y->z\n\tthis.matrix=null;//if set must transform data\n\tformat=format.toLowerCase();if(/\\.gz$/.test(format)){//unzip gzipped files\n\tformat=format.replace(/\\.gz$/,'');try{str=pako.inflate(str);}catch(err){console.log(err);}}if(this[format]){this[format](str);}if(options){if(options.negate){for(var i=0,n=this.data.length;i<n;i++){this.data[i]=-this.data[i];}}if(options.normalize){var total=0.0;for(var i=0,n=this.data.length;i<n;i++){total+=this.data[i];}var mean=total/this.data.length;console.log(\"computed mean: \"+mean);total=0;for(var i=0,n=this.data.length;i<n;i++){var diff=this.data[i]-mean;total+=diff*diff;//variance is ave of squared difference with mean\n\t}var variance=total/this.data.length;console.log(\"Computed variance: \"+variance);//now normalize\n\tfor(var i=0,n=this.data.length;i<n;i++){this.data[i]=(this.data[i]-mean)/variance;}}}};/**\n\t * @function $3Dmol.VolumeData.getVal\n\t * @param {number} x,y,z - the coordinates\n\t * @returns - value closest to provided coordinate; zero if coordinate invalid\n\t */$3Dmol.VolumeData.prototype.getVal=function(x,y,z){x-=this.origin.x;y-=this.origin.y;z-=this.origin.z;x/=this.unit.x;y/=this.unit.y;z/=this.unit.z;x=Math.round(x);y=Math.round(y);z=Math.round(z);if(x<0||x>=this.size.x)return 0;if(y<0||y>=this.size.y)return 0;if(z<0||z>=this.size.z)return 0;return this.data[x*this.size.y*this.size.z+y*this.size.z+z];};$3Dmol.VolumeData.prototype.getCoordinates=function(index){var x=index/(this.size.y*this.size.z);var y=index%(this.size.y*this.size.z);var z=index%this.size.z;x*=this.unit.x;y*=this.unit.y;z*=this.unit.z;x+=this.origin.x;y+=this.origin.y;z+=this.origin.z;//console.log(\"getCoordinates : \"+x+\" , \"+y+\" , \"+z);\n\t//console.log(\"val : \"+data.getVal(x,y,z));\n\t//console.log(\"actual : \"+data.data[index]);\n\treturn{x:x,y:y,z:z};/*\n\t    Y = (int)(index / Width)\n\t    X = index - (Y * Width)\n\t    */};/*\n\t * parse vasp data\n\t * Essentially this parser converts the CHGCAR data into\n\t * cube data. It has been adapted from 'chg2cube.pl' found in\n\t * http://theory.cm.utexas.edu/vtsttools/\n\t */$3Dmol.VolumeData.prototype.vasp=function(str){var lines=str.replace(/^\\s+/,\"\").split(/[\\n\\r]/);var atomicData=$3Dmol.Parsers.vasp(str)[0];var natoms=atomicData.length;if(natoms==0){console.log(\"No good formating of CHG or CHGCAR file, not atomic information provided in the file.\");this.data=[];return;}// Assume atomic units\n\tvar unittype=\"bohr/hartree\";var l_units=1.889725992;var e_units=0.036749309;// copied from $3Dmol.Parsers.vasp\n\tvar convFactor=parseFloat(lines[1]);// This is how Vasp reads in the basis We need the l_units in order to\n\t// compute the volume of the cell. Afterwards to obtain the axis for the\n\t// voxels we have to remove this unit and divide by the number of voxels in\n\t// each dimension\n\tvar v;v=lines[2].replace(/^\\s+/,\"\").split(/\\s+/);var xVec=new $3Dmol.Vector3(parseFloat(v[0]),parseFloat(v[1]),parseFloat(v[2])).multiplyScalar(convFactor*l_units);v=lines[3].replace(/^\\s+/,\"\").split(/\\s+/);var yVec=new $3Dmol.Vector3(parseFloat(v[0]),parseFloat(v[1]),parseFloat(v[2])).multiplyScalar(convFactor*l_units);v=lines[4].replace(/^\\s+/,\"\").split(/\\s+/);var zVec=new $3Dmol.Vector3(parseFloat(v[0]),parseFloat(v[1]),parseFloat(v[2])).multiplyScalar(convFactor*l_units);// correct volume for non-orthognal box (expansion by minors)\n\tvar vol=xVec.x*(yVec.y*zVec.z-zVec.y*yVec.z)-yVec.x*(xVec.y*zVec.z-zVec.y*xVec.z)+zVec.x*(xVec.y*yVec.z-yVec.y*xVec.z);vol=Math.abs(vol)/Math.pow(l_units,3);var vol_scale=1.0/vol;//This Only for CHGCAR files\n\t// We splice the structure information\n\t// 2 (header) + 3 (vectors) + 2 (atoms) + 1 (vaspMode) + natoms (coords) + 1 (blank line)\n\tlines.splice(0,2+3+2+1+natoms+1);var lineArr=lines[0].replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");var nX=Math.abs(lineArr[0]);var nY=Math.abs(lineArr[1]);var nZ=Math.abs(lineArr[2]);var origin=this.origin=new $3Dmol.Vector3(0,0,0);this.size={x:nX,y:nY,z:nZ};this.unit=new $3Dmol.Vector3(xVec.x,yVec.y,zVec.z);// resize the vectors accordingly\n\txVec=xVec.multiplyScalar(1/(l_units*nX));yVec=yVec.multiplyScalar(1/(l_units*nY));zVec=zVec.multiplyScalar(1/(l_units*nZ));if(xVec.y!=0||xVec.z!=0||yVec.x!=0||yVec.z!=0||zVec.x!=0||zVec.y!=0){//need a transformation matrix\n\tthis.matrix=new $3Dmol.Matrix4(xVec.x,yVec.x,zVec.x,0,xVec.y,yVec.y,zVec.y,0,xVec.z,yVec.z,zVec.z,0,0,0,0,1);//include translation in matrix\n\tthis.matrix=this.matrix.multiplyMatrices(this.matrix,new $3Dmol.Matrix4().makeTranslation(origin.x,origin.y,origin.z));//all translation and scaling done by matrix, so reset origin and unit\n\tthis.origin=new $3Dmol.Vector3(0,0,0);this.unit=new $3Dmol.Vector3(1,1,1);}lines.splice(0,1);//Remove the dimension line\n\tvar raw=lines.join(\" \");raw=raw.replace(/^\\s+/,'');raw=raw.split(/[\\s\\r]+/);raw.splice(nX*nY*nZ+1);var preConvertedData=new Float32Array(raw);//We still have to format it to get the density\n\tfor(var i=0;i<preConvertedData.length;i++){preConvertedData[i]=preConvertedData[i]*vol_scale*e_units;}this.data=preConvertedData;//console.log(xVec);\n\t//console.log(yVec);\n\t//console.log(zVec);\n\t//console.log(this.unit);\n\t//console.log(this.origin);\n\t//console.log(this.matrix);\n\t//console.log(this.data);\n\t};// parse cube data\n\t$3Dmol.VolumeData.prototype.cube=function(str){var lines=str.replace(/^\\s+/,\"\").split(/[\\n\\r]+/);if(lines.length<6)return;var lineArr=lines[2].replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");var atomsnum=parseFloat(lineArr[0]);//includes sign, which indicates presence of oribital line in header\n\tvar natoms=Math.abs(atomsnum);var origin=this.origin=new $3Dmol.Vector3(parseFloat(lineArr[1]),parseFloat(lineArr[2]),parseFloat(lineArr[3]));lineArr=lines[3].replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");// might have to convert from bohr units to angstroms\n\t// there is a great deal of confusion here:\n\t// n>0 means angstroms: http://www.gaussian.com/g_tech/g_ur/u_cubegen.htm\n\t// n<0 means angstroms: http://paulbourke.net/dataformats/cube/\n\t// always assume bohr: openbabel source code\n\t// always assume angstrom: http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/cubeplugin.html\n\t// we are going to go with n<0 means angstrom - note this is just the first n\n\tvar convFactor=lineArr[0]>0?0.529177:1;origin.multiplyScalar(convFactor);var nX=Math.abs(lineArr[0]);var xVec=new $3Dmol.Vector3(parseFloat(lineArr[1]),parseFloat(lineArr[2]),parseFloat(lineArr[3])).multiplyScalar(convFactor);lineArr=lines[4].replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");var nY=Math.abs(lineArr[0]);var yVec=new $3Dmol.Vector3(parseFloat(lineArr[1]),parseFloat(lineArr[2]),parseFloat(lineArr[3])).multiplyScalar(convFactor);lineArr=lines[5].replace(/^\\s+/,\"\").replace(/\\s+/g,\" \").split(\" \");var nZ=Math.abs(lineArr[0]);var zVec=new $3Dmol.Vector3(parseFloat(lineArr[1]),parseFloat(lineArr[2]),parseFloat(lineArr[3])).multiplyScalar(convFactor);this.size={x:nX,y:nY,z:nZ};this.unit=new $3Dmol.Vector3(xVec.x,yVec.y,zVec.z);if(xVec.y!=0||xVec.z!=0||yVec.x!=0||yVec.z!=0||zVec.x!=0||zVec.y!=0){//need a transformation matrix\n\tthis.matrix=new $3Dmol.Matrix4(xVec.x,yVec.x,zVec.x,0,xVec.y,yVec.y,zVec.y,0,xVec.z,yVec.z,zVec.z,0,0,0,0,1);//include translation in matrix\n\tthis.matrix=this.matrix.multiplyMatrices(this.matrix,new $3Dmol.Matrix4().makeTranslation(origin.x,origin.y,origin.z));//all translation and scaling done by matrix, so reset origin and unit\n\tthis.origin=new $3Dmol.Vector3(0,0,0);this.unit=new $3Dmol.Vector3(1,1,1);}var headerlines=6;if(atomsnum<0)headerlines++;//see: http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/cubeplugin.html\n\tvar raw=lines.splice(natoms+headerlines).join(\" \");raw=raw.replace(/^\\s+/,'');raw=raw.split(/[\\s\\r]+/);this.data=new Float32Array(raw);};//parse cp4 files\n\t$3Dmol.VolumeData.prototype.ccp4=function(bin){// http://www.ccp4.ac.uk/html/maplib.html#description\n\t//code from ngl: https://github.com/arose/ngl/blob/master/js/ngl/parser.js\n\tvar header={};bin=new Int8Array(bin);var intView=new Int32Array(bin.buffer,0,56);var floatView=new Float32Array(bin.buffer,0,56);var dv=new DataView(bin.buffer);// 53  MAP         Character string 'MAP ' to identify file type\n\theader.MAP=String.fromCharCode(dv.getUint8(52*4),dv.getUint8(52*4+1),dv.getUint8(52*4+2),dv.getUint8(52*4+3));// 54  MACHST      Machine stamp indicating machine type which wrote file\n\t//                 17 and 17 for big-endian or 68 and 65 for little-endian\n\theader.MACHST=[dv.getUint8(53*4),dv.getUint8(53*4+1)];// swap byte order when big endian\n\tif(header.MACHST[0]===17&&header.MACHST[1]===17){var n=bin.byteLength;for(var i=0;i<n;i+=4){dv.setFloat32(i,dv.getFloat32(i),true);}}header.NX=intView[0];// NC - columns (fastest changing)\n\theader.NY=intView[1];// NR - rows\n\theader.NZ=intView[2];// NS - sections (slowest changing)\n\t// mode\n\t//  0 image : signed 8-bit bytes range -128 to 127\n\t//  1 image : 16-bit halfwords\n\t//  2 image : 32-bit reals\n\t//  3 transform : complex 16-bit integers\n\t//  4 transform : complex 32-bit reals\n\t//  6 image : unsigned 16-bit range 0 to 65535\n\t// 16 image: unsigned char * 3 (for rgb data, non-standard)\n\t//\n\t// Note: Mode 2 is the normal mode used in the CCP4 programs.\n\t//       Other modes than 2 and 0 may NOT WORK\n\theader.MODE=intView[3];// start\n\theader.NXSTART=intView[4];// NCSTART - first column\n\theader.NYSTART=intView[5];// NRSTART - first row\n\theader.NZSTART=intView[6];// NSSTART - first section\n\t// intervals\n\theader.MX=intView[7];// intervals along x\n\theader.MY=intView[8];// intervals along y\n\theader.MZ=intView[9];// intervals along z\n\t// cell length (Angstroms in CCP4)\n\theader.xlen=floatView[10];header.ylen=floatView[11];header.zlen=floatView[12];// cell angle (Degrees)\n\theader.alpha=floatView[13];header.beta=floatView[14];header.gamma=floatView[15];// axis correspondence (1,2,3 for X,Y,Z)\n\theader.MAPC=intView[16];// column\n\theader.MAPR=intView[17];// row\n\theader.MAPS=intView[18];// section\n\t// density statistics\n\theader.DMIN=floatView[19];header.DMAX=floatView[20];header.DMEAN=floatView[21];// space group number 0 or 1 (default=0)\n\theader.ISPG=intView[22];// number of bytes used for symmetry data (0 or 80)\n\theader.NSYMBT=intView[23];// Flag for skew transformation, =0 none, =1 if foll\n\theader.LSKFLG=intView[24];// 26-34  SKWMAT  Skew matrix S (in order S11, S12, S13, S21 etc) if\n\t//                LSKFLG .ne. 0.\n\t// 35-37  SKWTRN  Skew translation t if LSKFLG != 0.\n\t//                Skew transformation is from standard orthogonal\n\t//                coordinate frame (as used for atoms) to orthogonal\n\t//                map frame, as Xo(map) = S * (Xo(atoms) - t)\n\t// 38      future use       (some of these are used by the MSUBSX routines\n\t//  .          \"              in MAPBRICK, MAPCONT and FRODO)\n\t//  .          \"   (all set to zero by default)\n\t//  .          \"\n\t// 52          \"\n\t// 50-52 origin in X,Y,Z used for transforms\n\theader.originX=floatView[49];header.originY=floatView[50];header.originZ=floatView[51];// 53  MAP         Character string 'MAP ' to identify file type\n\t// => see top of this parser\n\t// 54  MACHST      Machine stamp indicating machine type which wrote file\n\t// => see top of this parser\n\t// Rms deviation of map from mean density\n\theader.ARMS=floatView[54];// 56      NLABL           Number of labels being used\n\t// 57-256  LABEL(20,10)    10  80 character text labels (ie. A4 format)\n\tconsole.log(\"Map has min,mean,average,rmsddv: \"+header.DMIN+\",\"+header.DMAX+\",\"+header.DMEAN+\",\"+header.ARMS);//create transformation matrix, code mostly copied from ngl\n\tvar h=header;var basisX=[h.xlen,0,0];var basisY=[h.ylen*Math.cos(Math.PI/180.0*h.gamma),h.ylen*Math.sin(Math.PI/180.0*h.gamma),0];var basisZ=[h.zlen*Math.cos(Math.PI/180.0*h.beta),h.zlen*(Math.cos(Math.PI/180.0*h.alpha)-Math.cos(Math.PI/180.0*h.gamma)*Math.cos(Math.PI/180.0*h.beta))/Math.sin(Math.PI/180.0*h.gamma),0];basisZ[2]=Math.sqrt(h.zlen*h.zlen*Math.sin(Math.PI/180.0*h.beta)*Math.sin(Math.PI/180.0*h.beta)-basisZ[1]*basisZ[1]);var basis=[0,basisX,basisY,basisZ];var nxyz=[0,h.MX,h.MY,h.MZ];var mapcrs=[0,h.MAPC,h.MAPR,h.MAPS];this.matrix=new $3Dmol.Matrix4();this.matrix.set(basis[mapcrs[1]][0]/nxyz[mapcrs[1]],basis[mapcrs[2]][0]/nxyz[mapcrs[2]],basis[mapcrs[3]][0]/nxyz[mapcrs[3]],0,basis[mapcrs[1]][1]/nxyz[mapcrs[1]],basis[mapcrs[2]][1]/nxyz[mapcrs[2]],basis[mapcrs[3]][1]/nxyz[mapcrs[3]],0,basis[mapcrs[1]][2]/nxyz[mapcrs[1]],basis[mapcrs[2]][2]/nxyz[mapcrs[2]],basis[mapcrs[3]][2]/nxyz[mapcrs[3]],0,0,0,0,1);//include translation in matrix\n\tthis.matrix=this.matrix.multiplyMatrices(this.matrix,new $3Dmol.Matrix4().makeTranslation(h.NXSTART+h.originX,h.NYSTART+h.originY,h.NZSTART+h.originZ));//all translation and scaling done by matrix, so reset origin and unit\n\tthis.origin=new $3Dmol.Vector3(0,0,0);this.unit=new $3Dmol.Vector3(1,1,1);this.size={x:header.NX,y:header.NY,z:header.NZ};var data=new Float32Array(bin.buffer,1024+header.NSYMBT);//data must by (slowest changing) x,y,z (fastest changing)\n\tvar NX=header.NX,NY=header.NY,NZ=header.NZ;this.data=new Float32Array(NX*NY*NZ);for(var i=0;i<NX;i++){for(var j=0;j<NY;j++){for(var k=0;k<NZ;k++){//should I be concerned that I'm not using mapc?\n\tthis.data[(i*NY+j)*NZ+k]=data[(k*NY+j)*NX+i];}}}};//Hackish way to create webworker (independent of $3Dmol namespace) within minified file\n\t$3Dmol.workerString=function(){self.onmessage=function(oEvent){var obj=oEvent.data;var type=obj.type;if(type<0)// sending atom data, initialize\n\t{self.atomData=obj.atoms;self.volume=obj.volume;self.ps=new ProteinSurface();}else{var ps=self.ps;ps.initparm(obj.expandedExtent,type==1?false:true,self.volume);ps.fillvoxels(self.atomData,obj.extendedAtoms);ps.buildboundary();if(type===4||type===2){ps.fastdistancemap();ps.boundingatom(false);ps.fillvoxelswaals(self.atomData,obj.extendedAtoms);}ps.marchingcube(type);var VandF=ps.getFacesAndVertices(obj.atomsToShow);self.postMessage(VandF);}};}.toString().replace(/(^.*?\\{|\\}$)/g,\"\");$3Dmol.workerString+=\"; var ProteinSurface=\"+$3Dmol.ProteinSurface.toString().replace(/\\$3Dmol.MarchingCube./g,\"MarchingCube.\");$3Dmol.workerString+=\",MarchingCube=(\"+$3Dmol.MarchingCubeInitializer.toString()+\")();\";$3Dmol.SurfaceWorker=window.URL.createObjectURL(new Blob([$3Dmol.workerString],{type:'text/javascript'}));$3Dmol['workerString']=$3Dmol.workerString;$3Dmol['SurfaceWorker']=$3Dmol.SurfaceWorker;module.exports=$3Dmol;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(15);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _mol_widget_3d_model = __webpack_require__(2);\n\t\n\tvar _mol_widget_3d_model2 = _interopRequireDefault(_mol_widget_3d_model);\n\t\n\tvar _mol_widget_3d_view = __webpack_require__(3);\n\t\n\tvar _mol_widget_3d_view2 = _interopRequireDefault(_mol_widget_3d_view);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Nbmolviz3dReact = function (_React$Component) {\n\t  _inherits(Nbmolviz3dReact, _React$Component);\n\t\n\t  function Nbmolviz3dReact() {\n\t    _classCallCheck(this, Nbmolviz3dReact);\n\t\n\t    return _possibleConstructorReturn(this, (Nbmolviz3dReact.__proto__ || Object.getPrototypeOf(Nbmolviz3dReact)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Nbmolviz3dReact, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.renderNbmolviz();\n\t    }\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function componentDidUpdate() {\n\t      this.renderNbmolviz();\n\t    }\n\t  }, {\n\t    key: 'renderNbmolviz',\n\t    value: function renderNbmolviz() {\n\t      var model = new _mol_widget_3d_model2.default({\n\t        model_data: this.props.modelData\n\t      });\n\t      var view = new _mol_widget_3d_view2.default({\n\t        model: model,\n\t        el: this.container\n\t      });\n\t      view.render();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return _react2.default.createElement('div', { ref: function ref(c) {\n\t          _this2.container = c;\n\t        } });\n\t    }\n\t  }]);\n\t\n\t  return Nbmolviz3dReact;\n\t}(_react2.default.Component);\n\t\n\tNbmolviz3dReact.propTypes = {\n\t  modelData: _react2.default.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = Nbmolviz3dReact;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"keymirror\");\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"react\");\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 65924ec06e4e5146eaed\n **/","const selectionTypeConstants = {\n  ATOM: 'Atom',\n  RESIDUE: 'Residue',\n  CHAIN: 'Chain',\n};\n\nexport default selectionTypeConstants;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants/selection_types_constants.js\n **/","/**\n * Copyright 2016 Autodesk Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Backbone from 'backbone';\nimport selectionTypesConstants from '../constants/selection_types_constants';\n\nconst MolWidget3DModel = Backbone.Model.extend({\n  defaults: {\n    atom_labels_shown: false,\n    background_color: '#73757C',\n    background_opacity: 1.0,\n    height: '500px',\n    model_data: { atoms: [], bonds: [] },\n    orbital: {\n      cube_file: '',\n      iso_val: null,\n      opacity: null,\n    },\n    styles: {},\n    selected_atom_indices: [],\n    selection_type: selectionTypesConstants.ATOM,\n    shapes: [],\n    width: '500px',\n  },\n});\n\nexport default MolWidget3DModel;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/models/mol_widget_3d_model.js\n **/","/**\n * Copyright 2016 Autodesk Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Backbone from 'backbone';\nimport environmentConstants from '../constants/environment_constants';\nimport libUtils from '../utils/lib_utils';\nimport moleculeUtils from '../utils/molecule_utils';\n\nconst jQuery = require('jquery');\n\nwindow.$ = jQuery;\nconst $3Dmol = require('../vendor/3Dmol');\n\nconst DEFAULT_VISUALIZATION_TYPE = 'stick';\nconst DEFAULT_FONT_SIZE = 14;\nconst ORBITAL_COLOR_POSITIVE = 0xff0000;\nconst ORBITAL_COLOR_NEGATIVE = 0x0000ff;\n\nconst MolWidget3DView = Backbone.View.extend({\n  initialize() {\n    if (process.env.NODE_ENV === environmentConstants.DEVELOPMENT) {\n      if (!window.nbmolviz3d) {\n        window.nbmolviz3d = [];\n      }\n\n      window.nbmolviz3d.push(this);\n    }\n\n    this.model.on('change', this.render.bind(this));\n  },\n\n  render(event) {\n    const modelDataChanged = !event || Object.keys(event.changed).indexOf('model_data') !== -1;\n\n    this.messages = [];\n\n    this.mydiv = this.mydiv || window.document.createElement('div');\n    this.mydiv.classList.add('nbmolviz3d');\n    this.mydiv.style.width = this.model.get('width');\n    this.mydiv.style.height = this.model.get('height');\n    this.mydiv.style.position = 'relative';\n\n    if (!this.el.querySelector('.nbmolviz3d')) {\n      this.el.appendChild(this.mydiv);\n    }\n\n    this.glviewer = this.renderViewer(modelDataChanged);\n\n    if (this.send) {\n      this.send({ event: 'ready' });\n    }\n  },\n\n  renderViewer(modelDataChanged) {\n    const glviewer = this.glviewer || $3Dmol.createViewer(jQuery(this.mydiv), {\n      defaultcolors: $3Dmol.rasmolElementColors,\n    });\n\n    glviewer.clear();\n\n    const modelData = this.model.get('model_data');\n    if (typeof modelData === 'string') {\n      glviewer.addModel(modelData, 'pdb', {\n        keepH: true,\n      });\n    } else if (typeof modelData === 'object') {\n      glviewer.addModel(moleculeUtils.modelDataToCDJSON(modelData), 'json', {\n        keepH: true,\n      });\n\n      // Hack in chain and residue data, since it's not supported by chemdoodle json\n      glviewer.getModel().selectedAtoms().forEach((atom) => {\n        const modifiedAtom = atom;\n        modifiedAtom.atom = modelData.atoms[atom.serial].name;\n        modifiedAtom.chain = modelData.atoms[atom.serial].chain;\n        modifiedAtom.resi = modelData.atoms[atom.serial].residue_index;\n        modifiedAtom.resn = modelData.atoms[atom.serial].residue_name;\n      });\n    }\n\n    const styles = this.model.get('styles');\n    if (modelData.atoms) {\n      modelData.atoms.forEach((atom, i) => {\n        const style = styles[i] || {};\n        const libStyle = {};\n        const visualizationType = style.visualization_type || DEFAULT_VISUALIZATION_TYPE;\n\n        libStyle[visualizationType] = {};\n        Object.keys(style).forEach((styleKey) => {\n          libStyle[visualizationType][styleKey] = style[styleKey];\n        });\n\n        if (this.model.get('selected_atom_indices').indexOf(atom.serial) !== -1) {\n          libStyle[visualizationType].color = 0x1FF3FE;\n        }\n\n        if (typeof libStyle[visualizationType].color === 'string') {\n          libStyle[visualizationType].color = libUtils.colorStringToNumber(\n            libStyle[visualizationType].color\n          );\n        }\n\n        if (this.model.get('atom_labels_shown')) {\n          glviewer.addLabel(atom.name, {\n            fontSize: DEFAULT_FONT_SIZE,\n            position: {\n              x: atom.positions[0],\n              y: atom.positions[1],\n              z: atom.positions[2],\n            },\n          });\n        }\n\n        glviewer.setStyle({ serial: atom.serial }, libStyle);\n      });\n    } else {\n      glviewer.setStyle({}, {stick:{}});\n    }\n\n    // Shapes\n    this.model.get('shapes').forEach((shape) => {\n      if (shape.type) {\n        glviewer[`add${shape.type}`](libUtils.getShapeSpec(shape, this.setSelectionTrait));\n      }\n    });\n\n    // Orbital\n    const orbital = this.model.get('orbital');\n    if (orbital.cube_file) {\n      const volumeData = new $3Dmol.VolumeData(orbital.cube_file, 'cube');\n      glviewer.addIsosurface(volumeData, {\n        isoval: orbital.iso_val,\n        color: ORBITAL_COLOR_POSITIVE,\n        opacity: orbital.opacity,\n      });\n      glviewer.addIsosurface(volumeData, {\n        isoval: -orbital.iso_val,\n        color: ORBITAL_COLOR_NEGATIVE,\n        opacity: orbital.opacity,\n      });\n    }\n\n    glviewer.setBackgroundColor(\n      libUtils.colorStringToNumber(this.model.get('background_color')),\n      this.model.get('background_opacity')\n    );\n\n    glviewer.setClickable({}, true, this.onClick.bind(this));\n    glviewer.render();\n\n    if (modelDataChanged) {\n      glviewer.zoomTo();\n      glviewer.zoom(0.8, 2000);\n    }\n\n    return glviewer;\n  },\n\n  onClick(glAtom) {\n    const atoms = this.model.get('model_data').atoms;\n    const atom = atoms[glAtom.serial];\n    const selectionType = this.model.get('selection_type');\n    const selectedAtomIndices = this.model.get('selected_atom_indices');\n    const newSelectedAtomIndices = moleculeUtils.addSelection(\n      atoms,\n      selectedAtomIndices,\n      atom,\n      selectionType\n    );\n\n    this.model.set('selected_atom_indices', newSelectedAtomIndices);\n    this.model.save();\n  },\n});\n\nexport default MolWidget3DView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/views/mol_widget_3d_view.js\n **/","module.exports = require(\"backbone\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"backbone\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"jquery\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 5\n ** module chunks = 0\n **/","import keyMirror from 'keymirror';\n\nconst environmentConstants = keyMirror({\n  DEVELOPMENT: null,\n});\n\nexport default environmentConstants;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants/environment_constants.js\n **/","const shapeConstants = {\n  ARROW: 'Arrow',\n  SPHERE: 'Sphere',\n  CYLINDER: 'Cylinder',\n};\n\nexport default shapeConstants;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants/shape_constants.js\n **/","/**\n * Copyright 2016 Autodesk Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Set up jquery for Backbone\nimport jquery from 'jquery';\nimport MolWidget3DModel from './models/mol_widget_3d_model';\nimport MolWidget3DView from './views/mol_widget_3d_view';\nimport Nbmolviz3dReact from './views/nbmolviz3d_react.jsx';\n\nif (window) {\n  window.jquery = jquery;\n  window.$ = jquery;\n}\n\n\nexport { MolWidget3DModel, MolWidget3DView, Nbmolviz3dReact };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","import shapeConstants from '../constants/shape_constants';\n\n/**\n * Utils for working with the 3dmol.js library\n */\nconst libUtils = {\n  /**\n   * Given a color string (like #abcdef), return its Number representation\n   * If invalid input given, return the input\n   * @param colorString {String}\n   * @returns {Number}\n   */\n  colorStringToNumber(colorString) {\n    if (colorString.length !== 4 && colorString.length !== 7) {\n      return colorString;\n    }\n    if (colorString[0] !== '#') {\n      return colorString;\n    }\n\n    const colorInt = parseInt(colorString.substr(1, colorString.length - 1), 16);\n\n    if (isNaN(colorInt)) {\n      return colorString;\n    }\n\n    return colorInt;\n  },\n\n  /**\n   * Given a shape object from the main model, return a shape spec ready to go into 3Dmol.js\n   * @param shape {Object}\n   * @returns {Object}\n   */\n  getShapeSpec(shape, callback) {\n    let color;\n    if (shape.color) {\n      color = libUtils.colorStringToNumber(shape.color);\n    }\n\n    const shapeSpec = Object.assign({}, {\n      alpha: 0.8,\n      callback,\n      clickable: false,\n      color: 0x00FE03,\n      radius: shape.radius,\n    }, shape, { color });\n\n    if (shape.type === shapeConstants.ARROW) {\n      shapeSpec.start = shape.start;\n      shapeSpec.end = shape.end;\n    } else if (shape.type === shapeConstants.SPHERE) {\n      shapeSpec.center = shape.center;\n    } else if (shape.type === shapeConstants.CYLINDER) {\n      shapeSpec.fromCap = true;\n      shapeSpec.toCap = true;\n      shapeSpec.start = shape.start;\n      shapeSpec.end = shape.end;\n    } else {\n      throw new Error('Invalid shape type.');\n    }\n\n    return shapeSpec;\n  },\n};\n\nexport default libUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/lib_utils.js\n **/","import selectionTypesConstants from '../constants/selection_types_constants';\n\nconst moleculeUtils = {\n  /**\n   * Given molecule model data, return a JSON object in ChemDoodle format\n   * @param modelData {Object}\n   * @returns {String}\n   */\n  modelDataToCDJSON(modelData) {\n    const atoms = modelData.atoms.map(atom => ({\n      l: atom.elem,\n      x: atom.positions[0],\n      y: atom.positions[1],\n      z: atom.positions[2],\n      mass: atom.mass_magnitude,\n    }));\n\n    const bonds = modelData.bonds.map(bond => ({\n      b: bond.atom1_index,\n      e: bond.atom2_index,\n      o: bond.bond_order,\n    }));\n\n    return {\n      m: [{\n        a: atoms,\n        b: bonds,\n      }],\n    };\n  },\n\n  /**\n   * Return a new selection of atoms considering a clicked atom, the current selection type, and\n   * the currently selected atoms\n   * @param atoms {Array of Atoms}\n   * @param selectedAtoms {Array of Atoms}\n   * @param clickedAtom {Atom}\n   * @param selectionType {String}\n   * @returns {Array of Atoms}\n   */\n  addSelection(atoms, selectedAtoms, clickedAtom, selectionType) {\n    let selectedAtomsOut = selectedAtoms.slice();\n    const clickedIndex = selectedAtoms.indexOf(clickedAtom.serial);\n    const toggleOn = clickedIndex === -1;\n\n    if (selectionType === selectionTypesConstants.ATOM) {\n      if (toggleOn) {\n        selectedAtomsOut.push(clickedAtom.serial);\n      } else {\n        selectedAtomsOut.splice(clickedIndex, 1);\n      }\n\n      return selectedAtomsOut;\n    }\n\n    if (toggleOn) {\n      atoms.forEach((atom) => {\n        if (moleculeUtils.isSameGroup(clickedAtom, atom, selectionType)) {\n          selectedAtomsOut.push(atom.serial);\n        }\n      });\n    } else {\n      selectedAtomsOut = selectedAtomsOut.filter((atomSerial) => {\n        const atom = atoms[atomSerial];\n        return !moleculeUtils.isSameGroup(clickedAtom, atom, selectionType);\n      });\n    }\n\n    return selectedAtomsOut;\n  },\n\n  /**\n   * Returns a boolean indicating if the given atoms are of the same type (residue or chain)\n   * @param atomA {Atom}\n   * @param atomB {Atom}\n   * @param selectionType {String}\n   * @returns {Boolean}\n   */\n  isSameGroup(atomA, atomB, selectionType) {\n    if (selectionType === selectionTypesConstants.RESIDUE) {\n      return atomA.residue_index === atomB.residue_index;\n    }\n    if (selectionType === selectionTypesConstants.CHAIN) {\n      return atomA.chain === atomB.chain;\n    }\n\n    throw new Error('selectionType must be either residue or chain');\n  },\n};\n\nexport default moleculeUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/molecule_utils.js\n **/","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.MMTF = global.MMTF || {})));\n}(this, function (exports) { 'use strict';\n\n  /**\n   * @file utf8-utils\n   * @private\n   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n   * mostly copied from https://github.com/creationix/msgpack-js-browser\n   * by Tim Caswell <tim@creationix.com>, MIT License, Copyright (c) 2013\n   */\n\n\n  // Encode string as utf8 into dataview at offset\n  function utf8Write(view, offset, string) {\n    var byteLength = view.byteLength;\n    for(var i = 0, l = string.length; i < l; i++) {\n      var codePoint = string.charCodeAt(i);\n\n      // One byte of UTF-8\n      if (codePoint < 0x80) {\n        view.setUint8(offset++, codePoint >>> 0 & 0x7f | 0x00);\n        continue;\n      }\n\n      // Two bytes of UTF-8\n      if (codePoint < 0x800) {\n        view.setUint8(offset++, codePoint >>> 6 & 0x1f | 0xc0);\n        view.setUint8(offset++, codePoint >>> 0 & 0x3f | 0x80);\n        continue;\n      }\n\n      // Three bytes of UTF-8.\n      if (codePoint < 0x10000) {\n        view.setUint8(offset++, codePoint >>> 12 & 0x0f | 0xe0);\n        view.setUint8(offset++, codePoint >>> 6  & 0x3f | 0x80);\n        view.setUint8(offset++, codePoint >>> 0  & 0x3f | 0x80);\n        continue;\n      }\n\n      // Four bytes of UTF-8\n      if (codePoint < 0x110000) {\n        view.setUint8(offset++, codePoint >>> 18 & 0x07 | 0xf0);\n        view.setUint8(offset++, codePoint >>> 12 & 0x3f | 0x80);\n        view.setUint8(offset++, codePoint >>> 6  & 0x3f | 0x80);\n        view.setUint8(offset++, codePoint >>> 0  & 0x3f | 0x80);\n        continue;\n      }\n      throw new Error(\"bad codepoint \" + codePoint);\n    }\n  }\n\n  function utf8ByteCount(string) {\n    var count = 0;\n    for(var i = 0, l = string.length; i < l; i++) {\n      var codePoint = string.charCodeAt(i);\n      if (codePoint < 0x80) {\n        count += 1;\n        continue;\n      }\n      if (codePoint < 0x800) {\n        count += 2;\n        continue;\n      }\n      if (codePoint < 0x10000) {\n        count += 3;\n        continue;\n      }\n      if (codePoint < 0x110000) {\n        count += 4;\n        continue;\n      }\n      throw new Error(\"bad codepoint \" + codePoint);\n    }\n    return count;\n  }\n\n  /**\n   * encode data value (recursively) into binary encoded MessagePack v5 (http://msgpack.org/)\n   * @param  {Object|Array|String|Number|Boolean|null} value  [description]\n   * @param  {DataView} view   [description]\n   * @param  {Integer} offset [description]\n   * @return {Integer} number of bytes written into view\n   */\n  function encode$1(value, view, offset) {\n    var type = typeof value;\n\n    // Strings Bytes\n    if (type === \"string\") {\n      var length = utf8ByteCount(value);\n      // fix str\n      if (length < 0x20) {\n        view.setUint8(offset, length | 0xa0);\n        utf8Write(view, offset + 1, value);\n        return 1 + length;\n      }\n      // str 8\n      if (length < 0x100) {\n        view.setUint8(offset, 0xd9);\n        view.setUint8(offset + 1, length);\n        utf8Write(view, offset + 2, value);\n        return 2 + length;\n      }\n      // str 16\n      if (length < 0x10000) {\n        view.setUint8(offset, 0xda);\n        view.setUint16(offset + 1, length);\n        utf8Write(view, offset + 3, value);\n        return 3 + length;\n      }\n      // str 32\n      if (length < 0x100000000) {\n        view.setUint8(offset, 0xdb);\n        view.setUint32(offset + 1, length);\n        utf8Write(view, offset + 5, value);\n        return 5 + length;\n      }\n    }\n\n    if (value instanceof Uint8Array) {\n      var length = value.byteLength;\n      var bytes = new Uint8Array(view.buffer);\n      // bin 8\n      if (length < 0x100) {\n        view.setUint8(offset, 0xc4);\n        view.setUint8(offset + 1, length);\n        bytes.set(value, offset + 2);\n        return 2 + length;\n      }\n      // bin 16\n      if (length < 0x10000) {\n        view.setUint8(offset, 0xc5);\n        view.setUint16(offset + 1, length);\n        bytes.set(value, offset + 3);\n        return 3 + length;\n      }\n      // bin 32\n      if (length < 0x100000000) {\n        view.setUint8(offset, 0xc6);\n        view.setUint32(offset + 1, length);\n        bytes.set(value, offset + 5);\n        return 5 + length;\n      }\n    }\n\n    if (type === \"number\") {\n      if (!isFinite(value)) {\n          throw new Error(\"Number not finite: \" + value);\n      }\n\n      // Floating point\n      if (Math.floor(value) !== value) {\n        view.setUint8(offset, 0xcb);\n        view.setFloat64(offset + 1, value);\n        return 9;\n      }\n\n      // Integers\n      if (value >=0) {\n        // positive fixnum\n        if (value < 0x80) {\n          view.setUint8(offset, value);\n          return 1;\n        }\n        // uint 8\n        if (value < 0x100) {\n          view.setUint8(offset, 0xcc);\n          view.setUint8(offset + 1, value);\n          return 2;\n        }\n        // uint 16\n        if (value < 0x10000) {\n          view.setUint8(offset, 0xcd);\n          view.setUint16(offset + 1, value);\n          return 3;\n        }\n        // uint 32\n        if (value < 0x100000000) {\n          view.setUint8(offset, 0xce);\n          view.setUint32(offset + 1, value);\n          return 5;\n        }\n        throw new Error(\"Number too big 0x\" + value.toString(16));\n      }\n      // negative fixnum\n      if (value >= -0x20) {\n        view.setInt8(offset, value);\n        return 1;\n      }\n      // int 8\n      if (value >= -0x80) {\n        view.setUint8(offset, 0xd0);\n        view.setInt8(offset + 1, value);\n        return 2;\n      }\n      // int 16\n      if (value >= -0x8000) {\n        view.setUint8(offset, 0xd1);\n        view.setInt16(offset + 1, value);\n        return 3;\n      }\n      // int 32\n      if (value >= -0x80000000) {\n        view.setUint8(offset, 0xd2);\n        view.setInt32(offset + 1, value);\n        return 5;\n      }\n      throw new Error(\"Number too small -0x\" + (-value).toString(16).substr(1));\n    }\n\n    // null\n    if (value === null) {\n      view.setUint8(offset, 0xc0);\n      return 1;\n    }\n\n    // Boolean\n    if (type === \"boolean\") {\n      view.setUint8(offset, value ? 0xc3 : 0xc2);\n      return 1;\n    }\n\n    // Container Types\n    if (type === \"object\") {\n      var length, size = 0;\n      var isArray = Array.isArray(value);\n\n      if (isArray) {\n        length = value.length;\n      }\n      else {\n        var keys = Object.keys(value);\n        length = keys.length;\n      }\n\n      var size;\n      if (length < 0x10) {\n        view.setUint8(offset, length | (isArray ? 0x90 : 0x80));\n        size = 1;\n      }\n      else if (length < 0x10000) {\n        view.setUint8(offset, isArray ? 0xdc : 0xde);\n        view.setUint16(offset + 1, length);\n        size = 3;\n      }\n      else if (length < 0x100000000) {\n        view.setUint8(offset, isArray ? 0xdd : 0xdf);\n        view.setUint32(offset + 1, length);\n        size = 5;\n      }\n\n      if (isArray) {\n        for (var i = 0; i < length; i++) {\n          size += encode$1(value[i], view, offset + size);\n        }\n      }\n      else {\n        for (var i = 0; i < length; i++) {\n          var key = keys[i];\n          size += encode$1(key, view, offset + size);\n          size += encode$1(value[key], view, offset + size);\n        }\n      }\n\n      return size;\n    }\n    throw new Error(\"Unknown type \" + type);\n  }\n\n  function encodedSize(value) {\n    var type = typeof value;\n\n    // Raw Bytes\n    if (type === \"string\") {\n      var length = utf8ByteCount(value);\n      if (length < 0x20) {\n        return 1 + length;\n      }\n      if (length < 0x100) {\n        return 2 + length;\n      }\n      if (length < 0x10000) {\n        return 3 + length;\n      }\n      if (length < 0x100000000) {\n        return 5 + length;\n      }\n    }\n\n    if (value instanceof Uint8Array) {\n      var length = value.byteLength;\n      if (length < 0x100) {\n        return 2 + length;\n      }\n      if (length < 0x10000) {\n        return 3 + length;\n      }\n      if (length < 0x100000000) {\n        return 5 + length;\n      }\n    }\n\n    if (type === \"number\") {\n      // Floating Point\n      // double\n      if (Math.floor(value) !== value) return 9;\n\n      // Integers\n      if (value >=0) {\n        // positive fixnum\n        if (value < 0x80) return 1;\n        // uint 8\n        if (value < 0x100) return 2;\n        // uint 16\n        if (value < 0x10000) return 3;\n        // uint 32\n        if (value < 0x100000000) return 5;\n        throw new Error(\"Number too big 0x\" + value.toString(16));\n      }\n      // negative fixnum\n      if (value >= -0x20) return 1;\n      // int 8\n      if (value >= -0x80) return 2;\n      // int 16\n      if (value >= -0x8000) return 3;\n      // int 32\n      if (value >= -0x80000000) return 5;\n      throw new Error(\"Number too small -0x\" + value.toString(16).substr(1));\n    }\n\n    // Boolean, null\n    if (type === \"boolean\" || value === null) return 1;\n\n    // Container Types\n    if (type === \"object\") {\n      var length, size = 0;\n      if (Array.isArray(value)) {\n        length = value.length;\n        for (var i = 0; i < length; i++) {\n          size += encodedSize(value[i]);\n        }\n      }\n      else {\n        var keys = Object.keys(value);\n        length = keys.length;\n        for (var i = 0; i < length; i++) {\n          var key = keys[i];\n          size += encodedSize(key) + encodedSize(value[key]);\n        }\n      }\n      if (length < 0x10) {\n        return 1 + size;\n      }\n      if (length < 0x10000) {\n        return 3 + size;\n      }\n      if (length < 0x100000000) {\n        return 5 + size;\n      }\n      throw new Error(\"Array or object too long 0x\" + length.toString(16));\n    }\n    throw new Error(\"Unknown type \" + type);\n  }\n\n  function encodeMsgpack(value) {\n    var buffer = new ArrayBuffer(encodedSize(value));\n    var view = new DataView(buffer);\n    encode$1(value, view, 0);\n    return new Uint8Array(buffer);\n  }\n\n  /**\n   * @file mmtf-constants\n   * @private\n   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n   */\n\n\n  var PassThroughFields = [\n      \"mmtfVersion\", \"mmtfProducer\",\n      \"unitCell\", \"spaceGroup\", \"structureId\", \"title\",\n      \"depositionDate\", \"releaseDate\",\n      \"experimentalMethods\", \"resolution\", \"rFree\", \"rWork\",\n      \"bioAssemblyList\", \"ncsOperatorList\", \"entityList\", \"groupList\",\n      \"numBonds\", \"numAtoms\", \"numGroups\", \"numChains\", \"numModels\",\n      \"groupsPerChain\", \"chainsPerModel\",\n  ];\n\n  var EncodedFields = [\n    // required\n      \"xCoordList\", \"yCoordList\", \"zCoordList\",\n      \"groupIdList\", \"groupTypeList\",\n      \"chainIdList\",\n      // optional\n      \"bFactorList\", \"atomIdList\", \"altLocList\", \"occupancyList\",\n      \"secStructList\", \"insCodeList\", \"sequenceIndexList\",\n      \"chainNameList\",\n      \"bondAtomList\", \"bondOrderList\"\n  ];\n\n  var AllFields = PassThroughFields.concat( EncodedFields );\n\n  /**\n   * @file mmtf-utils\n   * @private\n   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n   */\n\n  /**\n   * mmtf utils module.\n   * @module MmtfUtils\n   */\n\n\n  function getView( ctor, typedArray, elemSize ){\n      return typedArray ? new ctor(\n          typedArray.buffer,\n          typedArray.byteOffset,\n          typedArray.byteLength / ( elemSize || 1 )\n      ) : undefined;\n  }\n\n  function getDataView( typedArray ){\n      return getView( DataView, typedArray );\n  }\n\n  /**\n   * get an Uint8Array view on the input array memory\n   * @static\n   * @param  {TypedArray} dataArray - input array\n   * @return {Uint8Array} new view on the input array memory\n   */\n  function getUint8View( typedArray ){\n      return getView( Uint8Array, typedArray );\n  }\n\n  /**\n   * get an Int8Array view on the input array memory\n   * @static\n   * @param  {TypedArray} dataArray - input array\n   * @return {Int8Array} new view on the input array memory\n   */\n  function getInt8View( typedArray ){\n      return getView( Int8Array, typedArray );\n  }\n\n  /**\n   * get an Int32Array view on the input array memory\n   * @static\n   * @param  {TypedArray} dataArray - input array\n   * @return {Int32Array} new view on the input array memory\n   */\n  function getInt32View( typedArray ){\n      return getView( Int32Array, typedArray, 4 );\n  }\n\n  function getFloat32View( typedArray ){\n      return getView( Float32Array, typedArray, 4 );\n  }\n\n\n  /**\n   * get an Int16Array copy of the the input array data\n   * @static\n   * @param  {TypedArray} view - input data in big endian format\n   * @param  {Int16Array} [dataArray] - pre-allocated output array\n   * @return {Int16Array} copy of the input array data\n   */\n  function decodeInt16( bytes, output ){\n      var n = bytes.length / 2;\n      if( !output ) output = new Int16Array( n );\n      for( var i = 0, i2 = 0; i < n; ++i, i2 += 2 ){\n          output[ i ] = bytes[ i2 ] << 8 ^ bytes[ i2 + 1 ] << 0;\n      }\n      return output;\n  }\n\n  /**\n   * make big endian buffer of an int16 array\n   * @static\n   * @param  {Array|TypedArray} array - array of int16 values\n   * @return {ArrayBuffer} big endian buffer\n   */\n  function encodeInt16( array, output ){\n      var n = array.length;\n      if( !output ) output = new Uint8Array( 2 * n );\n      var dv = getDataView( output );\n      for( var i = 0; i < n; ++i ){\n          dv.setInt16( 2 * i, array[ i ] );\n      }\n      return getUint8View( output );\n  }\n\n  /**\n   * get an Int32Array copy of the the input array data\n   * @static\n   * @param  {TypedArray} view - input data in big endian format\n   * @param  {Int32Array} [dataArray] - pre-allocated output array\n   * @return {Int32Array} copy of the input array data\n   */\n  function decodeInt32( bytes, output ){\n      var n = bytes.length / 4;\n      if( !output ) output = new Int32Array( n );\n      for( var i = 0, i4 = 0; i < n; ++i, i4 += 4 ){\n          output[ i ] = (\n              bytes[ i4     ] << 24 ^ bytes[ i4 + 1 ] << 16 ^\n              bytes[ i4 + 2 ] <<  8 ^ bytes[ i4 + 3 ] <<  0\n          );\n      }\n      return output;\n  }\n\n  /**\n   * make big endian buffer of an int32 array\n   * @static\n   * @param  {Array|TypedArray} array - array of int32 values\n   * @return {ArrayBuffer} big endian buffer\n   */\n  function encodeInt32( array, output ){\n      var n = array.length;\n      if( !output ) output = new Uint8Array( 4 * n );\n      var dv = getDataView( output );\n      for( var i = 0; i < n; ++i ){\n          dv.setInt32( 4 * i, array[ i ] );\n      }\n      return getUint8View( output );\n  }\n\n  function decodeFloat32( bytes, output ){\n      var n = bytes.length;\n      if( !output ) output = new Float32Array( n / 4 );\n      var dvOut = getDataView( output );\n      var dvIn = getDataView( bytes );\n      for( var i = 0, i4 = 0, il = n / 4; i < il; ++i, i4 += 4 ){\n          dvOut.setFloat32( i4, dvIn.getFloat32( i4 ), true );\n      }\n      return output;\n  }\n\n  /**\n   * decode integers into floats using given divisor\n   * example:\n   *     intArray: [ 12, 34, 543, 687, 2, 0, 4689 ]\n   *     divisor: 100\n   *     return: [ 0.12, 0.34, 5.43, 6.87, 0.02, 0.00, 46.89 ]\n   * @static\n   * @param  {TypedArray|Array} intArray - input array containing integers\n   * @param  {Number} divisor - number to devide the integers to obtain floats\n   * @param  {Float32Array} [dataArray] - pre-allocated output array\n   * @return {Float32Array} decoded array\n   */\n  function decodeInteger( intArray, divisor, output ){\n      var n = intArray.length;\n      var invDiv = 1/divisor;\n      if( !output ) output = new Float32Array( n );\n      for( var i = 0; i < n; ++i ){\n          // multiply by inverse of the divisor which is faster then division\n          output[ i ] = intArray[ i ] * invDiv;\n      }\n      return output;\n  }\n\n  function encodeInteger( floatArray, factor, output ){\n      var n = floatArray.length;\n      if( !output ) output = new Int32Array( n );\n      for( var i = 0; i < n; ++i ){\n          output[ i ] = Math.round( floatArray[ i ] * factor );\n      }\n      return output;\n  }\n\n\n\n  /**\n   * perform run-length decoding of input array\n   * example:\n   *     array: [ 0, 2, 3, 5 ]  // pairs of values and length of a run\n   *     return: [ 0, 0, 3, 3, 3, 3, 3 ]\n   * @static\n   * @param  {TypedArray|Array} array - run-length encoded input array\n   * @param  {TypedArray|Array} [dataArray] - pre-allocated output array\n   * @return {TypedArray|Array} decoded array\n   */\n  function decodeRun( array, output ){\n      var i, il;\n      if( !output ){\n          // calculate the length the decoded array will have\n          var fullLength = 0;\n          for( i = 0, il = array.length; i < il; i+=2 ){\n              fullLength += array[ i + 1 ];\n          }\n          // create a new array of the same type of the input array\n          output = new array.constructor( fullLength );\n      }\n      var dataOffset = 0;\n      for( i = 0, il = array.length; i < il; i+=2 ){\n          var value = array[ i ];  // value to be repeated\n          var length = array[ i + 1 ];  // number of repeats\n          for( var j = 0; j < length; ++j ){\n              output[ dataOffset ] = value;\n              ++dataOffset;\n          }\n      }\n      return output;\n  }\n\n  function encodeRun( array ){\n      if( array.length === 0 ) return new Int32Array(0);\n      var i, il;\n      // calculate output size\n      var fullLength = 2;\n      for( i = 1, il = array.length; i < il; ++i ){\n          if( array[ i - 1 ] !== array[ i ] ){\n              fullLength += 2;\n          }\n      }\n      var output = new Int32Array( fullLength );\n      var offset = 0;\n      var runLength = 1;\n      for( i = 1, il = array.length; i < il; ++i ){\n          if( array[ i - 1 ] !== array[ i ] ){\n              output[ offset ] = array[ i - 1 ];\n              output[ offset + 1 ] = runLength;\n              runLength = 1;\n              offset += 2;\n          }else{\n              ++runLength;\n          }\n      }\n      output[ offset ] = array[ array.length - 1 ];\n      output[ offset + 1 ] = runLength;\n      return output;\n  }\n\n\n\n  /**\n   * perform delta decoding of the input array\n   * by iterativly adding the ith element's value to the i+1th\n   * example:\n   *     dataArray: [ 0, 2, 1, 2, 1, 1, -4, -2, 9 ]\n   *     return: [ 0, 2, 3, 5, 6, 7, 3, 1, 10 ]\n   * @static\n   * @param  {TypedArray|Array} dataArray - delta encoded input array\n   * @return {TypedArray|Array} decoded array\n   */\n  function decodeDelta( array, output ){\n      var n = array.length;\n      if( !output ) output = new array.constructor( n );\n      if( n ) output[ 0 ] = array[ 0 ];\n      for( var i = 1; i < n; ++i ){\n          output[ i ] = array[ i ] + output[ i - 1 ];\n      }\n      return output;\n  }\n\n  function encodeDelta( array, output ){\n      var n = array.length;\n      if( !output ) output = new array.constructor( n );\n      output[ 0 ] = array[ 0 ];\n      for( var i = 1; i < n; ++i ){\n          output[ i ] = array[ i ] - array[ i - 1 ];\n      }\n      return output;\n  }\n\n\n\n  /**\n   * [decodePacking description]\n   * @param  {Int16Array|Int8Array} int16or8 [description]\n   * @param  {Int32Array} output   [description]\n   * @return {Int32Array}          [description]\n   */\n  function decodePacking( int16or8, output ){\n      var upperLimit = int16or8 instanceof Int8Array ? 0x7F : 0x7FFF;\n      var lowerLimit = -upperLimit - 1;\n      var n = int16or8.length;\n      var i, j;\n      if( !output ){\n          var fullLength = 0;\n          for( i = 0; i < n; ++i ){\n              if( int16or8[ i ] < upperLimit && int16or8[ i ] > lowerLimit ){\n                  ++fullLength;\n              }\n          }\n          output = new Int32Array( fullLength );\n      }\n      i = 0;\n      j = 0;\n      while( i < n ){\n          var value = 0;\n          while( int16or8[ i ] === upperLimit || int16or8[ i ] === lowerLimit ){\n              value += int16or8[ i ];\n              ++i;\n              if( int16or8[ i ] === 0 ){\n                  break;\n              }\n          }\n          value += int16or8[ i ];\n          ++i;\n          output[ j ] = value;\n          ++j;\n      }\n      return output;\n  }\n\n  /**\n   * integer packing using recursive indexing\n   * @param  {Array|TyepedArray} intArray [description]\n   * @param  {Boolean} useInt8  [description]\n   * @return {Int16Array|Int8Array}          [description]\n   */\n  function encodePacking( intArray, useInt8 ){\n      var upperLimit = useInt8 ? 0x7F : 0x7FFF;\n      var lowerLimit = -upperLimit - 1;\n      var i;\n      var n = intArray.length;\n      var size = 0;\n      for( i = 0; i < n; ++i ){\n          var value = intArray[ i ];\n          if( value === 0 ){\n              ++size;\n          }else if( value === upperLimit || value === lowerLimit ){\n              size += 2;\n          }else if( value > 0) {\n              size += Math.ceil( value / upperLimit );\n          }else {\n              size += Math.ceil( value / lowerLimit );\n          }\n      }\n      var output = useInt8 ? new Int8Array( size ) : new Int16Array( size );\n      var j = 0;\n      for( i = 0; i < n; ++i ){\n          var value = intArray[ i ];\n          if( value >= 0) {\n              while( value >= upperLimit ){\n                  output[ j ] = upperLimit;\n                  ++j;\n                  value -= upperLimit;\n              }\n          }else{\n              while( value <= lowerLimit ){\n                  output[ j ] = lowerLimit;\n                  ++j;\n                  value -= lowerLimit;\n              }\n          }\n          output[ j ] = value;\n          ++j;\n      }\n      return output;\n  }\n\n\n\n  function decodeDeltaRun( array, output ){\n      return decodeDelta( decodeRun( array ), output );\n  }\n\n  function encodeDeltaRun( array ){\n      return encodeRun( encodeDelta( array ) );\n  }\n\n\n\n  /**\n   * perform run-length decoding followed (@see decodeRunLength)\n   * by decoding integers into floats using given divisor (@see decodeIntegerToFloat)\n   * example:\n   *     array: [ 320, 3, 100, 2 ]\n   *     divisor: 100\n   *     return: [ 3.20, 3.20, 3.20, 1.00, 1.00 ]\n   * @static\n   * @param  {Uint8Array} array - run-length encoded int32 array as bytes in big endian format\n   * @param  {Integer} divisor - number to devide the integers to obtain floats\n   * @param  {Float32Array} dataArray - pre-allocated output array\n   * @return {Float32Array} decoded array\n   */\n  function decodeIntegerRun( intArray, divisor, output ){\n      return decodeInteger(\n          decodeRun( intArray, getInt32View( output ) ), divisor, output\n      );\n  }\n\n  function encodeIntegerRun( floatArray, factor ){\n      return encodeRun( encodeInteger( floatArray, factor ) );\n  }\n\n\n\n  function decodeIntegerDelta( intArray, divisor, output ){\n      return decodeInteger(\n          decodeDelta( intArray, getInt32View( output ) ), divisor, output\n      );\n  }\n\n  function encodeIntegerDelta( floatArray, factor, output ){\n      return encodeDelta( encodeInteger( floatArray, factor ), output );\n  }\n\n\n\n  function decodeIntegerPacking( int16or8, divisor, output ){\n      return decodeInteger(\n          decodePacking( int16or8, getInt32View( output ) ), divisor, output\n      );\n  }\n\n  function decodeIntegerDeltaPacking( int16or8, divisor, output ){\n      var unpacked = decodePacking( int16or8, getInt32View( output ) );\n      return decodeIntegerDelta( unpacked, divisor, getFloat32View( unpacked ) );\n  }\n\n  function encodeIntegerDeltaPacking( floatArray, factor, useInt8 ){\n      return encodePacking( encodeIntegerDelta( floatArray, factor ), useInt8 );\n  }\n\n\n\n  function decodeBytes( bytes ){\n      var dv = getDataView( bytes );\n      var type = dv.getInt32( 0 );\n      var size = dv.getInt32( 4 );\n      var param = bytes.subarray( 8, 12 );\n      var bytes = bytes.subarray( 12 );\n      return [ type, bytes, size, param ];\n  }\n\n  function encodeBytes( type, size, param, bytes ){\n      var buffer = new ArrayBuffer( 12 + bytes.byteLength );\n      var out = new Uint8Array( buffer );\n      var dv = new DataView( buffer );\n      dv.setInt32( 0, type );\n      dv.setInt32( 4, size );\n      if( param ) out.set( param, 8 );\n      out.set( bytes, 12 );\n      return out;\n  }\n\n  function passInt8( int8 ){\n      var size = int8.length;\n      var bytes = getUint8View( int8 );\n      return encodeBytes( 2, size, undefined, bytes );\n  }\n\n  function passInt32( int32 ){\n      var size = int32.length;\n      var bytes = encodeInt32( int32 );\n      return encodeBytes( 4, size, undefined, bytes );\n  }\n\n  function passString( stringBytes, length ){\n      var size = stringBytes.length / length;\n      var param = encodeInt32([ length ]);\n      var bytes = getUint8View( stringBytes );\n      return encodeBytes( 5, size, param, bytes );\n  }\n\n  function runChar( charBytes ){\n      var size = charBytes.length;\n      var bytes = encodeInt32( encodeRun( charBytes ) );\n      return encodeBytes( 6, size, undefined, bytes );\n  }\n\n  function deltaRun( int32 ){\n      var size = int32.length;\n      var bytes = encodeInt32( encodeDeltaRun( int32 ) );\n      return encodeBytes( 8, size, undefined, bytes );\n  }\n\n  function integerRun( float32, factor ){\n      var size = float32.length;\n      var param = encodeInt32([ factor ]);\n      var bytes = encodeInt32( encodeIntegerRun( float32, factor ) );\n      return encodeBytes( 9, size, param, bytes );\n  }\n\n  function integerDeltaPacking16( float32, factor ){\n      var size = float32.length;\n      var param = encodeInt32([ factor ]);\n      var bytes = encodeInt16( encodeIntegerDeltaPacking( float32, factor ) );\n      return encodeBytes( 10, size, param, bytes );\n  }\n\n  function encodeMmtf( inputDict ){\n\n      var outputDict = {};\n\n      // copy some fields over from the input dict\n      PassThroughFields.forEach( function( name ){\n          if( inputDict[ name ] !== undefined ){\n              outputDict[ name ] = inputDict[ name ];\n          }\n      } );\n\n      //////////////\n      // bond data\n\n      // encode inter group bond atom indices, i.e. get bytes in big endian order\n      if( inputDict.bondAtomList ){\n          outputDict.bondAtomList = passInt32( inputDict.bondAtomList );\n      }\n\n      // encode inter group bond orders, i.e. get bytes\n      if( inputDict.bondOrderList ){\n          outputDict.bondOrderList = passInt8( inputDict.bondOrderList );\n      }\n\n      //////////////\n      // atom data\n\n      // split-list delta & integer encode x, y, z atom coords\n      outputDict.xCoordList = integerDeltaPacking16( inputDict.xCoordList, 1000 );\n      outputDict.yCoordList = integerDeltaPacking16( inputDict.yCoordList, 1000 );\n      outputDict.zCoordList = integerDeltaPacking16( inputDict.zCoordList, 1000 );\n\n      // split-list delta & integer encode b-factors\n      if( inputDict.bFactorList ){\n          outputDict.bFactorList = integerDeltaPacking16( inputDict.bFactorList, 100 );\n      }\n\n      // delta & run-length encode atom ids\n      if( inputDict.atomIdList ){\n          outputDict.atomIdList = deltaRun( inputDict.atomIdList );\n      }\n\n      // run-length encode alternate labels\n      if( inputDict.altLocList ){\n          outputDict.altLocList = runChar( inputDict.altLocList );\n      }\n\n      // run-length & integer encode occupancies\n      if( inputDict.occupancyList ){\n          outputDict.occupancyList = integerRun( inputDict.occupancyList, 100 );\n      }\n\n      ///////////////\n      // group data\n\n      // run-length & delta encode group numbers\n      outputDict.groupIdList = deltaRun( inputDict.groupIdList );\n\n      // encode group types, i.e. get int32 array\n      outputDict.groupTypeList = passInt32( inputDict.groupTypeList );\n\n      // encode secondary structure, i.e. get bytes\n      if( inputDict.secStructList ){\n          outputDict.secStructList = passInt8( inputDict.secStructList, 1 );\n      }\n\n      // run-length encode insertion codes\n      if( inputDict.insCodeList ){\n          outputDict.insCodeList = runChar( inputDict.insCodeList );\n      }\n\n      // run-length & delta encode sequence indices\n      if( inputDict.sequenceIndexList ){\n          outputDict.sequenceIndexList = deltaRun( inputDict.sequenceIndexList );\n      }\n\n      ///////////////\n      // chain data\n\n      // encode chain ids, i.e. get bytes\n      outputDict.chainIdList = passString( inputDict.chainIdList, 4 );\n\n      // encode chain names, i.e. get bytes\n      if( inputDict.chainNameList ){\n          outputDict.chainNameList = passString( inputDict.chainNameList, 4 );\n      }\n\n      return outputDict;\n\n  }\n\n  /**\n   * @file msgpack-decode\n   * @private\n   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n   */\n\n  /**\n   * msgpack decode module.\n   * @module MsgpackDecode\n   */\n\n  /**\n   * decode binary encoded MessagePack v5 (http://msgpack.org/) data\n   * @static\n   * @param  {Uint8Array} buffer - binary encoded MessagePack data\n   * @return {Object|Array|String|Number|Boolean|null} decoded Messagepack data\n   */\n  function decodeMsgpack(buffer) {\n    // Loosely based on\n    // The MIT License (MIT)\n    // Copyright (c) 2013 Tim Caswell <tim@creationix.com>\n    // https://github.com/creationix/msgpack-js\n    var offset = 0;\n    var dataView = new DataView(buffer.buffer);\n\n    /**\n     * decode all key-value pairs of a map into an object\n     * @param  {Integer} length - number of key-value pairs\n     * @return {Object} decoded map\n     */\n    function map(length) {\n      var value = {};\n      for (var i = 0; i < length; i++) {\n        var key = parse();\n        value[key] = parse();\n      }\n      return value;\n    }\n\n    /**\n     * decode binary array\n     * @param  {Integer} length - number of elements in the array\n     * @return {Uint8Array} decoded array\n     */\n    function bin(length) {\n      var value = buffer.subarray(offset, offset + length);\n      offset += length;\n      return value;\n    }\n\n    /**\n     * decode string\n     * @param  {Integer} length - number string characters\n     * @return {String} decoded string\n     */\n    function str(length) {\n      var array = buffer.subarray(offset, offset + length);\n      offset += length;\n      // limit number of arguments to String.fromCharCode to something\n      // browsers can handle, see http://stackoverflow.com/a/22747272\n      var chunkSize = 0xffff;\n      if(length > chunkSize){\n        var c = [];\n        for(var i = 0; i < array.length; i += chunkSize) {\n          c.push(String.fromCharCode.apply(\n            null, array.subarray(i, i + chunkSize)\n          ));\n        }\n        return c.join(\"\");\n      }else{\n        return String.fromCharCode.apply(null, array);\n      }\n    }\n\n    /**\n     * decode array\n     * @param  {Integer} length - number of array elements\n     * @return {Array} decoded array\n     */\n    function array(length) {\n      var value = new Array(length);\n      for (var i = 0; i < length; i++) {\n        value[i] = parse();\n      }\n      return value;\n    }\n\n    /**\n     * recursively parse the MessagePack data\n     * @return {Object|Array|String|Number|Boolean|null} decoded MessagePack data\n     */\n    function parse() {\n      var type = buffer[offset];\n      var value, length, extType;\n      // Positive FixInt\n      if ((type & 0x80) === 0x00) {\n        offset++;\n        return type;\n      }\n      // FixMap\n      if ((type & 0xf0) === 0x80) {\n        length = type & 0x0f;\n        offset++;\n        return map(length);\n      }\n      // FixArray\n      if ((type & 0xf0) === 0x90) {\n        length = type & 0x0f;\n        offset++;\n        return array(length);\n      }\n      // FixStr\n      if ((type & 0xe0) === 0xa0) {\n        length = type & 0x1f;\n        offset++;\n        return str(length);\n      }\n      // Negative FixInt\n      if ((type & 0xe0) === 0xe0) {\n        value = dataView.getInt8(offset);\n        offset++;\n        return value;\n      }\n      switch (type) {\n      // nil\n      case 0xc0:\n        offset++;\n        return null;\n      // 0xc1: (never used, could be employed for padding)\n      // false\n      case 0xc2:\n        offset++;\n        return false;\n      // true\n      case 0xc3:\n        offset++;\n        return true;\n      // bin 8\n      case 0xc4:\n        length = dataView.getUint8(offset + 1);\n        offset += 2;\n        return bin(length);\n      // bin 16\n      case 0xc5:\n        length = dataView.getUint16(offset + 1);\n        offset += 3;\n        return bin(length);\n      // bin 32\n      case 0xc6:\n        length = dataView.getUint32(offset + 1);\n        offset += 5;\n        return bin(length);\n      // // ext 8\n      // case 0xc7:\n      //   length = dataView.getUint8(offset + 1);\n      //   extType = dataView.getUint8(offset + 2);\n      //   offset += 3;\n      //   return [extType, bin(length)];\n      // // ext 16\n      // case 0xc8:\n      //   length = dataView.getUint16(offset + 1);\n      //   extType = dataView.getUint8(offset + 3);\n      //   offset += 4;\n      //   return [extType, bin(length)];\n      // // ext 32\n      // case 0xc9:\n      //   length = dataView.getUint32(offset + 1);\n      //   extType = dataView.getUint8(offset + 5);\n      //   offset += 6;\n      //   return [extType, bin(length)];\n      // float 32\n      case 0xca:\n        value = dataView.getFloat32(offset + 1);\n        offset += 5;\n        return value;\n      // float 64\n      case 0xcb:\n        value = dataView.getFloat64(offset + 1);\n        offset += 9;\n        return value;\n      // uint8\n      case 0xcc:\n        value = buffer[offset + 1];\n        offset += 2;\n        return value;\n      // uint 16\n      case 0xcd:\n        value = dataView.getUint16(offset + 1);\n        offset += 3;\n        return value;\n      // uint 32\n      case 0xce:\n        value = dataView.getUint32(offset + 1);\n        offset += 5;\n        return value;\n      // // uint64\n      // case 0xcf:\n      //   // FIXME not available/representable in JS\n      //   // largest possible int in JS is 2^53\n      //   // value = dataView.getUint64(offset + 1);\n      //   offset += 9;\n      //   return 0;\n      // int 8\n      case 0xd0:\n        value = dataView.getInt8(offset + 1);\n        offset += 2;\n        return value;\n      // int 16\n      case 0xd1:\n        value = dataView.getInt16(offset + 1);\n        offset += 3;\n        return value;\n      // int 32\n      case 0xd2:\n        value = dataView.getInt32(offset + 1);\n        offset += 5;\n        return value;\n      // // int 64\n      // case 0xd3:\n      //   // FIXME not available/representable in JS\n      //   // largest possible int in JS is 2^53\n      //   // value = dataView.getInt64(offset + 1);\n      //   offset += 9;\n      //   return 0;\n\n      // // fixext 1\n      // case 0xd4:\n      //   extType = dataView.getUint8(offset + 1);\n      //   offset += 2;\n      //   return [extType, bin(1)];\n      // // fixext 2\n      // case 0xd5:\n      //   extType = dataView.getUint8(offset + 1);\n      //   offset += 2;\n      //   return [extType, bin(2)];\n      // // fixext 4\n      // case 0xd6:\n      //   extType = dataView.getUint8(offset + 1);\n      //   offset += 2;\n      //   return [extType, bin(4)];\n      // // fixext 8\n      // case 0xd7:\n      //   extType = dataView.getUint8(offset + 1);\n      //   offset += 2;\n      //   return [extType, bin(8)];\n      // // fixext 16\n      // case 0xd8:\n      //   extType = dataView.getUint8(offset + 1);\n      //   offset += 2;\n      //   return [extType, bin(16)];\n      // str 8\n      case 0xd9:\n        length = dataView.getUint8(offset + 1);\n        offset += 2;\n        return str(length);\n      // str 16\n      case 0xda:\n        length = dataView.getUint16(offset + 1);\n        offset += 3;\n        return str(length);\n      // str 32\n      case 0xdb:\n        length = dataView.getUint32(offset + 1);\n        offset += 5;\n        return str(length);\n      // array 16\n      case 0xdc:\n        length = dataView.getUint16(offset + 1);\n        offset += 3;\n        return array(length);\n      // array 32\n      case 0xdd:\n        length = dataView.getUint32(offset + 1);\n        offset += 5;\n        return array(length);\n      // map 16:\n      case 0xde:\n        length = dataView.getUint16(offset + 1);\n        offset += 3;\n        return map(length);\n      // map 32\n      case 0xdf:\n        length = dataView.getUint32(offset + 1);\n        offset += 5;\n        return map(length);\n      }\n\n      throw new Error(\"Unknown type 0x\" + type.toString(16));\n    }\n\n    // start the recursive parsing\n    return parse();\n  }\n\n  /**\n   * Fields shared in encoded and decoded mmtf data objects.\n   * @typedef {Object} module:MmtfDecode.SharedMmtfData\n   * @property {String} mmtfVersion - MMTF specification version\n   * @property {String} mmtfProducer - Program that created the file\n   * @property {Float[]} [unitCell] - Crystallographic unit cell\n   * @property {Float} unitCell.0 - x length\n   * @property {Float} unitCell.1 - y length\n   * @property {Float} unitCell.2 - z length\n   * @property {Float} unitCell.3 - alpha angle\n   * @property {Float} unitCell.4 - beta angle\n   * @property {Float} unitCell.5 - gamma angle\n   * @property {String} [spaceGroup] - Hermann-Mauguin symbol\n   * @property {String} [structureId] - Some reference, e.g. a PDB ID\n   * @property {String} [title] - Short description\n   * @property {String} [depositionDate] - Deposition date in YYYY-MM-DD format\n   * @property {String} [releaseDate] - Release date in YYYY-MM-DD format\n   * @property {String[]} [experimentalMethods] - Structure determination methods\n   * @property {Float} [resolution] - Resolution in Å\n   * @property {Float} [rFree] - R-free value\n   * @property {Float} [rWork] - R-work value\n   * @property {Integer} numBonds - Number of bonds\n   * @property {Integer} numAtoms - Number of atoms\n   * @property {Integer} numGroups - Number of groups (residues)\n   * @property {Integer} numChains - Number of chains\n   * @property {Integer} numModels - Number of models\n   * @property {Integer[]} chainsPerModel - List of number of chains in each model\n   * @property {Integer[]} groupsPerChain - List of number of groups in each chain\n   * @property {Entity[]} [entityList] - List of entity objects\n   * @property {Integer[]} entityList.chainIndexList - Pointers into chain data fields\n   * @property {String} entityList.description - Description of the entity\n   * @property {String} entityList.type - Name of the entity type\n   * @property {String} entityList.sequence - One letter code sequence\n   * @property {Assembly[]} [bioAssemblyList] - List of assembly objects\n   * @property {Transform[]} bioAssemblyList.transformList - List of transform objects\n   * @property {Integer[]} bioAssemblyList.transformList.chainIndexList - Pointers into chain data fields\n   * @property {Float[]} bioAssemblyList.transformList.matrix - 4x4 transformation matrix\n   * @property {Array[]} [ncsOperatorList] - List of ncs operator matrices\n   * @property {Float[]} ncsOperatorList. - 4x4 transformation matrix\n   * @property {GroupType[]} groupList - List of groupType objects\n   * @property {Integer[]} groupList.formalChargeList - List of atom formal charges\n   * @property {String[]} groupList.elementList - List of elements\n   * @property {String[]} groupList.atomNameList - List of atom names\n   * @property {Integer[]} groupList.bondAtomList - List of bonded atom indices\n   * @property {Integer[]} groupList.bondOrderList - List of bond orders\n   * @property {String} groupList.groupName - The name of the group\n   * @property {String} groupList.singleLetterCode - The single letter code\n   * @property {String} groupList.chemCompType -  The chemical component type\n   */\n\n  /**\n   * Encoded mmtf data object. Also includes the fields from {@link module:MmtfDecode.SharedMmtfData}. See MMTF specification on how they are encoded.\n   * @typedef {Object} module:MmtfDecode.EncodedMmtfData\n   * @mixes module:MmtfDecode.SharedMmtfData\n   * @property {Uint8Array} [bondAtomList] - Encoded bonded atom indices\n   * @property {Uint8Array} [bondOrderList] - Encoded bond orders\n   * @property {Uint8Array} xCoordBig - Encoded x coordinates in Å, part 1\n   * @property {Uint8Array} xCoordSmall - Encoded x coordinates in Å, part 2\n   * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\n   * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\n   * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\n   * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\n   * @property {Uint8Array} [bFactorBig] - Encoded B-factors in Å^2, part 1\n   * @property {Uint8Array} [bFactorSmall] - Encoded B-factors in Å^2, part 2\n   * @property {Uint8Array} [atomIdList] - Encoded  atom ids\n   * @property {Uint8Array} [altLocList] - Encoded alternate location labels\n   * @property {Uint8Array} [occupancyList] - Encoded occupancies\n   * @property {Uint8Array} groupIdList - Encoded group ids\n   * @property {Uint8Array} groupTypeList - Encoded group types\n   * @property {Uint8Array} [secStructList] - Encoded secondary structure codes\n   * @property {Uint8Array} [insCodeList] - Encoded insertion codes\n   * @property {Uint8Array} [seuenceIdList] - Encoded sequence ids\n   * @property {Uint8Array} chainIdList - Encoded chain ids\n   * @property {Uint8Array} [chainNameList] - Encoded chain names\n   */\n\n  /**\n   * Decoded mmtf data object. Also includes fields the from {@link module:MmtfDecode.SharedMmtfData}.\n   * @typedef {Object} module:MmtfDecode.MmtfData\n   * @mixes module:MmtfDecode.SharedMmtfData\n   * @property {Int32Array} [bondAtomList] - List of bonded atom indices\n   * @property {Uint8Array} [bondOrderList] - List of bond orders\n   * @property {Float32Array} xCoordList - List of x coordinates in Å\n   * @property {Float32Array} yCoordList - List of y coordinates in Å\n   * @property {Float32Array} zCoordList - List of z coordinates in Å\n   * @property {Float32Array} [bFactorList] - List of B-factors in Å^2\n   * @property {Int32Array} [atomIdList] - List of atom ids\n   * @property {Uint8Array} [altLocList] - List of alternate location labels\n   * @property {Float32Array} [occupancyList] - List of occupancies\n   * @property {Int32Array} groupIdList - List of group ids\n   * @property {Int32Array} groupTypeList - List of group types\n   * @property {Int8Array} [secStructList] - List of secondary structure codes, encoding\n   *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\n   *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\n   * @property {Uint8Array} [insCodeList] - List of insertion codes\n   * @property {Int32Array} [seuenceIdList] - List of sequence ids\n   * @property {Uint8Array} chainIdList - List of chain ids\n   * @property {Uint8Array} [chainNameList] - List of chain names\n   */\n\n\n  /**\n   * [performDecoding description]\n   * @param  {Integer} bytes [description]\n   * @param  {Integer} size  [description]\n   * @param  {Uint8Array} param [description]\n   * @return {TypedArray}       [description]\n   */\n  function performDecoding( type, bytes, size, param ){\n\n      switch( type ){\n          case 1:\n              return decodeFloat32( bytes );\n          case 2:\n              return getInt8View( bytes );\n          case 3:\n              return decodeInt16( bytes );\n          case 4:\n              return decodeInt32( bytes );\n          case 5:\n              // var length = decodeInt32( param )[ 0 ];\n              return getUint8View( bytes );  // interpret as string array\n          case 6:\n              // interpret as char array\n              return decodeRun( decodeInt32( bytes ), new Uint8Array( size ) );\n          case 7:\n              return decodeRun( decodeInt32( bytes ) )\n          case 8:\n              return decodeDeltaRun( decodeInt32( bytes ) );\n          case 9:\n              return decodeIntegerRun( decodeInt32( bytes ), decodeInt32( param )[ 0 ] );\n          case 10:\n              return decodeIntegerDeltaPacking( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\n          case 11:\n              return decodeInteger( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\n          case 12:\n              return decodeIntegerPacking( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\n          case 13:\n              return decodeIntegerPacking( getInt8View( bytes ), decodeInt32( param )[ 0 ] );\n          case 14:\n              return decodePacking( decodeInt16( bytes ) );\n          case 15:\n              return decodePacking( getInt8View( bytes ) );\n      }\n\n  };\n\n\n  /**\n   * Decode MMTF fields\n   * @static\n   * @param  {Object} inputDict - encoded MMTF data\n   * @param  {Object} [params] - decoding parameters\n   * @param  {String[]} params.ignoreFields - names of optional fields not to decode\n   * @return {module:MmtfDecode.MmtfData} mmtfData\n   */\n  function decodeMmtf( inputDict, params ){\n\n      params = params || {};\n      var ignoreFields = params.ignoreFields;\n      var outputDict = {};\n\n      AllFields.forEach( function( name ){\n          var ignore = ignoreFields ? ignoreFields.indexOf( name ) !== -1 : false;\n          var data = inputDict[ name ];\n          if( !ignore && data !== undefined ){\n              if( data instanceof Uint8Array ){\n                  outputDict[ name ] = performDecoding.apply( null, decodeBytes( data ) );\n              }else{\n                  outputDict[ name ] = data;\n              }\n          }\n      } );\n\n      return outputDict;\n\n  }\n\n  /**\n   * @file mmtf-traverse\n   * @private\n   * @author Alexander Rose <alexander.rose@weirdbyte.de>\n   */\n\n  /**\n   * mmtf traverse module.\n   * @module MmtfTraverse\n   */\n\n  /**\n   * Converts an array of ASCII codes trimming '\\0' bytes\n   * @private\n   * @param  {Array} charCodeArray - array of ASCII char codes\n   * @return {String} '\\0' trimmed string\n   */\n  function fromCharCode( charCodeArray ){\n      return String.fromCharCode.apply( null, charCodeArray ).replace(/\\0/g, '');\n  }\n\n\n  /**\n   * @callback module:MmtfTraverse.onModel\n   * @param {Object} modelData\n   * @param {Integer} modelData.chainCount - number of chains in the model\n   * @param {Integer} modelData.modelIndex - index of the model\n   */\n\n  /**\n   * @callback module:MmtfTraverse.onChain\n   * @param {Object} chainData\n   * @param {Integer} chainData.groupCount - number of groups in the chain\n   * @param {Integer} chainData.chainIndex - index of the chain\n   * @param {Integer} chainData.modelIndex - index of the parent model\n   * @param {String} chainData.chainId - chain id\n   * @param {?String} chainData.chainName - additional chain name\n   */\n\n  /**\n   * @callback module:MmtfTraverse.onGroup\n   * @param {Object} groupData\n   * @param {Integer} groupData.atomCount - number of atoms in the group\n   * @param {Integer} groupData.groupIndex - index of the group\n   * @param {Integer} groupData.chainIndex - index of the parent chain\n   * @param {Integer} groupData.modelIndex - index of the parent model\n   * @param {Integer} groupData.groupId - group id (residue number)\n   * @param {Integer} groupData.groupType - index to an entry in {@link module:MmtfDecode.MmtfData}#groupList\n   * @param {String} groupData.groupName - name of the group, 0 to 5 characters\n   * @param {Char} groupData.singleLetterCode - IUPAC single letter code, otherwise 'X', 1 character\n   * @param {String} groupData.chemCompType - chemical component type from the mmCIF dictionary\n   * @param {?Integer} groupData.secStruct - sencoded secondary structure |\n   *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\n   *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\n   * @param {?Char} groupData.insCode - insertion code\n   * @param {?Integer} groupData.sequenceIndex - index to the `sequence` property of\n   *    the corresponding entity, -1 when the entity has no sequence\n   */\n\n  /**\n   * @callback module:MmtfTraverse.onAtom\n   * @param {Object} atomData\n   * @param {Integer} atomData.atomIndex - index of the atom\n   * @param {Integer} atomData.groupIndex - index of the parent group\n   * @param {Integer} atomData.chainIndex - index of the parent chain\n   * @param {Integer} atomData.modelIndex - index of the parent model\n   * @param {?Integer} atomData.atomId - atom id\n   * @param {String} atomData.element - IUPAC element name, 0 to 3 characters\n   * @param {String} atomData.atomName - name of the atom, 0 to 5 characters\n   * @param {Integer} atomData.formalCharge - formal charge of the atom\n   * @param {Float} atomData.xCoord - x coordinate in Å\n   * @param {Float} atomData.yCoord - y coordinate in Å\n   * @param {Float} atomData.zCoord - z coordinate in Å\n   * @param {?Float} atomData.bFactor - B-factor in in Å^2\n   * @param {?Char} atomData.altLoc - alternate location identifier\n   * @param {?Float} atomData.occupancy - occupancy of the atom\n   */\n\n  /**\n   * @callback module:MmtfTraverse.onBond\n   * @param {Object} bondData\n   * @param {Integer} bondData.atomIndex1 - index of the first atom\n   * @param {Integer} bondData.atomIndex2 - index of the secound atom\n   * @param {Integer} bondData.bondOrder - bond order, allowed values are 1 to 3\n   */\n\n\n  /**\n   * Traverse the MMTF structure data.\n   * @static\n   * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data\n   * @param {Object} eventCallbacks\n   * @param {module:MmtfTraverse.onModel} [eventCallbacks.onModel] - called for each model\n   * @param {module:MmtfTraverse.onChain} [eventCallbacks.onChain] - called for each chain\n   * @param {module:MmtfTraverse.onGroup} [eventCallbacks.onGroup] - called for each group\n   * @param {module:MmtfTraverse.onAtom} [eventCallbacks.onAtom] - called for each atom\n   * @param {module:MmtfTraverse.onBond} [eventCallbacks.onBond] - called for each bond\n   * @param {Object} [params] - traversal parameters\n   * @param {Boolean} [params.firstModelOnly] - traverse only the first model\n   */\n  function traverseMmtf( mmtfData, eventCallbacks, params ){\n\n      params = params || {};\n\n      var firstModelOnly = params.firstModelOnly;\n\n      // setup callbacks\n      var onModel = eventCallbacks.onModel;\n      var onChain = eventCallbacks.onChain;\n      var onGroup = eventCallbacks.onGroup;\n      var onAtom = eventCallbacks.onAtom;\n      var onBond = eventCallbacks.onBond;\n\n      // setup index counters\n      var modelIndex = 0;\n      var chainIndex = 0;\n      var groupIndex = 0;\n      var atomIndex = 0;\n\n      var modelFirstAtomIndex = 0;\n      var modelLastAtomIndex = -1;\n\n      // setup optional fields\n      var chainNameList = mmtfData.chainNameList;\n      var secStructList = mmtfData.secStructList;\n      var insCodeList = mmtfData.insCodeList;\n      var sequenceIndexList = mmtfData.sequenceIndexList;\n      var atomIdList = mmtfData.atomIdList;\n      var bFactorList = mmtfData.bFactorList;\n      var altLocList = mmtfData.altLocList;\n      var occupancyList = mmtfData.occupancyList;\n      var bondAtomList = mmtfData.bondAtomList;\n      var bondOrderList = mmtfData.bondOrderList;\n\n      // hoisted loop variables\n      var o, ol, i, j, k, kl;\n\n      // loop over all models\n      for( o = 0, ol = mmtfData.chainsPerModel.length; o < ol; ++o ){\n\n          if( firstModelOnly && modelIndex > 0 ) break;\n\n          var modelChainCount = mmtfData.chainsPerModel[ modelIndex ];\n\n          if( onModel ){\n              onModel({\n                  chainCount: modelChainCount,\n                  modelIndex: modelIndex\n              });\n          }\n\n          for( i = 0; i < modelChainCount; ++i ){\n\n              var chainGroupCount = mmtfData.groupsPerChain[ chainIndex ];\n              if( onChain ){\n                  var chainId = fromCharCode(\n                      mmtfData.chainIdList.subarray( chainIndex * 4, chainIndex * 4 + 4 )\n                  );\n                  var chainName = null;\n                  if( chainNameList ){\n                      chainName = fromCharCode(\n                          chainNameList.subarray( chainIndex * 4, chainIndex * 4 + 4 )\n                      );\n                  }\n                  onChain({\n                      groupCount: chainGroupCount,\n                      chainIndex: chainIndex,\n                      modelIndex: modelIndex,\n                      chainId: chainId,\n                      chainName: chainName\n                  });\n              }\n\n              for( j = 0; j < chainGroupCount; ++j ){\n\n                  var groupData = mmtfData.groupList[ mmtfData.groupTypeList[ groupIndex ] ];\n                  var groupAtomCount = groupData.atomNameList.length;\n                  if( onGroup ){\n                      var secStruct = null;\n                      if( secStructList ){\n                          secStruct = secStructList[ groupIndex ];\n                      }\n                      var insCode = null;\n                      if( mmtfData.insCodeList ){\n                          insCode = String.fromCharCode( insCodeList[ groupIndex ] );\n                      }\n                      var sequenceIndex = null;\n                      if( sequenceIndexList ){\n                          sequenceIndex = sequenceIndexList[ groupIndex ];\n                      }\n                      onGroup({\n                          atomCount: groupAtomCount,\n                          groupIndex: groupIndex,\n                          chainIndex: chainIndex,\n                          modelIndex: modelIndex,\n                          groupId: mmtfData.groupIdList[ groupIndex ],\n                          groupType: mmtfData.groupTypeList[ groupIndex ],\n                          groupName: groupData.groupName,\n                          singleLetterCode: groupData.singleLetterCode,\n                          chemCompType: groupData.chemCompType,\n                          secStruct: secStruct,\n                          insCode: insCode,\n                          sequenceIndex: sequenceIndex\n                      });\n                  }\n\n                  for( k = 0; k < groupAtomCount; ++k ){\n\n                      if( onAtom ){\n                          var atomId = null;\n                          if( atomIdList ){\n                              atomId = atomIdList[ atomIndex ];\n                          }\n                          var bFactor = null;\n                          if( bFactorList ){\n                              bFactor = bFactorList[ atomIndex ];\n                          }\n                          var altLoc = null;\n                          if( altLocList ){\n                              altLoc = String.fromCharCode( altLocList[ atomIndex ] );\n                          }\n                          var occupancy = null;\n                          if( occupancyList ){\n                              occupancy = occupancyList[ atomIndex ];\n                          }\n                          onAtom({\n                              atomIndex: atomIndex,\n                              groupIndex: groupIndex,\n                              chainIndex: chainIndex,\n                              modelIndex: modelIndex,\n                              atomId: atomId,\n                              element: groupData.elementList[ k ],\n                              atomName: groupData.atomNameList[ k ],\n                              formalCharge: groupData.formalChargeList[ k ],\n                              xCoord: mmtfData.xCoordList[ atomIndex ],\n                              yCoord: mmtfData.yCoordList[ atomIndex ],\n                              zCoord: mmtfData.zCoordList[ atomIndex ],\n                              bFactor: bFactor,\n                              altLoc: altLoc,\n                              occupancy: occupancy\n                          });\n                      }\n\n                      atomIndex += 1;\n                  }\n\n                  if( onBond ){\n                      // intra group bonds\n                      var groupBondAtomList = groupData.bondAtomList;\n                      for( k = 0, kl = groupData.bondOrderList.length; k < kl; ++k ){\n                          onBond({\n                              atomIndex1: atomIndex - groupAtomCount + groupBondAtomList[ k * 2 ],\n                              atomIndex2: atomIndex - groupAtomCount + groupBondAtomList[ k * 2 + 1 ],\n                              bondOrder: groupData.bondOrderList[ k ]\n                          });\n                      }\n                  }\n\n                  groupIndex += 1;\n              }\n\n              chainIndex += 1;\n          }\n\n          modelFirstAtomIndex = modelLastAtomIndex + 1;\n          modelLastAtomIndex = atomIndex - 1;  // subtract one as it already has been incremented\n\n          if( onBond ){\n              // inter group bonds\n              if( bondAtomList ){\n                  for( k = 0, kl = bondAtomList.length; k < kl; k += 2 ){\n                      var atomIndex1 = bondAtomList[ k ];\n                      var atomIndex2 = bondAtomList[ k + 1 ];\n                      if( ( atomIndex1 >= modelFirstAtomIndex && atomIndex1 <= modelLastAtomIndex ) ||\n                          ( atomIndex2 >= modelFirstAtomIndex && atomIndex2 <= modelLastAtomIndex )\n                      ){\n                          onBond({\n                              atomIndex1: atomIndex1,\n                              atomIndex2: atomIndex2,\n                              bondOrder: bondOrderList ? bondOrderList[ k / 2 ] : null\n                          });\n                      }\n                  }\n              }\n          }\n\n          modelIndex += 1;\n      }\n\n  }\n\n  /**\n   * Version name\n   * @static\n   * @type {String}\n   */\n  var version = \"v0.3.0\";\n\n  /**\n   * Version name\n   * @private\n   * @type {String}\n   */\n  var baseUrl = \"http://mmtf.rcsb.org/v0.2/\";\n\n  /**\n   * URL of the RCSB webservice to obtain MMTF files\n   * @static\n   * @type {String}\n   */\n  var fetchUrl = baseUrl + \"full/\";\n\n  /**\n   * URL of the RCSB webservice to obtain reduced MMTF files\n   * @static\n   * @type {String}\n   */\n  var fetchReducedUrl = baseUrl + \"reduced/\";\n\n  /**\n   * Encode MMTF fields\n   * @static\n   * @param  {module:MmtfDecode.MmtfData} mmtfData - mmtf data\n   * @return {Uint8Array} encoded MMTF fields\n   */\n  function encode( mmtfData ){\n      return encodeMsgpack( encodeMmtf( mmtfData ) );\n  }\n\n  /**\n   * Decode MMTF fields\n   * @static\n   * @example\n   * // bin is Uint8Array containing the mmtf msgpack\n   * var mmtfData = MMTF.decode( bin );\n   * console.log( mmtfData.numAtoms );\n   *\n   * @param  {Uint8Array|ArrayBuffer|module:MmtfDecode.EncodedMmtfData} binOrDict - binary MessagePack or encoded MMTF data\n   * @param  {Object} [params] - decoding parameters\n   * @param {String[]} params.ignoreFields - names of optional fields not to decode\n   * @return {module:MmtfDecode.MmtfData} mmtfData\n   */\n  function decode( binOrDict, params ){\n    // make sure binOrDict is not a plain Arraybuffer\n      if( binOrDict instanceof ArrayBuffer ){\n          binOrDict = new Uint8Array( binOrDict );\n      }\n\n      var inputDict;\n      if( binOrDict instanceof Uint8Array ){\n          // get dict from msgpack\n          inputDict = decodeMsgpack( binOrDict );\n      }else{\n          // already a dict\n          inputDict = binOrDict;\n      }\n\n      return decodeMmtf( inputDict, params );\n  }\n\n  /**\n   * @callback module:MMTF.onLoad\n   * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data object\n   */\n\n  /**\n   * helper method to fetch binary files from an URL\n   * @private\n   * @param  {String} pdbid - PDB ID to fetch\n   * @param  {String} baseUrl - URL to fetch from\n   * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\n   * @param  {Function} onError - callback( error )\n   * @return {undefined}\n   */\n  function _fetch( pdbid, baseUrl, onLoad, onError ){\n      var xhr = new XMLHttpRequest();\n      function _onLoad(){\n          try{\n              var mmtfData = decode( xhr.response );\n              onLoad( mmtfData );\n          }catch( error ){\n              onError( error );\n          }\n      }\n      xhr.addEventListener( \"load\", _onLoad, true );\n      xhr.addEventListener( \"error\", onError, true );\n      xhr.responseType = \"arraybuffer\";\n      xhr.open( \"GET\", baseUrl + pdbid.toUpperCase() );\n      xhr.send();\n  }\n\n  /**\n   * Fetch MMTF file from RCSB webservice which contains\n   * @static\n   * @example\n   * MMTF.fetch(\n   *     \"3PQR\",\n   *     // onLoad callback\n   *     function( mmtfData ){ console.log( mmtfData ) },\n   *     // onError callback\n   *     function( error ){ console.error( error ) }\n   * );\n   *\n   * @param  {String} pdbid - PDB ID to fetch\n   * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\n   * @param  {Function} onError - callback( error )\n   * @return {undefined}\n   */\n  function fetch( pdbid, onLoad, onError ){\n      _fetch( pdbid, fetchUrl, onLoad, onError );\n  }\n\n  /**\n   * Fetch reduced MMTF file from RCSB webservice which contains\n   * protein C-alpha, nucleotide phosphate and ligand atoms\n   * @static\n   * @example\n   * MMTF.fetchReduced(\n   *     \"3PQR\",\n   *     // onLoad callback\n   *     function( mmtfData ){ console.log( mmtfData ) },\n   *     // onError callback\n   *     function( error ){ console.error( error ) }\n   * );\n   *\n   * @param  {String} pdbid - PDB ID to fetch\n   * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\n   * @param  {Function} onError - callback( error )\n   * @return {undefined}\n   */\n  function fetchReduced( pdbid, onLoad, onError ){\n      _fetch( pdbid, fetchReducedUrl, onLoad, onError );\n  }\n\n  exports.encode = encode;\n  exports.decode = decode;\n  exports.traverse = traverseMmtf;\n  exports.fetch = fetch;\n  exports.fetchReduced = fetchReduced;\n  exports.version = version;\n  exports.fetchUrl = fetchUrl;\n  exports.fetchReducedUrl = fetchReducedUrl;\n  exports.encodeMsgpack = encodeMsgpack;\n  exports.encodeMmtf = encodeMmtf;\n  exports.decodeMsgpack = decodeMsgpack;\n  exports.decodeMmtf = decodeMmtf;\n\n}));/* pako 0.2.7 nodeca/pako */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.pako = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs+len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i=0; i<len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function(chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i=0, l=chunks.length; i<l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i=0, l=chunks.length; i<l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i=0; i<len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function(chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n\n},{}],2:[function(require,module,exports){\n// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safary\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [0]); } catch(__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch(__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q=0; q<256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254]=_utf8len[254]=1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n      c2 = str.charCodeAt(m_pos+1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i=0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n      c2 = str.charCodeAt(m_pos+1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // use fallback for big arrays to avoid stack overflow\n  if (len < 65537) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i=0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function(buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function(str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i=0, len=buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len*2);\n\n  for (out=0, i=0; i<len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function(buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max-1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Fuckup - very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means vuffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\n},{\"./common\":1}],3:[function(require,module,exports){\n'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n\n},{}],4:[function(require,module,exports){\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n =0; n < 256; n++) {\n    c = n;\n    for (var k =0; k < 8; k++) {\n      c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc = crc ^ (-1);\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  var window;                 /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\n\nvar utils = require('../utils/common');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar inflate_fast = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction ZSWAP32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, {bits: 5});\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window,src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window,src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window,src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n    case HEAD:\n      if (state.wrap === 0) {\n        state.mode = TYPEDO;\n        break;\n      }\n      //=== NEEDBITS(16);\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n        state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = FLAGS;\n        break;\n      }\n      state.flags = 0;           /* expect zlib header */\n      if (state.head) {\n        state.head.done = false;\n      }\n      if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n        strm.msg = 'incorrect header check';\n        state.mode = BAD;\n        break;\n      }\n      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n      len = (hold & 0x0f)/*BITS(4)*/ + 8;\n      if (state.wbits === 0) {\n        state.wbits = len;\n      }\n      else if (len > state.wbits) {\n        strm.msg = 'invalid window size';\n        state.mode = BAD;\n        break;\n      }\n      state.dmax = 1 << len;\n      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = hold & 0x200 ? DICTID : TYPE;\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      break;\n    case FLAGS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.flags = hold;\n      if ((state.flags & 0xff) !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      if (state.flags & 0xe000) {\n        strm.msg = 'unknown header flags set';\n        state.mode = BAD;\n        break;\n      }\n      if (state.head) {\n        state.head.text = ((hold >> 8) & 1);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = TIME;\n      /* falls through */\n    case TIME:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.time = hold;\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC4(state.check, hold)\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        hbuf[2] = (hold >>> 16) & 0xff;\n        hbuf[3] = (hold >>> 24) & 0xff;\n        state.check = crc32(state.check, hbuf, 4, 0);\n        //===\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = OS;\n      /* falls through */\n    case OS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.xflags = (hold & 0xff);\n        state.head.os = (hold >> 8);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = EXLEN;\n      /* falls through */\n    case EXLEN:\n      if (state.flags & 0x0400) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length = hold;\n        if (state.head) {\n          state.head.extra_len = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      else if (state.head) {\n        state.head.extra = null/*Z_NULL*/;\n      }\n      state.mode = EXTRA;\n      /* falls through */\n    case EXTRA:\n      if (state.flags & 0x0400) {\n        copy = state.length;\n        if (copy > have) { copy = have; }\n        if (copy) {\n          if (state.head) {\n            len = state.head.extra_len - state.length;\n            if (!state.head.extra) {\n              // Use untyped array for more conveniend processing later\n              state.head.extra = new Array(state.head.extra_len);\n            }\n            utils.arraySet(\n              state.head.extra,\n              input,\n              next,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              copy,\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n              len\n            );\n            //zmemcpy(state.head.extra + len, next,\n            //        len + copy > state.head.extra_max ?\n            //        state.head.extra_max - len : copy);\n          }\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          state.length -= copy;\n        }\n        if (state.length) { break inf_leave; }\n      }\n      state.length = 0;\n      state.mode = NAME;\n      /* falls through */\n    case NAME:\n      if (state.flags & 0x0800) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          // TODO: 2 or 1 bytes?\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.name_max*/)) {\n            state.head.name += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.name = null;\n      }\n      state.length = 0;\n      state.mode = COMMENT;\n      /* falls through */\n    case COMMENT:\n      if (state.flags & 0x1000) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.comm_max*/)) {\n            state.head.comment += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.comment = null;\n      }\n      state.mode = HCRC;\n      /* falls through */\n    case HCRC:\n      if (state.flags & 0x0200) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.check & 0xffff)) {\n          strm.msg = 'header crc mismatch';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      if (state.head) {\n        state.head.hcrc = ((state.flags >> 9) & 1);\n        state.head.done = true;\n      }\n      strm.adler = state.check = 0 /*crc32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      break;\n    case DICTID:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      strm.adler = state.check = ZSWAP32(hold);\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = DICT;\n      /* falls through */\n    case DICT:\n      if (state.havedict === 0) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        return Z_NEED_DICT;\n      }\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      /* falls through */\n    case TYPE:\n      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case TYPEDO:\n      if (state.last) {\n        //--- BYTEBITS() ---//\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        state.mode = CHECK;\n        break;\n      }\n      //=== NEEDBITS(3); */\n      while (bits < 3) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.last = (hold & 0x01)/*BITS(1)*/;\n      //--- DROPBITS(1) ---//\n      hold >>>= 1;\n      bits -= 1;\n      //---//\n\n      switch ((hold & 0x03)/*BITS(2)*/) {\n      case 0:                             /* stored block */\n        //Tracev((stderr, \"inflate:     stored block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = STORED;\n        break;\n      case 1:                             /* fixed block */\n        fixedtables(state);\n        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = LEN_;             /* decode codes */\n        if (flush === Z_TREES) {\n          //--- DROPBITS(2) ---//\n          hold >>>= 2;\n          bits -= 2;\n          //---//\n          break inf_leave;\n        }\n        break;\n      case 2:                             /* dynamic block */\n        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = TABLE;\n        break;\n      case 3:\n        strm.msg = 'invalid block type';\n        state.mode = BAD;\n      }\n      //--- DROPBITS(2) ---//\n      hold >>>= 2;\n      bits -= 2;\n      //---//\n      break;\n    case STORED:\n      //--- BYTEBITS() ---// /* go to byte boundary */\n      hold >>>= bits & 7;\n      bits -= bits & 7;\n      //---//\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n        strm.msg = 'invalid stored block lengths';\n        state.mode = BAD;\n        break;\n      }\n      state.length = hold & 0xffff;\n      //Tracev((stderr, \"inflate:       stored length %u\\n\",\n      //        state.length));\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = COPY_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case COPY_:\n      state.mode = COPY;\n      /* falls through */\n    case COPY:\n      copy = state.length;\n      if (copy) {\n        if (copy > have) { copy = have; }\n        if (copy > left) { copy = left; }\n        if (copy === 0) { break inf_leave; }\n        //--- zmemcpy(put, next, copy); ---\n        utils.arraySet(output, input, next, copy, put);\n        //---//\n        have -= copy;\n        next += copy;\n        left -= copy;\n        put += copy;\n        state.length -= copy;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       stored end\\n\"));\n      state.mode = TYPE;\n      break;\n    case TABLE:\n      //=== NEEDBITS(14); */\n      while (bits < 14) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n      if (state.nlen > 286 || state.ndist > 30) {\n        strm.msg = 'too many length or distance symbols';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n      state.have = 0;\n      state.mode = LENLENS;\n      /* falls through */\n    case LENLENS:\n      while (state.have < state.ncode) {\n        //=== NEEDBITS(3);\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n        //--- DROPBITS(3) ---//\n        hold >>>= 3;\n        bits -= 3;\n        //---//\n      }\n      while (state.have < 19) {\n        state.lens[order[state.have++]] = 0;\n      }\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      //state.next = state.codes;\n      //state.lencode = state.next;\n      // Switch to use dynamic table\n      state.lencode = state.lendyn;\n      state.lenbits = 7;\n\n      opts = {bits: state.lenbits};\n      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n      state.lenbits = opts.bits;\n\n      if (ret) {\n        strm.msg = 'invalid code lengths set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n      state.have = 0;\n      state.mode = CODELENS;\n      /* falls through */\n    case CODELENS:\n      while (state.have < state.nlen + state.ndist) {\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_val < 16) {\n          //--- DROPBITS(here.bits) ---//\n          hold >>>= here_bits;\n          bits -= here_bits;\n          //---//\n          state.lens[state.have++] = here_val;\n        }\n        else {\n          if (here_val === 16) {\n            //=== NEEDBITS(here.bits + 2);\n            n = here_bits + 2;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            if (state.have === 0) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            len = state.lens[state.have - 1];\n            copy = 3 + (hold & 0x03);//BITS(2);\n            //--- DROPBITS(2) ---//\n            hold >>>= 2;\n            bits -= 2;\n            //---//\n          }\n          else if (here_val === 17) {\n            //=== NEEDBITS(here.bits + 3);\n            n = here_bits + 3;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 3 + (hold & 0x07);//BITS(3);\n            //--- DROPBITS(3) ---//\n            hold >>>= 3;\n            bits -= 3;\n            //---//\n          }\n          else {\n            //=== NEEDBITS(here.bits + 7);\n            n = here_bits + 7;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 11 + (hold & 0x7f);//BITS(7);\n            //--- DROPBITS(7) ---//\n            hold >>>= 7;\n            bits -= 7;\n            //---//\n          }\n          if (state.have + copy > state.nlen + state.ndist) {\n            strm.msg = 'invalid bit length repeat';\n            state.mode = BAD;\n            break;\n          }\n          while (copy--) {\n            state.lens[state.have++] = len;\n          }\n        }\n      }\n\n      /* handle error breaks in while */\n      if (state.mode === BAD) { break; }\n\n      /* check for end-of-block code (better have one) */\n      if (state.lens[256] === 0) {\n        strm.msg = 'invalid code -- missing end-of-block';\n        state.mode = BAD;\n        break;\n      }\n\n      /* build code tables -- note: do not change the lenbits or distbits\n         values here (9 and 6) without reading the comments in inftrees.h\n         concerning the ENOUGH constants, which depend on those values */\n      state.lenbits = 9;\n\n      opts = {bits: state.lenbits};\n      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.lenbits = opts.bits;\n      // state.lencode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid literal/lengths set';\n        state.mode = BAD;\n        break;\n      }\n\n      state.distbits = 6;\n      //state.distcode.copy(state.codes);\n      // Switch to use dynamic table\n      state.distcode = state.distdyn;\n      opts = {bits: state.distbits};\n      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.distbits = opts.bits;\n      // state.distcode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid distances set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, 'inflate:       codes ok\\n'));\n      state.mode = LEN_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case LEN_:\n      state.mode = LEN;\n      /* falls through */\n    case LEN:\n      if (have >= 6 && left >= 258) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        inflate_fast(strm, _out);\n        //--- LOAD() ---\n        put = strm.next_out;\n        output = strm.output;\n        left = strm.avail_out;\n        next = strm.next_in;\n        input = strm.input;\n        have = strm.avail_in;\n        hold = state.hold;\n        bits = state.bits;\n        //---\n\n        if (state.mode === TYPE) {\n          state.back = -1;\n        }\n        break;\n      }\n      state.back = 0;\n      for (;;) {\n        here = state.lencode[hold & ((1 << state.lenbits) -1)];  /*BITS(state.lenbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if (here_bits <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if (here_op && (here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.lencode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      state.length = here_val;\n      if (here_op === 0) {\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        state.mode = LIT;\n        break;\n      }\n      if (here_op & 32) {\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.back = -1;\n        state.mode = TYPE;\n        break;\n      }\n      if (here_op & 64) {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break;\n      }\n      state.extra = here_op & 15;\n      state.mode = LENEXT;\n      /* falls through */\n    case LENEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n      state.was = state.length;\n      state.mode = DIST;\n      /* falls through */\n    case DIST:\n      for (;;) {\n        here = state.distcode[hold & ((1 << state.distbits) -1)];/*BITS(state.distbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if ((here_bits) <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if ((here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.distcode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      if (here_op & 64) {\n        strm.msg = 'invalid distance code';\n        state.mode = BAD;\n        break;\n      }\n      state.offset = here_val;\n      state.extra = (here_op) & 15;\n      state.mode = DISTEXT;\n      /* falls through */\n    case DISTEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.offset += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n//#ifdef INFLATE_STRICT\n      if (state.offset > state.dmax) {\n        strm.msg = 'invalid distance too far back';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n      state.mode = MATCH;\n      /* falls through */\n    case MATCH:\n      if (left === 0) { break inf_leave; }\n      copy = _out - left;\n      if (state.offset > copy) {         /* copy from window */\n        copy = state.offset - copy;\n        if (copy > state.whave) {\n          if (state.sane) {\n            strm.msg = 'invalid distance too far back';\n            state.mode = BAD;\n            break;\n          }\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n        }\n        if (copy > state.wnext) {\n          copy -= state.wnext;\n          from = state.wsize - copy;\n        }\n        else {\n          from = state.wnext - copy;\n        }\n        if (copy > state.length) { copy = state.length; }\n        from_source = state.window;\n      }\n      else {                              /* copy from output */\n        from_source = output;\n        from = put - state.offset;\n        copy = state.length;\n      }\n      if (copy > left) { copy = left; }\n      left -= copy;\n      state.length -= copy;\n      do {\n        output[put++] = from_source[from++];\n      } while (--copy);\n      if (state.length === 0) { state.mode = LEN; }\n      break;\n    case LIT:\n      if (left === 0) { break inf_leave; }\n      output[put++] = state.length;\n      left--;\n      state.mode = LEN;\n      break;\n    case CHECK:\n      if (state.wrap) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          // Use '|' insdead of '+' to make sure that result is signed\n          hold |= input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        _out -= left;\n        strm.total_out += _out;\n        state.total += _out;\n        if (_out) {\n          strm.adler = state.check =\n              /*UPDATE(state.check, put - _out, _out);*/\n              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n        }\n        _out = left;\n        // NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too\n        if ((state.flags ? hold : ZSWAP32(hold)) !== state.check) {\n          strm.msg = 'incorrect data check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n      }\n      state.mode = LENGTH;\n      /* falls through */\n    case LENGTH:\n      if (state.wrap && state.flags) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.total & 0xffffffff)) {\n          strm.msg = 'incorrect length check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n      }\n      state.mode = DONE;\n      /* falls through */\n    case DONE:\n      ret = Z_STREAM_END;\n      break inf_leave;\n    case BAD:\n      ret = Z_DATA_ERROR;\n      break inf_leave;\n    case MEM:\n      return Z_MEM_ERROR;\n    case SYNC:\n      /* falls through */\n    default:\n      return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n\n},{\"../utils/common\":1,\"./adler32\":3,\"./crc32\":5,\"./inffast\":7,\"./inftrees\":9}],9:[function(require,module,exports){\n'use strict';\n\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  var i=0;\n  /* process all codes and make table entries */\n  for (;;) {\n    i++;\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n},{\"../utils/common\":1}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  '2':    'need dictionary',     /* Z_NEED_DICT       2  */\n  '1':    'stream end',          /* Z_STREAM_END      1  */\n  '0':    '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n\n},{}],\"/lib/inflate.js\":[function(require,module,exports){\n'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate.js');\nvar utils = require('./utils/common');\nvar strings = require('./utils/strings');\nvar c = require('./zlib/constants');\nvar msg = require('./zlib/messages');\nvar zstream = require('./zlib/zstream');\nvar gzheader = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overriden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nvar Inflate = function(options) {\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new gzheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n};\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function(data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n  } while ((strm.avail_in > 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function(chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function(status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 alligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n\n},{\"./utils/common\":1,\"./utils/strings\":2,\"./zlib/constants\":4,\"./zlib/gzheader\":6,\"./zlib/inflate.js\":8,\"./zlib/messages\":10,\"./zlib/zstream\":11}]},{},[])(\"/lib/inflate.js\")\n});\n//This defines the $3Dmol object which is used to create viewers\n//and configure system-wide settings\n\n/**\n * All of the functionality of $3Dmol.js is contained within the\n * $3Dmol global namespace\n * @namespace */\n$3Dmol = (function(window) {\n\n    var my = window['$3Dmol'] || {};\n    //var $ = window['jQuery'];\n\n    return my;\n\n})(window);\n\n/* The following code \"phones home\" to register that an ip\n   address has loaded 3Dmol.js.  Being able track this usage\n   is very helpful when reporting to funding agencies.  Please\n   leave this code in if you would like to increase the\n   likelihood of 3Dmol.js remaining supported.\n*/\nif('https:' != document.location.protocol) { //not willing to pay for ssl cert\n    $.get(\"http://3dmol.csb.pitt.edu/track/report.cgi\");\n}\n\n/* shims for IE */\n/*\nIE Doesn't have a .startsWith\n*/\nif (!String.prototype.startsWith) {\n    String.prototype.startsWith = function (str){\n        return this.lastIndexOf(str, 0) === 0;\n    };\n}\n\n// or endsWith\nif (!String.prototype.endsWith) {\n    String.prototype.endsWith = function(suffix) {\n        return this.indexOf(suffix, this.length - suffix.length) !== -1;\n    };\n}\n\n/**\n*\n* jquery.binarytransport.js\n*\n* @description. jQuery ajax transport for making binary data type requests.\n* @version 1.0\n* @author Henry Algus <henryalgus@gmail.com>\n*\n*/\n\n// use this transport for \"binary\" data type\n$.ajaxTransport(\n               \"+binary\",\n               function(options, originalOptions, jqXHR) {\n                   // check for conditions and support for blob / arraybuffer response type\n                   if (window.FormData\n                           && ((options.dataType && (options.dataType == 'binary')) || (options.data && ((window.ArrayBuffer && options.data instanceof ArrayBuffer) || (window.Blob && options.data instanceof Blob))))) {\n                       return {\n                           // create new XMLHttpRequest\n                           send : function(headers, callback) {\n                               // setup all variables\n                               var xhr = new XMLHttpRequest(), url = options.url, type = options.type, async = options.async || true,\n                               // blob or arraybuffer. Default is blob\n                               dataType = options.responseType || \"blob\", data = options.data\n                                       || null, username = options.username\n                                       || null, password = options.password\n                                       || null;\n\n                               xhr.addEventListener('load', function() {\n                                   var data = {};\n                                   data[options.dataType] = xhr.response;\n                                   // make callback and send data\n                                   callback(xhr.status, xhr.statusText,\n                                           data,\n                                           xhr.getAllResponseHeaders());\n                               });\n\n                               xhr.open(type, url, async, username,\n                                       password);\n\n                               // setup custom headers\n                               for ( var i in headers) {\n                                   xhr.setRequestHeader(i, headers[i]);\n                               }\n\n                               xhr.responseType = dataType;\n                               xhr.send(data);\n                           },\n                           abort : function() {\n                               jqXHR.abort();\n                           }\n                       };\n                   }\n               });\n\n\n/**\n * Create and initialize an appropriate viewer at supplied HTML element using specification in config\n * @param {Object | string} element - Either HTML element or string identifier\n * @param {ViewerSpec} config Viewer specification\n * @return {$3Dmol.GLViewer} GLViewer, null if unable to instantiate WebGL\n *\n * @example\n * // Assume there exists an HTML div with id \"gldiv\"\n * var element = $(\"#gldiv\");\n *\n * // Viewer config - properties 'defaultcolors' and 'callback'\n * var config = {defaultcolors: $3Dmol.rasmolElementColors };\n *\n * // Create GLViewer within 'gldiv'\n * var myviewer = $3Dmol.createViewer(element, config);\n * //'data' is a string containing molecule data in pdb format\n * myviewer.addModel(data, \"pdb\");\n * myviewer.zoomTo();\n * myviewer.render();\n *\n */\n$3Dmol.createViewer = function(element, config)\n{\n    if($.type(element) === \"string\")\n        element = $(\"#\"+element);\n    if(!element) return;\n\n    config = config || {};\n\n    //try to create the  viewer\n    try {\n        return new $3Dmol.GLViewer(element, config);\n    }\n    catch(e) {\n        throw \"error creating viewer: \"+e;\n    }\n\n    return null;\n};\n\n/**\n * Contains a dictionary of embedded viewers created from HTML elements\n * with a the viewer_3Dmoljs css class indexed by their id (or numerically\n * if they do not have an id).\n*/\n$3Dmol.viewers = {};\n\n/**\n * Load a PDB/PubChem structure into existing viewer. Automatically calls 'zoomTo' and 'render' on viewer after loading model\n *\n * @function $3Dmol.download\n * @param {string} query - String specifying pdb or pubchem id; must be prefaced with \"pdb: \" or \"cid: \", respectively\n * @param {$3Dmol.GLViewer} viewer - Add new model to existing viewer\n * @param {Object} options - Specify additional options\n *                           format: file format to download, if multiple are available, default format is pdb\n *                           pdbUri: URI to retrieve PDB files, default URI is http://www.rcsb.org/pdb/files/\n * @param {Function} callback - Function to call with model as argument after data is loaded.\n\n * @example\n * var myviewer = $3Dmol.createViewer(gldiv);\n *\n * // GLModel 'm' created and loaded into glviewer for PDB id 2POR\n * // Note that m will not contain the atomic data until after the network request is completed\n * var m = $3Dmol.download('pdb: 2POR', myviewer, {format:'cif'});\n *\n * @return {$3Dmol.GLModel} GLModel\n */\n$3Dmol.download = function(query, viewer, options, callback) {\n    var baseURL = '';\n    var type = \"\";\n    var pdbUri = \"\";\n    var m = viewer.addModel();\n\n    if (query.substr(0, 5) === 'mmtf:') {\n        pdbUri = options && options.pdbUri ? options.pdbUri : \"http://mmtf.rcsb.org/full/\";\n        query = query.substr(5).toUpperCase();\n        var uri = pdbUri + query + \".mmtf\";\n\n        $.ajax({url:uri,\n            type: \"GET\",\n            dataType: \"binary\",\n            responseType: \"arraybuffer\",\n            processData: false}).done(\n                function(ret, txt, response) {\n                    m.addMolData(ret, 'mmtf');\n                    viewer.zoomTo();\n                    viewer.render();\n                    if(callback) callback(m);\n                }).fail(function(e,txt) {\n                    console.log(txt);\n                    });\n    }\n    else {\n        if (query.substr(0, 4) === 'pdb:') {\n            pdbUri = options && options.pdbUri ? options.pdbUri : \"http://www.rcsb.org/pdb/files/\";\n            type = options && options.format ? options.format : \"pdb\";\n            if(options && typeof options.noComputeSecondaryStructure === 'undefined') {\n                //when fetch directly from pdb, trust structure annotations\n                options.noComputeSecondaryStructure = true;\n            }\n            query = query.substr(4).toUpperCase();\n            if (!query.match(/^[1-9][A-Za-z0-9]{3}$/)) {\n               alert(\"Wrong PDB ID\"); return;\n            }\n            if (options && options.format)\n                uri = pdbUri + query + \".\" + options.format;\n            else\n                uri = pdbUri + query + \".pdb\";\n\n        } else if (query.substr(0, 4) == 'cid:') {\n            type = \"sdf\";\n            query = query.substr(4);\n            if (!query.match(/^[0-9]+$/)) {\n               alert(\"Wrong Compound ID\"); return;\n            }\n            uri = \"https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/\" + query +\n              \"/SDF?record_type=3d\";\n        }\n\n       $.get(uri, function(ret) {\n          m.addMolData(ret, type, options);\n          viewer.zoomTo();\n          viewer.render();\n          if(callback) callback(m);\n\n       }).fail(function(e) {\n        console.log(\"fetch of \"+uri+\" failed: \"+e.statusText);\n       });\n   }\n\n   return m;\n};\n\n\n/**\n * $3Dmol surface types\n * @enum {number}\n */\n$3Dmol.SurfaceType = {\n    VDW : 1,\n    MS : 2,\n    SAS : 3,\n    SES  : 4\n};\n\n\n//Miscellaneous functions and classes - to be incorporated into $3Dmol proper\n/**\n *\n * @param {$3Dmol.Geometry} geometry\n * @param {$3Dmol.Mesh} mesh\n * @returns {undefined}\n */\n$3Dmol.mergeGeos = function(geometry, mesh) {\n\n    var meshGeo = mesh.geometry;\n\n    if (meshGeo === undefined)\n        return;\n\n    geometry.geometryGroups.push( meshGeo.geometryGroups[0] );\n\n};\n\n$3Dmol.multiLineString = function(f) {\n    return f.toString()\n            .replace(/^[^\\/]+\\/\\*!?/, '')\n            .replace(/\\*\\/[^\\/]+$/, '');\n\n};\n\n/**\n * Render surface synchronously if true\n * @param {boolean} [$3Dmol.SyncSurface=false]\n * @type {boolean} */\n$3Dmol.syncSurface = false;\n\n// Internet Explorer refuses to allow webworkers in data blobs.  I can find\n// no way of checking for this feature directly, so must do a brower check\nif(window.navigator.userAgent.indexOf('MSIE ') >= 0 ||\n        window.navigator.userAgent.indexOf('Trident/') >= 0) {\n    $3Dmol.syncSurface = true; // can't use webworkers\n}\n\n/**\n * Parse a string that represents a style or atom selection and convert it\n * into an object.  The goal is to make it easier to write out these specifications\n * without resorting to json. Objects cannot be defined recursively.\n * ; - delineates fields of the object\n * : - if the field has a value other than an empty object, it comes after a colon\n * , - delineates key/value pairs of a value object\n *     If the value object consists of ONLY keys (no = present) the keys are\n *     converted to a list.  Otherwise a object of key/value pairs is created with\n *     any missing values set to null\n * = OR ~ - separates key/value pairs of a value object, if not provided value is null\n *     twiddle is supported since = has special meaning in URLs\n * @param (String) str\n * @returns {Object}\n */\n$3Dmol.specStringToObject = function(str) {\n    if(typeof(str) === \"object\") {\n        return str; //not string, assume was converted already\n    }\n    else if(typeof(str) === \"undefined\" || str == null) {\n        return str;\n    }\n\n    str = str.replace(/%7E/,'~'); //copy/pasting urls sometimes does this\n    //convert things that look like numbers into numbers\n    var massage = function(val) {\n        if($.isNumeric(val)) {\n           //hexadecimal does not parse as float\n           if(Math.floor(parseFloat(val)) == parseInt(val)) {\n              return parseFloat(val);\n           }\n           else if(val.indexOf('.') >= 0) {\n               return parseFloat(val); // \".7\" for example, does not parseInt\n           }\n           else {\n               return parseInt(val);\n           }\n        }\n        //boolean conversions\n        else if(val === 'true') {\n            return true;\n        }\n        else if(val === 'false') {\n            return false;\n        }\n        return val;\n    }\n\n    var ret = {};\n    if(str === 'all') return ret;\n    var fields = str.split(';');\n    for(var i = 0; i < fields.length; i++) {\n        var fv = fields[i].split(':');\n        var f = fv[0];\n        var val = {};\n        var vstr = fv[1];\n        if(vstr) {\n            vstr = vstr.replace(/~/g,\"=\");\n            if(vstr.indexOf('=') !== -1) {\n                //has key=value pairs, must be object\n                var kvs = vstr.split(',');\n                for(var j = 0; j < kvs.length; j++) {\n                    var kv = kvs[j].split('=',2);\n                    val[kv[0]] = massage(kv[1]);\n                }\n            }\n            else if(vstr.indexOf(',') !== -1) {\n                //has multiple values, must list\n                val = vstr.split(',');\n            }\n            else {\n                val = massage(vstr); //value itself\n            }\n        }\n        ret[f] = val;\n    }\n\nreturn ret;\n}\n\n\n/**\n * computes the bounding box around the provided atoms\n * @param {AtomSpec[]} atomlist\n * @return {Array}\n */\n$3Dmol.getExtent = function(atomlist, ignoreSymmetries) {\n    var xmin, ymin, zmin, xmax, ymax, zmax, xsum, ysum, zsum, cnt;\n    var includeSym = !ignoreSymmetries;\n\n    xmin = ymin = zmin = 9999;\n    xmax = ymax = zmax = -9999;\n    xsum = ysum = zsum = cnt = 0;\n\n    if (atomlist.length === 0)\n        return [ [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ] ];\n    for (var i = 0; i < atomlist.length; i++) {\n        var atom = atomlist[i];\n        if (typeof atom === 'undefined' || !isFinite(atom.x) ||\n                !isFinite(atom.y) || !isFinite(atom.z))\n            continue;\n        cnt++;\n        xsum += atom.x;\n        ysum += atom.y;\n        zsum += atom.z;\n\n        xmin = (xmin < atom.x) ? xmin : atom.x;\n        ymin = (ymin < atom.y) ? ymin : atom.y;\n        zmin = (zmin < atom.z) ? zmin : atom.z;\n        xmax = (xmax > atom.x) ? xmax : atom.x;\n        ymax = (ymax > atom.y) ? ymax : atom.y;\n        zmax = (zmax > atom.z) ? zmax : atom.z;\n\n        if (atom.symmetries && includeSym) {\n            for (var n = 0; n < atom.symmetries.length; n++) {\n                cnt++;\n                xsum += atom.symmetries[n].x;\n                ysum += atom.symmetries[n].y;\n                zsum += atom.symmetries[n].z;\n                xmin = (xmin < atom.symmetries[n].x) ? xmin : atom.symmetries[n].x;\n                ymin = (ymin < atom.symmetries[n].y) ? ymin : atom.symmetries[n].y;\n                zmin = (zmin < atom.symmetries[n].z) ? zmin : atom.symmetries[n].z;\n                xmax = (xmax > atom.symmetries[n].x) ? xmax : atom.symmetries[n].x;\n                ymax = (ymax > atom.symmetries[n].y) ? ymax : atom.symmetries[n].y;\n                zmax = (zmax > atom.symmetries[n].z) ? zmax : atom.symmetries[n].z;\n            }\n        }\n    }\n\n    return [ [ xmin, ymin, zmin ], [ xmax, ymax, zmax ],\n            [ xsum / cnt, ysum / cnt, zsum / cnt ] ];\n};\n\n\n//return the value of an atom property prop, or null if non existent\n//looks first in properties, then in the atom itself\n$3Dmol.getAtomProperty = function(atom, prop) {\n    var val = null;\n    if (atom.properties\n            && typeof (atom.properties[prop]) != \"undefined\") {\n        val = atom.properties[prop];\n    } else if(typeof(atom[prop]) != 'undefined') {\n        val = atom[prop];\n    }\n    return val;\n};\n\n/* get the min and max values of the specified property in the provided\n* @function $3Dmol.getPropertyRange\n* @param {AtomSpec[]} atomlist - list of atoms to evaluate\n* @param {string} prop - name of property\n* @return {Array} - [min, max] values\n*/\n$3Dmol.getPropertyRange = function (atomlist, prop) {\n    var min = Number.POSITIVE_INFINITY;\n    var max = Number.NEGATIVE_INFINITY;\n\n    for (var i = 0, n = atomlist.length; i < n; i++) {\n        var atom = atomlist[i];\n        var val = $3Dmol.getAtomProperty(atom, prop);\n\n        if(val != null) {\n            if (val < min)\n                min = val;\n            if (val > max)\n                max = val;\n        }\n    }\n\n    if (!isFinite(min) && !isFinite(max))\n        min = max = 0;\n    else if (!isFinite(min))\n        min = max;\n    else if (!isFinite(max))\n        max = min;\n\n    return [ min, max ];\n}\n\n//hackish way to work with requirejs - doesn't actually work yet\n//since we doing use the require optimizer to combine modules\nif( typeof(define) === 'function' && define.amd) {\n    define('$3Dmol',$3Dmol);\n}\n\n/*\n* math-like functionality\n* quaternion, vector, matrix\n*/\n\nvar $3Dmol = $3Dmol || {};\n$3Dmol.Math = {\n\n    clamp : function(x, min, max) {\n        return Math.min( Math.max( x, min ), max );\n    },\n\n    degToRad : function() {\n       var degreeToRadiansFactor = Math.PI / 180;\n\n       return function(deg) {\n           return deg * degreeToRadiansFactor;\n       };\n\n    }()\n\n};\n\n\n// Quaternion\n/** @constructor */\n$3Dmol.Quaternion = function(x, y, z, w) {\n\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = (w !== undefined) ? w : 1;\n\n};\n\n$3Dmol.Quaternion.prototype = {\n\n    constructor : $3Dmol.Quaternion,\n\n    set : function(x, y, z, w) {\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n\n        return this;\n    },\n\n    copy : function(q) {\n\n        this.x = q.x;\n        this.y = q.y;\n        this.z = q.z;\n        this.w = q.w;\n\n        return this;\n    },\n\n    conjugate : function() {\n\n        this.x *= -1;\n        this.y *= -1;\n        this.z *= -1;\n\n        return this;\n    },\n\n    inverse : function() {\n\n        return this.conjugate().normalize();\n    },\n\n    length : function() {\n\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    },\n\n    normalize : function() {\n\n        var l = this.length();\n\n        if (l === 0) {\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n            this.w = 1;\n        } else {\n            l = 1 / l;\n\n            this.x *= l;\n            this.y *= l;\n            this.z *= l;\n            this.w *= l;\n        }\n\n        return this;\n\n    },\n\n    multiply : function(q) {\n\n        return this.multiplyQuaternions(this, q);\n    },\n\n    multiplyQuaternions : function(a, b) {\n\n        var qax = a.x, qay = a.y, qaz = a.z, qaw = a.w;\n        var qbx = b.x, qby = b.y, qbz = b.z, qbw = b.w;\n\n        this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n        this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n        this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n        this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n    }\n};\n\n//A 2 Vector\n/** @constructor */\n$3Dmol.Vector2 = function(x, y) {\n\n    this.x = x || 0.0;\n    this.y = y || 0.0;\n};\n\n$3Dmol.Vector2.prototype = {\n\n    constructor : $3Dmol.Vector2,\n\n    set : function(x, y) {\n\n        this.x = x;\n        this.y = y;\n\n        return this;\n    },\n\n    subVectors : function(a, b) {\n\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n\n      return this;\n    },\n\n    copy : function(v) {\n\n        this.x = v.x;\n        this.y = v.y;\n\n        return this;\n    },\n\n    clone : function() {\n\n        return new $3Dmol.Vector2(this.x, this.y);\n    }\n\n};\n\n//A 3 Vector\n\n$3Dmol.Vector3 = function(x, y, z) {\n    this.x = x || 0.0;\n    this.y = y || 0.0;\n    this.z = z || 0.0;\n};\n/** @this {$3Dmol.Vector3} */\n$3Dmol.Vector3.prototype =  {\n\n    constructor : $3Dmol.Vector3,\n\n    set : function(x, y, z) {\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    },\n\n    copy : function(v) {\n\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n\n        return this;\n    },\n\n    add : function(v) {\n\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n\n        return this;\n    },\n\n    addVectors : function(a, b) {\n\n        this.x = a.x + b.x;\n        this.y = a.y + b.y;\n        this.z = a.z + b.z;\n\n        return this;\n    },\n\n    sub : function(v) {\n\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n\n        return this;\n    },\n\n    subVectors : function(a, b) {\n\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        this.z = a.z - b.z;\n\n        return this;\n    },\n\n    multiplyScalar : function(s) {\n\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n\n        return this;\n    },\n\n    divideScalar : function(s) {\n\n        if (s !== 0) {\n            this.x /= s;\n            this.y /= s;\n            this.z /= s;\n        }\n\n        else {\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n        }\n\n        return this;\n    },\n\n    //accumulate maximum\n    max : function(s) {\n\n        this.x = Math.max(this.x,s.x);\n        this.y = Math.max(this.y,s.y);\n        this.z = Math.max(this.z,s.z);\n\n        return this;\n    },\n\n    //accumulate min\n    min : function(s) {\n\n        this.x = Math.min(this.x,s.x);\n        this.y = Math.min(this.y,s.y);\n        this.z = Math.min(this.z,s.z);\n\n        return this;\n    },\n    distanceTo: function(v) {\n        return Math.sqrt(this.distanceToSquared(v));\n    },\n\n    distanceToSquared: function(v) {\n        var dx = this.x - v.x;\n        var dy = this.y - v.y;\n        var dz = this.z - v.z;\n\n        return dx * dx + dy * dy + dz * dz;\n    },\n\n    applyMatrix4 : function(m) {\n\n        var x = this.x, y = this.y, z = this.z;\n\n        var e = m.elements;\n\n        this.x = e[0]*x + e[4]*y + e[8]*z + e[12];\n        this.y = e[1]*x + e[5]*y + e[9]*z + e[13];\n        this.z = e[2]*x + e[6]*y + e[10]*z + e[14];\n\n        return this;\n    },\n\n    applyProjection : function(m) {\n\n        //input: $3Dmol.Matrix4 projection matrix\n\n        var x = this.x, y = this.y, z = this.z;\n\n        var e = m.elements;\n        var d = ( e[3]*x + e[7]*y + e[11]*z + e[15]);\n\n        this.x = (e[0]*x + e[4]*y + e[8]*z + e[12]) / d;\n        this.y = (e[1]*x + e[5]*y + e[9]*z + e[13]) / d;\n        this.z = (e[2]*x + e[6]*y + e[10]*z + e[14]) / d;\n\n        return this;\n    },\n\n    applyQuaternion : function(q) {\n\n        //save values\n        var x = this.x;\n        var y = this.y;\n        var z = this.z;\n\n        var qx = q.x;\n        var qy = q.y;\n        var qz = q.z;\n        var qw = q.w;\n\n        //compute this as\n        //t = 2 * cross(q.xyz, v)\n        //newv = v + q.w * t + cross(q.xyz, t)\n        //this from molecularmusings\n        //http://molecularmusings.wordpress.com/2013/05/24/a-faster-quaternion-vector-multiplication/\n        var t = {};\n        t.x = 2*(y * qz - z * qy);\n        t.y = 2*(z * qx - x * qz);\n        t.z = 2*(x * qy - y * qx);\n\n        //cross t with q\n        var t2 = {};\n        t2.x = t.y * qz - t.z * qy;\n        t2.y = t.z * qx - t.x * qz;\n        t2.z = t.x * qy - t.y * qx;\n\n        this.x = x + q.w*t.x + t2.x;\n        this.y = y + q.w*t.y + t2.y;\n        this.z = z + q.w*t.z + t2.z;\n\n        return this;\n    },\n\n    negate : function() {\n\n        return this.multiplyScalar(-1);\n    },\n\n    dot : function(v) {\n\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    },\n\n    length : function() {\n\n        return Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z);\n    },\n\n    lengthSq : function() {\n\n        return (this.x*this.x + this.y*this.y + this.z*this.z);\n    },\n\n    normalize : function() {\n\n        return this.divideScalar( this.length() );\n    },\n\n    cross : function (v) {\n\n        var x = this.x, y = this.y, z = this.z;\n\n        this.x = y * v.z - z * v.y;\n        this.y = z * v.x - x * v.z;\n        this.z = x * v.y - y * v.x;\n\n        return this;\n    },\n\n    crossVectors : function(a, b) {\n\n        this.x = a.y * b.z - a.z * b.y;\n        this.y = a.z * b.x - a.x * b.z;\n        this.z = a.x * b.y - a.y * b.x;\n\n        return this;\n    },\n\n    getPositionFromMatrix : function(m) {\n\n        this.x = m.elements[12];\n        this.y = m.elements[13];\n        this.z = m.elements[14];\n\n        return this;\n    },\n\n    setEulerFromRotationMatrix : function (m, order) {\n\n        // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n        var te = m.elements;\n        var m11 = te[0], m12 = te[4], m13 = te[8];\n        var m21 = te[1], m22 = te[5], m23 = te[9];\n        var m31 = te[2], m32 = te[6], m33 = te[10];\n\n        if ( order === undefined || order === 'XYZ' ) {\n\n            this.y = Math.asin( $3Dmol.Math.clamp( m13, -1, 1 ) );\n\n            if ( Math.abs( m13 ) < 0.99999 ) {\n\n                this.x = Math.atan2( - m23, m33 );\n                this.z = Math.atan2( - m12, m11 );\n\n            } else {\n\n                this.x = Math.atan2( m32, m22 );\n                this.z = 0;\n\n            }\n        }\n\n        else {\n            console.error(\"Error with vector's setEulerFromRotationMatrix: Unknown order: \" + order);\n        }\n\n        return this;\n\n    },\n\n    rotateAboutVector : function(axis, ang) {\n\n        axis.normalize();\n        var cosang = Math.cos(ang);\n        var sinang = Math.sin(ang);\n        // Rodrigues' rotation formula, from wikipedia\n\n        var term1 = this.clone().multiplyScalar(cosang);\n        var term2 = (axis.clone().cross(this)).multiplyScalar(sinang)\n        var term3 = axis.clone().multiplyScalar(axis.clone().dot(this)).multiplyScalar(1-cosang);\n\n        var rot = term1.add(term2).add(term3);\n\n        this.x = rot.x;\n        this.y = rot.y;\n        this.z = rot.z;\n\n        return this;\n    },\n\n    clone : function() {\n        return new $3Dmol.Vector3(this.x, this.y, this.z);\n    }\n\n};\n\n//Matrices\n\n//Matrix3\n/** @constructor */\n$3Dmol.Matrix3 = function(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n\n    this.elements = new Float32Array(9);\n\n    this.set(\n        (n11 !== undefined) ? n11 : 1, n12 || 0, n13 || 0,\n        n21 || 0, (n22 !== undefined) ? n22 : 1, n23 || 0,\n        n31 || 0, n32 || 0, (n33 !== undefined) ? n33 : 1\n    );\n\n};\n\n$3Dmol.Matrix3.prototype = {\n\n    constructor : $3Dmol.Matrix3,\n\n    set : function(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n        var te = this.elements;\n\n        te[0] = n11; te[3] = n12; te[6] = n13;\n        te[1] = n21; te[4] = n22; te[7] = n23;\n        te[2] = n31; te[5] = n32; te[8] = n33;\n\n        return this;\n    },\n\n    identity : function() {\n        this.set(\n            1,0,0,\n            0,1,0,\n            0,0,1\n        );\n\n        return this;\n    },\n\n    copy : function(m) {\n        var me = m.elements;\n\n        this.set(\n            me[0], me[3], me[6],\n            me[1], me[4], me[7],\n            me[2], me[5], me[8]\n        );\n    },\n\n    multiplyScalar: function ( s ) {\n        var te = this.elements;\n\n        te[0] *= s; te[3] *= s; te[6] *= s;\n        te[1] *= s; te[4] *= s; te[7] *= s;\n        te[2] *= s; te[5] *= s; te[8] *= s;\n\n        return this;\n    },\n\n    getInverse: function ( matrix, throwOnInvertible ) {\n        // input: Matrix4\n\n        var me = matrix.elements;\n        var te = this.elements;\n\n        te[ 0 ] =   me[10] * me[5] - me[6] * me[9];\n        te[ 1 ] = - me[10] * me[1] + me[2] * me[9];\n        te[ 2 ] =   me[6] * me[1] - me[2] * me[5];\n        te[ 3 ] = - me[10] * me[4] + me[6] * me[8];\n        te[ 4 ] =   me[10] * me[0] - me[2] * me[8];\n        te[ 5 ] = - me[6] * me[0] + me[2] * me[4];\n        te[ 6 ] =   me[9] * me[4] - me[5] * me[8];\n        te[ 7 ] = - me[9] * me[0] + me[1] * me[8];\n        te[ 8 ] =   me[5] * me[0] - me[1] * me[4];\n\n        var det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\n\n        // no inverse\n\n        if ( det === 0 ) {\n\n            var msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n            if ( throwOnInvertible || false ) {\n\n                throw new Error( msg );\n\n            } else {\n\n                console.warn( msg );\n\n            }\n\n            this.identity();\n\n            return this;\n\n        }\n\n        this.multiplyScalar( 1.0 / det );\n\n        return this;\n    },\n\n    //https://en.wikipedia.org/wiki/Determinant\n    getDeterminant: function() {\n        var m = this.elements;\n\n        /*|a b c|\n          |d e f|\n          |g h i|*/\n\n        var determinant\n            = m[0] * m[4] * m[8] //+aei\n            + m[1] * m[5] * m[6] //+bfg\n            + m[2] * m[3] * m[7] //+cdh\n            - m[2] * m[4] * m[6] //-ceg\n            - m[1] * m[3] * m[8] //-bdi\n            - m[0] * m[5] * m[7];//-afh\n        return determinant;\n    },\n\n    transpose: function () {\n        var tmp, m = this.elements;\n\n        tmp = m[1]; m[1] = m[3]; m[3] = tmp;\n        tmp = m[2]; m[2] = m[6]; m[6] = tmp;\n        tmp = m[5]; m[5] = m[7]; m[7] = tmp;\n\n        return this;\n    },\n\n    clone: function () {\n        var te = this.elements;\n\n        return new $3Dmol.Matrix3(\n\n            te[0], te[3], te[6],\n            te[1], te[4], te[7],\n            te[2], te[5], te[8]\n\n        );\n    }\n\n};\n\n//Matrix 4\n/** @constructor */\n$3Dmol.Matrix4 = function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\n    if(typeof(n12) === 'undefined' && typeof(n11) !== 'undefined') {\n        //passing list like initialization\n        this.elements = new Float32Array(n11);\n    } else {\n        var te = this.elements = new Float32Array( 16 );\n\n        te[0] = ( n11 !== undefined ) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;\n        te[1] = n21 || 0; te[5] = ( n22 !== undefined ) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;\n        te[2] = n31 || 0; te[6] = n32 || 0; te[10] = ( n33 !== undefined ) ? n33 : 1; te[14] = n34 || 0;\n        te[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = ( n44 !== undefined ) ? n44 : 1;\n    }\n};\n\n$3Dmol.Matrix4.prototype = {\n\n    constructor : $3Dmol.Matrix4,\n\n    set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n        var te = this.elements;\n\n        te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\n        te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\n        te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\n        te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\n\n        return this;\n    },\n\n    identity: function () {\n        this.set(\n\n            1, 0, 0, 0,\n            0, 1, 0, 0,\n            0, 0, 1, 0,\n            0, 0, 0, 1\n\n        );\n\n        return this;\n    },\n\n    copy: function ( m ) {\n        var me = m.elements;\n\n        this.set(\n\n            me[0], me[4], me[8], me[12],\n            me[1], me[5], me[9], me[13],\n            me[2], me[6], me[10], me[14],\n            me[3], me[7], me[11], me[15]\n\n        );\n\n        return this;\n    },\n\n    matrix3FromTopLeft: function () {\n        var te = this.elements;\n        return new $3Dmol.Matrix3(te[0],te[4],te[8],te[1],te[5],te[9],te[2],te[6],te[10]);\n    },\n\n    setRotationFromEuler: function ( v, order ) {\n\n        var te = this.elements;\n\n        var x = v.x, y = v.y, z = v.z;\n        var a = Math.cos( x ), b = Math.sin( x );\n        var c = Math.cos( y ), d = Math.sin( y );\n        var e = Math.cos( z ), f = Math.sin( z );\n\n        if ( order === undefined || order === 'XYZ' ) {\n\n            var ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n            te[0] = c * e;\n            te[4] = - c * f;\n            te[8] = d;\n\n            te[1] = af + be * d;\n            te[5] = ae - bf * d;\n            te[9] = - b * c;\n\n            te[2] = bf - ae * d;\n            te[6] = be + af * d;\n            te[10] = a * c;\n\n        }\n\n        else\n            console.error(\"Error with matrix4 setRotationFromEuler. Order: \" + order);\n\n        return this;\n\n    },\n\n    setRotationFromQuaternion: function ( q ) {\n        var te = this.elements;\n\n        var x = q.x, y = q.y, z = q.z, w = q.w;\n        var x2 = x + x, y2 = y + y, z2 = z + z;\n        var xx = x * x2, xy = x * y2, xz = x * z2;\n        var yy = y * y2, yz = y * z2, zz = z * z2;\n        var wx = w * x2, wy = w * y2, wz = w * z2;\n\n        te[0] = 1 - ( yy + zz );\n        te[4] = xy - wz;\n        te[8] = xz + wy;\n\n        te[1] = xy + wz;\n        te[5] = 1 - ( xx + zz );\n        te[9] = yz - wx;\n\n        te[2] = xz - wy;\n        te[6] = yz + wx;\n        te[10] = 1 - ( xx + yy );\n\n        return this;\n    },\n\n    lookAt: function() {\n        var x = new $3Dmol.Vector3();\n        var y = new $3Dmol.Vector3();\n        var z = new $3Dmol.Vector3();\n\n        return function ( eye, target, up ) {\n\n            var te = this.elements;\n\n            z.subVectors( eye, target ).normalize();\n\n            if ( z.length() === 0 ) {\n\n                z.z = 1;\n\n            }\n\n            x.crossVectors( up, z ).normalize();\n\n            if ( x.length() === 0 ) {\n\n                z.x += 0.0001;\n                x.crossVectors( up, z ).normalize();\n\n            }\n\n            y.crossVectors( z, x );\n\n\n            te[0] = x.x; te[4] = y.x; te[8] = z.x;\n            te[1] = x.y; te[5] = y.y; te[9] = z.y;\n            te[2] = x.z; te[6] = y.z; te[10] = z.z;\n\n            return this;\n        };\n\n    }(),\n\n    multiplyMatrices: function ( a, b ) {\n        var ae = a.elements;\n        var be = b.elements;\n        var te = this.elements;\n\n        var a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];\n        var a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];\n        var a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];\n        var a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];\n\n        var b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];\n        var b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];\n        var b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];\n        var b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];\n\n        te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n        te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n        te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n        te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n        te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n        te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n        te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n        te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n        te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n        te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n        te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n        te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n        te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n        te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n        te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n        te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n        return this;\n    },\n\n    multiplyScalar: function ( s ) {\n        var te = this.elements;\n\n        te[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;\n        te[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;\n        te[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;\n        te[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;\n\n        return this;\n    },\n\n    makeTranslation: function ( x, y, z ) {\n\n        this.set(\n\n            1, 0, 0, x,\n            0, 1, 0, y,\n            0, 0, 1, z,\n            0, 0, 0, 1\n\n        );\n\n        return this;\n\n    },\n\n    transpose: function () {\n        var te = this.elements;\n        var tmp;\n\n        tmp = te[1]; te[1] = te[4]; te[4] = tmp;\n        tmp = te[2]; te[2] = te[8]; te[8] = tmp;\n        tmp = te[6]; te[6] = te[9]; te[9] = tmp;\n\n        tmp = te[3]; te[3] = te[12]; te[12] = tmp;\n        tmp = te[7]; te[7] = te[13]; te[13] = tmp;\n        tmp = te[11]; te[11] = te[14]; te[14] = tmp;\n\n        return this;\n    },\n\n    getPosition: function() {\n        var v1 = new $3Dmol.Vector3();\n\n        return function () {\n\n            console.warn( 'DEPRECATED: Matrix4\\'s .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.' );\n\n            var te = this.elements;\n            return v1.set( te[12], te[13], te[14] );\n        };\n\n    }(),\n\n    setPosition: function ( v ) {\n        var te = this.elements;\n\n        te[12] = v.x;\n        te[13] = v.y;\n        te[14] = v.z;\n\n        return this;\n    },\n\n    getInverse: function ( m, throwOnInvertible ) {\n        // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n        var te = this.elements;\n        var me = m.elements;\n\n        var n11 = me[0], n12 = me[4], n13 = me[8], n14 = me[12];\n        var n21 = me[1], n22 = me[5], n23 = me[9], n24 = me[13];\n        var n31 = me[2], n32 = me[6], n33 = me[10], n34 = me[14];\n        var n41 = me[3], n42 = me[7], n43 = me[11], n44 = me[15];\n\n        te[0] = n23*n34*n42 - n24*n33*n42 + n24*n32*n43 - n22*n34*n43 - n23*n32*n44 + n22*n33*n44;\n        te[4] = n14*n33*n42 - n13*n34*n42 - n14*n32*n43 + n12*n34*n43 + n13*n32*n44 - n12*n33*n44;\n        te[8] = n13*n24*n42 - n14*n23*n42 + n14*n22*n43 - n12*n24*n43 - n13*n22*n44 + n12*n23*n44;\n        te[12] = n14*n23*n32 - n13*n24*n32 - n14*n22*n33 + n12*n24*n33 + n13*n22*n34 - n12*n23*n34;\n        te[1] = n24*n33*n41 - n23*n34*n41 - n24*n31*n43 + n21*n34*n43 + n23*n31*n44 - n21*n33*n44;\n        te[5] = n13*n34*n41 - n14*n33*n41 + n14*n31*n43 - n11*n34*n43 - n13*n31*n44 + n11*n33*n44;\n        te[9] = n14*n23*n41 - n13*n24*n41 - n14*n21*n43 + n11*n24*n43 + n13*n21*n44 - n11*n23*n44;\n        te[13] = n13*n24*n31 - n14*n23*n31 + n14*n21*n33 - n11*n24*n33 - n13*n21*n34 + n11*n23*n34;\n        te[2] = n22*n34*n41 - n24*n32*n41 + n24*n31*n42 - n21*n34*n42 - n22*n31*n44 + n21*n32*n44;\n        te[6] = n14*n32*n41 - n12*n34*n41 - n14*n31*n42 + n11*n34*n42 + n12*n31*n44 - n11*n32*n44;\n        te[10] = n12*n24*n41 - n14*n22*n41 + n14*n21*n42 - n11*n24*n42 - n12*n21*n44 + n11*n22*n44;\n        te[14] = n14*n22*n31 - n12*n24*n31 - n14*n21*n32 + n11*n24*n32 + n12*n21*n34 - n11*n22*n34;\n        te[3] = n23*n32*n41 - n22*n33*n41 - n23*n31*n42 + n21*n33*n42 + n22*n31*n43 - n21*n32*n43;\n        te[7] = n12*n33*n41 - n13*n32*n41 + n13*n31*n42 - n11*n33*n42 - n12*n31*n43 + n11*n32*n43;\n        te[11] = n13*n22*n41 - n12*n23*n41 - n13*n21*n42 + n11*n23*n42 + n12*n21*n43 - n11*n22*n43;\n        te[15] = n12*n23*n31 - n13*n22*n31 + n13*n21*n32 - n11*n23*n32 - n12*n21*n33 + n11*n22*n33;\n\n        var det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 4 ] + me[ 2 ] * te[ 8 ] + me[ 3 ] * te[ 12 ];\n\n        if ( det === 0 ) {\n\n            var msg = \"Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n            if ( throwOnInvertible || false ) {\n\n                throw new Error( msg );\n\n            } else {\n\n                console.warn( msg );\n\n            }\n\n            this.identity();\n\n            return this;\n        }\n\n        this.multiplyScalar( 1 / det );\n\n        return this;\n    },\n\n    isReflected: function() {\n        return this.matrix3FromTopLeft().getDeterminant() < 0;\n    },\n\n    compose: function() {\n        var mRotation = new $3Dmol.Matrix4(),\n            mScale = new $3Dmol.Matrix4();\n\n        return function ( translation, rotation, scale ) {\n\n            var te = this.elements;\n\n            mRotation.identity();\n            mRotation.setRotationFromQuaternion( rotation );\n\n            mScale.makeScale( scale.x, scale.y, scale.z );\n\n            this.multiplyMatrices( mRotation, mScale );\n\n            te[12] = translation.x;\n            te[13] = translation.y;\n            te[14] = translation.z;\n\n            return this;\n\n        };\n    }(),\n\n    decompose: function() {\n        var x = new $3Dmol.Vector3(),\n            y = new $3Dmol.Vector3(),\n            z = new $3Dmol.Vector3(),\n            matrix = new $3Dmol.Matrix4();\n\n        return function ( translation, rotation, scale ) {\n\n            var te = this.elements;\n\n            // grab the axis vectors\n            x.set( te[0], te[1], te[2] );\n            y.set( te[4], te[5], te[6] );\n            z.set( te[8], te[9], te[10] );\n\n            translation = ( translation instanceof $3Dmol.Vector3 ) ? translation : new $3Dmol.Vector3();\n            rotation = ( rotation instanceof $3Dmol.Quaternion ) ? rotation : new $3Dmol.Quaternion();\n            scale = ( scale instanceof $3Dmol.Vector3 ) ? scale : new $3Dmol.Vector3();\n\n            scale.x = x.length();\n            scale.y = y.length();\n            scale.z = z.length();\n\n            translation.x = te[12];\n            translation.y = te[13];\n            translation.z = te[14];\n\n            // scale the rotation part\n\n            matrix.copy( this );\n\n            matrix.elements[0] /= scale.x;\n            matrix.elements[1] /= scale.x;\n            matrix.elements[2] /= scale.x;\n\n            matrix.elements[4] /= scale.y;\n            matrix.elements[5] /= scale.y;\n            matrix.elements[6] /= scale.y;\n\n            matrix.elements[8] /= scale.z;\n            matrix.elements[9] /= scale.z;\n            matrix.elements[10] /= scale.z;\n\n            rotation.setFromRotationMatrix( matrix );\n\n            return [ translation, rotation, scale ];\n\n        };\n    }(),\n\n    scale: function ( v ) {\n        var te = this.elements;\n        var x = v.x, y = v.y, z = v.z;\n\n        te[0] *= x; te[4] *= y; te[8] *= z;\n        te[1] *= x; te[5] *= y; te[9] *= z;\n        te[2] *= x; te[6] *= y; te[10] *= z;\n        te[3] *= x; te[7] *= y; te[11] *= z;\n\n        return this;\n    },\n\n    getMaxScaleOnAxis : function() {\n\n        var te = this.elements;\n\n        var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n        var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n        var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\n        return Math.sqrt(Math.max(scaleXSq, Math.max(scaleYSq, scaleZSq)));\n\n    },\n\n    makeFrustum: function ( left, right, bottom, top, near, far ) {\n        var te = this.elements;\n\n        var x = 2 * near / ( right - left );\n        var y = 2 * near / ( top - bottom );\n\n        var a = ( right + left ) / ( right - left );\n        var b = ( top + bottom ) / ( top - bottom );\n        var c = - ( far + near ) / ( far - near );\n        var d = - 2 * far * near / ( far - near );\n\n        te[0] = x;  te[4] = 0;  te[8] = a;  te[12] = 0;\n        te[1] = 0;  te[5] = y;  te[9] = b;  te[13] = 0;\n        te[2] = 0;  te[6] = 0;  te[10] = c; te[14] = d;\n        te[3] = 0;  te[7] = 0;  te[11] = - 1;   te[15] = 0;\n\n        return this;\n    },\n\n    makePerspective: function ( fov, aspect, near, far ) {\n        var ymax = near * Math.tan( $3Dmol.Math.degToRad( fov * 0.5 ) );\n        var ymin = - ymax;\n        var xmin = ymin * aspect;\n        var xmax = ymax * aspect;\n\n        return this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n    },\n\n\n    makeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n        var te = this.elements;\n        var w = 1.0 / ( right - left );\n        var h = 1.0 / ( top - bottom );\n        var p = 1.0 / ( far - near );\n\n        var x = ( right + left ) * w;\n        var y = ( top + bottom ) * h;\n        var z = ( far + near ) * p;\n\n        te[ 0 ] = 2 * w;    te[ 4 ] = 0;    te[ 8 ] = 0;    te[ 12 ] = - x;\n        te[ 1 ] = 0;    te[ 5 ] = 2 * h;    te[ 9 ] = 0;    te[ 13 ] = - y;\n        te[ 2 ] = 0;    te[ 6 ] = 0;    te[ 10 ] = - 2 * p; te[ 14 ] = - z;\n        te[ 3 ] = 0;    te[ 7 ] = 0;    te[ 11 ] = 0;   te[ 15 ] = 1;\n\n        return this;\n\n    },\n\n    isEqual : function (m) {\n        var me = m.elements;\n        var te = this.elements;\n\n        if (te[0] == me[0] && te[4] == me[4] && te[8] == me[8] && te[12] == me[12] &&\n            te[1] == me[1] && te[5] == me[5] && te[9] == me[9] && te[13] == me[13] &&\n            te[2] == me[2] && te[6] == me[6] && te[10] == me[10] && te[14] == me[14] &&\n            te[3] == me[3] && te[7] == me[7] && te[11] == me[11] && te[15] == me[15]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    },\n\n    clone: function () {\n        var te = this.elements;\n\n        return new $3Dmol.Matrix4(\n\n            te[0], te[4], te[8], te[12],\n            te[1], te[5], te[9], te[13],\n            te[2], te[6], te[10], te[14],\n            te[3], te[7], te[11], te[15]\n\n        );\n    },\n\n    isIdentity: function () {\n        var te = this.elements;\n\n        if (te[0] == 1 && te[4] == 0 && te[8] == 0 && te[12] == 0 &&\n            te[1] == 0 && te[5] == 1 && te[9] == 0 && te[13] == 0 &&\n            te[2] == 0 && te[6] == 0 && te[10] == 1 && te[14] == 0 &&\n            te[3] == 0 && te[7] == 0 && te[11] == 0 && te[15] == 1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n};\n/** @constructor */\n$3Dmol.Ray = function(origin, direction) {\n\n    this.origin = (origin !== undefined) ?\n        origin : new $3Dmol.Vector3();\n\n    this.direction = (direction !== undefined) ?\n        direction : new $3Dmol.Vector3();\n\n};\n\n//TODO: Remove methods we don't need (intersectPlane ??)\n$3Dmol.Ray.prototype = {\n\n    constructor : $3Dmol.Ray,\n\n    set : function(origin, direction){\n\n        this.origin.copy(origin);\n        this.direction.copy(direction);\n\n        return this;\n\n    },\n\n    copy : function(ray) {\n\n        this.origin.copy(ray.origin);\n        this.direction.copy(ray.direction);\n\n        return this;\n\n    },\n\n    at : function(t, optionalTarget) {\n\n        var result = optionalTarget || new $3Dmol.Vector3();\n\n        return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n\n    },\n\n    recast : function() {\n\n        var v1 = new $3Dmol.Vector3();\n\n        return function(t) {\n            this.origin.copy(this.at(t, v1));\n\n            return this;\n        };\n\n    }(),\n\n    closestPointToPoint : function(point, optionalTarget) {\n\n        var result = optionalTarget || new $3Dmol.Vector3();\n        result.subVectors(point, this.origin);\n        var directionDistance = result.dot(this.direction);\n\n        //returns a point on this ray\n        return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n    },\n\n    distanceToPoint : function(point) {\n\n        var v1 = new $3Dmol.Vector3();\n\n        return function(point) {\n            var directionDistance = v1.subVectors(point, this.origin).dot(this.direction);\n            v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n            return v1.distanceTo(point);\n        };\n\n    }(),\n\n    isIntersectionCylinder : function() {\n\n    },\n\n    isIntersectionSphere : function(sphere) {\n       return (this.distanceToPoint(sphere.center) <= sphere.radius);\n\n    },\n\n    isIntersectionPlane : function(plane) {\n\n        var denominator = plane.normal.dot(this.direction);\n\n        //plane and ray are not perpendicular\n        if (denominator !== 0)\n            return true;\n\n        if (plane.distanceToPoint(this.origin) === 0)\n            return true;\n\n        return false;\n\n    },\n\n    distanceToPlane : function(plane) {\n\n       var denominator = plane.normal.dot(this.direction);\n       if (denominator === 0) {\n\n           //line is coplanar\n       if (plane.distanceToPoint(this.origin) === 0)\n           return 0;\n\n       //ray is parallel\n           return undefined;\n       }\n\n       var t = - (this.origin.dot(plane.normal) + plane.constant) / denominator;\n\n       return t;\n\n    },\n\n    intersectPlane : function(plane, optionalTarget) {\n\n       var t = this.distanceToPlane(plane);\n\n       if (t === undefined)\n           return undefined;\n\n       return this.at(t, optionalTarget);\n\n    },\n\n    applyMatrix4 : function(matrix4) {\n\n       this.direction.add(this.origin).applyMatrix4(matrix4);\n       this.origin.applyMatrix4(matrix4);\n       this.direction.sub(this.origin);\n\n       return this;\n\n    },\n\n    equals : function(ray) {\n\n       return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n\n    },\n\n    clone : function() {\n\n       return new $3Dmol.Ray().copy(this);\n\n    }\n\n\n};\n\n//Intersection sphere and box shapes.\n\n\n//Intersection sphere for sphere, stick render\n/** @constructor */\n$3Dmol.Sphere = function(center, radius) {\n\n    this.center = (center !== undefined) ?\n        center : new $3Dmol.Vector3();\n\n    this.radius = (radius !== undefined) ?\n        radius : 0;\n\n};\n\n$3Dmol.Sphere.prototype = {\n\n    constructor : $3Dmol.Sphere,\n\n    set : function(center, radius) {\n\n        this.center.copy(center);\n        this.radius = radius;\n\n        return this;\n\n    },\n\n    copy : function(sphere) {\n\n        this.center.copy(sphere.center);\n        this.radius = sphere.radius;\n\n        return this;\n\n    },\n\n    applyMatrix4 : function(matrix) {\n\n        this.center.applyMatrix4(matrix);\n        this.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n        return this;\n\n    },\n\n    translate : function(offset) {\n\n        this.center.add(offset);\n\n        return this;\n\n    },\n\n    equals : function(sphere) {\n\n        return sphere.center.equals(this.center) && (sphere.radius === this.radius);\n\n    },\n\n    clone : function() {\n\n        return new $3Dmol.Sphere().copy(this);\n\n    }\n\n};\n\n\n//Bounding cylinder for stick render\n/** @constructor */\n$3Dmol.Cylinder = function(c1, c2, radius) {\n\n    this.c1 = (c1 !== undefined) ?\n        c1 : new $3Dmol.Vector3();\n\n    this.c2 = (c2 !== undefined) ?\n        c2 : new $3Dmol.Vector3();\n\n    this.direction = new $3Dmol.Vector3().subVectors(this.c2, this.c1).normalize();\n\n    this.radius = (radius !== undefined) ?\n        radius : 0;\n\n};\n\n$3Dmol.Cylinder.prototype = {\n\n    constructor : $3Dmol.Cylinder,\n\n    copy : function(cylinder) {\n\n        this.c1.copy(cylinder.c1);\n        this.c2.copy(cylinder.c2);\n        this.direction.copy(cylinder.direction);\n        this.radius = cylinder.radius;\n\n        return this;\n\n    },\n\n    lengthSq : function() {\n\n        var vector = new $3Dmol.Vector3();\n\n        return function(){\n            return vector.subVectors(this.c2, this.c1).lengthSq();\n        };\n\n    }(),\n\n    applyMatrix4 : function(matrix) {\n\n        this.direction.add(this.c1).applyMatrix4(matrix);\n        this.c1.applyMatrix4(matrix);\n        this.c2.applyMatrix4(matrix);\n        this.direction.sub(this.c1).normalize();\n        this.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n        return this;\n\n    }\n\n};\n\n\n//plane specified by three points\n/** @constructor */\n$3Dmol.Triangle = function(a, b, c){\n\n    this.a = (a !== undefined) ?\n        a : new $3Dmol.Vector3();\n\n    this.b = (b !== undefined) ?\n        b : new $3Dmol.Vector3();\n\n    this.c = (c !== undefined) ?\n        c : new $3Dmol.Vector3();\n\n};\n\n$3Dmol.Triangle.prototype = {\n\n    constructor : $3Dmol.Triangle,\n\n    copy : function(triangle) {\n\n        this.a.copy(triangle.a);\n        this.b.copy(triangle.b);\n        this.c.copy(triangle.c);\n\n        return this;\n\n    },\n\n    applyMatrix4 : function(matrix) {\n\n        this.a.applyMatrix4(matrix);\n        this.b.applyMatrix4(matrix);\n        this.c.applyMatrix4(matrix);\n\n        return this;\n\n    },\n\n    getNormal : function() {\n\n        var v1 = new $3Dmol.Vector3();\n\n        return function() {\n\n            var norm = this.a.clone();\n            norm.sub(this.b);\n            v1.subVectors(this.c, this.b);\n\n            norm.cross(v1);\n            norm.normalize();\n\n            return norm;\n\n        };\n\n    }()\n\n};\n\n\n/* core Object3D\n * Base class for Scene, Camera, Geometry\n * Geometry class\n */\n\n//Event Handling\n/** @this {$3Dmol.EventDispatcher} */\n$3Dmol.EventDispatcher = function() {\n\n    var listeners = {};\n\n    this.addEventListener = function(type, listener) {\n        if (listeners[type] === undefined)\n            listeners[type] = [];\n\n        if (listeners[type].indexOf(listener) === -1)\n            listeners[type].push(listener);\n    };\n\n    this.removeEventListener = function(type, listener) {\n\n        var index = listeners[type].indexOf(listener);\n\n        if (index !== -1)\n            listeners[type].splice(index, 1);\n\n    };\n\n    this.dispatchEvent = function(event) {\n\n        var listenerArray = listeners[event.type];\n\n        if (listenerArray !== undefined) {\n            event.target = this;\n\n            for (var i = 0, l = listenerArray.length; i < l; i++)\n                listenerArray[i].call(this, event);\n\n        }\n\n    };\n\n};\n\n$3Dmol.Color = function( color ){\n\n    if ( arguments.length > 1) {\n            this.r = arguments[0] || 0.0;\n            this.g = arguments[1] || 0.0;\n            this.b = arguments[2] || 0.0;\n\n            return this;\n    }\n\n    return this.set(color);\n\n};\n\n$3Dmol.Color.prototype = {\n\n    constructor: $3Dmol.Color,\n\n    r: 0.0, g: 0.0, b: 0.0,\n\n    set : function(val) {\n\n            if (val instanceof $3Dmol.Color)\n                return val.clone();\n\n            else if (typeof val === 'number')\n                this.setHex(val);\n\n            else if (typeof val === 'object' && \"r\" in val && \"g\" in val && \"b\" in val) {\n                this.r = val.r;\n                this.g = val.g;\n                this.b = val.b;\n            }\n    },\n\n    setHex: function(hex) {\n\n            hex = Math.floor(hex);\n\n            this.r = (hex >> 16 & 255) / 255;\n            this.g = (hex >> 8 & 255) / 255;\n            this.b = (hex & 255) / 255;\n\n            return this;\n    },\n\n    getHex: function() {\n        var R = Math.round(this.r*255);\n        var G = Math.round(this.g*255);\n        var B = Math.round(this.b*255);\n        return R<<16 | G << 8 | B;\n    },\n\n    clone : function() {\n            return new $3Dmol.Color(this.r, this.g, this.b);\n    },\n\n    copy : function(color) {\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n\n        return this;\n    },\n\n    //return object that represents color components from 0 to 255\n    scaled : function() {\n        var ret = {};\n        ret.r = Math.round(this.r*255);\n        ret.g = Math.round(this.g*255);\n        ret.b = Math.round(this.b*255);\n        ret.a = 1.0;\n        return ret;\n    }\n\n};\n\n//Object3D base constructor function\n/** @this {$3Dmol.Object3D} */\n$3Dmol.Object3D = function() {\n\n    this.id = $3Dmol.Object3DIDCount++;\n\n    this.name = \"\";\n\n    this.parent = undefined;\n    this.children = [];\n\n    this.position = new $3Dmol.Vector3();\n    this.rotation = new $3Dmol.Vector3();\n    this.matrix = new $3Dmol.Matrix4();\n    this.matrixWorld = new $3Dmol.Matrix4();\n    this.quaternion = new $3Dmol.Quaternion();\n    this.eulerOrder = 'XYZ';\n\n    this.up = new $3Dmol.Vector3(0, 1, 0);\n    this.scale = new $3Dmol.Vector3(1, 1, 1);\n\n    this.matrixAutoUpdate = true;\n    this.matrixWorldNeedsUpdate = true;\n    this.rotationAutoUpdate = true;\n    this.useQuaternion = false;\n\n    this.visible = true;\n\n};\n\n$3Dmol.Object3D.prototype = {\n\n    constructor : $3Dmol.Object3D,\n\n    lookAt : function(vector) {\n\n        this.matrix.lookAt(vector, this.position, this.up);\n\n        if (this.rotationAutoUpdate) {\n\n            if (this.useQuaternion === true)\n                this.quaternion.copy(this.matrix.decompose()[1]);\n            else\n                this.rotation.setEulerFromRotationMatrix(this.matrix, this.eulerOrder);\n        }\n    },\n\n    //add child object\n    add : function(object) {\n        if (object === this){\n            console.error(\"Can't add $3Dmol.Object3D to itself\");\n            return;\n        }\n\n        object.parent = this;\n        this.children.push(object);\n\n        //add to the scene (i.e. follow up this instance's parents until reach the top)\n\n        var scene = this;\n\n        while (scene.parent !== undefined)\n            scene = scene.parent;\n\n        if (scene !== undefined && scene instanceof $3Dmol.Scene)\n            scene.__addObject(object);\n\n    },\n\n    remove : function(object) {\n\n        var index = this.children.indexOf(object);\n\n        if (index !== -1) {\n\n            object.parent = undefined;\n            this.children.splice(index, 1);\n\n            //Remove from scene\n\n            var scene = this;\n\n            while (scene.parent !== undefined)\n                scene = scene.parent;\n\n            if (scene !== undefined && scene instanceof $3Dmol.Scene)\n                scene.__removeObject(object);\n\n        }\n    },\n\n    updateMatrix : function() {\n\n        this.matrix.setPosition(this.position);\n\n        if (this.useQuaternion === false)\n            this.matrix.setRotationFromEuler(this.rotation, this.eulerOrder);\n        else\n            this.matrix.setRotationFromQuaternion(this.quaternion);\n\n        //TODO: Do I need this??\n        if (this.scale.x !== 1 || this.scale.y !== 1 || this.scale.z !== 1)\n            this.matrix.scale(this.scale);\n\n        this.matrixWorldNeedsUpdate = true;\n\n    },\n\n    updateMatrixWorld : function(force) {\n\n        if (this.matrixAutoUpdate === true)\n            this.updateMatrix();\n\n        if (this.matrixWorldNeedsUpdate === true || force === true) {\n\n            if (this.parent === undefined)\n                this.matrixWorld.copy(this.matrix);\n            else\n                this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\n        }\n\n        this.matrixWorldNeedsUpdate = false;\n\n        //Update matrices of all children\n        for (var i = 0; i < this.children.length; i++) {\n            this.children[i].updateMatrixWorld(true);\n        }\n    },\n\n    clone : function(object) {\n\n        if (object === undefined)\n            object = new $3Dmol.Object3D();\n\n        object.name = this.name;\n\n        object.up.copy(this.up);\n        object.position.copy(this.position);\n        object.rotation.copy(this.rotation);\n        object.eulerOrder = this.eulerOrder;\n        object.scale.copy(this.scale);\n\n        object.rotationAutoUpdate = this.rotationAutoUpdate;\n        object.matrix.copy(this.matrix);\n        object.matrixWorld.copy(this.matrixWorld);\n        object.quaternion.copy(this.quaternion);\n        object.matrixAutoUpdate = this.matrixAutoUpdate;\n        object.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\n\n        object.useQuaternion = this.useQuaternion;\n\n        object.visible = this.visible;\n\n        for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n            object.add(child.clone());\n        }\n\n        return object;\n\n    },\n\n    setVisible: function(val) { //recursively set visibility\n        this.visible = val;\n        for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n            child.setVisible(val);\n        }\n    }\n};\n\n$3Dmol.Object3DIDCount = 0;\n\n//Geometry class\n//TODO: What can I remove - how can I optimize ?\n$3Dmol.Geometry = (function() {\n\n    var BUFFERSIZE = 65535; //limited to 16bit indices\n\n\n    /** @constructor */\n    var geometryGroup = function(id) {\n        this.id = id || 0;\n        //for performance reasons, callers must directly modify these\n        this.vertexArray = null;\n        this.colorArray = null;\n        this.normalArray = null;\n        this.faceArray = null;\n        this.radiusArray = null;\n        //this.adjFaceArray=null;\n        this.lineArray = null;\n        this.vertices = 0;\n        this.faceidx = 0;\n        this.lineidx = 0;\n\n    };\n\n    geometryGroup.prototype.getNumVertices = function() {\n        return this.vertices;\n    };\n\n    geometryGroup.prototype.getVertices = function() {\n        return this.vertexArray;\n    };\n\n\n    geometryGroup.prototype.getCentroid = function() {\n\n        var centroid = new $3Dmol.Vector3();\n        var offset, x, y, z;\n\n        for (var i = 0; i < this.vertices; ++i) {\n            offset = i*3;\n\n            x = this.vertexArray[offset]; y = this.vertexArray[offset+1]; z = this.vertexArray[offset+2];\n\n            centroid.x += x; centroid.y += y; centroid.z += z;\n        }\n\n        //divideScalar checks for 0 denom\n        centroid.divideScalar(this.vertices);\n\n        return centroid;\n    };\n\n    //setup normals - vertex and face array must exist\n    geometryGroup.prototype.setNormals = function() {\n\n        var faces = this.faceArray;\n        var verts = this.vertexArray;\n        var norms = this.normalArray;\n\n        if (! this.vertices || ! this.faceidx)\n            return;\n\n        //vertex indices\n        var a, b, c, d,\n        //and actual vertices\n        vA, vB, vC, norm;\n\n        for (var i = 0; i < faces.length / 3; ++i) {\n\n            a = faces[i * 3] * 3;\n            b = faces[i * 3 + 1] * 3;\n            c = faces[i * 3 + 2] * 3;\n\n            vA = new $3Dmol.Vector3(verts[a], verts[a+1], verts[a+2]);\n            vB = new $3Dmol.Vector3(verts[b], verts[b+1], verts[b+2]);\n            vC = new $3Dmol.Vector3(verts[c], verts[c+1], verts[c+2]);\n\n            vA.subVectors(vA, vB);\n            vC.subVectors(vC, vB);\n            vC.cross(vA);\n\n            //face normal\n            norm = vC;\n            norm.normalize();\n\n            norms[a] += norm.x; norms[b] += norm.x; norms[c] += norm.x;\n            norms[a + 1] += norm.y; norms[b + 1] += norm.y; norms[c + 1] += norm.y;\n            norms[a + 2] += norm.z; norms[b + 2] += norm.z; norms[c + 2] += norm.z;\n\n        }\n\n    };\n\n    //sets line index array from face arr\n    //Note - assumes all faces are triangles (i.e. there will\n    //be an extra diagonal for four-sided faces - user should\n    //specify linearr for custom shape generation to show wireframe squares\n    //as rectangles rather than two triangles)\n    geometryGroup.prototype.setLineIndices = function() {\n\n        if (! this.faceidx)\n            return;\n\n        var faceArr = this.faceArray, lineArr = this.lineArray = new Uint16Array(this.faceidx*2);\n        this.lineidx = this.faceidx*2;\n        var faceoffset;\n\n        for (var i = 0; i < this.faceidx / 3; ++i) {\n\n            faceoffset = i*3;\n            var lineoffset = faceoffset*2;\n            var a = faceArr[faceoffset], b = faceArr[faceoffset+1], c = faceArr[faceoffset+2];\n\n            lineArr[lineoffset] = a; lineArr[lineoffset+1] = b;\n            lineArr[lineoffset+2] = a; lineArr[lineoffset+3] = c;\n            lineArr[lineoffset+4] = b; lineArr[lineoffset+5] = c;\n\n        }\n    };\n\n    geometryGroup.prototype.truncateArrayBuffers = function(mesh, reallocatemem) {\n\n        mesh = (mesh === true) ? true : false;\n\n        var vertexArr = this.vertexArray,\n            colorArr = this.colorArray,\n            normalArr = this.normalArray,\n            faceArr = this.faceArray,\n            lineArr = this.lineArray,\n            radiusArr = this.radiusArray;\n\n        //subarray to avoid copying and reallocating memory\n        this.vertexArray = vertexArr.subarray(0,this.vertices*3);\n        this.colorArray = colorArr.subarray(0,this.vertices*3);\n\n        if (mesh) {\n            this.normalArray = normalArr.subarray(0,this.vertices*3);\n            this.faceArray = faceArr.subarray(0,this.faceidx);\n\n            if(this.lineidx > 0) //not always set so reclaim memory\n                this.lineArray = lineArr.subarray(0,this.lineidx);\n            else\n                this.lineArray = new Uint16Array(0);\n\n        }\n        else {\n            this.normalArray = new Float32Array(0);\n            this.faceArray = new Uint16Array(0);\n            this.lineArray = new Uint16Array(0);\n        }\n        if (radiusArr) {\n            this.radiusArray = radiusArr.subarray(0, this.vertices);\n        }\n\n        if(reallocatemem) {\n            //actually copy smaller arrays to save memory\n            if(this.normalArray) this.normalArray = new Float32Array(this.normalArray);\n            if(this.faceArray) this.faceArray = new Uint16Array(this.faceArray);\n            if(this.lineArray) this.lineArray = new Uint16Array(this.lineArray);\n            if(this.vertexArray) this.vertexArray = new Float32Array(this.vertexArray);\n            if(this.colorArray) this.colorArray = new Float32Array(this.colorArray);\n            if(this.radiusArray) this.radiusArray = new Float32Array(this.radiusArray);\n        }\n        this.__inittedArrays = true;\n\n    };\n\n    var addGroup = function(geo) {\n        var ret = new geometryGroup(geo.geometryGroups.length);\n        geo.geometryGroups.push(ret);\n        geo.groups = geo.geometryGroups.length;\n\n        ret.vertexArray = new Float32Array(BUFFERSIZE*3);\n        ret.colorArray = new Float32Array(BUFFERSIZE*3);\n\n        //TODO: instantiating uint arrays according to max number of vertices\n        // is dangerous, since there exists the possibility that there will be\n        // more face or line indices than vertex points - but so far that doesn't\n        // seem to be the case for any of the renders\n        if (geo.mesh) {\n            ret.normalArray = new Float32Array(BUFFERSIZE*3);\n            ret.faceArray = new Uint16Array(BUFFERSIZE*6);\n            ret.lineArray = new Uint16Array(BUFFERSIZE*6);\n        }\n        if (geo.radii) {\n            ret.radiusArray = new Float32Array(BUFFERSIZE);\n        }\n        ret.useOffset = geo.offset;\n\n\n        return ret;\n    };\n    /** @constructor */\n    var Geometry = function(mesh, radii,offset) {\n\n        $3Dmol.EventDispatcher.call(this);\n\n        this.id = $3Dmol.GeometryIDCount++;\n\n        this.name = '';\n\n        this.hasTangents = false;\n\n        this.dynamic = true; // the intermediate typed arrays will be deleted when set to false\n        this.mesh = (mesh === true) ? true : false; // Does this geometry represent a mesh (i.e. do we need Face/Line index buffers?)\n        this.radii = radii || false;\n        this.offset = offset || false; //offset buffer used for instancing\n        // update flags\n\n        this.verticesNeedUpdate = false;\n        this.elementsNeedUpdate = false;\n        this.normalsNeedUpdate = false;\n        this.colorsNeedUpdate = false;\n\n        this.buffersNeedUpdate = false;\n\n        this.geometryGroups = [];\n        this.groups = 0;\n\n    };\n\n    Geometry.prototype = {\n\n        constructor : Geometry,\n\n        //Get geometry group to accomodate addVertices new vertices - create\n        // new group if necessary\n        updateGeoGroup : function(addVertices) {\n\n            addVertices = addVertices || 0;\n\n            var retGroup = this.groups > 0 ? this.geometryGroups[ this.groups - 1 ] : null;\n\n            if (!retGroup || retGroup.vertices + addVertices > retGroup.vertexArray.length/3)\n                retGroup = addGroup(this);\n\n            return retGroup;\n\n        },\n\n        addGeoGroup : function() {\n            return addGroup(this);\n        },\n\n        setUpNormals : function(three) {\n\n            three = three || false;\n\n            for (var g = 0; g < this.groups; g++) {\n\n                var geoGroup = this.geometryGroups[g];\n\n                geoGroup.setNormals(three);\n\n            }\n\n        },\n\n        setUpWireframe : function() {\n            for (var g = 0; g < this.groups; g++) {\n                var geoGroup = this.geometryGroups[g];\n\n                geoGroup.setLineIndices();\n            }\n        },\n\n        //After vertices, colors, etc are collected in regular or typed arrays,\n        //  create typed arrays from regular arrays if they don't already exist,\n        initTypedArrays : function() {\n\n            for (var g = 0; g < this.groups; g++) {\n\n                var group = this.geometryGroups[g];\n\n                if (group.__inittedArrays === true)\n                    continue;\n\n                //do not actually reallocate smaller memory here because\n                //of the performance hit - if you know your geometry is small,\n                //truncate manually with the second parameter true\n                group.truncateArrayBuffers(this.mesh, false);\n            }\n\n\n        },\n\n        dispose : function() {\n            this.dispatchEvent( {type : 'dispose'} );\n        }\n    };\n\n\n    return Geometry;\n\n})();\n\nObject.defineProperty($3Dmol.Geometry.prototype, \"vertices\", {\n\n    /** @this {$3Dmol.Geometry} */\n    get : function() {\n        var vertices = 0;\n        for (var g = 0; g < this.groups; g++)\n            vertices += this.geometryGroups[g].vertices;\n\n        return vertices;\n    }\n\n});\n\n$3Dmol.GeometryIDCount = 0;\n\n\n//Raycaster\n/** @constructor */\n$3Dmol.Raycaster = (function() {\n\n    var Raycaster = function(origin, direction, far, near) {\n\n        this.ray = new $3Dmol.Ray(origin, direction);\n\n        if (this.ray.direction.lengthSq() > 0)\n            this.ray.direction.normalize();\n\n        this.near = near || 0;\n        this.far = far || Infinity;\n\n    };\n\n    var sphere = new $3Dmol.Sphere();\n    var cylinder = new $3Dmol.Cylinder();\n    var triangle = new $3Dmol.Triangle();\n    var w_0 = new $3Dmol.Vector3(); // for cylinders, cylinder.c1 - ray.origin\n    var v1 = new $3Dmol.Vector3(); // all purpose local vector\n    var v2 = new $3Dmol.Vector3();\n    var v3 = new $3Dmol.Vector3();\n    //var facePlane = new $3Dmol.Plane();\n    var localRay = new $3Dmol.Ray();\n    var intersectPoint = new $3Dmol.Vector3();\n    var matrixPosition = new $3Dmol.Vector3();\n\n    var inverseMatrix = new $3Dmol.Matrix4();\n\n    var descSort = function(a, b) {\n        return a.distance - b.distance;\n    };\n\n    // [-1, 1]\n    var clamp = function(x) {\n        return Math.min(Math.max(x, -1), 1);\n    };\n\n    //object is a Sphere or (Bounding) Box\n    var intersectObject = function(group, clickable, raycaster, intersects) {\n\n        matrixPosition.getPositionFromMatrix(group.matrixWorld);\n\n        if (clickable.intersectionShape === undefined)\n            return intersects;\n        var intersectionShape = clickable.intersectionShape;\n        var precision = raycaster.linePrecision;\n        precision *= group.matrixWorld.getMaxScaleOnAxis();\n        var precisionSq = precision*precision;\n\n        //Check for intersection with clickable's bounding sphere, if it exists\n        if (clickable.boundingSphere !== undefined && clickable.boundingSphere instanceof $3Dmol.Sphere) {\n            sphere.copy(clickable.boundingSphere);\n            sphere.applyMatrix4(group.matrixWorld);\n            if (!raycaster.ray.isIntersectionSphere(sphere)) {\n        return intersects;\n            }\n        }\n\n\n        //Iterate through intersection objects\n        var i, il,\n            norm, normProj, cylProj, rayProj,\n            distance, closestDistSq, denom, discriminant,\n            s, t, s_c, t_c;\n        //triangle faces\n        for (i = 0, il = intersectionShape.triangle.length; i < il; i++) {\n\n            if (intersectionShape.triangle[i] instanceof $3Dmol.Triangle) {\n\n                triangle.copy(intersectionShape.triangle[i]);\n                triangle.applyMatrix4(group.matrixWorld);\n\n                norm = triangle.getNormal();\n\n                normProj = raycaster.ray.direction.dot(norm);\n\n                //face culling\n                if (normProj >= 0)\n                    continue;\n\n                w_0.subVectors(triangle.a, raycaster.ray.origin);\n\n                distance = (norm.dot(w_0)) / normProj;\n\n                if (distance < 0)\n                    continue;\n\n                //intersects with plane, check if P inside triangle\n                v1.copy(raycaster.ray.direction).multiplyScalar(distance).add(raycaster.ray.origin);\n                v1.sub(triangle.a); // from pt a to intersection point P\n\n                v2.copy(triangle.b).sub(triangle.a); // from pt a to b\n                v3.copy(triangle.c).sub(triangle.a); // from pt a to c\n                var b_dot_c = v2.dot(v3);\n                var b_sq = v2.lengthSq();\n                var c_sq = v3.lengthSq();\n\n                // P = A + s(v2) + t(v3), inside trianle if 0 <= s, t <=1  and (s + t) <=0\n\n                t = ( b_sq*v1.dot(v3) - b_dot_c*v1.dot(v2) ) / ( b_sq*c_sq - b_dot_c*b_dot_c );\n\n                if (t < 0 || t > 1)\n                    continue;\n\n                s = ( v1.dot(v2) - t*b_dot_c ) / b_sq;\n\n                if ( (s < 0 || s > 1) || s + t > 1)\n                    continue;\n\n                else{\n                    intersects.push({clickable : clickable,\n                                     distance : distance});\n        }\n            }\n        }\n        //cylinders\n        for (i = 0, il = intersectionShape.cylinder.length; i < il; i++) {\n\n            if (intersectionShape.cylinder[i] instanceof $3Dmol.Cylinder){\n\n                cylinder.copy(intersectionShape.cylinder[i]);\n                cylinder.applyMatrix4(group.matrixWorld);\n\n                w_0.subVectors(cylinder.c1, raycaster.ray.origin);\n\n                cylProj = w_0.dot(cylinder.direction); // Dela\n                rayProj = w_0.dot(raycaster.ray.direction); // Epsilon\n\n                normProj = clamp(raycaster.ray.direction.dot(cylinder.direction)); // Beta\n\n                denom = 1 - normProj*normProj;\n\n                if (denom === 0.0)\n                    continue;\n\n                s_c = (normProj*rayProj - cylProj) / denom;\n                t_c = (rayProj - normProj*cylProj) / denom;\n\n                v1.copy(cylinder.direction).multiplyScalar(s_c).add(cylinder.c1);  // Q_c\n                v2.copy(raycaster.ray.direction).multiplyScalar(t_c).add(raycaster.ray.origin); // P_c\n\n                closestDistSq = v3.subVectors(v1, v2).lengthSq();\n                var radiusSq = cylinder.radius*cylinder.radius;\n\n                //Smoothing?\n                //if (closestDistSq > radiusSq) radiusSq += precisionSq;\n\n                // closest distance between ray and cylinder axis not greater than cylinder radius;\n                // might intersect this cylinder between atom and bond midpoint\n                if (closestDistSq <= radiusSq){\n\n                    //Find points where ray intersects sides of cylinder\n                    discriminant = (normProj*cylProj - rayProj)*(normProj*cylProj - rayProj) -\n                            denom*(w_0.lengthSq() - cylProj*cylProj - radiusSq);\n\n                    // ray tangent to cylinder?\n                    if (discriminant <= 0)\n                        t = distance = Math.sqrt(closestDistSq);\n                    else\n                        t = distance = ( (rayProj - normProj*cylProj) - Math.sqrt(discriminant) ) / denom;\n\n                    //find closest intersection point; make sure it's between atom's position and cylinder midpoint\n\n                    s = normProj*t - cylProj;\n\n                    //does not intersect cylinder between atom and midpoint,\n                    // or intersects cylinder behind camera\n                    if (s < 0 || s*s > cylinder.lengthSq() || t < 0)\n                        continue;\n\n                    else\n                        intersects.push({clickable : clickable,\n                                         distance : distance});\n\n                }\n\n\n            }\n\n        }\n        //lines\n        for (i = 0, il = intersectionShape.line.length; i < il; i += 2) {\n\n            v1.copy(intersectionShape.line[i]);\n            v1.applyMatrix4(group.matrixWorld);\n            v2.copy(intersectionShape.line[i+1]);\n            v2.applyMatrix4(group.matrixWorld);\n\n            v3.subVectors(v2, v1);\n            var bondLengthSq = v3.lengthSq();\n            v3.normalize();\n\n            w_0.subVectors(v1, raycaster.ray.origin);\n\n            var lineProj = w_0.dot(v3);\n            rayProj = w_0.dot(raycaster.ray.direction);\n\n            normProj = clamp(raycaster.ray.direction.dot(v3));\n\n            denom = 1 - normProj*normProj;\n\n            if (denom === 0.0)\n                continue;\n\n            s_c = (normProj*rayProj - lineProj) / denom;\n            t_c = (rayProj - normProj*lineProj) / denom;\n\n            v1.add(v3.multiplyScalar(s_c)); // Q_c\n            v2.copy(raycaster.ray.direction).multiplyScalar(t_c).add(raycaster.ray.origin); // P_c\n\n            closestDistSq = v3.subVectors(v2, v1).lengthSq();\n\n            if (closestDistSq < precisionSq && s_c*s_c < bondLengthSq)\n                intersects.push({clickable : clickable,\n                                 distance : t_c\n                                });\n\n        }\n        for (i = 0, il = intersectionShape.sphere.length; i < il; i++) {\n            //sphere\n            if (intersectionShape.sphere[i] instanceof $3Dmol.Sphere) {\n\n                sphere.copy(intersectionShape.sphere[i]);\n                sphere.applyMatrix4(group.matrixWorld);\n\n                if (raycaster.ray.isIntersectionSphere(sphere)) {\n\n                    v1.subVectors(sphere.center, raycaster.ray.origin);\n\n                    //distance from ray origin to point on the ray normal to sphere's center\n                    //must be less than sphere's radius (since ray intersects sphere)\n                    var distanceToCenter = v1.dot(raycaster.ray.direction);\n\n                    discriminant = distanceToCenter*distanceToCenter - (v1.lengthSq() - sphere.radius*sphere.radius);\n\n                    //Don't select if sphere center behind camera\n                    if (distanceToCenter < 0)\n                        return intersects;\n\n                    //ray tangent to sphere?\n                    if (discriminant <= 0)\n                        distance = distanceToCenter;\n\n                    //This is reversed if sphere is closer than ray origin.  Do we have\n                    //to worry about handling that case?\n                    else\n                        distance = distanceToCenter - Math.sqrt(discriminant);\n\n                    intersects.push({clickable : clickable,\n                                     distance : distance});\n                    return intersects;\n                }\n            }\n       }\n\n    };\n\n    Raycaster.prototype.precision = 0.0001;\n    Raycaster.prototype.linePrecision = 0.2;\n\n    Raycaster.prototype.set = function(origin, direction) {\n\n        this.ray.set(origin, direction);\n\n    };\n\n    Raycaster.prototype.intersectObjects = function(group, objects) {\n        var intersects = [];\n\n        for (var i = 0, l = objects.length; i < l; i++)\n            intersectObject(group, objects[i], this, intersects);\n\n        intersects.sort(descSort);\n\n        return intersects;\n\n    };\n\n    return Raycaster;\n\n})();\n\n\n//$3Dmol Projecion\n//TODO: can probably strip this down a lot (only used for selection handling)\n/** @constructor */\n$3Dmol.Projector = function () {\n\n    var _viewMatrix = new $3Dmol.Matrix4(),\n    _viewProjectionMatrix = new $3Dmol.Matrix4();\n\n    this.projectVector = function ( vector, camera ) {\n\n        camera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n        _viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\n        return vector.applyProjection( _viewProjectionMatrix );\n\n    };\n\n    this.unprojectVector = function ( vector, camera ) {\n\n        camera.projectionMatrixInverse.getInverse(camera.projectionMatrix);\n\n        _viewProjectionMatrix.multiplyMatrices(camera.matrixWorld, camera.projectionMatrixInverse);\n\n        return vector.applyProjection( _viewProjectionMatrix );\n\n    };\n\n};\n/*\n * Simplified Perspective Camera\n */\n\n/** @constructor */\n$3Dmol.Camera = function(fov, aspect, near, far, ortho) {\n\n    $3Dmol.Object3D.call(this);\n\n    this.fov = fov !== undefined ? fov : 50;\n    this.aspect = aspect !== undefined ? aspect : 1;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n\n    this.projectionMatrix = new $3Dmol.Matrix4();\n    this.projectionMatrixInverse = new $3Dmol.Matrix4();\n    this.matrixWorldInverse = new $3Dmol.Matrix4();\n\n    var center = this.position.z;\n    this.right = center * Math.tan(Math.PI / 180 * fov);\n    this.left = -this.right;\n    this.top = this.right / this.aspect;\n    this.bottom = -this.top;\n\n    this.ortho = !!ortho;\n\n    this.updateProjectionMatrix();\n\n};\n\n//Inherit Object3D's prototyped methods\n$3Dmol.Camera.prototype = Object.create($3Dmol.Object3D.prototype);\n\n$3Dmol.Camera.prototype.lookAt = function(vector){\n\n    //Why is the parameter order switched (compared to Object3D)?\n    this.matrix.lookAt(this.position, vector, this.up);\n\n    if (this.rotationAutoUpdate) {\n\n        if (this.useQuaternion === false)\n            this.rotation.setEulerFromRotationMatrix( this.matrix, this.eulerOrder );\n        else\n            this.quaternion.copy( this.matrix.decompose()[ 1 ] );\n\n    }\n\n};\n\n$3Dmol.Camera.prototype.updateProjectionMatrix = function () {\n\n    if(this.ortho) {\n        this.projectionMatrix.makeOrthographic( this.left, this.right, this.top, this.bottom, this.near, this.far );\n    } else {\n        this.projectionMatrix.makePerspective( this.fov, this.aspect, this.near, this.far );\n    }\n\n    this.projectionMatrixInverse.getInverse(this.projectionMatrix);\n};\n\n\n//Render plugins go here\n\n/**\n * Sprite render plugin\n * @this {$3Dmol.SpritePlugin}\n */\n\n$3Dmol.SpritePlugin = function () {\n\n    var _gl, _renderer, _precision, _sprite = {};\n\n    this.init = function ( renderer ) {\n\n        _gl = renderer.context;\n        _renderer = renderer;\n\n        _precision = renderer.getPrecision();\n\n        _sprite.vertices = new Float32Array( 8 + 8 );\n        _sprite.faces    = new Uint16Array( 6 );\n\n        var i = 0;\n\n        _sprite.vertices[ i++ ] = -1; _sprite.vertices[ i++ ] = -1; // vertex 0\n        _sprite.vertices[ i++ ] = 0;  _sprite.vertices[ i++ ] = 0;  // uv 0\n\n        _sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = -1; // vertex 1\n        _sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = 0;  // uv 1\n\n        _sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = 1;  // vertex 2\n        _sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = 1;  // uv 2\n\n        _sprite.vertices[ i++ ] = -1; _sprite.vertices[ i++ ] = 1;  // vertex 3\n        _sprite.vertices[ i++ ] = 0;  _sprite.vertices[ i++ ] = 1;  // uv 3\n\n        i = 0;\n\n        _sprite.faces[ i++ ] = 0; _sprite.faces[ i++ ] = 1; _sprite.faces[ i++ ] = 2;\n        _sprite.faces[ i++ ] = 0; _sprite.faces[ i++ ] = 2; _sprite.faces[ i++ ] = 3;\n\n        _sprite.vertexBuffer  = _gl.createBuffer();\n        _sprite.elementBuffer = _gl.createBuffer();\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, _sprite.vertexBuffer );\n        _gl.bufferData( _gl.ARRAY_BUFFER, _sprite.vertices, _gl.STATIC_DRAW );\n\n        _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _sprite.elementBuffer );\n        _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, _sprite.faces, _gl.STATIC_DRAW );\n\n        _sprite.program = createProgram( $3Dmol.ShaderLib.sprite, _precision );\n\n        _sprite.attributes = {};\n        _sprite.uniforms = {};\n\n        _sprite.attributes.position           = _gl.getAttribLocation ( _sprite.program, \"position\" );\n        _sprite.attributes.uv                 = _gl.getAttribLocation ( _sprite.program, \"uv\" );\n\n        _sprite.uniforms.uvOffset             = _gl.getUniformLocation( _sprite.program, \"uvOffset\" );\n        _sprite.uniforms.uvScale              = _gl.getUniformLocation( _sprite.program, \"uvScale\" );\n\n        _sprite.uniforms.rotation             = _gl.getUniformLocation( _sprite.program, \"rotation\" );\n        _sprite.uniforms.scale                = _gl.getUniformLocation( _sprite.program, \"scale\" );\n        _sprite.uniforms.alignment            = _gl.getUniformLocation( _sprite.program, \"alignment\" );\n\n        _sprite.uniforms.color                = _gl.getUniformLocation( _sprite.program, \"color\" );\n        _sprite.uniforms.map                  = _gl.getUniformLocation( _sprite.program, \"map\" );\n        _sprite.uniforms.opacity              = _gl.getUniformLocation( _sprite.program, \"opacity\" );\n\n        _sprite.uniforms.useScreenCoordinates = _gl.getUniformLocation( _sprite.program, \"useScreenCoordinates\" );\n        _sprite.uniforms.screenPosition       = _gl.getUniformLocation( _sprite.program, \"screenPosition\" );\n        _sprite.uniforms.modelViewMatrix      = _gl.getUniformLocation( _sprite.program, \"modelViewMatrix\" );\n        _sprite.uniforms.projectionMatrix     = _gl.getUniformLocation( _sprite.program, \"projectionMatrix\" );\n\n        _sprite.uniforms.fogType              = _gl.getUniformLocation( _sprite.program, \"fogType\" );\n        _sprite.uniforms.fogDensity           = _gl.getUniformLocation( _sprite.program, \"fogDensity\" );\n        _sprite.uniforms.fogNear              = _gl.getUniformLocation( _sprite.program, \"fogNear\" );\n        _sprite.uniforms.fogFar               = _gl.getUniformLocation( _sprite.program, \"fogFar\" );\n        _sprite.uniforms.fogColor             = _gl.getUniformLocation( _sprite.program, \"fogColor\" );\n\n        _sprite.uniforms.alphaTest            = _gl.getUniformLocation( _sprite.program, \"alphaTest\" );\n\n    };\n\n    this.render = function ( scene, camera, viewportWidth, viewportHeight ) {\n\n        var sprites = scene.__webglSprites,\n            nSprites = sprites.length;\n\n        if ( ! nSprites ) return;\n\n        var attributes = _sprite.attributes,\n            uniforms = _sprite.uniforms;\n\n        var invAspect = viewportHeight / viewportWidth;\n\n        var halfViewportWidth = viewportWidth * 0.5,\n            halfViewportHeight = viewportHeight * 0.5;\n\n        // setup gl\n\n        _gl.useProgram( _sprite.program );\n\n        _gl.enableVertexAttribArray( attributes.position );\n        _gl.enableVertexAttribArray( attributes.uv );\n\n        _gl.disable( _gl.CULL_FACE );\n        _gl.enable( _gl.BLEND );\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, _sprite.vertexBuffer );\n        _gl.vertexAttribPointer( attributes.position, 2, _gl.FLOAT, false, 2 * 8, 0 );\n        _gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );\n\n        _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _sprite.elementBuffer );\n\n        _gl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n        _gl.activeTexture( _gl.TEXTURE0 );\n        _gl.uniform1i( uniforms.map, 0 );\n\n        var oldFogType = 0;\n        var sceneFogType = 0;\n        var fog = scene.fog;\n\n        if ( fog ) {\n\n            _gl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n            _gl.uniform1f( uniforms.fogNear, fog.near );\n            _gl.uniform1f( uniforms.fogFar, fog.far );\n\n            _gl.uniform1i( uniforms.fogType, 1 );\n            oldFogType = 1;\n            sceneFogType = 1;\n\n\n        }\n\n        else {\n\n            _gl.uniform1i( uniforms.fogType, 0 );\n            oldFogType = 0;\n            sceneFogType = 0;\n\n        }\n\n\n        // update positions and sort\n\n        var i, sprite, material, screenPosition, size, fogType, scale = [];\n\n        for( i = 0; i < nSprites; i ++ ) {\n\n            sprite = sprites[ i ];\n            material = sprite.material;\n\n            if ( ! sprite.visible || material.opacity === 0 ) continue;\n\n            if ( ! material.useScreenCoordinates ) {\n\n                sprite._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n                sprite.z = - sprite._modelViewMatrix.elements[ 14 ];\n\n            } else {\n\n                sprite.z = - sprite.position.z;\n\n            }\n\n        }\n\n        sprites.sort( painterSortStable );\n\n        // render all sprites\n\n        for( i = 0; i < nSprites; i ++ ) {\n\n            sprite = sprites[ i ];\n            material = sprite.material;\n\n            if ( ! sprite.visible || material.opacity === 0 ) continue;\n\n            if ( material.map && material.map.image && material.map.image.width ) {\n\n                _gl.uniform1f( uniforms.alphaTest, material.alphaTest );\n                var w = material.map.image.width;\n                var h = material.map.image.height;\n\n                scale[ 0 ] = w*_renderer.devicePixelRatio/viewportWidth;\n                scale[ 1 ] = h*_renderer.devicePixelRatio/viewportHeight;\n\n                if ( material.useScreenCoordinates === true ) {\n\n                    _gl.uniform1i( uniforms.useScreenCoordinates, 1 );\n                    _gl.uniform3f(\n                        uniforms.screenPosition,\n                        ( ( sprite.position.x * _renderer.devicePixelRatio ) - halfViewportWidth  ) / halfViewportWidth,\n                        ( halfViewportHeight - ( sprite.position.y * _renderer.devicePixelRatio ) ) / halfViewportHeight,\n                        Math.max( 0, Math.min( 1, sprite.position.z ) )\n                    );\n\n                } else {\n\n                    _gl.uniform1i( uniforms.useScreenCoordinates, 0 );\n                    _gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );\n                }\n\n                if ( scene.fog && material.fog ) {\n\n                    fogType = sceneFogType;\n\n                } else {\n\n                    fogType = 0;\n\n                }\n\n                if ( oldFogType !== fogType ) {\n\n                    _gl.uniform1i( uniforms.fogType, fogType );\n                    oldFogType = fogType;\n\n                }\n\n                size = 1 / ( material.scaleByViewport ? viewportHeight : 1 );\n\n                scale[ 0 ] *= size * sprite.scale.x;\n                scale[ 1 ] *= size * sprite.scale.y;\n\n                _gl.uniform2f( uniforms.uvScale, material.uvScale.x, material.uvScale.y );\n                _gl.uniform2f( uniforms.uvOffset, material.uvOffset.x, material.uvOffset.y );\n                _gl.uniform2f( uniforms.alignment, material.alignment.x, material.alignment.y );\n\n                _gl.uniform1f( uniforms.opacity, material.opacity );\n                _gl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n                _gl.uniform1f( uniforms.rotation, sprite.rotation );\n                _gl.uniform2fv( uniforms.scale, scale );\n\n                //_renderer.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n                _renderer.setDepthTest( material.depthTest );\n                _renderer.setDepthWrite( material.depthWrite );\n                _renderer.setTexture( material.map, 0 );\n\n                _gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\n\n            }\n\n        }\n\n        // restore gl\n\n        _gl.enable( _gl.CULL_FACE );\n\n    };\n\n    function createProgram ( shader, precision ) {\n\n        var program = _gl.createProgram();\n\n        var fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );\n        var vertexShader = _gl.createShader( _gl.VERTEX_SHADER );\n\n        var prefix = \"precision \" + precision + \" float;\\n\";\n\n        _gl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n        _gl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n        _gl.compileShader( fragmentShader );\n        _gl.compileShader( vertexShader );\n\n        if ( ! _gl.getShaderParameter(fragmentShader, _gl.COMPILE_STATUS) || ! _gl.getShaderParameter(vertexShader,_gl.COMPILE_STATUS) ) {\n\n                console.error(_gl.getShaderInfoLog(fragmentShader));\n                console.error(\"could not initialize shader\");\n                return null;\n        }\n\n        _gl.attachShader( program, fragmentShader );\n        _gl.attachShader( program, vertexShader );\n\n        _gl.linkProgram( program );\n\n        if (! _gl.getProgramParameter(program, _gl.LINK_STATUS) )\n                console.error(\"Could not initialize shader\");\n\n        return program;\n\n    }\n\n    function painterSortStable ( a, b ) {\n\n        if ( a.z !== b.z ) {\n\n            return b.z - a.z;\n\n        } else {\n\n            return b.id - a.id;\n\n        }\n\n    }\n\n};\n\n$3Dmol.Light = function(hex, intensity) {\n\n    $3Dmol.Object3D.call(this);\n\n    this.color = new $3Dmol.Color(hex);\n    this.position = new $3Dmol.Vector3( 0, 1, 0 );\n    this.target = new $3Dmol.Object3D();\n\n    this.intensity = ( intensity !== undefined ) ? intensity : 1;\n\n    this.castShadow = false;\n    this.onlyShadow = false;\n\n};\n\n$3Dmol.Light.prototype = Object.create($3Dmol.Object3D.prototype);\n/**\n * Line and Mesh material types\n * @constructor\n */\n$3Dmol.Material = function () {\n\n    $3Dmol.EventDispatcher.call( this );\n\n    this.id = $3Dmol.MaterialIdCount ++;\n\n    this.name = '';\n\n    //TODO: Which of these instance variables can I remove??\n    this.side = $3Dmol.FrontSide;\n\n    this.opacity = 1;\n    this.transparent = false;\n\n    this.depthTest = true;\n    this.depthWrite = true;\n\n    this.stencilTest = true;\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n\n    this.alphaTest = 0;\n\n    this.visible = true;\n\n    this.needsUpdate = true;\n\n};\n\n\n$3Dmol.Material.prototype.setValues = function ( values ) {\n\n    if ( values === undefined ) return;\n\n    for ( var key in values ) {\n\n        var newValue = values[ key ];\n\n        if ( newValue === undefined ) {\n\n            console.warn( '$3Dmol.Material: \\'' + key + '\\' parameter is undefined.' );\n            continue;\n\n        }\n\n        if ( key in this ) {\n\n            var currentValue = this[ key ];\n\n            if ( currentValue instanceof $3Dmol.Color && newValue instanceof $3Dmol.Color ) {\n\n                currentValue.copy( newValue );\n\n            } else if ( currentValue instanceof $3Dmol.Color ) {\n\n                currentValue.set( newValue );\n\n            } else if ( currentValue instanceof $3Dmol.Vector3 && newValue instanceof $3Dmol.Vector3 ) {\n\n                currentValue.copy( newValue );\n\n            } else {\n\n                this[ key ] = newValue;\n\n            }\n\n        }\n\n    }\n\n};\n//TODO: might want to look into blending equations\n$3Dmol.Material.prototype.clone = function ( material ) {\n\n    if ( material === undefined ) material = new $3Dmol.Material();\n\n    material.name = this.name;\n\n    material.side = this.side;\n\n    material.opacity = this.opacity;\n    material.transparent = this.transparent;\n\n    material.depthTest = this.depthTest;\n    material.depthWrite = this.depthWrite;\n    material.stencilTest = this.stencilTest;\n\n    material.polygonOffset = this.polygonOffset;\n    material.polygonOffsetFactor = this.polygonOffsetFactor;\n    material.polygonOffsetUnits = this.polygonOffsetUnits;\n\n    material.alphaTest = this.alphaTest;\n\n    material.overdraw = this.overdraw;\n\n    material.visible = this.visible;\n\n    return material;\n\n};\n\n$3Dmol.Material.prototype.dispose = function () {\n\n    this.dispatchEvent( { type: 'dispose' } );\n\n};\n\n$3Dmol.MaterialIdCount = 0;\n\n//Line basic material\n/** @constructor */\n$3Dmol.LineBasicMaterial = function(parameters) {\n\n    $3Dmol.Material.call(this);\n\n    this.color = new $3Dmol.Color(0xffffff);\n\n    this.linewidth = 1;\n    this.linecap = 'round';\n    this.linejoin = 'round';\n\n    this.vertexColors = false;\n\n    this.fog = true;\n    this.shaderID = \"basic\";\n    this.setValues(parameters);\n\n};\n\n$3Dmol.LineBasicMaterial.prototype = Object.create($3Dmol.Material.prototype);\n\n$3Dmol.LineBasicMaterial.prototype.clone = function() {\n\n    var material = new $3Dmol.LineBasicMaterial();\n\n    $3Dmol.Material.prototype.clone.call(this, material);\n\n    material.color.copy(this.color);\n    return material;\n};\n\n//Mesh Lambert material\n/** @constructor */\n$3Dmol.MeshLambertMaterial = function(parameters) {\n\n    $3Dmol.Material.call(this);\n\n    this.color = new $3Dmol.Color(0xffffff);\n    this.ambient = new $3Dmol.Color(0xfffff);\n    this.emissive = new $3Dmol.Color(0x000000);\n\n    //TODO: Which of these instance variables do I really need?\n    this.wrapAround = false;\n    this.wrapRGB = new $3Dmol.Vector3(1,1,1);\n\n    this.map = null;\n\n    this.lightMap = null;\n\n    this.specularMap = null;\n\n    this.envMap = null;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n\n    this.fog = true;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n\n    this.shading = $3Dmol.SmoothShading;\n    this.shaderID = \"lambert\";\n    this.vertexColors = $3Dmol.NoColors;\n\n    this.skinning = false;\n\n    this.setValues(parameters);\n\n};\n\n$3Dmol.MeshLambertMaterial.prototype = Object.create($3Dmol.Material.prototype);\n\n$3Dmol.MeshLambertMaterial.prototype.clone = function(material) {\n\n    if ( typeof material === \"undefined\" ) material = new $3Dmol.MeshLambertMaterial();\n\n    $3Dmol.Material.prototype.clone.call(this, material);\n\n    material.color.copy(this.color);\n    material.ambient.copy(this.ambient);\n    material.emissive.copy(this.emissive);\n\n    material.wrapAround = this.wrapAround;\n    material.wrapRGB.copy(this.wrapRGB);\n\n    material.map = this.map;\n\n    material.lightMap = this.lightMap;\n\n    material.specularMap = this.specularMap;\n\n    material.envMap = this.envMap;\n    material.combine = this.combine;\n    material.reflectivity = this.reflectivity;\n    material.refractionRatio = this.refractionRatio;\n\n    material.fog = this.fog;\n\n    material.shading = this.shading;\n    material.shaderID = this.shaderID;\n    material.vertexColors = this.vertexColors;\n\n    material.skinning = this.skinning;\n    material.morphTargets = this.morphTargets;\n    material.morphNormals = this.morphNormals;\n\n    return material;\n\n};\n\n//Double sided Mesh Lambert material\n/** @constructor */\n$3Dmol.MeshDoubleLambertMaterial = function(parameters) {\n\n    $3Dmol.MeshLambertMaterial.call(this, parameters);\n\n    this.shaderID = \"lambertdouble\";\n    this.side = $3Dmol.DoubleSide;\n\n};\n\n$3Dmol.MeshDoubleLambertMaterial.prototype = Object.create($3Dmol.MeshLambertMaterial.prototype);\n\n$3Dmol.MeshDoubleLambertMaterial.prototype.clone = function() {\n\n    var material = new $3Dmol.MeshDoubleLambertMaterial();\n\n    $3Dmol.MeshLambertMaterial.prototype.clone.call(this, material);\n\n    return material;\n\n};\n\n//Outlined Mesh Lamert material\n/** @constructor */\n$3Dmol.MeshOutlineMaterial = function(parameters) {\n    $3Dmol.Material.call(this);\n    parameters = parameters || {};\n    this.fog = true;\n    this.shaderID = \"outline\";\n    this.wireframe=false;\n    this.outlineColor= parameters.color || new $3Dmol.Color(0.0,0.0,0.0);\n    this.outlineWidth= parameters.width || 0.1;\n    this.outlinePushback= parameters.pushback || 1.0;\n\n};\n\n$3Dmol.MeshOutlineMaterial.prototype = Object.create($3Dmol.Material.prototype);\n\n$3Dmol.MeshOutlineMaterial.prototype.clone = function(material) {\n    if ( typeof material === \"undefined\" ) material = new $3Dmol.MeshOutlineMaterial();\n    $3Dmol.Material.prototype.clone.call(this, material);\n    material.fog = this.fog;\n    material.shaderID = this.shaderID;\n    material.wireframe = this.wireframe;\n    return material;\n};\n\n\n//Imposter material\n/** @constructor */\n$3Dmol.ImposterMaterial = function(parameters) {\n\n  $3Dmol.Material.call(this);\n\n  this.color = new $3Dmol.Color(0xffffff);\n  this.ambient = new $3Dmol.Color(0xfffff);\n  this.emissive = new $3Dmol.Color(0x000000);\n  this.imposter = true;\n\n  //TODO: Which of these instance variables do I really need?\n  this.wrapAround = false;\n  this.wrapRGB = new $3Dmol.Vector3(1,1,1);\n\n  this.map = null;\n\n  this.lightMap = null;\n\n  this.specularMap = null;\n\n  this.envMap = null;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n\n  this.fog = true;\n\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n\n  this.shading = $3Dmol.SmoothShading;\n  this.shaderID = null;\n  this.vertexColors = $3Dmol.NoColors;\n\n  this.skinning = false;\n\n  this.setValues(parameters);\n\n};\n\n$3Dmol.ImposterMaterial.prototype = Object.create($3Dmol.Material.prototype);\n\n$3Dmol.ImposterMaterial.prototype.clone = function() {\n\n  var material = new $3Dmol.ImposterMaterial();\n\n  $3Dmol.Material.prototype.clone.call(this, material);\n\n  material.color.copy(this.color);\n  material.ambient.copy(this.ambient);\n  material.emissive.copy(this.emissive);\n\n  material.wrapAround = this.wrapAround;\n  material.wrapRGB.copy(this.wrapRGB);\n\n  material.map = this.map;\n\n  material.lightMap = this.lightMap;\n\n  material.specularMap = this.specularMap;\n\n  material.envMap = this.envMap;\n  material.combine = this.combine;\n  material.reflectivity = this.reflectivity;\n  material.refractionRatio = this.refractionRatio;\n\n  material.fog = this.fog;\n\n  material.shading = this.shading;\n  material.shaderID = this.shaderID;\n  material.vertexColors = this.vertexColors;\n\n  material.skinning = this.skinning;\n  material.morphTargets = this.morphTargets;\n  material.morphNormals = this.morphNormals;\n\n  return material;\n\n};\n\n\n$3Dmol.SphereImposterMaterial = function(parameters) {\n\n    $3Dmol.ImposterMaterial.call(this);\n\n    this.shaderID = \"sphereimposter\";\n    this.setValues(parameters);\n\n};\n\n$3Dmol.SphereImposterMaterial.prototype = Object.create($3Dmol.ImposterMaterial.prototype);\n\n$3Dmol.SphereImposterMaterial.prototype.clone = function() {\n\n    var material = new $3Dmol.SphereImposterMaterial();\n    $3Dmol.ImposterMaterial.prototype.clone.call(this, material);\n    return material;\n};\n\n\n$3Dmol.SphereImposterOutlineMaterial = function(parameters) {\n\n    $3Dmol.ImposterMaterial.call(this);\n    parameters = parameters || {};\n\n    this.shaderID = \"sphereimposteroutline\";\n    this.outlineColor= parameters.color || new $3Dmol.Color(0.0,0.0,0.0);\n    this.outlineWidth= parameters.width || 0.1;\n    this.outlinePushback= parameters.pushback || 1.0;\n\n    this.setValues(parameters);\n\n};\n\n$3Dmol.SphereImposterOutlineMaterial.prototype = Object.create($3Dmol.ImposterMaterial.prototype);\n\n$3Dmol.SphereImposterOutlineMaterial.prototype.clone = function() {\n\n    var material = new $3Dmol.SphereImposterOutlineMaterial();\n    $3Dmol.ImposterMaterial.prototype.clone.call(this, material);\n    material.outlineColor = this.outlineColor;\n    material.outlineWidth = this.outlineWidth;\n    material.outlinePushback = this.outlinePushback;\n    return material;\n};\n\n\n$3Dmol.StickImposterMaterial = function(parameters) {\n\n    $3Dmol.ImposterMaterial.call(this);\n\n    this.shaderID = \"stickimposter\";\n    this.setValues(parameters);\n\n};\n\n$3Dmol.StickImposterMaterial.prototype = Object.create($3Dmol.ImposterMaterial.prototype);\n\n$3Dmol.StickImposterMaterial.prototype.clone = function() {\n\n    var material = new $3Dmol.StickImposterOutlineMaterial();\n    $3Dmol.ImposterMaterial.prototype.clone.call(this, material);\n    return material;\n};\n\n\n$3Dmol.StickImposterOutlineMaterial = function(parameters) {\n\n    $3Dmol.ImposterMaterial.call(this);\n    parameters = parameters || {};\n\n    this.shaderID = \"stickimposteroutline\";\n    this.outlineColor= parameters.color || new $3Dmol.Color(0.0,0.0,0.0);\n    this.outlineWidth= parameters.width || 0.1;\n    this.outlinePushback= parameters.pushback || 1.0;\n\n    this.setValues(parameters);\n\n};\n\n$3Dmol.StickImposterOutlineMaterial.prototype = Object.create($3Dmol.ImposterMaterial.prototype);\n\n$3Dmol.StickImposterOutlineMaterial.prototype.clone = function() {\n\n    var material = new $3Dmol.StickImposterOutlineMaterial();\n    $3Dmol.ImposterMaterial.prototype.clone.call(this, material);\n    material.outlineColor = this.outlineColor;\n    material.outlineWidth = this.outlineWidth;\n    material.outlinePushback = this.outlinePushback;\n    return material;\n};\n\n\n$3Dmol.InstancedMaterial = function(parameters) {\n\n    $3Dmol.Material.call(this);\n\n    this.color = new $3Dmol.Color(0xffffff);\n    this.ambient = new $3Dmol.Color(0xfffff);\n    this.emissive = new $3Dmol.Color(0x000000);\n\n    //TODO: Which of these instance variables do I really need?\n    this.wrapAround = false;\n    this.wrapRGB = new $3Dmol.Vector3(1,1,1);\n\n    this.map = null;\n\n    this.lightMap = null;\n\n    this.specularMap = null;\n\n    this.envMap = null;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n\n    this.fog = true;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n\n    this.shading = $3Dmol.SmoothShading;\n    this.shaderID = \"instanced\";\n    this.vertexColors = $3Dmol.NoColors;\n\n    this.skinning = false;\n\n    this.sphere = null;\n\n    this.setValues(parameters);\n\n};\n\n$3Dmol.InstancedMaterial.prototype = Object.create($3Dmol.Material.prototype);\n\n$3Dmol.InstancedMaterial.prototype.clone = function() {\n\n    var material = new $3Dmol.InstancedMaterial();\n\n    $3Dmol.Material.prototype.clone.call(this, material);\n\n    material.color.copy(this.color);\n    material.ambient.copy(this.ambient);\n    material.emissive.copy(this.emissive);\n\n    material.wrapAround = this.wrapAround;\n    material.wrapRGB.copy(this.wrapRGB);\n\n    material.map = this.map;\n\n    material.lightMap = this.lightMap;\n\n    material.specularMap = this.specularMap;\n\n    material.envMap = this.envMap;\n    material.combine = this.combine;\n    material.reflectivity = this.reflectivity;\n    material.refractionRatio = this.refractionRatio;\n\n    material.fog = this.fog;\n\n    material.shading = this.shading;\n    material.shaderID = this.shaderID;\n    material.vertexColors = this.vertexColors;\n\n    material.skinning = this.skinning;\n    material.morphTargets = this.morphTargets;\n    material.morphNormals = this.morphNormals;\n\n    material.sphere = this.sphere;\n\n  return material;\n\n};\n\n\n//Sprite material\n/** @constructor */\n$3Dmol.SpriteMaterial = function(parameters) {\n\n    $3Dmol.Material.call(this);\n\n    this.color = new $3Dmol.Color(0xffffff);\n    this.map = new $3Dmol.Texture();\n\n    this.useScreenCoordinates = true;\n    this.depthTest = !this.useScreenCoordinates;\n    this.sizeAttenuation = !this.useScreenCoordinates;\n    this.scaleByViewPort = !this.sizeAttenuation;\n    this.alignment = $3Dmol.SpriteAlignment.center.clone();\n\n    this.fog = false; // use scene fog\n\n    this.uvOffset = new $3Dmol.Vector2(0, 0);\n    this.uvScale = new $3Dmol.Vector2(1, 1);\n\n    this.setValues(parameters);\n\n    parameters = parameters || {};\n\n    if (parameters.depthTest === undefined)\n        this.depthTest = !this.useScreenCoordinates;\n    if (parameters.sizeAttenuation === undefined)\n        this.sizeAttenuation = !this.useScreenCoordinates;\n    if (parameters.scaleByViewPort === undefined)\n        this.scaleByViewPort = !this.sizeAttenuation;\n\n};\n\n$3Dmol.SpriteMaterial.prototype = Object.create($3Dmol.Material.prototype);\n\n$3Dmol.SpriteMaterial.prototype.clone = function() {\n\n    var material = new $3Dmol.SpriteMaterial();\n\n    $3Dmol.Material.prototype.clone.call(this, material);\n\n    material.color.copy(this.color);\n    material.map = this.map;\n\n    material.useScreenCoordinates = useScreenCoordinates;\n    material.sizeAttenuation = this.sizeAttenuation;\n    material.scaleByViewport = this.scaleByViewPort;\n    material.alignment.copy(this.alignment);\n\n    material.uvOffset.copy(this.uvOffset);\n\n    return material;\n\n};\n\n//Alignment for Sprites\n\n$3Dmol.SpriteAlignment = {};\n$3Dmol.SpriteAlignment.topLeft = new $3Dmol.Vector2(1, -1);\n$3Dmol.SpriteAlignment.topCenter = new $3Dmol.Vector2(0, -1);\n$3Dmol.SpriteAlignment.topRight = new $3Dmol.Vector2(-1, -1);\n$3Dmol.SpriteAlignment.centerLeft = new $3Dmol.Vector2(1, 0);\n$3Dmol.SpriteAlignment.center = new $3Dmol.Vector2(0, 0);\n$3Dmol.SpriteAlignment.centerRight = new $3Dmol.Vector2(-1, 0);\n$3Dmol.SpriteAlignment.bottomLeft = new $3Dmol.Vector2(1, 1);\n$3Dmol.SpriteAlignment.bottomCenter = new $3Dmol.Vector2(0, 1);\n$3Dmol.SpriteAlignment.bottomRight = new $3Dmol.Vector2(-1, 1);\n\n\n//Texture\n//We really only create textures from 2d rendering contexts (to display text labels)\n/** @constructor */\n$3Dmol.Texture = function(image) {\n\n    $3Dmol.EventDispatcher.call(this);\n\n    this.id = $3Dmol.TextureIdCount++;\n\n    this.name = \"\";\n\n    this.image = image;\n    this.mipmaps = [];\n\n    this.mapping = new $3Dmol.UVMapping();\n\n    this.wrapS = $3Dmol.ClampToEdgeWrapping;\n    this.wrapT = $3Dmol.ClampToEdgeWrapping;\n\n    this.magFilter = $3Dmol.LinearFilter;\n    this.minFilter = $3Dmol.LinearMipMapLinearFilter;\n\n    this.anisotropy = 1;\n\n    this.format = $3Dmol.RGBAFormat;\n    this.type = $3Dmol.UnsignedByteType;\n\n    this.offset = new $3Dmol.Vector2(0, 0);\n    this.repeat = new $3Dmol.Vector2(1, 1);\n\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4;\n\n    this.needsUpdate = false;\n    this.onUpdate = null;\n\n};\n\n$3Dmol.Texture.prototype = {\n\n    constructor : $3Dmol.Texture,\n\n    clone : function(texture) {\n\n        if (texture === undefined)\n            texture = new $3Dmol.Texture();\n\n        texture.image = this.image;\n        texture.mipmaps = this.mipmaps.slice(0);\n\n        texture.mapping = this.mapping;\n\n        texture.wrapS = this.wrapS;\n        texture.wrapT = this.wrapT;\n\n        texture.magFilter = this.magFilter;\n        texture.minFilter = this.minFilter;\n\n        texture.anisotropy = this.anisotropy;\n\n        texture.format = this.format;\n        texture.type = this.type;\n\n        texture.offset.copy(this.offset);\n        texture.repeat.copy(this.repeat);\n\n        texture.generateMipmaps = this.generateMipmaps;\n        texture.premultiplyAlpha = this.premultiplyAlpha;\n        texture.flipY = this.flipY;\n        texture.unpackAlignment = this.unpackAlignment;\n\n        return texture;\n\n    },\n\n    dispose : function() {\n\n        this.dispatchEvent( {type: 'dispose'});\n\n    }\n\n};\n\n$3Dmol.TextureIdCount = 0;\n\n\n// sides\n$3Dmol.FrontSide = 0;\n$3Dmol.BackSide = 1;\n$3Dmol.DoubleSide = 2;\n\n// shading\n$3Dmol.NoShading = 0;\n$3Dmol.FlatShading = 1;\n$3Dmol.SmoothShading = 2;\n\n// colors\n$3Dmol.NoColors = 0;\n$3Dmol.FaceColors = 1;\n$3Dmol.VertexColors = 2;\n\n//Texture constants\n//TODO: Which of these do I need (since I only use textures to display label sprites) ?\n$3Dmol.MultiplyOperation = 0;\n$3Dmol.MixOperation = 1;\n$3Dmol.AddOperation = 2;\n\n// mapping modes\n\n$3Dmol.UVMapping = function() {};\n\n// wrapping modes\n$3Dmol.ClampToEdgeWrapping = 1001;\n\n//Filters\n$3Dmol.LinearFilter = 1006;\n$3Dmol.LinearMipMapLinearFilter = 1008;\n\n//Data types\n$3Dmol.UnsignedByteType = 1009;\n\n//Pixel formats\n$3Dmol.RGBAFormat = 1021;\n/*\n * $3Dmol Mesh and Line objects\n */\n\n\n//Line Object\n/** @constructor */\n$3Dmol.Line = function (geometry, material, type) {\n\n    $3Dmol.Object3D.call(this);\n\n    this.geometry = geometry;\n        //TODO: update material and type to webgl\n    this.material = (material !== undefined) ? material : new $3Dmol.LineBasicMaterial( { color: Math.random() * 0xffffff } );\n    this.type = (type !== undefined) ? type : $3Dmol.LineStrip;\n\n};\n\n$3Dmol.LineStrip = 0;\n$3Dmol.LinePieces = 1;\n\n$3Dmol.Line.prototype = Object.create($3Dmol.Object3D.prototype);\n\n$3Dmol.Line.prototype.clone = function (object) {\n\n    if (object === undefined) object = new $3Dmol.Line(this.geometry, this.material, this.type);\n\n    $3Dmol.Object3D.prototype.clone.call(this, object);\n\n    return object;\n\n};\n\n\n//Mesh Object\n/** @constructor */\n$3Dmol.Mesh = function(geometry, material) {\n\n    $3Dmol.Object3D.call(this);\n\n    this.geometry = geometry;\n    this.material = (material !== undefined) ? material : new $3Dmol.MeshBasicMaterial( { color: Math.random() * 0xffffff, wireframe: true } );\n\n};\n\n$3Dmol.Mesh.prototype = Object.create($3Dmol.Object3D.prototype);\n\n$3Dmol.Mesh.prototype.clone = function (object) {\n\n    if (object === undefined) object = new $3Dmol.Mesh(this.geometry, this.material);\n\n    $3Dmol.Object3D.prototype.clone.call(this, object);\n\n    return object;\n\n};\n\n\n//Sprite object\n/** @constructor */\n$3Dmol.Sprite = function(material) {\n\n    $3Dmol.Object3D.call(this);\n\n    this.material = (material !== undefined) ? material : new $3Dmol.SpriteMaterial();\n\n    this.rotation3d = this.rotation;\n    this.rotation = 0;\n\n};\n\n$3Dmol.Sprite.prototype = Object.create($3Dmol.Object3D.prototype);\n\n$3Dmol.Sprite.prototype.updateMatrix = function() {\n\n    this.matrix.setPosition(this.position);\n\n    this.rotation3d.set(0, 0, this.rotation);\n    this.matrix.setRotationFromEuler(this.rotation3d);\n\n    if (this.scale.x !== 1 || this.scale.y !== 1)\n        this.matrix.scale(this.scale);\n\n    this.matrixWorldNeedsUpdate = true;\n\n};\n\n$3Dmol.Sprite.prototype.clone = function(object) {\n\n    if (object === undefined)\n        object = new $3Dmol.Sprite(this.material);\n\n    $3Dmol.Object3D.prototype.clone.call(this, object);\n\n    return object;\n\n};\n/**\n * Simplified webGL renderer\n */\n\n$3Dmol.Renderer = function(parameters) {\n\n    parameters = parameters || {};\n\n    var _canvas = parameters.canvas !== undefined ? parameters.canvas\n            : document.createElement('canvas'),\n\n    _precision = parameters.precision !== undefined ? parameters.precision\n            : 'highp', _alpha = parameters.alpha !== undefined ? parameters.alpha\n            : true, _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha\n            : true, _antialias = parameters.antialias !== undefined ? parameters.antialias\n            : false, _stencil = parameters.stencil !== undefined ? parameters.stencil\n            : true, _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer\n            : false, _clearColor = parameters.clearColor !== undefined ? new $3Dmol.Color(\n            parameters.clearColor) : new $3Dmol.Color(0x000000),\n             _clearAlpha = parameters.clearAlpha !== undefined ? parameters.clearAlpha : 0,\n            _outlineMaterial = new $3Dmol.MeshOutlineMaterial(parameters.outline),\n            _outlineSphereImposterMaterial = new $3Dmol.SphereImposterOutlineMaterial(parameters.outline),\n            _outlineStickImposterMaterial = new $3Dmol.StickImposterOutlineMaterial(parameters.outline),\n            _outlineEnabled = !!parameters.outline\n            ;\n\n    this.domElement = _canvas;\n    this.context = null;\n    this.devicePixelRatio = parameters.devicePixelRatio !== undefined ? parameters.devicePixelRatio\n            : (self.devicePixelRatio !== undefined) ? self.devicePixelRatio : 1;\n\n    // clearing\n\n    this.autoClear = true;\n    this.autoClearColor = true;\n    this.autoClearDepth = true;\n    this.autoClearStencil = true;\n\n    // scene graph\n\n    this.sortObjects = true;\n\n    this.autoUpdateObjects = true;\n    this.autoUpdateScene = true;\n\n    this.renderPluginsPost = [];\n\n    // info\n\n    this.info = {\n        memory : {\n\n            programs : 0,\n            geometries : 0,\n            textures : 0\n\n        },\n        render : {\n\n            calls : 0,\n            vertices : 0,\n            faces : 0,\n            points : 0\n\n        }\n    };\n\n    // internal properties\n    var _this = this,\n    _programs = [], _programs_counter = 0,\n\n    // internal state cache\n    _currentProgram = null, _currentFramebuffer = null, _currentMaterialId = -1, _currentGeometryGroupHash = null, _currentCamera = null, _geometryGroupCounter = 0,\n    _usedTextureUnits = 0,\n\n    // GL state cache\n    _oldDoubleSided = -1, _oldFlipSided = -1,\n    _oldBlending = -1,\n    _oldBlendEquation = -1, _oldBlendSrc = -1, _oldBlendDst = -1,\n    _oldDepthTest = -1, _oldDepthWrite = -1,\n    _oldPolygonOffset = null, _oldPolygonOffsetFactor = null, _oldPolygonOffsetUnits = null,\n    _oldLineWidth = null,\n\n    _viewportWidth = 0, _viewportHeight = 0, _currentWidth = 0, _currentHeight = 0,\n    _enabledAttributes = {},\n\n    // camera matrices cache\n    _projScreenMatrix = new $3Dmol.Matrix4(),\n    _vector3 = new $3Dmol.Vector3(),\n\n    // light arrays cache\n    _direction = new $3Dmol.Vector3(),\n    _lightsNeedUpdate = true,\n\n    _lights = {\n        ambient : [ 0, 0, 0 ],\n        directional : {\n            length : 0,\n            colors : [],\n            positions : []\n        },\n        point : {\n            length : 0,\n            colors : [],\n            positions : [],\n            distances : []\n        },\n        spot : {\n            length : 0,\n            colors : [],\n            positions : [],\n            distances : [],\n            directions : [],\n            anglesCos : [],\n            exponents : []\n        },\n        hemi : {\n            length : 0,\n            skyColors : [],\n            groundColors : [],\n            positions : []\n        }\n\n    };\n\n    // initialize\n    var _gl;\n\n    initGL();\n    setDefaultGLState();\n\n    this.context = _gl;\n    var _extInstanced = _gl.getExtension(\"ANGLE_instanced_arrays\");\n    var _extFragDepth = _gl.getExtension(\"EXT_frag_depth\");\n\n    // API\n\n    this.supportedExtensions = function() {\n        return {supportsAIA: Boolean(_extInstanced),\n            supportsImposters:  Boolean(_extFragDepth)\n            };\n    };\n\n    this.getContext = function() {\n        return _gl;\n    };\n\n    this.getPrecision = function() {\n        return _precision;\n    };\n\n    this.setClearColorHex = function(hex, alpha) {\n        _clearColor.setHex(hex);\n        _clearAlpha = alpha;\n\n        _gl.clearColor(_clearColor.r, _clearColor.g, _clearColor.b,\n                        _clearAlpha);\n    };\n\n    this.enableOutline = function(parameters) {\n        _outlineMaterial = new $3Dmol.MeshOutlineMaterial(parameters);\n        _outlineSphereImposterMaterial = new $3Dmol.SphereImposterOutlineMaterial(parameters);\n        _outlineStickImposterMaterial = new $3Dmol.StickImposterOutlineMaterial(parameters);\n        _outlineEnabled = true;\n    };\n\n    this.disableOutline = function() {\n        _outlineEnabled = false;\n    };\n\n    this.setSize = function(width, height) {\n\n        _viewportWidth = _canvas.width = width * this.devicePixelRatio;\n        _viewportHeight =  _canvas.height = height * this.devicePixelRatio;\n\n        _canvas.style.width = width + 'px';\n        _canvas.style.height = height + 'px';\n\n        _gl.viewport(0, 0, _gl.drawingBufferWidth, _gl.drawingBufferHeight);\n    };\n\n    this.clear = function(color, depth, stencil) {\n\n        var bits = 0;\n\n        if (color === undefined || color)\n            bits |= _gl.COLOR_BUFFER_BIT;\n        if (depth === undefined || depth)\n            bits |= _gl.DEPTH_BUFFER_BIT;\n        if (stencil === undefined || stencil)\n            bits |= _gl.STENCIL_BUFFER_BIT;\n        _gl.clear(bits);\n\n    };\n\n    this.clearTarget = function(color, depth, stencil) {\n\n        this.clear(color, depth, stencil);\n\n    };\n\n    this.setMaterialFaces = function(material, reflected) {\n\n        var doubleSided = material.side === $3Dmol.DoubleSide;\n        var flipSided = material.side === $3Dmol.BackSide;\n        flipSided = reflected ? !flipSided : flipSided;\n\n        if (_oldDoubleSided !== doubleSided) {\n\n            if (doubleSided) {\n\n                _gl.disable(_gl.CULL_FACE);\n\n            } else {\n\n                _gl.enable(_gl.CULL_FACE);\n\n            }\n\n            _oldDoubleSided = doubleSided;\n\n        }\n\n        if (_oldFlipSided !== flipSided) {\n\n            if (flipSided) {\n\n                _gl.frontFace(_gl.CW);\n\n            } else {\n\n                _gl.frontFace(_gl.CCW);\n\n            }\n\n            _oldFlipSided = flipSided;\n\n        }\n\n    };\n\n    this.setDepthTest = function(depthTest) {\n\n        if (_oldDepthTest !== depthTest) {\n\n            if (depthTest) {\n\n                _gl.enable(_gl.DEPTH_TEST);\n\n            } else {\n\n                _gl.disable(_gl.DEPTH_TEST);\n\n            }\n\n            _oldDepthTest = depthTest;\n\n        }\n\n    };\n\n    this.setDepthWrite = function(depthWrite) {\n\n        if (_oldDepthWrite !== depthWrite) {\n\n            _gl.depthMask(depthWrite);\n            _oldDepthWrite = depthWrite;\n\n        }\n\n    };\n\n    this.setBlending = function(blending) {\n\n        if (!blending) {\n            _gl.disable(_gl.BLEND);\n\n        } else {\n            _gl.enable(_gl.BLEND);\n            _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n            _gl.blendFuncSeparate(_gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA,\n                    _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n\n        }\n\n        _oldBlending = blending;\n    };\n\n    // Plugins\n\n    this.addPostPlugin = function(plugin) {\n\n        plugin.init(this);\n        this.renderPluginsPost.push(plugin);\n\n    };\n\n    // Sorting\n\n    function numericalSort(a, b) {\n\n        return b[0] - a[0];\n\n    }\n\n    function enableAttribute(attribute) {\n\n        if (!_enabledAttributes[attribute]) {\n\n            _gl.enableVertexAttribArray(attribute);\n            _enabledAttributes[attribute] = true;\n\n        }\n\n    }\n\n    function disableAttributes() {\n\n        for ( var attribute in _enabledAttributes) {\n\n            if (_enabledAttributes[attribute]) {\n\n                _gl.disableVertexAttribArray(attribute);\n                _enabledAttributes[attribute] = false;\n\n            }\n\n        }\n\n    }\n\n    function setPolygonOffset(polygonOffset, factor, units) {\n\n        if (_oldPolygonOffset !== polygonOffset) {\n\n            if (polygonOffset)\n                _gl.enable(_gl.POLYGON_OFFSET_FILL);\n            else\n                _gl.disable(_gl.POLYGON_OFFSET_FILL);\n        }\n    }\n\n    function setLineWidth(width) {\n\n        if (width !== _oldLineWidth) {\n            _gl.lineWidth(width);\n            _oldLineWidth = width;\n        }\n\n    }\n\n    var onGeometryDispose = function(event) {\n\n        var geometry = event.target;\n        geometry.removeEventListener('dispose', onGeometryDispose);\n\n        deallocateGeometry(geometry);\n\n        _this.info.memory.geometries--;\n\n    };\n\n    var onTextureDispose = function(event) {\n\n        var texture = event.target;\n\n        texture.removeEventListener('dispose', onTextureDispose);\n\n        deallocateTexture(texture);\n\n        _this.info.memory.textures--;\n\n    };\n\n    var onMaterialDispose = function(event) {\n\n        var material = event.target;\n        material.removeEventListener('dispose', onMaterialDispose);\n\n        deallocateMaterial(material);\n\n    };\n\n    var deallocateGeometry = function(geometry) {\n\n        geometry.__webglInit = undefined;\n\n        if (geometry.__webglVertexBuffer !== undefined)\n            _gl.deleteBuffer(geometry.__webglVertexBuffer);\n\n        if (geometry.__webglColorBuffer !== undefined)\n            _gl.deleteBuffer(geometry.__webglColorBuffer);\n\n        if (geometry.geometryGroups !== undefined) {\n\n            for (var g = 0, gl = geometry.groups; g < gl; g++) {\n\n                var geometryGroup = geometry.geometryGroups[g];\n\n                if (geometryGroup.__webglVertexBuffer !== undefined)\n                    _gl.deleteBuffer(geometryGroup.__webglVertexBuffer);\n\n                if (geometryGroup.__webglColorBuffer !== undefined)\n                    _gl.deleteBuffer(geometryGroup.__webglColorBuffer);\n\n                if (geometryGroup.__webglNormalBuffer !== undefined)\n                    _gl.deleteBuffer(geometryGroup.__webglNormalBuffer);\n\n                if (geometryGroup.__webglFaceBuffer !== undefined)\n                    _gl.deleteBuffer(geometryGroup.__webglFaceBuffer);\n\n                if (geometryGroup.__webglLineBuffer !== undefined)\n                    _gl.deleteBuffer(geometryGroup.__webglLineBuffer);\n\n            }\n        }\n    };\n\n    var deallocateMaterial = function(material) {\n\n        var program = material.program;\n\n        if (program === undefined)\n            return;\n\n        material.program = undefined;\n\n        // only deallocate GL program if this was the last use of shared program\n        // assumed there is only single copy of any program in the _programs\n        // list\n        // (that's how it's constructed)\n\n        var i, il, programInfo;\n        var deleteProgram = false;\n\n        for (i = 0, il = _programs.length; i < il; i++) {\n\n            programInfo = _programs[i];\n\n            if (programInfo.program === program) {\n\n                programInfo.usedTimes--;\n\n                if (programInfo.usedTimes === 0) {\n\n                    deleteProgram = true;\n\n                }\n\n                break;\n\n            }\n\n        }\n\n        if (deleteProgram === true) {\n\n            // avoid using array.splice, this is costlier than creating new\n            // array from scratch\n\n            var newPrograms = [];\n\n            for (i = 0, il = _programs.length; i < il; i++) {\n\n                programInfo = _programs[i];\n\n                if (programInfo.program !== program) {\n\n                    newPrograms.push(programInfo);\n\n                }\n\n            }\n\n            _programs = newPrograms;\n\n            _gl.deleteProgram(program);\n\n            _this.info.memory.programs--;\n\n        }\n\n    };\n\n    var deallocateTexture = function(texture) {\n\n        if (texture.image && texture.image.__webglTextureCube) {\n\n            // cube texture\n\n            _gl.deleteTexture(texture.image.__webglTextureCube);\n\n        }\n\n        else {\n\n            // 2D texture\n\n            if (!texture.__webglInit)\n                return;\n\n            texture.__webglInit = false;\n            _gl.deleteTexture(texture.__webglTexture);\n\n        }\n\n    };\n\n    // Compile and return shader\n    function getShader(type, str) {\n\n        var shader;\n\n        if (type === \"fragment\")\n            shader = _gl.createShader(_gl.FRAGMENT_SHADER);\n        else if (type === \"vertex\")\n            shader = _gl.createShader(_gl.VERTEX_SHADER);\n\n        _gl.shaderSource(shader, str);\n        _gl.compileShader(shader);\n\n        if (!_gl.getShaderParameter(shader, _gl.COMPILE_STATUS)) {\n\n            console.error(_gl.getShaderInfoLog(shader));\n            console.error(\"could not initialize shader\");\n            return null;\n\n        }\n\n        return shader;\n\n    }\n\n    // Compile appropriate shaders (if necessary) from source code and attach to\n    // gl program.\n    function buildProgram(fragmentShader, vertexShader, uniforms, parameters) {\n\n        var p, pl, d, program, code;\n        var chunks = [];\n\n        chunks.push(fragmentShader);\n        chunks.push(vertexShader);\n\n        for (p in parameters) {\n            chunks.push(p);\n            chunks.push(parameters[p]);\n        }\n\n        code = chunks.join();\n\n        // check if program has already been compiled\n\n        for (p = 0, pl = _programs.length; p < pl; p++) {\n\n            var programInfo = _programs[p];\n\n            if (programInfo.code === code) {\n\n                programInfo.usedTimes++;\n\n                return programInfo.program;\n            }\n        }\n\n        // Set up new program and compile shaders\n\n        program = _gl.createProgram();\n\n        // set up precision\n        var precision = _precision;\n        var prefix = \"precision \" + precision + \" float;\";\n\n        var prefix_vertex = [ prefix ].join(\"\\n\");\n\n        var prefix_fragment = [\n                parameters.fragdepth ? \"#extension GL_EXT_frag_depth: enable\"\n                        : \"\",\n                parameters.wireframe ? \"#define WIREFRAME 1\" : \"\", prefix ]\n                .join(\"\\n\");\n\n        var glFragmentShader = getShader(\"fragment\", prefix_fragment\n                + fragmentShader);\n        var glVertexShader = getShader(\"vertex\", prefix_vertex + vertexShader);\n\n        _gl.attachShader(program, glVertexShader);\n        _gl.attachShader(program, glFragmentShader);\n\n        _gl.linkProgram(program);\n\n        if (!_gl.getProgramParameter(program, _gl.LINK_STATUS))\n            console.error(\"Could not initialize shader\");\n\n        // gather and cache uniform variables and attributes\n\n        program.uniforms = {};\n        program.attributes = {};\n\n        var identifiers, u, a, i;\n\n        // uniform vars\n        identifiers = [ 'viewMatrix', 'modelViewMatrix', 'projectionMatrix',\n                'normalMatrix'];\n\n        // custom uniform vars\n        for (u in uniforms)\n            identifiers.push(u);\n\n        for (i = 0; i < identifiers.length; i++) {\n\n            var uniformVar = identifiers[i];\n            program.uniforms[uniformVar] = _gl.getUniformLocation(program,\n                    uniformVar);\n\n        }\n\n        // attributes\n        identifiers = [ 'position', 'normal', 'color', 'lineDistance',\n                'offset', 'radius' ];\n\n        /*\n         * for (a in attributes) identifiers.push(a);\n         */\n\n        for (i = 0; i < identifiers.length; i++) {\n\n            var attributeVar = identifiers[i];\n            program.attributes[attributeVar] = _gl.getAttribLocation(program,\n                    attributeVar);\n        }\n\n        program.id = _programs_counter++;\n        _programs.push({\n            program : program,\n            code : code,\n            usedTimes : 1\n        });\n        _this.info.memory.programs = _programs.length;\n\n        return program;\n    }\n\n    // TODO: need to set up shader attributes and uniforms as attributes on\n    // material object after attaching prgm\n    // We need to attach appropriate uniform variables to material after shaders\n    // have been chosen\n    this.initMaterial = function(material, lights, fog, object) {\n\n        material.addEventListener('dispose', onMaterialDispose);\n\n        var u, a, identifiers, i, parameters, maxLightCount, maxBones, maxShadows, shaderID;\n\n        shaderID = material.shaderID;\n\n        if (shaderID) {\n\n            var shader = $3Dmol.ShaderLib[shaderID];\n            material.vertexShader = shader.vertexShader;\n            material.fragmentShader = shader.fragmentShader;\n            material.uniforms = $3Dmol.ShaderUtils.clone(shader.uniforms);\n            // TODO: set material uniforms to shader uniform variables\n\n        }\n\n        parameters = {\n            wireframe : material.wireframe,\n            fragdepth : material.imposter\n        };\n\n        material.program = buildProgram(material.fragmentShader,\n                material.vertexShader, material.uniforms, parameters);\n\n    };\n\n    function setProgram(camera, lights, fog, material, object) {\n\n        if (material.needsUpdate) {\n\n            if (material.program)\n                deallocateMaterial(material);\n\n            _this.initMaterial(material, lights, fog, object);\n            material.needsUpdate = false;\n        }\n\n        var refreshMaterial = false;\n\n        // p_uniforms: uniformVarName => uniformLocation\n        // m_uniforms: uniformVarName => uniformJsVal\n        var program = material.program, p_uniforms = program.uniforms, m_uniforms = material.uniforms;\n\n        if (program != _currentProgram) {\n            _gl.useProgram(program);\n            _currentProgram = program;\n\n            refreshMaterial = true;\n        }\n\n        if (material.id != _currentMaterialId) {\n            _currentMaterialId = material.id;\n            refreshMaterial = true;\n        }\n\n        if (camera != _currentCamera) {\n            _currentCamera = camera;\n            refreshMaterial = true;\n        }\n\n        _gl.uniformMatrix4fv(p_uniforms.projectionMatrix, false,\n                camera.projectionMatrix.elements);\n        _gl.uniformMatrix4fv(p_uniforms.modelViewMatrix, false,\n                object._modelViewMatrix.elements);\n        _gl.uniformMatrix3fv(p_uniforms.normalMatrix, false,\n                object._normalMatrix.elements);\n\n        // Send projection matrix to uniform variable in shader\n        if (refreshMaterial) {\n\n            // Load projection, model-view matrices for perspective\n\n            // Set up correct fog uniform vals\n            m_uniforms.fogColor.value = fog.color;\n            m_uniforms.fogNear.value = fog.near;\n            m_uniforms.fogFar.value = fog.far;\n\n            // Set up lights for lambert shader\n            if (material.shaderID.startsWith(\"lambert\")\n                    || material.shaderID === \"instanced\"\n                    || material.shaderID.endsWith(\"imposter\")) {\n\n                // load view and normal matrices for directional and object\n                // lighting\n                _gl.uniformMatrix4fv(p_uniforms.viewMatrix, false,\n                        camera.matrixWorldInverse.elements);\n\n                if (_lightsNeedUpdate) {\n                    setupLights(program, lights);\n                    _lightsNeedUpdate = false;\n                }\n\n                // Set up correct light uniform var vals\n                m_uniforms.directionalLightColor.value = _lights.directional.colors;\n                m_uniforms.directionalLightDirection.value = _lights.directional.positions;\n\n            } else if (material.shaderID.endsWith(\"outline\")) {\n                m_uniforms.outlineColor.value = material.outlineColor;\n                m_uniforms.outlineWidth.value = material.outlineWidth;\n                m_uniforms.outlinePushback.value = material.outlinePushback;\n            } else if (material.shaderID === \"sphereimposter\") {\n                _gl.uniformMatrix4fv(p_uniforms.viewMatrix, false,\n                        camera.matrixWorldInverse.elements);\n                _gl.uniformMatrix3fv(p_uniforms.normalMatrix, false,\n                        object._normalMatrix.elements);\n                m_uniforms.directionalLightColor.value = _lights.directional.colors;\n                m_uniforms.directionalLightDirection.value = _lights.directional.positions;\n            }\n\n            // opacity, diffuse, emissive, etc\n            m_uniforms.opacity.value = material.opacity;\n\n            // Load any other material specific uniform variables to gl shaders\n            loadMaterialUniforms(p_uniforms, m_uniforms);\n\n        }\n\n        return program;\n\n    }\n\n    function loadMaterialUniforms(p_uniforms, m_uniforms) {\n        var uniformVar, type, uniformVal, uniformLoc;\n\n        for (uniformVar in m_uniforms) {\n            if (!p_uniforms[uniformVar])\n                continue;\n\n            type = m_uniforms[uniformVar].type;\n            uniformVal = m_uniforms[uniformVar].value;\n            uniformLoc = p_uniforms[uniformVar];\n\n            // single float\n            if (type === 'f')\n                _gl.uniform1f(uniformLoc, uniformVal);\n            // array of floats\n            else if (type === 'fv')\n                _gl.uniform3fv(uniformLoc, uniformVal);\n            // color - r,g,b floats\n            else if (type === 'c')\n                _gl.uniform3f(uniformLoc, uniformVal.r, uniformVal.g,\n                        uniformVal.b);\n            else if (type === 'f4')\n                _gl.uniform4f(uniformLoc, uniformVal[0], uniformVal[1],\n                        uniformVal[2],uniformVal[3]);\n\n        }\n\n    }\n\n    this.renderBuffer = function(camera, lights, fog, material, geometryGroup,\n            object) {\n\n        if (!material.visible)\n            return;\n\n        var program, attributes, linewidth, primitives, a, attribute, i, il;\n\n        // Sets up proper vertex and fragment shaders and attaches them to webGL\n        // program\n        // Also sets appropriate uniform variables\n        program = setProgram(camera, lights, fog, material, object);\n\n        attributes = program.attributes;\n\n        var updateBuffers = false, wireframeBit = material.wireframe ? 1 : 0, geometryGroupHash = (geometryGroup.id * 0xffffff)\n                + (program.id * 2) + wireframeBit;\n\n        if (geometryGroupHash !== _currentGeometryGroupHash) {\n            _currentGeometryGroupHash = geometryGroupHash;\n            updateBuffers = true;\n        }\n\n        // rebind shader attributes to appropriate (and already initialized) gl\n        // buffers\n        if (updateBuffers) {\n\n            disableAttributes();\n\n            // Vertices\n            if (attributes.position >= 0) {\n                _gl.bindBuffer(_gl.ARRAY_BUFFER,\n                        geometryGroup.__webglVertexBuffer);\n                enableAttribute(attributes.position);\n                _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT,\n                        false, 0, 0);\n            }\n\n            // Colors\n            if (attributes.color >= 0) {\n                _gl.bindBuffer(_gl.ARRAY_BUFFER,\n                        geometryGroup.__webglColorBuffer);\n                enableAttribute(attributes.color);\n                _gl.vertexAttribPointer(attributes.color, 3, _gl.FLOAT, false,\n                        0, 0);\n            }\n\n            // Normals\n            if (attributes.normal >= 0) {\n                _gl.bindBuffer(_gl.ARRAY_BUFFER,\n                        geometryGroup.__webglNormalBuffer);\n                enableAttribute(attributes.normal);\n                _gl.vertexAttribPointer(attributes.normal, 3, _gl.FLOAT, false,\n                        0, 0);\n            }\n\n            // Offsets (Instanced only)\n            if (attributes.offset >= 0) {\n                _gl.bindBuffer(_gl.ARRAY_BUFFER,\n                        geometryGroup.__webglOffsetBuffer);\n                enableAttribute(attributes.offset);\n                _gl.vertexAttribPointer(attributes.offset, 3, _gl.FLOAT, false,\n                        0, 0);\n            }\n\n            // Radii (Instanced only)\n            if (attributes.radius >= 0) {\n                _gl.bindBuffer(_gl.ARRAY_BUFFER,\n                        geometryGroup.__webglRadiusBuffer);\n                enableAttribute(attributes.radius);\n                _gl.vertexAttribPointer(attributes.radius, 1, _gl.FLOAT, false,\n                        0, 0);\n            }\n\n        }\n\n        // Render\n        var faceCount, lineCount;\n        // lambert shaders - draw triangles\n        // TODO: make sure geometryGroup's face count is setup correctly\n        if (object instanceof $3Dmol.Mesh) {\n\n            if (material.shaderID === \"instanced\") {\n                var sphereGeometryGroup = material.sphere.geometryGroups[0];\n                if (updateBuffers) {\n                    _gl.bindBuffer(_gl.ARRAY_BUFFER,\n                            geometryGroup.__webglVertexBuffer);\n                    _gl.bufferData(_gl.ARRAY_BUFFER,\n                            sphereGeometryGroup.vertexArray, _gl.STATIC_DRAW);\n                    _gl.bindBuffer(_gl.ARRAY_BUFFER,\n                            geometryGroup.__webglNormalBuffer);\n                    _gl.bufferData(_gl.ARRAY_BUFFER,\n                            sphereGeometryGroup.normalArray, _gl.STATIC_DRAW);\n                    _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,\n                            geometryGroup.__webglFaceBuffer);\n                    _gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,\n                            sphereGeometryGroup.faceArray, _gl.STATIC_DRAW);\n                }\n\n                faceCount = sphereGeometryGroup.faceidx;\n\n                _extInstanced.vertexAttribDivisorANGLE(attributes.offset, 1);\n                _extInstanced.vertexAttribDivisorANGLE(attributes.radius, 1);\n                _extInstanced.vertexAttribDivisorANGLE(attributes.color, 1);\n\n                _extInstanced.drawElementsInstancedANGLE(_gl.TRIANGLES,\n                        faceCount, _gl.UNSIGNED_SHORT, 0,\n                        geometryGroup.radiusArray.length);\n\n                _extInstanced.vertexAttribDivisorANGLE(attributes.offset, 0);\n                _extInstanced.vertexAttribDivisorANGLE(attributes.radius, 0);\n                _extInstanced.vertexAttribDivisorANGLE(attributes.color, 0);\n\n            }\n\n            else if (material.wireframe) {\n                lineCount = geometryGroup.lineidx;\n                setLineWidth(material.wireframeLinewidth);\n\n                if (updateBuffers)\n                    _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,\n                            geometryGroup.__webglLineBuffer);\n\n                _gl.drawElements(_gl.LINES, lineCount, _gl.UNSIGNED_SHORT, 0);\n            }\n\n            else {\n                faceCount = geometryGroup.faceidx;\n\n                if (updateBuffers)\n                    _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,\n                            geometryGroup.__webglFaceBuffer);\n                _gl.drawElements(_gl.TRIANGLES, faceCount, _gl.UNSIGNED_SHORT,\n                        0);\n\n            }\n\n            _this.info.render.calls++;\n            _this.info.render.vertices += faceCount;\n            _this.info.render.faces += faceCount / 3;\n        }\n\n        // basic shaders - draw lines\n        else if (object instanceof $3Dmol.Line) {\n            lineCount = geometryGroup.vertices;\n\n            setLineWidth(material.linewidth);\n            _gl.drawArrays(_gl.LINES, 0, lineCount);\n\n            _this.info.render.calls++;\n        }\n\n    };\n\n    // rendering\n    function renderObjects(renderList, reverse, materialType, camera, lights,\n            fog, useBlending, overrideMaterial) {\n\n        var webglObject, object, buffer, material, start, end, delta;\n\n        // Forward or backward render\n\n        if (reverse) {\n            start = renderList.length - 1;\n            end = -1;\n            delta = -1;\n        }\n\n        else {\n            start = 0;\n            end = renderList.length;\n            delta = 1;\n        }\n\n        for (var i = start; i !== end; i += delta) {\n\n            webglObject = renderList[i];\n\n            if (webglObject.render) {\n\n                object = webglObject.object;\n                buffer = webglObject.buffer;\n                material = webglObject[materialType];\n\n                if (!material)\n                    continue;\n\n                if (useBlending)\n                    _this.setBlending(true);\n\n                _this.setDepthTest(material.depthTest);\n                _this.setDepthWrite(material.depthWrite);\n                setPolygonOffset(material.polygonOffset,\n                        material.polygonOffsetFactor,\n                        material.polygonOffsetUnits);\n\n                var reflected = object._modelViewMatrix.isReflected();\n\n                _this.setMaterialFaces(material, reflected);\n\n                _this.renderBuffer(camera, lights, fog, material, buffer,\n                        object);\n                if (_outlineEnabled || material.outline) {\n                    if(material.shaderID == 'sphereimposter') {\n                        _this.renderBuffer(camera, lights, fog, _outlineSphereImposterMaterial,\n                                buffer, object);\n                    }\n                    else if(material.shaderID == 'stickimposter') {\n                        _this.renderBuffer(camera, lights, fog, _outlineStickImposterMaterial,\n                                buffer, object);\n                    }\n                    else if(!material.wireframe\n                        && material.shaderID !== 'basic'\n                        && material.opacity !== 0.0) {\n                        _this.renderBuffer(camera, lights, fog, _outlineMaterial,\n                            buffer, object);\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.render = function(scene, camera, forceClear) {\n\n        if (camera instanceof $3Dmol.Camera === false) {\n\n            console\n                    .error('$3Dmol.Renderer.render: camera is not an instance of $3Dmol.Camera.');\n            return;\n\n        }\n\n        var i, il,\n\n        webglObject, object, renderList,\n\n        lights = scene.__lights, fog = scene.fog;\n\n        // reset caching for this frame\n\n        _currentMaterialId = -1;\n        _lightsNeedUpdate = true;\n\n        // update scene graph\n\n        if (this.autoUpdateScene)\n            scene.updateMatrixWorld();\n\n        // update camera matrices\n        // Pretty sure camera's parent is always going to be undefined for our\n        // purposes...\n        if (camera.parent === undefined)\n            camera.updateMatrixWorld();\n\n        camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n        _projScreenMatrix.multiplyMatrices(camera.projectionMatrix,\n                camera.matrixWorldInverse);\n\n        // update WebGL objects\n\n        if (this.autoUpdateObjects)\n            this.initWebGLObjects(scene);\n\n        _this.info.render.calls = 0;\n        _this.info.render.vertices = 0;\n        _this.info.render.faces = 0;\n        _this.info.render.points = 0;\n\n        _currentWidth = _viewportWidth;\n        _currentHeight = _viewportHeight;\n\n        if (this.autoClear || forceClear) {\n            this.clear(this.autoClearColor, this.autoClearDepth,\n                    this.autoClearStencil);\n\n        }\n\n        // set matrices for regular objects (frustum culled)\n\n        renderList = scene.__webglObjects;\n\n        for (i = 0, il = renderList.length; i < il; i++) {\n\n            webglObject = renderList[i];\n            object = webglObject.object;\n\n            webglObject.render = false;\n\n            if (object.visible) {\n                setupMatrices(object, camera);\n                unrollBufferMaterial(webglObject);\n                webglObject.render = true;\n            }\n        }\n\n        // set matrices for immediate objects\n\n        var material = null;\n\n        // opaque pass (front-to-back order)\n\n        this.setBlending(false);\n\n        renderObjects(scene.__webglObjects, true, \"opaque\", camera, lights,\n                fog, false, material);\n\n        // prime depth buffer\n        renderObjects(scene.__webglObjects, true, \"blank\", camera, lights, fog,\n                true, material);\n\n        // transparent pass (back-to-front order)\n\n        renderObjects(scene.__webglObjects, false, \"transparent\", camera,\n                lights, fog, true, material);\n\n        // Render plugins (e.g. sprites), and reset state\n\n        renderPlugins(this.renderPluginsPost, scene, camera);\n\n        // Ensure depth buffer writing is enabled so it can be cleared on next\n        // render\n\n        this.setDepthTest(true);\n        this.setDepthWrite(true);\n\n        // _gl.finish();\n\n    };\n\n    function renderPlugins(plugins, scene, camera) {\n\n        // Reset state once regardless\n        // This should also fix cartoon render bug (after transparent surface\n        // render)\n\n        _currentGeometryGroupHash = -1;\n        _currentProgram = null;\n        _currentCamera = null;\n        _oldBlending = -1;\n        _oldDepthWrite = -1;\n        _oldDepthTest = -1;\n        _oldDoubleSided = -1;\n        _currentMaterialId = -1;\n        _oldFlipSided = -1;\n\n        if (!plugins.length)\n            return;\n\n        for (var i = 0, il = plugins.length; i < il; i++) {\n\n            _lightsNeedUpdate = true;\n\n            plugins[i].render(scene, camera, _currentWidth, _currentHeight);\n\n            // Reset state after plugin render\n            _currentGeometryGroupHash = -1;\n            _currentProgram = null;\n            _currentCamera = null;\n            _oldBlending = -1;\n            _oldDepthWrite = -1;\n            _oldDepthTest = -1;\n            _oldDoubleSided = -1;\n            _currentMaterialId = -1;\n            _oldFlipSided = -1;\n\n        }\n\n    }\n\n    this.initWebGLObjects = function(scene) {\n\n        if (!scene.__webglObjects) {\n\n            scene.__webglObjects = [];\n            scene.__webglObjectsImmediate = [];\n            scene.__webglSprites = [];\n            scene.__webglFlares = [];\n\n        }\n\n        // Add objects; this sets up buffers for each geometryGroup\n        if (scene.__objectsAdded.length) {\n\n            while (scene.__objectsAdded.length) {\n                addObject(scene.__objectsAdded[0], scene);\n                scene.__objectsAdded.splice(0, 1);\n            }\n\n            // Force buffer update during render\n            // Hackish fix for initial cartoon-render-then-transparent-surface\n            // bug\n            _currentGeometryGroupHash = -1;\n\n        }\n\n        while (scene.__objectsRemoved.length) {\n\n            removeObject(scene.__objectsRemoved[0], scene);\n            scene.__objectsRemoved.splice(0, 1);\n\n        }\n\n        // update must be called after objects adding / removal\n        // This sends typed arrays to GL buffers for each geometryGroup\n        for (var o = 0, ol = scene.__webglObjects.length; o < ol; o++) {\n\n            updateObject(scene.__webglObjects[o].object);\n\n        }\n\n    };\n\n    // Objects adding\n\n    function addObject(object, scene) {\n\n        var g, gl, geometry, material, geometryGroup;\n\n        if (!object.__webglInit) {\n\n            object.__webglInit = true;\n\n            object._modelViewMatrix = new $3Dmol.Matrix4();\n            object._normalMatrix = new $3Dmol.Matrix3();\n\n            if (object.geometry !== undefined\n                    && object.geometry.__webglInit === undefined) {\n\n                object.geometry.__webglInit = true;\n                object.geometry.addEventListener('dispose', onGeometryDispose);\n\n            }\n\n            if (object instanceof $3Dmol.Mesh || object instanceof $3Dmol.Line) {\n                geometry = object.geometry;\n                material = object.material;\n\n                for (g = 0, gl = geometry.geometryGroups.length; g < gl; g++) {\n\n                    geometryGroup = geometry.geometryGroups[g];\n\n                    geometryGroup.id = _geometryGroupCounter++;\n\n                    // initialise VBO on the first access\n\n                    if (!geometryGroup.__webglVertexBuffer) {\n\n                        if (object instanceof $3Dmol.Mesh) {\n                            createMeshBuffers(geometryGroup);\n                            geometry.elementsNeedUpdate = true;\n                            geometry.normalsNeedUpdate = true;\n                        }\n\n                        else if (object instanceof $3Dmol.Line)\n                            createLineBuffers(geometryGroup);\n\n                        geometry.verticesNeedUpdate = true;\n                        geometry.colorsNeedUpdate = true;\n\n                    }\n\n                }\n\n            }\n\n        }\n\n        if (!object.__webglActive) {\n\n            if (object instanceof $3Dmol.Mesh || object instanceof $3Dmol.Line) {\n\n                geometry = object.geometry;\n\n                for (g = 0, gl = geometry.geometryGroups.length; g < gl; g++) {\n                    geometryGroup = geometry.geometryGroups[g];\n\n                    addBuffer(scene.__webglObjects, geometryGroup, object);\n                }\n\n            }\n\n            // Sprite\n            else if (object instanceof $3Dmol.Sprite)\n                scene.__webglSprites.push(object);\n\n            object.__webglActive = true;\n\n        }\n\n    }\n\n    function updateObject(object) {\n\n        var geometry = object.geometry, material = object.material, geometryGroup, customAttributesDirty;\n\n        if (object instanceof $3Dmol.Mesh || object instanceof $3Dmol.Line) {\n\n            for (var g = 0, gl = geometry.geometryGroups.length; g < gl; g++) {\n\n                geometryGroup = geometry.geometryGroups[g];\n\n                if (geometry.verticesNeedUpdate || geometry.elementsNeedUpdate\n                        || geometry.colorsNeedUpdate\n                        || geometry.normalsNeedUpdate) {\n                    setBuffers(geometryGroup, _gl.STATIC_DRAW);\n                }\n            }\n\n            geometry.verticesNeedUpdate = false;\n            geometry.elementsNeedUpdate = false;\n            geometry.normalsNeedUpdate = false;\n            geometry.colorsNeedUpdate = false;\n\n            geometry.buffersNeedUpdate = false;\n\n        }\n\n    }\n\n    function removeObject(object, scene) {\n\n        if (object instanceof $3Dmol.Mesh || object instanceof $3Dmol.Line)\n            removeInstances(scene.__webglObjects, object);\n\n        else if (object instanceof $3Dmol.Sprite)\n            removeInstancesDirect(scene.__webglSprites, object);\n\n        object.__webglActive = false;\n\n    }\n\n    function removeInstances(objList, object) {\n\n        for (var o = objList.length - 1; o >= 0; --o) {\n\n            if (objList[o].object === object)\n                objList.splice(o, 1);\n\n        }\n    }\n\n    function removeInstancesDirect(objList, object) {\n\n        for (var o = objList.length - 1; o >= 0; --o) {\n\n            if (objList[o] === object)\n                objList.splice(o, 1);\n\n        }\n    }\n\n    function unrollBufferMaterial(globject) {\n\n        var object = globject.object;\n        var material = object.material;\n\n        if (material.transparent) {\n            globject.opaque = null;\n            globject.transparent = material;\n            if (!material.wireframe) {\n                var blankMaterial = material.clone();\n                blankMaterial.opacity = 0.0;\n                globject.blank = blankMaterial;\n            }\n        }\n\n        else {\n            globject.opaque = material;\n            globject.transparent = null;\n\n        }\n\n    }\n\n    function setBuffers(geometryGroup, hint, line) {\n\n        var vertexArray = geometryGroup.vertexArray;\n        var colorArray = geometryGroup.colorArray;\n\n        // offset buffers\n        if (geometryGroup.__webglOffsetBuffer !== undefined ) {\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglOffsetBuffer);\n            _gl.bufferData(_gl.ARRAY_BUFFER, vertexArray, hint);\n        }\n        else {\n            //normal, non-instanced case\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer);\n            _gl.bufferData(_gl.ARRAY_BUFFER, vertexArray, hint);\n        }\n        // color buffers\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer);\n        _gl.bufferData(_gl.ARRAY_BUFFER, colorArray, hint);\n\n        // normal buffers\n        if (geometryGroup.normalArray\n                && geometryGroup.__webglNormalBuffer !== undefined) {\n            var normalArray = geometryGroup.normalArray;\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer);\n            _gl.bufferData(_gl.ARRAY_BUFFER, normalArray, hint);\n\n        }\n\n\n\n        // radius buffers\n        if (geometryGroup.radiusArray\n                && geometryGroup.__webglRadiusBuffer !== undefined) {\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglRadiusBuffer);\n            _gl.bufferData(_gl.ARRAY_BUFFER, geometryGroup.radiusArray, hint);\n        }\n\n        // face (index) buffers\n        if (geometryGroup.faceArray\n                && geometryGroup.__webglFaceBuffer !== undefined) {\n            var faceArray = geometryGroup.faceArray;\n            _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,\n                    geometryGroup.__webglFaceBuffer);\n            _gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER, faceArray, hint);\n\n        }\n\n        // line (index) buffers (for wireframe)\n        if (geometryGroup.lineArray\n                && geometryGroup.__webglLineBuffer !== undefined) {\n            var lineArray = geometryGroup.lineArray;\n            _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,\n                    geometryGroup.__webglLineBuffer);\n            _gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER, lineArray, hint);\n        }\n\n    }\n\n    // Creates appropriate gl buffers for geometry chunk\n    // TODO: do we need line buffer for mesh objects?\n    // Also, can we integrate this with createLineBuffers?\n    function createMeshBuffers(geometryGroup) {\n\n        if (geometryGroup.radiusArray) {\n            geometryGroup.__webglRadiusBuffer = _gl.createBuffer();\n        }\n        if(geometryGroup.useOffset) {\n            geometryGroup.__webglOffsetBuffer = _gl.createBuffer();\n        }\n        geometryGroup.__webglVertexBuffer = _gl.createBuffer();\n        geometryGroup.__webglNormalBuffer = _gl.createBuffer();\n        geometryGroup.__webglColorBuffer = _gl.createBuffer();\n\n        geometryGroup.__webglFaceBuffer = _gl.createBuffer();\n        geometryGroup.__webglLineBuffer = _gl.createBuffer();\n\n        _this.info.memory.geometries++;\n    }\n\n    function createLineBuffers(geometry) {\n\n        geometry.__webglVertexBuffer = _gl.createBuffer();\n        geometry.__webglColorBuffer = _gl.createBuffer();\n\n        _this.info.memory.geometries++;\n    }\n\n    function addBuffer(objlist, buffer, object) {\n\n        objlist.push({\n            buffer : buffer,\n            object : object,\n            opaque : null,\n            transparent : null\n        });\n\n    }\n\n    function setupMatrices(object, camera) {\n\n        object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,\n                object.matrixWorld);\n\n        object._normalMatrix.getInverse(object._modelViewMatrix);\n        object._normalMatrix.transpose();\n\n    }\n\n    function isPowerOfTwo(value) {\n\n        return (value & (value - 1)) === 0;\n\n    }\n\n    // Fallback filters for non-power-of-2 textures\n\n    function filterFallback(f) {\n\n        return _gl.LINEAR;\n\n    }\n\n    function setTextureParameters(textureType, texture, isImagePowerOfTwo) {\n\n        if (isImagePowerOfTwo) {\n\n            _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S,\n                    paramToGL(texture.wrapS));\n            _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T,\n                    paramToGL(texture.wrapT));\n\n            _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER,\n                    paramToGL(texture.magFilter));\n            _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER,\n                    paramToGL(texture.minFilter));\n\n        } else {\n\n            _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S,\n                    _gl.CLAMP_TO_EDGE);\n            _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T,\n                    _gl.CLAMP_TO_EDGE);\n\n            _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER,\n                    filterFallback(texture.magFilter));\n            _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER,\n                    filterFallback(texture.minFilter));\n\n        }\n\n    }\n\n    this.setTexture = function(texture, slot) {\n\n        if (texture.needsUpdate) {\n\n            if (!texture.__webglInit) {\n\n                texture.__webglInit = true;\n\n                texture.addEventListener('dispose', onTextureDispose);\n\n                texture.__webglTexture = _gl.createTexture();\n\n                _this.info.memory.textures++;\n\n            }\n\n            _gl.activeTexture(_gl.TEXTURE0 + slot);\n            _gl.bindTexture(_gl.TEXTURE_2D, texture.__webglTexture);\n\n            _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n            _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,\n                    texture.premultiplyAlpha);\n            _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n            var image = texture.image, isImagePowerOfTwo = isPowerOfTwo(image.width)\n                    && isPowerOfTwo(image.height), glFormat = paramToGL(texture.format), glType = paramToGL(texture.type);\n\n            setTextureParameters(_gl.TEXTURE_2D, texture, isImagePowerOfTwo);\n\n            var mipmap, mipmaps = texture.mipmaps;\n\n            // regular Texture (image, video, canvas)\n\n            // use manually created mipmaps if available\n            // if there are no manual mipmaps\n            // set 0 level mipmap and then use GL to generate other mipmap\n            // levels\n\n            if (mipmaps.length > 0 && isImagePowerOfTwo) {\n\n                for (var i = 0, il = mipmaps.length; i < il; i++) {\n                    mipmap = mipmaps[i];\n                    _gl.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat,\n                            glType, mipmap);\n                }\n\n                texture.generateMipmaps = false;\n            }\n\n            else\n                _gl.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType,\n                        texture.image);\n\n            if (texture.generateMipmaps && isImagePowerOfTwo)\n                _gl.generateMipmap(_gl.TEXTURE_2D);\n\n            texture.needsUpdate = false;\n\n            if (texture.onUpdate)\n                texture.onUpdate();\n\n        } else {\n\n            _gl.activeTexture(_gl.TEXTURE0 + slot);\n            _gl.bindTexture(_gl.TEXTURE_2D, texture.__webglTexture);\n\n        }\n\n    };\n\n    // Map constants to WebGL constants\n\n    function paramToGL(p) {\n\n        if (p === $3Dmol.UnsignedByteType)\n            return _gl.UNSIGNED_BYTE;\n        if (p === $3Dmol.RGBAFormat)\n            return _gl.RGBA;\n\n        return 0;\n\n    }\n\n    function setupLights(program, lights) {\n        var l, ll, light, n, r = 0, g = 0, b = 0, color, position, intensity, distance,\n\n        zlights = _lights,\n\n        dirColors = zlights.directional.colors, dirPositions = zlights.directional.positions,\n\n        dirCount = 0, dirLength = 0, dirOffset = 0;\n\n        for (l = 0, ll = lights.length; l < ll; l++) {\n\n            light = lights[l];\n\n            color = light.color;\n            intensity = light.intensity;\n            distance = light.distance;\n\n            if (light instanceof $3Dmol.Light) {\n\n                dirCount++;\n\n                _direction.getPositionFromMatrix(light.matrixWorld);\n                _vector3.getPositionFromMatrix(light.target.matrixWorld);\n                _direction.sub(_vector3);\n                _direction.normalize();\n\n                if (_direction.x === 0 && _direction.y === 0\n                        && _direction.z === 0)\n                    continue;\n\n                dirPositions[dirOffset] = _direction.x;\n                dirPositions[dirOffset + 1] = _direction.y;\n                dirPositions[dirOffset + 2] = _direction.z;\n\n                dirColors[dirOffset] = color.r * intensity;\n                dirColors[dirOffset + 1] = color.g * intensity;\n                dirColors[dirOffset + 2] = color.b * intensity;\n\n                dirOffset += 3;\n\n                dirLength++;\n            }\n\n        }\n\n        zlights.ambient[0] = r;\n        zlights.ambient[1] = g;\n        zlights.ambient[2] = b;\n        zlights.directional.length = dirLength;\n    }\n\n    function initGL() {\n\n        try {\n\n            if (!(_gl = _canvas.getContext('experimental-webgl', {\n                alpha : _alpha,\n                premultipliedAlpha : _premultipliedAlpha,\n                antialias : _antialias,\n                stencil : _stencil,\n                preserveDrawingBuffer : _preserveDrawingBuffer\n            }))) {\n                if (!(_gl = _canvas.getContext('webgl', {\n                    alpha : _alpha,\n                    premultipliedAlpha : _premultipliedAlpha,\n                    antialias : _antialias,\n                    stencil : _stencil,\n                    preserveDrawingBuffer : _preserveDrawingBuffer\n                }))) {\n                    throw 'Error creating WebGL context.';\n                }\n            }\n\n        } catch (error) {\n\n            console.error(error);\n        }\n    }\n\n    function setDefaultGLState() {\n\n        _gl.clearColor(0, 0, 0, 1);\n        _gl.clearDepth(1);\n        _gl.clearStencil(0);\n\n        _gl.enable(_gl.DEPTH_TEST);\n        _gl.depthFunc(_gl.LEQUAL);\n\n        _gl.frontFace(_gl.CCW);\n        _gl.cullFace(_gl.BACK);\n        _gl.enable(_gl.CULL_FACE);\n\n        _gl.enable(_gl.BLEND);\n        _gl.blendEquation(_gl.FUNC_ADD);\n        _gl.blendFunc(_gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA);\n\n        _gl.clearColor(_clearColor.r, _clearColor.g, _clearColor.b,\n                        _clearAlpha);\n    }\n\n    this.addPostPlugin(new $3Dmol.SpritePlugin());\n\n};\n/*\n * Scene class\n */\n/** @constructor */\n$3Dmol.Scene = function() {\n\n    $3Dmol.Object3D.call(this);\n\n    this.fog = null;\n\n    //May not need...\n    this.overrideMaterial = null;\n\n    this.matrixAutoUpdate = false;\n\n    this.__objects = [];\n    this.__lights = [];\n\n    this.__objectsAdded = [];\n    this.__objectsRemoved = [];\n\n};\n\n$3Dmol.Scene.prototype = Object.create($3Dmol.Object3D.prototype);\n\n$3Dmol.Scene.prototype.__addObject = function(object) {\n\n    //Directional Lighting\n    if (object instanceof $3Dmol.Light) {\n\n        if (this.__lights.indexOf(object) === -1)\n            this.__lights.push(object);\n\n        //TODO: Do I need this??\n        if (object.target && object.target.parent === undefined)\n            this.add(object.target);\n\n    }\n\n    //Rotation group\n    else {\n\n        if (this.__objects.indexOf(object) === -1) {\n\n            this.__objects.push(object);\n            this.__objectsAdded.push(object);\n\n            //Check if previously removed\n\n            var idx = this.__objectsRemoved.indexOf(object);\n\n            if (idx !== -1)\n                this.__objectsRemoved.splice(i, 1);\n\n        }\n    }\n\n    //Add object's children\n\n    for (var i = 0; i < object.children.length; i++)\n        this.__addObject(object.children[i]);\n\n};\n\n$3Dmol.Scene.prototype.__removeObject = function(object) {\n\n    var idx;\n    if (object instanceof $3Dmol.Light) {\n\n        idx = this.__lights.indexOf(object);\n\n        if (idx !== -1)\n            this.__lights.splice(idx, 1);\n\n    }\n\n    //Object3D\n    else {\n\n        idx = this.__objects.indexOf(object);\n\n        if (idx !== -1) {\n\n            this.__objects.splice(idx, 1);\n            this.__objectsRemoved.push(object);\n\n            //Check if previously added\n\n            var ai = this.__objectsAdded.indexOf(object);\n\n            if (ai !== -1)\n                this.__objectsAdded.splice(idx, 1);\n\n        }\n\n    }\n\n    //Remove object's children\n    for (var i = 0; i < object.children.length; i++)\n        this.__removeObject(object.children[i]);\n\n};\n\n\n/*\n * Fog Class\n */\n\n/** @constructor */\n$3Dmol.Fog = function ( hex, near, far ) {\n\n    this.name = '';\n\n    this.color = new $3Dmol.Color( hex );\n\n    this.near = ( near !== undefined ) ? near : 1;\n    this.far = ( far !== undefined ) ? far : 1000;\n\n};\n\n$3Dmol.Fog.prototype.clone = function () {\n\n    return new $3Dmol.Fog( this.color.getHex(), this.near, this.far );\n\n};\n\n$3Dmol.ShaderUtils = {\n\n    clone: function ( uniforms_src ) {\n\n        var u, p, parameter, parameter_src, uniforms_clone = {};\n\n        for (u in uniforms_src) {\n            uniforms_clone[u] = {};\n            uniforms_clone[u].type = uniforms_src[u].type;\n\n            var srcValue = uniforms_src[u].value;\n\n            if (srcValue instanceof $3Dmol.Color)\n                uniforms_clone[u].value = srcValue.clone();\n            else if (typeof srcValue === \"number\")\n                uniforms_clone[u].value = srcValue;\n            else if (srcValue instanceof Array)\n                uniforms_clone[u].value = [];\n            else\n                console.error(\"Error copying shader uniforms from ShaderLib: unknown type for uniform\");\n\n        }\n\n        return uniforms_clone;\n    },\n    //fragment shader reused by outline shader\n    stickimposterFragmentShader: [\n     \"uniform float opacity;\",\n     \"uniform mat4 projectionMatrix;\",\n\n     \"uniform vec3 fogColor;\",\n     \"uniform float fogNear;\",\n     \"uniform float fogFar;\",\n\n     \"varying vec3 vLight;\",\n     \"varying vec3 vColor;\",\n     \"varying vec3 cposition;\",\n     \"varying vec3 p1;\",\n     \"varying vec3 p2;\",\n     \"varying float r;\",\n\n\n     //cylinder-ray intersection testing taken from http://mrl.nyu.edu/~dzorin/cg05/lecture12.pdf\n     //also useful: http://stackoverflow.com/questions/9595300/cylinder-impostor-in-glsl\n     //with a bit more care (caps) this could be a general cylinder imposter (see also outline)\n     \"void main() {\",\n     \"    vec3 color = abs(vColor);\",\n     \"    vec3 pos = cposition;\",\n     \"    vec3 p = pos;\", //ray point\n     \"    vec3 v = normalize(pos);\", //ray normal\n     \"    vec3 pa = p1;\", //cyl start\n     \"    vec3 va = normalize(p2-p1);\", //cyl norm\n     \"    vec3 tmp1 = v-(dot(v,va)*va);\",\n     \"    vec3 deltap = p-pa;\",\n     \"    float A = dot(tmp1,tmp1);\",\n     \"    if(A == 0.0) discard;\",\n     \"    vec3 tmp2 = deltap-(dot(deltap,va)*va);\",\n     \"    float B = 2.0*dot(tmp1, tmp2);\",\n     \"    float C = dot(tmp2,tmp2)-r*r;\",\n     //quadratic equation!\n     \"    float det = (B*B) - (4.0*A*C);\",\n     \"    if(det < 0.0) discard;\",\n     \"    float sqrtDet = sqrt(det);\",\n     \"    float posT = (-B+sqrtDet)/(2.0*A);\",\n     \"    float negT = (-B-sqrtDet)/(2.0*A);\",\n     \"    float intersectionT = min(posT,negT);\",\n     \"    vec3 qi = p+v*intersectionT;\",\n     \"    float dotp1 = dot(va,qi-p1);\",\n     \"    float dotp2 = dot(va,qi-p2);\",\n     \"    vec3 norm;\",\n     \"    if( dotp1 < 0.0 || dotp2 > 0.0) {\", //(p-c)^2 + 2(p-c)vt +v^2+t^2 - r^2 = 0\n     \"       vec3 cp;\",\n     \"       if( dotp1 < 0.0) {\" +\n     //\"        if(vColor.x < 0.0 ) discard;\", //color sign bit indicates if we should cap or not\n     \"        cp = p1;\",\n     \"       } else {\",\n     //\"          if(vColor.y < 0.0 ) discard;\",\n     \"          cp = p2;\",\n     \"       }\",\n     \"       vec3 diff = p-cp;\",\n     \"       A = dot(v,v);\",\n     \"       B = dot(diff,v)*2.0;\",\n     \"       C = dot(diff,diff)-r*r;\",\n     \"       det = (B*B) - (4.0*C);\",\n     \"       if(det < 0.0) discard;\",\n     \"       sqrtDet = sqrt(det);\",\n     \"       posT = (-B+sqrtDet)/(2.0);\",\n     \"       negT = (-B-sqrtDet)/(2.0);\",\n     \"       float t = min(posT,negT);\",\n     \"       qi = p+v*t;\",\n     \"       norm = normalize(qi-cp);\",\n     \"    } else {\",\n     \"       norm = normalize(qi-(dotp1*va + p1));\",\n     \"    }\",\n     \"    vec4 clipPos = projectionMatrix * vec4(qi, 1.0);\",\n     \"    float ndcDepth = clipPos.z / clipPos.w;\",\n     \"    float depth = ((gl_DepthRange.diff * ndcDepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\",\n     \"    gl_FragDepthEXT = depth;\",\n    ].join(\"\\n\")\n};\n\n$3Dmol.ShaderLib = {\n    'basic' : {\n        fragmentShader : [\n\"uniform mat4 viewMatrix;\",\n\"uniform float opacity;\",\n\n\"uniform vec3 fogColor;\",\n\"uniform float fogNear;\",\n\"uniform float fogFar;\",\n\n\"varying vec3 vColor;\",\n\n\"void main() {\",\n\n\"    gl_FragColor = vec4( vColor, opacity );\",\n\n\"    float depth = gl_FragCoord.z / gl_FragCoord.w;\",\n\"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\n\n\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\n\n\"}\"\n\n].join(\"\\n\"),\n\n        vertexShader : [\n\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform mat4 viewMatrix;\",\n\"uniform mat3 normalMatrix;\",\n\n\"attribute vec3 position;\",\n\"attribute vec3 color;\",\n\n\"varying vec3 vColor;\",\n\n\"void main() {\",\n\n\"    vColor = color;\",\n\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\"    gl_Position = projectionMatrix * mvPosition;\",\n\n\"}\"\n\n].join(\"\\n\"),\n\n        uniforms : {\n            opacity: { type: 'f', value: 1.0 },\n            fogColor: { type: 'c', value: new $3Dmol.Color(1.0, 1.0, 1.0) },\n            fogNear: { type: 'f', value: 1.0 },\n            fogFar: { type: 'f', value: 2000}\n        }\n\n    },\n\n 'sphereimposter' : {\n        fragmentShader : [\n\"uniform mat4 viewMatrix;\",\n\"uniform float opacity;\",\n\"uniform mat4 projectionMatrix;\",\n\n\"uniform vec3 fogColor;\",\n\"uniform float fogNear;\",\n\"uniform float fogFar;\",\n\"uniform float uDepth;\",\n\"uniform vec3 directionalLightColor[ 1 ];\",\n\n\"varying vec3 vColor;\",\n\"varying vec2 mapping;\",\n\"varying float rval;\",\n\"varying vec3 vLight;\",\n\"varying vec3 center;\",\n\n\n\"void main() {\",\n\"    float lensqr = dot(mapping,mapping);\",\n\"    float rsqr = rval*rval;\",\n\"    if(lensqr > rsqr)\",\n\"       discard;\",\n\"    float z = sqrt(rsqr-lensqr);\",\n\"    vec3 cameraPos = center+ vec3(mapping.x,mapping.y,z);\",\n\"    vec4 clipPos = projectionMatrix * vec4(cameraPos, 1.0);\",\n\"    float ndcDepth = clipPos.z / clipPos.w;\",\n\"    gl_FragDepthEXT = ((gl_DepthRange.diff * ndcDepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\",\n\"    vec3 norm = normalize(vec3(mapping.x,mapping.y,z));\",\n\"    float dotProduct = dot( norm, vLight );\",\n\"    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\n\"    vec3 vLight = directionalLightColor[ 0 ] * directionalLightWeighting;\",\n\"    gl_FragColor = vec4(vLight*vColor, opacity*opacity );\",\n\"    float fogFactor = smoothstep( fogNear, fogFar, gl_FragDepthEXT/gl_FragCoord.w );\",\n\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\n\n\n\"}\"\n\n].join(\"\\n\"),\n\n        vertexShader : [\n\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform mat4 viewMatrix;\",\n\"uniform mat3 normalMatrix;\",\n\"uniform vec3 directionalLightColor[ 1 ];\",\n\"uniform vec3 directionalLightDirection[ 1 ];\",\n\n\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\n\"attribute vec3 color;\",\n\n\"varying vec2 mapping;\",\n\"varying vec3 vColor;\",\n\"varying float rval;\",\n\"varying vec3 vLight;\",\n\"varying vec3 center;\",\n\n\"void main() {\",\n\n\"    vColor = color;\",\n\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\"    center = mvPosition.xyz;\",\n\"    vec4 projPosition = projectionMatrix * mvPosition;\",\n\"    vec4 adjust = projectionMatrix* vec4(normal,0.0); adjust.z = 0.0; adjust.w = 0.0;\",\n\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\n\"    vLight = normalize( lDirection.xyz );\",\n\"    mapping = normal.xy;\",\n\"    rval = abs(normal.x);\",\n\"    gl_Position = projPosition+adjust;\",\n\n\"}\"\n\n].join(\"\\n\"),\n\n        uniforms : {\n            opacity: { type: 'f', value: 1.0 },\n            fogColor: { type: 'c', value: new $3Dmol.Color(1.0, 1.0, 1.0) },\n            fogNear: { type: 'f', value: 1.0 },\n            fogFar: { type: 'f', value: 2000},\n            directionalLightColor: { type: 'fv', value: [] },\n            directionalLightDirection: { type: 'fv', value: [] }\n        }\n\n    },\n\n\n    'lambert' : {\n        fragmentShader : [\n\n\"uniform mat4 viewMatrix;\",\n\"uniform float opacity;\",\n\n\"uniform vec3 fogColor;\",\n\"uniform float fogNear;\",\n\"uniform float fogFar;\",\n\n\"varying vec3 vLightFront;\",\n\"varying vec3 vColor;\",\n\n\"void main() {\",\n\n\"    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\n\n\"    #ifndef WIREFRAME\",\n\"    gl_FragColor.xyz *= vLightFront;\",\n\"    #endif\",\n\n\"    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\",\n\"    float depth = gl_FragCoord.z / gl_FragCoord.w;\",\n\n\"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\n\n\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\n\n\"}\"\n\n\n].join(\"\\n\"),\n\n       vertexShader : [\n\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform mat4 viewMatrix;\",\n\"uniform mat3 normalMatrix;\",\n\"uniform vec3 directionalLightColor[ 1 ];\",\n\"uniform vec3 directionalLightDirection[ 1 ];\",\n\n\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\n\"attribute vec3 color;\",\n\n\"varying vec3 vColor;\",\n\"varying vec3 vLightFront;\",\n\n\"void main() {\",\n\n\"    vColor = color;\",\n\n\"    vec3 objectNormal = normal;\",\n\"    vec3 transformedNormal = normalMatrix * objectNormal;\",\n\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\n\"    vLightFront = vec3( 0.0 );\",\n\n\"    transformedNormal = normalize( transformedNormal );\",\n\n\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\n\"    vec3 dirVector = normalize( lDirection.xyz );\",\n\"    float dotProduct = dot( transformedNormal, dirVector );\",\n\"    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\n\n\"    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\",\n\n\"    gl_Position = projectionMatrix * mvPosition;\",\n\"}\"\n\n].join(\"\\n\"),\n\n        uniforms : {\n            opacity: { type: 'f', value: 1.0 },\n            fogColor: { type: 'c', value: new $3Dmol.Color(1.0, 1.0, 1.0) },\n            fogNear: { type: 'f', value: 1.0 },\n            fogFar: { type: 'f', value: 2000},\n            directionalLightColor: { type: 'fv', value: [] },\n            directionalLightDirection: { type: 'fv', value: [] }\n        }\n\n    },\n\n\n    'instanced' : {\n        fragmentShader : [\n\n\"uniform mat4 viewMatrix;\",\n\"uniform float opacity;\",\n\n\"uniform vec3 fogColor;\",\n\"uniform float fogNear;\",\n\"uniform float fogFar;\",\n\n\"varying vec3 vLightFront;\",\n\"varying vec3 vColor;\",\n\n\"void main() {\",\n\n\"    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\n\n\"    #ifndef WIREFRAME\",\n\"    gl_FragColor.xyz *= vLightFront;\",\n\"    #endif\",\n\n\"    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\",\n\"    float depth = gl_FragCoord.z / gl_FragCoord.w;\",\n\n\"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\n\n\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\n\n\"}\"\n\n\n].join(\"\\n\"),\n\n       vertexShader : [\n\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform mat4 viewMatrix;\",\n\"uniform mat3 normalMatrix;\",\n\"uniform vec3 directionalLightColor[ 1 ];\",\n\"uniform vec3 directionalLightDirection[ 1 ];\",\n\n\"attribute vec3 offset;\",\n\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\n\"attribute vec3 color;\",\n\"attribute float radius;\",\n\n\"varying vec3 vColor;\",\n\"varying vec3 vLightFront;\",\n\n\"void main() {\",\n\n\"    vColor = color;\",\n\n\"    vec3 objectNormal = normal;\",\n\"    vec3 transformedNormal = normalMatrix * objectNormal;\",\n\"    vec4 mvPosition = modelViewMatrix * vec4( position * radius + offset, 1.0 );\",\n\n\"    vLightFront = vec3( 0.0 );\",\n\n\"    transformedNormal = normalize( transformedNormal );\",\n\n\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\n\"    vec3 dirVector = normalize( lDirection.xyz );\",\n\"    float dotProduct = dot( transformedNormal, dirVector );\",\n\"    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\n\n\"    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\",\n\n\"    gl_Position = projectionMatrix * mvPosition;\",\n\"}\"\n\n].join(\"\\n\"),\n\n        uniforms : {\n            opacity: { type: 'f', value: 1.0 },\n            fogColor: { type: 'c', value: new $3Dmol.Color(1.0, 1.0, 1.0) },\n            fogNear: { type: 'f', value: 1.0 },\n            fogFar: { type: 'f', value: 2000},\n            directionalLightColor: { type: 'fv', value: [] },\n            directionalLightDirection: { type: 'fv', value: [] }\n        }\n\n    },\n\n//for outline\n     'outline' : {\n        fragmentShader : [\n\n\"uniform float opacity;\",\n\"uniform vec3 outlineColor;\",\n\"uniform vec3 fogColor;\",\n\"uniform float fogNear;\",\n\"uniform float fogFar;\",\n\n\"void main() {\",\n\n\"    gl_FragColor = vec4( outlineColor, 1 );\",\n\"}\"\n\n\n].join(\"\\n\"),\n\n       vertexShader : [\n\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform float outlineWidth;\",\n\"uniform float outlinePushback;\",\n\n\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\n\"attribute vec3 color;\",\n\n\"void main() {\",\n\n\"    vec4 norm = modelViewMatrix*vec4(normalize(normal),0.0);\",\n\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\"    mvPosition.xy += norm.xy*outlineWidth;\",\n\"    gl_Position = projectionMatrix * mvPosition;\",\n\"    mvPosition.z -= outlinePushback;\", //go backwards in model space\n\"    vec4 pushpos = projectionMatrix*mvPosition;\", //project to get z in projection space, I'm probably missing some simple math to do the same thing..\n\"    gl_Position.z = gl_Position.w*pushpos.z/pushpos.w;\",\n\"}\"\n\n].join(\"\\n\"),\n\n        uniforms : {\n            opacity: { type: 'f', value: 1.0 },\n            outlineColor: { type: 'c', value: new $3Dmol.Color(0.0, 0.0, 0.0) },\n            fogColor: { type: 'c', value: new $3Dmol.Color(1.0, 1.0, 1.0) },\n            fogNear: { type: 'f', value: 1.0 },\n            fogFar: { type: 'f', value: 2000},\n            outlineWidth: { type: 'f', value: 0.1 },\n            outlinePushback: { type: 'f', value: 1.0 },\n        }\n\n    },\n//for outlining sphere imposter\n    'sphereimposteroutline' : {\n       fragmentShader : [\n\n\"uniform float opacity;\",\n\"uniform vec3 outlineColor;\",\n\"uniform vec3 fogColor;\",\n\"uniform float fogNear;\",\n\"uniform float fogFar;\",\n\"uniform mat4 projectionMatrix;\",\n\"varying vec2 mapping;\",\n\"varying float rval;\",\n\"varying vec3 center;\",\n\n\"uniform float outlinePushback;\",\n\n\n\"void main() {\",\n\"    float lensqr = dot(mapping,mapping);\",\n\"    float rsqr = rval*rval;\",\n\"    if(lensqr > rsqr)\",\n\"       discard;\",\n\"    float z = sqrt(rsqr-lensqr);\",\n\"    vec3 cameraPos = center+ vec3(mapping.x,mapping.y,z-outlinePushback);\",\n\"    vec4 clipPos = projectionMatrix * vec4(cameraPos, 1.0);\",\n\"    float ndcDepth = clipPos.z / clipPos.w;\",\n\"    gl_FragDepthEXT = ((gl_DepthRange.diff * ndcDepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\",\n\"    gl_FragColor = vec4(outlineColor, 1 );\",\n\"}\"\n\n\n].join(\"\\n\"),\n\n      vertexShader : [\n\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform float outlineWidth;\",\n\"uniform float outlinePushback;\",\n\n\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\n\"attribute vec3 color;\",\n\n\"varying vec2 mapping;\",\n\"varying float rval;\",\n\"varying vec3 center;\",\n\n\"void main() {\",\n\n\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\"    center = mvPosition.xyz;\",\n\"    vec4 projPosition = projectionMatrix * mvPosition;\",\n\"    vec2 norm = normal.xy + vec2(sign(normal.x)*outlineWidth,sign(normal.y)*outlineWidth);\",\n\"    vec4 adjust = projectionMatrix* vec4(norm,normal.z,0.0); adjust.z = 0.0; adjust.w = 0.0;\",\n\"    mapping = norm.xy;\",\n\"    rval = abs(norm.x);\",\n\"    gl_Position = projPosition+adjust;\",\n\"}\"\n\n].join(\"\\n\"),\n\n       uniforms : {\n           opacity: { type: 'f', value: 1.0 },\n           outlineColor: { type: 'c', value: new $3Dmol.Color(0.0, 0.0, 0.0) },\n           fogColor: { type: 'c', value: new $3Dmol.Color(1.0, 1.0, 1.0) },\n           fogNear: { type: 'f', value: 1.0 },\n           fogFar: { type: 'f', value: 2000},\n           outlineWidth: { type: 'f', value: 0.1 },\n           outlinePushback: { type: 'f', value: 1.0 },\n       }\n\n   },\n   //stick imposters\n   'stickimposter' : {\n      fragmentShader : [$3Dmol.ShaderUtils.stickimposterFragmentShader,\n    \"    float dotProduct = dot( norm, vLight );\",\n    \"    vec3 light = vec3( max( dotProduct, 0.0 ) );\",\n    \"    gl_FragColor = vec4(light*color, opacity*opacity );\",\n    \"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\n    \"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\n    \"}\"].join(\"\\n\"),\n      vertexShader : [\n\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform mat4 viewMatrix;\",\n\"uniform mat3 normalMatrix;\",\n\"uniform vec3 directionalLightColor[ 1 ];\",\n\"uniform vec3 directionalLightDirection[ 1 ];\",\n\n\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\n\"attribute vec3 color;\",\n\"attribute float radius;\",\n\n\"varying vec3 vColor;\",\n\"varying vec3 vLight;\",\n\"varying vec3 cposition;\",\n\"varying vec3 p1;\",\n\"varying vec3 p2;\",\n\"varying float r;\",\n\n\"void main() {\",\n\n\"    vColor = color; vColor.z = abs(vColor.z);\", //z indicates which vertex and so would vary\n\"    r = abs(radius);\",\n\"    vec4 to = modelViewMatrix*vec4(normal, 1.0);\", //normal is other point of cylinder\n\"    vec4 pt = modelViewMatrix*vec4(position, 1.0);\",\n\"    vec4 mvPosition = pt;\",\n\"    p1 = pt.xyz; p2 = to.xyz;\",\n\"    vec3 norm = to.xyz-pt.xyz;\",\"\" +\n\"    float mult = 1.1;\", //slop to account for perspective of sphere\n\"    if(length(p1) > length(p2)) {\", //billboard at level of closest point\n\"       mvPosition = to;\",\n\"    }\",\n\"    vec3 n = normalize(mvPosition.xyz);\",\n//intersect with the plane defined by the camera looking at the billboard point\n\"    if(color.z >= 0.0) {\", //p1\n\"       vec3 pnorm = normalize(p1);\",\n\"       float t = dot(mvPosition.xyz-p1,n)/dot(pnorm,n);\",\n\"       mvPosition.xyz = p1+t*pnorm;\",\n\"    } else {\",\n\"       vec3 pnorm = normalize(p2);\",\n\"       float t = dot(mvPosition.xyz-p2,n)/dot(pnorm,n);\",\n\"       mvPosition.xyz = p2+t*pnorm;\",\n\"       mult *= -1.0;\",\n\"    }\",\n\"    vec3 cr = normalize(cross(mvPosition.xyz,norm))*radius;\",\n\"    vec3 doublecr = normalize(cross(mvPosition.xyz,cr))*radius;\",\n\"    mvPosition.xy +=  mult*(cr + doublecr).xy;\",\n\"    cposition = mvPosition.xyz;\",\n\"    gl_Position = projectionMatrix * mvPosition;\",\n\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\n\"    vLight = normalize( lDirection.xyz )*directionalLightColor[0];\", //not really sure this is right, but color is always white so..\n\"}\"\n\n].join(\"\\n\"),\n\n       uniforms : {\n           opacity: { type: 'f', value: 1.0 },\n           fogColor: { type: 'c', value: new $3Dmol.Color(1.0, 1.0, 1.0) },\n           fogNear: { type: 'f', value: 1.0 },\n           fogFar: { type: 'f', value: 2000},\n           directionalLightColor: { type: 'fv', value: [] },\n           directionalLightDirection: { type: 'fv', value: [] }\n       }\n\n   },\n   //stick imposter outlines\n   'stickimposteroutline' : {\n      fragmentShader : $3Dmol.ShaderUtils.stickimposterFragmentShader + 'gl_FragColor = vec4(color,1.0);}',\n      vertexShader : [\n\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform mat4 viewMatrix;\",\n\"uniform mat3 normalMatrix;\",\n\"uniform vec3 directionalLightColor[ 1 ];\",\n\"uniform vec3 directionalLightDirection[ 1 ];\",\n\"uniform vec3 outlineColor;\",\n\"uniform float outlineWidth;\",\n\"uniform float outlinePushback;\",\n\n\n\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\n\"attribute vec3 color;\",\n\"attribute float radius;\",\n\n\"varying vec3 vColor;\",\n\"varying vec3 vLight;\",\n\"varying vec3 cposition;\",\n\"varying vec3 p1;\",\n\"varying vec3 p2;\",\n\"varying float r;\",\n\n\"void main() {\",\n\n\"    vColor = outlineColor;\",\n\"    float rad = radius+sign(radius)*outlineWidth;\",\n\"    r = abs(rad);\",\n\"    vec4 to = modelViewMatrix*vec4(normal, 1.0);\", //normal is other point of cylinder\n\"    vec4 pt = modelViewMatrix*vec4(position, 1.0);\",\n//pushback\n\"    to.xyz += normalize(to.xyz)*outlinePushback;\",\n\"    pt.xyz += normalize(pt.xyz)*outlinePushback;\",\n\n\"    vec4 mvPosition = pt;\",\n\"    p1 = pt.xyz; p2 = to.xyz;\",\n\"    vec3 norm = to.xyz-pt.xyz;\",\"\" +\n\"    float mult = 1.1;\", //slop to account for perspective of sphere\n\"    if(length(p1) > length(p2)) {\", //billboard at level of closest point\n\"       mvPosition = to;\",\n\"    }\",\n\"    vec3 n = normalize(mvPosition.xyz);\",\n//intersect with the plane defined by the camera looking at the billboard point\n\"    if(color.z >= 0.0) {\", //p1\n\"       vec3 pnorm = normalize(p1);\",\n\"       float t = dot(mvPosition.xyz-p1,n)/dot(pnorm,n);\",\n\"       mvPosition.xyz = p1+t*pnorm;\",\n\"    } else {\",\n\"       vec3 pnorm = normalize(p2);\",\n\"       float t = dot(mvPosition.xyz-p2,n)/dot(pnorm,n);\",\n\"       mvPosition.xyz = p2+t*pnorm;\",\n\"       mult *= -1.0;\",\n\"    }\",\n\"    vec3 cr = normalize(cross(mvPosition.xyz,norm))*rad;\",\n\"    vec3 doublecr = normalize(cross(mvPosition.xyz,cr))*rad;\",\n\"    mvPosition.xy +=  mult*(cr + doublecr).xy;\",\n\"    cposition = mvPosition.xyz;\",\n\"    gl_Position = projectionMatrix * mvPosition;\",\n\"    vLight = vec3(1.0,1.0,1.0);\",\n\"}\"\n\n].join(\"\\n\"),\n\n       uniforms : {\n           opacity: { type: 'f', value: 1.0 },\n           fogColor: { type: 'c', value: new $3Dmol.Color(1.0, 1.0, 1.0) },\n           fogNear: { type: 'f', value: 1.0 },\n           fogFar: { type: 'f', value: 2000},\n           outlineColor: { type: 'c', value: new $3Dmol.Color(0.0, 0.0, 0.0) },\n           outlineWidth: { type: 'f', value: 0.1 },\n           outlinePushback: { type: 'f', value: 1.0 },\n       }\n\n   },\n    //for double sided lighting\n    'lambertdouble' : {\n        fragmentShader : [\n\n\"uniform mat4 viewMatrix;\",\n\"uniform float opacity;\",\n\n\"uniform vec3 fogColor;\",\n\"uniform float fogNear;\",\n\"uniform float fogFar;\",\n\n\"varying vec3 vLightFront;\",\n\"varying vec3 vLightBack;\",\n\n\"varying vec3 vColor;\",\n\n\"void main() {\",\n\n\"    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\n\n\"    #ifndef WIREFRAME\",\n\"    if ( gl_FrontFacing )\",\n\"       gl_FragColor.xyz *= vLightFront;\",\n\"    else\",\n\"       gl_FragColor.xyz *= vLightBack;\",\n\"    #endif\",\n\n\"    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\",\n\"    float depth = gl_FragCoord.z / gl_FragCoord.w;\",\n\n\"    float fogFactor = smoothstep( fogNear, fogFar, depth );\",\n\n\"    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\n\n\"}\"\n\n\n].join(\"\\n\"),\n\n       vertexShader : [\n\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform mat4 viewMatrix;\",\n\"uniform mat3 normalMatrix;\",\n\"uniform vec3 directionalLightColor[ 1 ];\",\n\"uniform vec3 directionalLightDirection[ 1 ];\",\n\n\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\n\"attribute vec3 color;\",\n\n\"varying vec3 vColor;\",\n\"varying vec3 vLightFront;\",\n\"varying vec3 vLightBack;\",\n\n\"void main() {\",\n\n\"    vColor = color;\",\n\n\"    vec3 objectNormal = normal;\",\n\"    vec3 transformedNormal = normalMatrix * objectNormal;\",\n\"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\n\"    vLightFront = vec3( 0.0 );\",\n\"    vLightBack = vec3( 0.0 );\",\n\n\"    transformedNormal = normalize( transformedNormal );\",\n\n\"    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\",\n\"    vec3 dirVector = normalize( lDirection.xyz );\",\n\"    float dotProduct = dot( transformedNormal, dirVector );\",\n\"    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\n\"    vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\n\n\"    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\",\n\"    vLightBack += directionalLightColor[ 0 ] * directionalLightWeightingBack;\",\n\n\"    gl_Position = projectionMatrix * mvPosition;\",\n\"}\"\n\n].join(\"\\n\"),\n\n        uniforms : {\n            opacity: { type: 'f', value: 1.0 },\n            fogColor: { type: 'c', value: new $3Dmol.Color(1.0, 1.0, 1.0) },\n            fogNear: { type: 'f', value: 1.0 },\n            fogFar: { type: 'f', value: 2000},\n            directionalLightColor: { type: 'fv', value: [] },\n            directionalLightDirection: { type: 'fv', value: [] }\n        }\n\n    },\n\n\n    'sprite': {\n\n        fragmentShader: [\n\n\"uniform vec3 color;\",\n\"uniform sampler2D map;\",\n\"uniform float opacity;\",\n\n\"uniform int fogType;\",\n\"uniform vec3 fogColor;\",\n\"uniform float fogDensity;\",\n\"uniform float fogNear;\",\n\"uniform float fogFar;\",\n\"uniform float alphaTest;\",\n\n\"varying vec2 vUV;\",\n\n\"void main() {\",\n\n\"    vec4 texture = texture2D(map, vUV);\",\n\n\"    if (texture.a < alphaTest) discard;\",\n\n\"    gl_FragColor = vec4(color * texture.xyz, texture.a * opacity);\",\n\n\"    if (fogType > 0) {\",\n\n\"        float depth = gl_FragCoord.z / gl_FragCoord.w;\",\n\"        float fogFactor = 0.0;\",\n\n\"        if (fogType == 1) {\",\n\"            fogFactor = smoothstep(fogNear, fogFar, depth);\",\n\"        }\",\n\n\"        else {\",\n\"            const float LOG2 = 1.442695;\",\n\"            float fogFactor = exp2(- fogDensity * fogDensity * depth * depth * LOG2);\",\n\"            fogFactor = 1.0 - clamp(fogFactor, 0.0, 1.0);\",\n\"        }\",\n\n\"        gl_FragColor = mix(gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor);\",\n\n\"    }\",\n\"}\"\n\n].join(\"\\n\"),\n\n        vertexShader: [\n\n\"uniform int useScreenCoordinates;\",\n\"uniform vec3 screenPosition;\",\n\"uniform mat4 modelViewMatrix;\",\n\"uniform mat4 projectionMatrix;\",\n\"uniform float rotation;\",\n\"uniform vec2 scale;\",\n\"uniform vec2 alignment;\",\n\"uniform vec2 uvOffset;\",\n\"uniform vec2 uvScale;\",\n\n\"attribute vec2 position;\",\n\"attribute vec2 uv;\",\n\n\"varying vec2 vUV;\",\n\n\"void main() {\",\n\n\"    vUV = uvOffset + uv * uvScale;\",\n\n\"    vec2 alignedPosition = position + alignment;\",\n\n\"    vec2 rotatedPosition;\",\n\"    rotatedPosition.x = ( cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y ) * scale.x;\",\n\"    rotatedPosition.y = ( sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y ) * scale.y;\",\n\n\"    vec4 finalPosition;\",\n\n\"    if(useScreenCoordinates != 0) {\",\n\"        finalPosition = vec4(screenPosition.xy + rotatedPosition, screenPosition.z, 1.0);\",\n\"    }\",\n\n\"    else {\",\n\"        finalPosition = projectionMatrix * modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0); finalPosition /= finalPosition.w;\",\n\"        finalPosition.xy += rotatedPosition; \",\n\"    }\",\n\n\"    gl_Position = finalPosition;\",\n\n\"}\"\n\n].join(\"\\n\"),\n\n        uniforms : {\n\n        }\n\n    }\n\n};\n/*  ProteinSurface.js by biochem_fan\n\nPorted and modified for Javascript based on EDTSurf,\n  whose license is as follows.\n\nPermission to use, copy, modify, and distribute this program for any\npurpose, with or without fee, is hereby granted, provided that this\ncopyright notice and the reference information appear in all copies or\nsubstantial portions of the Software. It is provided \"as is\" without\nexpress or implied warranty.\n\nReference:\nhttp://zhanglab.ccmb.med.umich.edu/EDTSurf/\nD. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular Surfaces\nby Euclidean Distance Transform. PLoS ONE 4(12): e8140.\n\n=======\n\nTODO: Improved performance on Firefox\n      Reduce memory consumption\n      Refactor!\n */\n\n\n// dkoes\n// Surface calculations.  This must be safe to use within a web worker.\nif (typeof console === 'undefined') {\n    // this should only be true inside of a webworker\n    console = {\n        log : function() {\n        }\n    };\n}\n\n$3Dmol.ProteinSurface = function() {\n\n    // constants for vpbits bitmasks\n    /** @const */\n    var INOUT = 1;\n    /** @const */\n    var ISDONE = 2;\n    /** @const */\n    var ISBOUND = 4;\n\n    var ptranx = 0, ptrany = 0, ptranz = 0;\n    var probeRadius = 1.4;\n    var defaultScaleFactor = 2;\n    var scaleFactor = defaultScaleFactor; // 2 is .5A grid; if this is made user configurable,\n                            // also have to adjust offset used to find non-shown\n                            // atoms\n    var pHeight = 0, pWidth = 0, pLength = 0;\n    var cutRadius = 0;\n    var vpBits = null; // uint8 array of bitmasks\n    var vpDistance = null; // floatarray of _squared_ distances\n    var vpAtomID = null; // intarray\n    var vertnumber = 0, facenumber = 0;\n    var pminx = 0, pminy = 0, pminz = 0, pmaxx = 0, pmaxy = 0, pmaxz = 0;\n\n    var vdwRadii = {\n            \"H\" : 1.2,\n            \"Li\" : 1.82,\n            \"Na\" : 2.27,\n            \"K\" : 2.75,\n            \"C\" : 1.7,\n            \"N\" : 1.55,\n            \"O\" : 1.52,\n            \"F\" : 1.47,\n            \"P\" : 1.80,\n            \"S\" : 1.80,\n            \"CL\" : 1.75,\n            \"BR\" : 1.85,\n            \"SE\" : 1.90,\n            \"ZN\" : 1.39,\n            \"CU\" : 1.4,\n            \"NI\" : 1.63,\n            \"X\" : 2\n        };\n\n    /** @param {AtomSpec} atom */\n    var getVDWIndex = function(atom) {\n        if(!atom.elem || typeof(vdwRadii[atom.elem]) == \"undefined\") {\n            return \"X\";\n        }\n        return atom.elem;\n    };\n\n    var depty = {}, widxz = {};\n    var faces, verts;\n    var nb = [ new Int32Array([ 1, 0, 0 ]), new Int32Array([ -1, 0, 0 ]),\n               new Int32Array([ 0, 1, 0 ]), new Int32Array([ 0, -1, 0 ]),\n               new Int32Array([ 0, 0, 1 ]),\n               new Int32Array([ 0, 0, -1 ]),\n               new Int32Array([ 1, 1, 0 ]),\n               new Int32Array([ 1, -1, 0 ]),\n               new Int32Array([ -1, 1, 0 ]),\n               new Int32Array([ -1, -1, 0 ]),\n               new Int32Array([ 1, 0, 1 ]),\n               new Int32Array([ 1, 0, -1 ]),\n               new Int32Array([ -1, 0, 1 ]),\n               new Int32Array([ -1, 0, -1 ]),\n               new Int32Array([ 0, 1, 1 ]),\n               new Int32Array([ 0, 1, -1 ]),\n               new Int32Array([ 0, -1, 1 ]),\n               new Int32Array([ 0, -1, -1 ]),\n               new Int32Array([ 1, 1, 1 ]),\n               new Int32Array([ 1, 1, -1 ]),\n               new Int32Array([ 1, -1, 1 ]),\n               new Int32Array([ -1, 1, 1 ]),\n               new Int32Array([ 1, -1, -1 ]),\n               new Int32Array([ -1, -1, 1 ]),\n               new Int32Array([ -1, 1, -1 ]),\n               new Int32Array([ -1, -1, -1 ]) ];\n\n    var origextent;\n\n    var inOrigExtent = function(x, y, z) {\n        if (x < origextent[0][0] || x > origextent[1][0])\n            return false;\n        if (y < origextent[0][1] || y > origextent[1][1])\n            return false;\n        if (z < origextent[0][2] || z > origextent[1][2])\n            return false;\n        return true;\n    };\n\n    this.getFacesAndVertices = function(atomlist) {\n        var atomsToShow = {};\n        var i, il;\n        for (i = 0, il = atomlist.length; i < il; i++)\n            atomsToShow[atomlist[i]] = true;\n        var vertices = verts;\n        for (i = 0, il = vertices.length; i < il; i++) {\n            vertices[i].x = vertices[i].x / scaleFactor - ptranx;\n            vertices[i].y = vertices[i].y / scaleFactor - ptrany;\n            vertices[i].z = vertices[i].z / scaleFactor - ptranz;\n        }\n\n        var finalfaces = [];\n        for (i = 0, il = faces.length; i < il; i += 3) {\n            //var f = faces[i];\n            var fa = faces[i], fb = faces[i+1], fc = faces[i+2];\n            var a = vertices[fa]['atomid'], b = vertices[fb]['atomid'], c = vertices[fc]['atomid'];\n\n            // must be a unique face for each atom\n            var which = a;\n            if (b < which)\n                which = b;\n            if (c < which)\n                which = c;\n            if (!atomsToShow[which]) {\n                continue;\n            }\n            var av = vertices[faces[i]];\n            var bv = vertices[faces[i+1]];\n            var cv = vertices[faces[i+2]];\n\n            if (fa !== fb && fb !== fc && fa !== fc){\n                finalfaces.push(fa);\n                finalfaces.push(fb);\n                finalfaces.push(fc);\n            }\n\n        }\n\n        //try to help the garbage collector\n        vpBits = null; // uint8 array of bitmasks\n        vpDistance = null; // floatarray\n        vpAtomID = null; // intarray\n\n        return {\n            'vertices' : vertices,\n            'faces' : finalfaces\n        };\n    };\n\n\n    this.initparm = function(extent, btype, volume) {\n        if(volume > 1000000) //heuristical decrease resolution to avoid large memory consumption\n            scaleFactor = defaultScaleFactor/2;\n\n        var margin = (1 / scaleFactor) * 5.5; // need margin to avoid\n                                                // boundary/round off effects\n        origextent = extent;\n        pminx = extent[0][0]; pmaxx = extent[1][0];\n        pminy = extent[0][1]; pmaxy = extent[1][1];\n        pminz = extent[0][2]; pmaxz = extent[1][2];\n\n        if (!btype) {\n            pminx -= margin;\n            pminy -= margin;\n            pminz -= margin;\n            pmaxx += margin;\n            pmaxy += margin;\n            pmaxz += margin;\n        } else {\n            pminx -= probeRadius + margin;\n            pminy -= probeRadius + margin;\n            pminz -= probeRadius + margin;\n            pmaxx += probeRadius + margin;\n            pmaxy += probeRadius + margin;\n            pmaxz += probeRadius + margin;\n        }\n\n        pminx = Math.floor(pminx * scaleFactor) / scaleFactor;\n        pminy = Math.floor(pminy * scaleFactor) / scaleFactor;\n        pminz = Math.floor(pminz * scaleFactor) / scaleFactor;\n        pmaxx = Math.ceil(pmaxx * scaleFactor) / scaleFactor;\n        pmaxy = Math.ceil(pmaxy * scaleFactor) / scaleFactor;\n        pmaxz = Math.ceil(pmaxz * scaleFactor) / scaleFactor;\n\n        ptranx = -pminx;\n        ptrany = -pminy;\n        ptranz = -pminz;\n\n        pLength = Math.ceil(scaleFactor * (pmaxx - pminx)) + 1;\n        pWidth = Math.ceil(scaleFactor * (pmaxy - pminy)) + 1;\n        pHeight = Math.ceil(scaleFactor * (pmaxz - pminz)) + 1;\n\n        this.boundingatom(btype);\n        cutRadius = probeRadius * scaleFactor;\n\n        vpBits = new Uint8Array(pLength * pWidth * pHeight);\n        vpDistance = new Float64Array(pLength * pWidth * pHeight); // float 32\n        // doesn't\n        // play\n        // nicely\n        // with\n        // native\n        // floats\n        vpAtomID = new Int32Array(pLength * pWidth * pHeight);\n        //console.log(\"Box size: \", pLength, pWidth, pHeight, vpBits.length);\n    };\n\n    this.boundingatom = function(btype) {\n        var tradius = [];\n        var txz, tdept, sradius, idx;\n        flagradius = btype;\n\n        for ( var i in vdwRadii) {\n            if(!vdwRadii.hasOwnProperty(i))\n                continue;\n            var r = vdwRadii[i];\n            if (!btype)\n                tradius[i] = r * scaleFactor + 0.5;\n            else\n                tradius[i] = (r + probeRadius) * scaleFactor + 0.5;\n\n            sradius = tradius[i] * tradius[i];\n            widxz[i] = Math.floor(tradius[i]) + 1;\n            depty[i] = new Int32Array(widxz[i] * widxz[i]);\n            indx = 0;\n            for (j = 0; j < widxz[i]; j++) {\n                for (k = 0; k < widxz[i]; k++) {\n                    txz = j * j + k * k;\n                    if (txz > sradius)\n                        depty[i][indx] = -1; // outside\n                    else {\n                        tdept = Math.sqrt(sradius - txz);\n                        depty[i][indx] = Math.floor(tdept);\n                    }\n                    indx++;\n                }\n            }\n        }\n    };\n\n    this.fillvoxels = function(atoms, atomlist) { // (int seqinit,int\n        // seqterm,bool\n        // atomtype,atom*\n        // proseq,bool bcolor)\n        var i, il;\n        for (i = 0, il = vpBits.length; i < il; i++) {\n            vpBits[i] = 0;\n            vpDistance[i] = -1.0;\n            vpAtomID[i] = -1;\n        }\n\n        for (i in atomlist) {\n            var atom = atoms[atomlist[i]];\n            if (atom === undefined)\n                continue;\n            this.fillAtom(atom, atoms);\n        }\n\n        for (i = 0, il = vpBits.length; i < il; i++)\n            if (vpBits[i] & INOUT)\n                vpBits[i] |= ISDONE;\n\n    };\n\n\n    this.fillAtom = function(atom, atoms) {\n        var cx, cy, cz, ox, oy, oz, mi, mj, mk, i, j, k, si, sj, sk;\n        var ii, jj, kk, n;\n        cx = Math.floor(0.5 + scaleFactor * (atom.x + ptranx));\n        cy = Math.floor(0.5 + scaleFactor * (atom.y + ptrany));\n        cz = Math.floor(0.5 + scaleFactor * (atom.z + ptranz));\n\n        var at = getVDWIndex(atom);\n        var nind = 0;\n        var cnt = 0;\n        var pWH = pWidth*pHeight;\n\n        for (i = 0, n = widxz[at]; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                if (depty[at][nind] != -1) {\n                    for (ii = -1; ii < 2; ii++) {\n                        for (jj = -1; jj < 2; jj++) {\n                            for (kk = -1; kk < 2; kk++) {\n                                if (ii !== 0 && jj !== 0 && kk !== 0) {\n                                    mi = ii * i;\n                                    mk = kk * j;\n                                    for (k = 0; k <= depty[at][nind]; k++) {\n                                        mj = k * jj;\n                                        si = cx + mi;\n                                        sj = cy + mj;\n                                        sk = cz + mk;\n                                        if (si < 0 || sj < 0 ||\n                                                sk < 0 ||\n                                                si >= pLength ||\n                                                sj >= pWidth ||\n                                                sk >= pHeight)\n                                            continue;\n                                        var index = si * pWH + sj * pHeight + sk;\n\n                                        if (!(vpBits[index] & INOUT)) {\n                                            vpBits[index] |= INOUT;\n                                            vpAtomID[index] = atom.serial;\n                                        } else {\n                                            var atom2 = atoms[vpAtomID[index]];\n                                            if(atom2.serial != atom.serial) {\n                                                ox = cx + mi - Math.floor(0.5 + scaleFactor *\n                                                        (atom2.x + ptranx));\n                                                oy = cy + mj - Math.floor(0.5 + scaleFactor *\n                                                        (atom2.y + ptrany));\n                                                oz = cz + mk - Math.floor(0.5 + scaleFactor *\n                                                        (atom2.z + ptranz));\n                                                if (mi * mi + mj * mj + mk * mk < ox *\n                                                        ox + oy * oy + oz * oz)\n                                                    vpAtomID[index] = atom.serial;\n                                            }\n                                        }\n\n                                    }// k\n                                }// if\n                            }// kk\n                        }// jj\n                    }// ii\n                }// if\n                nind++;\n            }// j\n        }// i\n    };\n\n    this.fillvoxelswaals = function(atoms, atomlist) {\n        var i, il;\n        for (i = 0, il = vpBits.length; i < il; i++)\n            vpBits[i] &= ~ISDONE; // not isdone\n\n        for (i in atomlist) {\n            var atom = atoms[atomlist[i]];\n            if (atom === undefined)\n                continue;\n\n            this.fillAtomWaals(atom, atoms);\n        }\n    };\n\n    this.fillAtomWaals = function(atom, atoms) {\n        var cx, cy, cz, ox, oy, oz, nind = 0;\n        var mi, mj, mk, si, sj, sk, i, j, k, ii, jj, kk, n;\n        cx = Math.floor(0.5 + scaleFactor * (atom.x + ptranx));\n        cy = Math.floor(0.5 + scaleFactor * (atom.y + ptrany));\n        cz = Math.floor(0.5 + scaleFactor * (atom.z + ptranz));\n\n        var at = getVDWIndex(atom);\n        var pWH = pWidth*pHeight;\n        for (i = 0, n = widxz[at]; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                if (depty[at][nind] != -1) {\n                    for (ii = -1; ii < 2; ii++) {\n                        for (jj = -1; jj < 2; jj++) {\n                            for (kk = -1; kk < 2; kk++) {\n                                if (ii !== 0 && jj !== 0 && kk !== 0) {\n                                    mi = ii * i;\n                                    mk = kk * j;\n                                    for (k = 0; k <= depty[at][nind]; k++) {\n                                        mj = k * jj;\n                                        si = cx + mi;\n                                        sj = cy + mj;\n                                        sk = cz + mk;\n                                        if (si < 0 || sj < 0 ||\n                                                sk < 0 ||\n                                                si >= pLength ||\n                                                sj >= pWidth ||\n                                                sk >= pHeight)\n                                            continue;\n                                        var index = si * pWH + sj * pHeight + sk;\n                                        if (!(vpBits[index] & ISDONE)) {\n                                            vpBits[index] |= ISDONE;\n                                            vpAtomID[index] = atom.serial;\n                                        }  else {\n                                            var atom2 = atoms[vpAtomID[index]];\n                                            if(atom2.serial != atom.serial) {\n                                                ox = cx + mi - Math.floor(0.5 + scaleFactor *\n                                                        (atom2.x + ptranx));\n                                                oy = cy + mj - Math.floor(0.5 + scaleFactor *\n                                                        (atom2.y + ptrany));\n                                                oz = cz + mk - Math.floor(0.5 + scaleFactor *\n                                                        (atom2.z + ptranz));\n                                                if (mi * mi + mj * mj + mk * mk < ox *\n                                                        ox + oy * oy + oz * oz)\n                                                    vpAtomID[index] = atom.serial;\n                                            }\n                                        }\n                                    }// k\n                                }// if\n                            }// kk\n                        }// jj\n                    }// ii\n                }// if\n                nind++;\n            }// j\n        }// i\n    };\n\n    this.buildboundary = function() {\n        var pWH = pWidth*pHeight;\n        for (i = 0; i < pLength; i++) {\n            for (j = 0; j < pHeight; j++) {\n                for (k = 0; k < pWidth; k++) {\n                    var index = i * pWH + k * pHeight + j;\n                    if (vpBits[index] & INOUT) {\n                        var flagbound = false;\n                        var ii = 0;\n                        while (ii < 26) {\n                            var ti = i + nb[ii][0], tj = j + nb[ii][2], tk = k +\n                                    nb[ii][1];\n                            if (ti > -1 &&\n                                ti < pLength &&\n                                tk > -1 &&\n                                tk < pWidth &&\n                                tj > -1 &&\n                                tj < pHeight &&\n                                !(vpBits[ti * pWH + tk * pHeight + tj] & INOUT)) {\n                                vpBits[index] |= ISBOUND;\n                                break;\n                            } else\n                                ii++;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    // a little class for 3d array, should really generalize this and\n    // use throughout...\n    var PointGrid = function(length, width, height) {\n        // the standard says this is zero initialized\n        var data = new Int32Array(length * width * height * 3);\n\n        // set position x,y,z to pt, which has ix,iy,and iz\n        this.set = function(x, y, z, pt) {\n            var index = ((((x * width) + y) * height) + z) * 3;\n            data[index] = pt.ix;\n            data[index + 1] = pt.iy;\n            data[index + 2] = pt.iz;\n        };\n\n        // return point at x,y,z\n        this.get = function(x, y, z) {\n            var index = ((((x * width) + y) * height) + z) * 3;\n            return {\n                ix : data[index],\n                iy : data[index + 1],\n                iz : data[index + 2]\n            };\n        };\n    };\n\n    this.fastdistancemap = function() {\n        var eliminate = 0;\n        var certificate;\n        var i, j, k, n;\n\n        var boundPoint = new PointGrid(pLength, pWidth, pHeight);\n        var pWH = pWidth*pHeight;\n        var cutRSq = cutRadius*cutRadius;\n\n        var inarray = [];\n        var outarray = [];\n\n        var index;\n\n        for (i = 0; i < pLength; i++) {\n            for (j = 0; j < pWidth; j++) {\n                for (k = 0; k < pHeight; k++) {\n                    index = i * pWH + j * pHeight + k;\n                    vpBits[index] &= ~ISDONE; // isdone = false\n                    if (vpBits[index] & INOUT) {\n                        if (vpBits[index] & ISBOUND) {\n                            var triple = {\n                                ix : i,\n                                iy : j,\n                                iz : k\n                            };\n                            boundPoint.set(i, j, k, triple);\n                            inarray.push(triple);\n                            vpDistance[index] = 0;\n                            vpBits[index] |= ISDONE;\n                            vpBits[index] &= ~ISBOUND;\n                        }\n                    }\n                }\n            }\n        }\n\n        do {\n            outarray = this.fastoneshell(inarray, boundPoint);\n            inarray = [];\n            for (i = 0, n = outarray.length; i < n; i++) {\n                index = pWH * outarray[i].ix + pHeight *\n                    outarray[i].iy + outarray[i].iz;\n                vpBits[index] &= ~ISBOUND;\n                if (vpDistance[index] <= 1.0404 * cutRSq) {\n                    inarray.push({\n                        ix : outarray[i].ix,\n                        iy : outarray[i].iy,\n                        iz : outarray[i].iz\n                    });\n                }\n            }\n        } while (inarray.length !== 0);\n\n        inarray = [];\n        outarray = [];\n        boundPoint = null;\n\n        var cutsf = scaleFactor - 0.5;\n        if (cutsf < 0)\n            cutsf = 0;\n        var cutoff = cutRSq - 0.50 / (0.1 + cutsf);\n        for (i = 0; i < pLength; i++) {\n            for (j = 0; j < pWidth; j++) {\n                for (k = 0; k < pHeight; k++) {\n                    index = i * pWH + j * pHeight + k;\n                    vpBits[index] &= ~ISBOUND;\n                    // ses solid\n                    if (vpBits[index] & INOUT) {\n                        if (!(vpBits[index] & ISDONE) ||\n                                ((vpBits[index] & ISDONE) && vpDistance[index] >= cutoff)) {\n                            vpBits[index] |= ISBOUND;\n                        }\n                    }\n                }\n            }\n        }\n\n    };\n\n    this.fastoneshell = function(inarray, boundPoint) { // (int* innum,int\n        // *allocout,voxel2\n        // ***boundPoint, int*\n        // outnum, int *elimi)\n        var tx, ty, tz;\n        var dx, dy, dz;\n        var i, j, n;\n        var square;\n        var bp, index;\n        var outarray = [];\n        if (inarray.length === 0)\n            return outarray;\n\n        tnv = {\n            ix : -1,\n            iy : -1,\n            iz : -1\n        };\n        var pWH = pWidth*pHeight;\n        for ( i = 0, n = inarray.length; i < n; i++) {\n            tx = inarray[i].ix;\n            ty = inarray[i].iy;\n            tz = inarray[i].iz;\n            bp = boundPoint.get(tx, ty, tz);\n\n            for (j = 0; j < 6; j++) {\n                tnv.ix = tx + nb[j][0];\n                tnv.iy = ty + nb[j][1];\n                tnv.iz = tz + nb[j][2];\n\n                if (tnv.ix < pLength && tnv.ix > -1 && tnv.iy < pWidth &&\n                        tnv.iy > -1 && tnv.iz < pHeight && tnv.iz > -1) {\n                    index = tnv.ix * pWH + pHeight * tnv.iy + tnv.iz;\n\n                    if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\n\n                        boundPoint.set(tnv.ix, tnv.iy, tz + nb[j][2], bp);\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        vpDistance[index] = square;\n                        vpBits[index] |= ISDONE;\n                        vpBits[index] |= ISBOUND;\n\n                        outarray.push({\n                            ix : tnv.ix,\n                            iy : tnv.iy,\n                            iz : tnv.iz\n                        });\n                    } else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\n\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        if (square < vpDistance[index]) {\n                            boundPoint.set(tnv.ix, tnv.iy, tnv.iz, bp);\n\n                            vpDistance[index] = square;\n                            if (!(vpBits[index] & ISBOUND)) {\n                                vpBits[index] |= ISBOUND;\n                                outarray.push({\n                                    ix : tnv.ix,\n                                    iy : tnv.iy,\n                                    iz : tnv.iz\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // console.log(\"part1\", positout);\n\n        for (i = 0, n = inarray.length; i < n; i++) {\n            tx = inarray[i].ix;\n            ty = inarray[i].iy;\n            tz = inarray[i].iz;\n            bp = boundPoint.get(tx, ty, tz);\n\n            for (j = 6; j < 18; j++) {\n                tnv.ix = tx + nb[j][0];\n                tnv.iy = ty + nb[j][1];\n                tnv.iz = tz + nb[j][2];\n\n                if(tnv.ix < pLength && tnv.ix > -1 && tnv.iy < pWidth &&\n                        tnv.iy > -1 && tnv.iz < pHeight && tnv.iz > -1) {\n                    index = tnv.ix * pWH + pHeight * tnv.iy + tnv.iz;\n\n                    if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\n                        boundPoint.set(tnv.ix, tnv.iy, tz + nb[j][2], bp);\n\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        vpDistance[index] = square;\n                        vpBits[index] |= ISDONE;\n                        vpBits[index] |= ISBOUND;\n\n                        outarray.push({\n                            ix : tnv.ix,\n                            iy : tnv.iy,\n                            iz : tnv.iz\n                        });\n                    } else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        if (square < vpDistance[index]) {\n                            boundPoint.set(tnv.ix, tnv.iy, tnv.iz, bp);\n                            vpDistance[index] = square;\n                            if (!(vpBits[index] & ISBOUND)) {\n                                vpBits[index] |= ISBOUND;\n                                outarray.push({\n                                    ix : tnv.ix,\n                                    iy : tnv.iy,\n                                    iz : tnv.iz\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // console.log(\"part2\", positout);\n\n        for (i = 0, n = inarray.length; i < n; i++) {\n            tx = inarray[i].ix;\n            ty = inarray[i].iy;\n            tz = inarray[i].iz;\n            bp = boundPoint.get(tx, ty, tz);\n\n            for (j = 18; j < 26; j++) {\n                tnv.ix = tx + nb[j][0];\n                tnv.iy = ty + nb[j][1];\n                tnv.iz = tz + nb[j][2];\n\n                if (tnv.ix < pLength && tnv.ix > -1 && tnv.iy < pWidth &&\n                        tnv.iy > -1 && tnv.iz < pHeight && tnv.iz > -1) {\n                    index = tnv.ix * pWH + pHeight * tnv.iy + tnv.iz;\n\n                    if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\n                        boundPoint.set(tnv.ix, tnv.iy, tz + nb[j][2], bp);\n\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        vpDistance[index] = square;\n                        vpBits[index] |= ISDONE;\n                        vpBits[index] |= ISBOUND;\n\n                        outarray.push({\n                            ix : tnv.ix,\n                            iy : tnv.iy,\n                            iz : tnv.iz\n                        });\n                    } else if ((vpBits[index] & INOUT)  && (vpBits[index] & ISDONE)) {\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        if (square < vpDistance[index]) {\n                            boundPoint.set(tnv.ix, tnv.iy, tnv.iz, bp);\n\n                            vpDistance[index] = square;\n                            if (!(vpBits[index] & ISBOUND)) {\n                                vpBits[index] |= ISBOUND;\n                                outarray.push({\n                                    ix : tnv.ix,\n                                    iy : tnv.iy,\n                                    iz : tnv.iz\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // console.log(\"part3\", positout);\n        return outarray;\n    };\n\n    this.marchingcubeinit = function(stype) {\n        for ( var i = 0, lim = vpBits.length; i < lim; i++) {\n            if (stype == 1) {// vdw\n                vpBits[i] &= ~ISBOUND;\n            } else if (stype == 4) { // ses\n                vpBits[i] &= ~ISDONE;\n                if (vpBits[i] & ISBOUND)\n                    vpBits[i] |= ISDONE;\n                vpBits[i] &= ~ISBOUND;\n            } else if (stype == 2) {// after vdw\n                if ((vpBits[i] & ISBOUND) && (vpBits[i] & ISDONE))\n                    vpBits[i] &= ~ISBOUND;\n                else if ((vpBits[i] & ISBOUND) && !(vpBits[i] & ISDONE))\n                    vpBits[i] |= ISDONE;\n            } else if (stype == 3) { // sas\n                vpBits[i] &= ~ISBOUND;\n            }\n        }\n    };\n\n    // this code allows me to empirically prune the marching cubes code tables\n    // to more efficiently handle discrete data\n    var counter = function() {\n        var data = Array(256);\n        for ( var i = 0; i < 256; i++)\n            data[i] = [];\n\n        this.incrementUsed = function(i, j) {\n            if (typeof data[i][j] === 'undefined')\n                data[i][j] = {\n                    used : 0,\n                    unused : 0\n                };\n            data[i][j].used++;\n        };\n\n        this.incrementUnused = function(i, j) {\n            if (typeof data[i][j] === 'undefined')\n                data[i][j] = {\n                    used : 0,\n                    unused : 0\n                };\n            data[i][j].unused++;\n\n        };\n\n        var redoTable = function(triTable) {\n            var str = \"[\";\n            for ( var i = 0; i < triTable.length; i++) {\n                var code = 0;\n                var table = triTable[i];\n                for ( var j = 0; j < table.length; j++) {\n                    code |= (1 << (table[j]));\n                }\n                str += \"0x\" + code.toString(16) + \", \";\n            }\n            str += \"]\";\n            console.log(str);\n        };\n\n        this.print = function() {\n\n            var table = MarchingCube.triTable;\n            var str;\n            var newtable = [];\n            for ( var i = 0; i < table.length; i++) {\n                var newarr = [];\n                for ( var j = 0; j < table[i].length; j += 3) {\n                    var k = j / 3;\n                    if (typeof data[i][k] === 'undefined' || !data[i][k].unused) {\n                        newarr.push(table[i][j]);\n                        newarr.push(table[i][j + 1]);\n                        newarr.push(table[i][j + 2]);\n                    }\n                    if (typeof data[i][k] === 'undefined')\n                        console.log(\"undef \" + i + \",\" + k);\n                }\n                newtable.push(newarr);\n            }\n            console.log(JSON.stringify(newtable));\n            redoTable(newtable);\n        };\n    };\n\n    this.marchingcube = function(stype) {\n        this.marchingcubeinit(stype);\n        verts = []; faces = [];\n        $3Dmol.MarchingCube.march(vpBits, verts, faces, {\n            smooth : 1,\n            nX : pLength,\n            nY : pWidth,\n            nZ : pHeight\n        });\n\n        var pWH = pWidth*pHeight;\n        for (var i = 0, vlen = verts.length; i < vlen; i++) {\n            verts[i]['atomid'] = vpAtomID[verts[i].x * pWH + pHeight *\n                    verts[i].y + verts[i].z];\n        }\n\n        $3Dmol.MarchingCube.laplacianSmooth(1, verts, faces);\n\n    };\n\n\n};\n//auto-initialization\n//Create embedded viewer from HTML attributes if true\n\n$(document).ready(function() {\n\n    if ($(\".viewer_3Dmoljs\")[0] !== undefined)\n        $3Dmol.autoinit = true;\n\n    if ($3Dmol.autoinit) {\n        $3Dmol.viewers = {};\n        var nviewers = 0;\n        $(\".viewer_3Dmoljs\").each( function() {\n            var viewerdiv = $(this);\n            var datauri = null;\n            if(viewerdiv.css('position') == 'static') {\n                //slight hack - canvas needs this element to be positioned\n                viewerdiv.css('position','relative');\n            }\n\n            var callback = (typeof(window[viewerdiv.data(\"callback\")]) === 'function') ?\n                    window[viewerdiv.data(\"callback\")] : null;\n\n            var type = null;\n            if (viewerdiv.data(\"pdb\")) {\n                datauri = \"http://www.rcsb.org/pdb/files/\" + viewerdiv.data(\"pdb\") + \".pdb\";\n                type = \"pdb\";\n            } else if(viewerdiv.data(\"cid\")) {\n                //this doesn't actually work since pubchem does have CORS enabled\n                type = \"sdf\";\n                datauri = \"http://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/\" + viewerdiv.data(\"cid\") +\n                \"/SDF?record_type=3d\";\n            }\n            else if (viewerdiv.data(\"href\"))\n                datauri = viewerdiv.data(\"href\");\n\n            var bgcolor = $3Dmol.CC.color(viewerdiv.data(\"backgroundcolor\"));\n            var style = {line:{}};\n            if(viewerdiv.data(\"style\")) style = $3Dmol.specStringToObject(viewerdiv.data(\"style\"));\n            var select = {};\n            if(viewerdiv.data(\"select\")) select = $3Dmol.specStringToObject(viewerdiv.data(\"select\"));\n            var selectstylelist = [];\n            var surfaces = [];\n            var labels = [];\n            var d = viewerdiv.data();\n\n            //let users specify individual but matching select/style tags, eg.\n            //data-select1 data-style1\n            var stylere = /style(.+)/;\n            var surfre = /surface(.*)/;\n            var reslabre = /labelres(.*)/;\n            var keys = [];\n            for(var dataname in d) {\n                if(d.hasOwnProperty(dataname)) {\n                    keys.push(dataname);\n                }\n            }\n            keys.sort();\n            for(var i = 0; i < keys.length; i++) {\n                var dataname = keys[i];\n                var m = stylere.exec(dataname);\n                if(m) {\n                    var selname = \"select\"+m[1];\n                    var newsel = $3Dmol.specStringToObject(d[selname]);\n                    var styleobj = $3Dmol.specStringToObject(d[dataname]);\n                    selectstylelist.push([newsel,styleobj]);\n                }\n                m = surfre.exec(dataname);\n                if(m) {\n                    var selname = \"select\"+m[1];\n                    var newsel = $3Dmol.specStringToObject(d[selname]);\n                    var styleobj = $3Dmol.specStringToObject(d[dataname]);\n                    surfaces.push([newsel,styleobj]);\n                }\n                m = reslabre.exec(dataname);\n                if(m) {\n                    var selname = \"select\"+m[1];\n                    var newsel = $3Dmol.specStringToObject(d[selname]);\n                    var styleobj = $3Dmol.specStringToObject(d[dataname]);\n                    labels.push([newsel,styleobj]);\n                }\n            }\n\n            //apply all the selections/styles parsed out above to the passed viewer\n            var applyStyles = function(glviewer) {\n                glviewer.setStyle(select,style);\n                for(var i = 0; i < selectstylelist.length; i++) {\n                    var sel = selectstylelist[i][0] || {};\n                    var sty = selectstylelist[i][1] || {\"line\":{}}\n                    glviewer.setStyle(sel, sty);\n                }\n                for(var i = 0; i < surfaces.length; i++) {\n                    var sel = surfaces[i][0] || {};\n                    var sty = surfaces[i][1] || {}\n                    glviewer.addSurface($3Dmol.SurfaceType.VDW, sty, sel, sel);\n                }\n                for(var i = 0; i < labels.length; i++) {\n                    var sel = labels[i][0] || {};\n                    var sty = labels[i][1] || {}\n                    glviewer.addResLabels(sel, sty);\n                }\n\n                glviewer.zoomTo();\n                glviewer.render();\n            }\n\n\n            var glviewer = null;\n            try {\n                glviewer = $3Dmol.viewers[this.id || nviewers++] = $3Dmol.createViewer(viewerdiv, {defaultcolors: $3Dmol.rasmolElementColors});\n                glviewer.setBackgroundColor(bgcolor);\n            } catch ( error ) {\n                //for autoload, provide a useful error message\n                window.location = \"http://get.webgl.org\";\n            }\n\n            if (datauri) {\n\n                type = viewerdiv.data(\"type\") || viewerdiv.data(\"datatype\") || type;\n                if(!type) {\n                    type = datauri.substr(datauri.lastIndexOf('.')+1);\n                }\n\n                $.get(datauri, function(ret) {\n                    glviewer.addModel(ret, type);\n                    applyStyles(glviewer);\n                    if (callback)\n                        callback(glviewer);\n                }, 'text');\n            }\n\n            else {\n\n                if (viewerdiv.data(\"element\")) {\n                    var moldata = $(\"#\" + viewerdiv.data(\"element\")).val() || \"\";\n                    var type = viewerdiv.data(\"type\") || viewerdiv.data(\"datatype\");\n\n                    if (!type){\n\n                        console.log(\"Warning: No type specified for embedded viewer with moldata from \" + viewerdiv.data(\"element\") +\n                                    \"\\n assuming type 'pdb'\")\n\n                        type = 'pdb';\n                    }\n\n                    glviewer.addModel(moldata, type);\n                }\n\n                applyStyles(glviewer);\n                if (callback)\n                    callback(glviewer);\n            }\n\n        });\n    }\n});\n\n//this is only used for create the enum documentation in JSDoc\n(function() {\n/**\n * Color representation.\n * @typedef ColorSpec\n * @prop {string} 0xAF10AB - any hex number\n * @prop {string} white   - 0xFFFFFF\n * @prop {string} silver  - 0xC0C0C0\n * @prop {string} gray    - 0x808080\n * @prop {string} grey    - 0x808080\n * @prop {string} black   - 0x000000\n * @prop {string} red     - 0xFF0000\n * @prop {string} maroon  - 0x800000\n * @prop {string} yellow  - 0xFFFF00\n * @prop {string} orange  - 0xFF6600\n * @prop {string} olive   - 0x808000\n * @prop {string} lime    - 0x00FF00\n * @prop {string} green   - 0x008000\n * @prop {string} aqua    - 0x00FFFF\n * @prop {string} cyan    - 0x00FFFF\n * @prop {string} teal    - 0x008080\n * @prop {string} blue    - 0x0000FF\n * @prop {string} navy    - 0x000080\n * @prop {string} fuchsia - 0xFF00FF\n * @prop {string} magenta - 0xFF00FF\n * @prop {string} purple  - 0x800080\n */\n\n$3Dmol.elementColors.greenCarbon['C'] = 0x00ff00;\n\n\n$3Dmol.elementColors.cyanCarbon['C'] = 0x00ffff;\n\n\n$3Dmol.elementColors.magentaCarbon['C'] = 0xff00ff;\n\n\n$3Dmol.elementColors.yellowCarbon['C'] = 0xffff00;\n\n\n$3Dmol.elementColors.whiteCarbon['C'] = 0xffffff;\n\n\n$3Dmol.elementColors.orangeCarbon['C'] = 0xff6600;\n\n\n$3Dmol.elementColors.purpleCarbon['C'] = 0x800080;\n\n$3Dmol.elementColors.blueCarbon['C'] = 0x0000ff;\n\n /**\n * Color scheme representation.\n * @typedef ColorschemeSpec\n * @prop {string} greenCarbon   - 0x00FF00\n * @prop {string} cyanCarbon    - 0x00FFFF\n * @prop {string} magentaCarbon - 0xFF00FF\n * @prop {string} yellowCarbon  - 0xFFFF00\n * @prop {string} whiteCarbon   - 0xFFFFFF\n * @prop {string} orangeCarbon  - 0xFF6600\n * @prop {string} purpleCarbon  - 0x100080\n * @prop {string} blueCarbon    - 0x0000FF\n */\n\n});\n\n// in an attempt to reduce memory overhead, cache all $3Dmol.Colors\n// this makes things a little faster\n$3Dmol.CC = {\n    cache : {0:new $3Dmol.Color(0)},\n    color : function color_(hex) {\n        // Undefined values default to black\n        if(!hex)\n            return this.cache[0];\n        // cache hits\n        if(typeof(this.cache[hex]) !== \"undefined\") {\n            return this.cache[hex];\n        }\n        // arrays\n        else if(hex && hex.constructor === Array) {\n            // parse elements recursively\n            return hex.map(color_,this);\n        }\n        // numbers and hex strings\n        hex = this.getHex(hex);\n        if(typeof hex === 'number') {\n            var c = new $3Dmol.Color(hex);\n            this.cache[hex] = c;\n            return c;\n        } else {\n            // pass through $3Dmol.Color & other objects\n            return hex;\n        }\n    },\n\n    colorTab : {\n        'white' : 0xFFFFFF,\n        'silver' : 0xC0C0C0,\n        'gray' : 0x808080,\n        'grey' : 0x808080,\n        'black' : 0x000000,\n        'red' : 0xFF0000,\n        'maroon' : 0x800000,\n        'yellow' : 0xFFFF00,\n        'orange' : 0xFF6600,\n        'olive' : 0x808000,\n        'lime' : 0x00FF00,\n        'green' : 0x008000,\n        'aqua' : 0x00FFFF,\n        'cyan' : 0x00FFFF,\n        'teal' : 0x008080,\n        'blue' : 0x0000FF,\n        'navy' : 0x000080,\n        'fuchsia' : 0xFF00FF,\n        'magenta' : 0xFF00FF,\n        'purple' : 0x800080\n    },\n    getHex : function(hex) {\n        if (!isNaN(parseInt(hex)))\n            return parseInt(hex);\n\n        else if (typeof(hex) === 'string') {\n\n            return this.colorTab[hex.trim().toLowerCase()] || 0x000000;\n        }\n        return hex;\n    }\n\n};\n\n\n$3Dmol['CC'] = $3Dmol.CC;\n$3Dmol['CC']['color'] = $3Dmol.CC.color;\n\n\n\n/** Return proper color for atom given style\n * @param {AtomSpec} atom\n * @param {AtomStyle} style\n * @return {$3Dmol.Color}\n */\n$3Dmol.getColorFromStyle = function(atom, style) {\n    var color = atom.color;\n    if (typeof (style.color) != \"undefined\" && style.color != \"spectrum\")\n        color = style.color;\n    if(typeof(style.colorscheme) != \"undefined\") {\n        if(typeof($3Dmol.elementColors[style.colorscheme]) != \"undefined\") {\n            //name of builtin colorscheme\n            var scheme = $3Dmol.elementColors[style.colorscheme];\n            if(typeof(scheme[atom.elem]) != \"undefined\") {\n                color = scheme[atom.elem];\n            }\n        } else if(typeof(style.colorscheme[atom.elem]) != 'undefined') {\n            //actual color scheme provided\n            color = style.colorscheme[atom.elem];\n        } else if(typeof(style.colorscheme.prop) != 'undefined' &&\n                typeof(style.colorscheme.gradient) != 'undefined') {\n            //apply a property mapping\n            var prop = style.colorscheme.prop;\n            var scheme = style.colorscheme.gradient;\n            var range = scheme.range() || [-1,1]; //sensible default\n            var val = $3Dmol.getAtomProperty(atom, prop);\n            if(val != null) {\n                color = scheme.valueToHex(val, range);\n            }\n        } else if(typeof(style.colorscheme.prop) != 'undefined' &&\n                typeof(style.colorscheme.map) != 'undefined') {\n            //apply a discrete property mapping\n            var prop = style.colorscheme.prop;\n            var val = $3Dmol.getAtomProperty(atom, prop);\n            if( typeof style.colorscheme.map[val] != 'undefined' ) {\n                color = style.colorscheme.map[val];\n            }\n        }\n    }\n    else if(typeof(style.colorfunc) != \"undefined\") {\n      //this is a user provided function for turning an atom into a color\n      color = style.colorfunc(atom);\n    }\n\n    var C = $3Dmol.CC.color(color);\n    return C;\n};\n\n/** Preset secondary structure color scheme\n * @struct\n */\n$3Dmol.ssColors = $3Dmol.ssColors || {};\n//names are in helix-sheet-coil order\n$3Dmol.ssColors.pyMOL = {'h': 0xff0000, 's':  0xffff00, 'c': 0x00ff00};\n$3Dmol.ssColors.Jmol = {'h': 0xff0080, 's': 0xffc800, 'c': 0xffffff};\n\n/** Preset element coloring - from individual element colors to entire mappings (e.g. '$3Dmol.elementColors.Jmol' colors atoms with Jmol stylings)\n * @struct\n */\n$3Dmol.elementColors = $3Dmol.elementColors || {};\n\n$3Dmol.elementColors.defaultColor = 0xff1493;\n\n/** @property Jmol-like element colors*/\n$3Dmol.elementColors.Jmol = {\n        'H': 0xFFFFFF,\n        'He': 0xD9FFFF,\n        'HE': 0xD9FFFF,\n        'Li': 0xCC80FF,\n        'LI': 0xCC80FF,\n        'B': 0xFFB5B5,\n        'C': 0x909090,\n        'N': 0x3050F8,\n        'O': 0xFF0D0D,\n        'F': 0x90E050,\n        'Na': 0xAB5CF2,\n        'NA': 0xAB5CF2,\n        'Mg': 0x8AFF00,\n        'MG': 0x8AFF00,\n        'Al': 0xBFA6A6,\n        'AL': 0xBFA6A6,\n        'Si': 0xF0C8A0,\n        'SI': 0xF0C8A0,\n        'P': 0xFF8000,\n        'S': 0xFFFF30,\n        'Cl': 0x1FF01F,\n        'CL': 0x1FF01F,\n        'Ca': 0x3DFF00,\n        'CA': 0x3DFF00,\n        'Ti': 0xBFC2C7,\n        'TI': 0xBFC2C7,\n        'Cr': 0x8A99C7,\n        'CR': 0x8A99C7,\n        'Mn': 0x9C7AC7,\n        'MN': 0x9C7AC7,\n        'Fe': 0xE06633,\n        'FE': 0xE06633,\n        'Ni': 0x50D050,\n        'NI': 0x50D050,\n        'Cu': 0xC88033,\n        'CU': 0xC88033,\n        'Zn': 0x7D80B0,\n        'ZN': 0x7D80B0,\n        'Br': 0xA62929,\n        'BR': 0xA62929,\n        'Ag': 0xC0C0C0,\n        'AG': 0xC0C0C0,\n        'I': 0x940094,\n        'Ba': 0x00C900,\n        'BA': 0x00C900,\n        'Au': 0xFFD123,\n        'AU': 0xFFD123\n};\n\n/** @property rasmol-like element colors */\n$3Dmol.elementColors.rasmol = {\n        'H': 0xFFFFFF,\n        'He': 0xFFC0CB,\n        'HE': 0xFFC0CB,\n        'Li': 0xB22222,\n        'LI': 0xB22222,\n        'B': 0x00FF00,\n        'C': 0xC8C8C8,\n        'N': 0x8F8FFF,\n        'O': 0xF00000,\n        'F': 0xDAA520,\n        'Na': 0x0000FF,\n        'NA': 0x0000FF,\n        'Mg': 0x228B22,\n        'MG': 0x228B22,\n        'Al': 0x808090,\n        'AL': 0x808090,\n        'Si': 0xDAA520,\n        'SI': 0xDAA520,\n        'P': 0xFFA500,\n        'S': 0xFFC832,\n        'Cl': 0x00FF00,\n        'CL': 0x00FF00,\n        'Ca': 0x808090,\n        'CA': 0x808090,\n        'Ti': 0x808090,\n        'TI': 0x808090,\n        'Cr': 0x808090,\n        'CR': 0x808090,\n        'Mn': 0x808090,\n        'MN': 0x808090,\n        'Fe': 0xFFA500,\n        'FE': 0xFFA500,\n        'Ni': 0xA52A2A,\n        'NI': 0xA52A2A,\n        'Cu': 0xA52A2A,\n        'CU': 0xA52A2A,\n        'Zn': 0xA52A2A,\n        'ZN': 0xA52A2A,\n        'Br': 0xA52A2A,\n        'BR': 0xA52A2A,\n        'Ag': 0x808090,\n        'AG': 0x808090,\n        'I': 0xA020F0,\n        'Ba': 0xFFA500,\n        'BA': 0xFFA500,\n        'Au': 0xDAA520,\n        'AU': 0xDAA520\n};\n\n$3Dmol.elementColors.defaultColors = $3Dmol.elementColors.rasmol;\n\n$3Dmol.elementColors.greenCarbon = $.extend({},$3Dmol.elementColors.defaultColors);\n$3Dmol.elementColors.greenCarbon['C'] = 0x00ff00;\n\n$3Dmol.elementColors.cyanCarbon =  $.extend({},$3Dmol.elementColors.defaultColors);\n$3Dmol.elementColors.cyanCarbon['C'] = 0x00ffff;\n\n$3Dmol.elementColors.magentaCarbon =  $.extend({},$3Dmol.elementColors.defaultColors);\n$3Dmol.elementColors.magentaCarbon['C'] = 0xff00ff;\n\n$3Dmol.elementColors.yellowCarbon =  $.extend({},$3Dmol.elementColors.defaultColors);\n$3Dmol.elementColors.yellowCarbon['C'] = 0xffff00;\n\n$3Dmol.elementColors.whiteCarbon =  $.extend({},$3Dmol.elementColors.defaultColors);\n$3Dmol.elementColors.whiteCarbon['C'] = 0xffffff;\n\n$3Dmol.elementColors.orangeCarbon =  $.extend({},$3Dmol.elementColors.defaultColors);\n$3Dmol.elementColors.orangeCarbon['C'] = 0xff6600;\n\n$3Dmol.elementColors.purpleCarbon =  $.extend({},$3Dmol.elementColors.defaultColors);\n$3Dmol.elementColors.purpleCarbon['C'] = 0x800080;\n\n$3Dmol.elementColors.blueCarbon =  $.extend({},$3Dmol.elementColors.defaultColors);\n$3Dmol.elementColors.blueCarbon['C'] = 0x0000ff;\n//glcartoon.js\n//This contains all the routines for rendering a cartoon given a set\n//of atoms with assigned secondary structure\n\n//TODO: generate normals directly in drawStrip and drawThinStrip\n\nvar $3Dmol = $3Dmol || {};\n\n/**\n * @typedef CartoonStyleSpec\n * @prop {ColorSpec} color - strand color, may specify as 'spectrum'\n * @prop {string} style - style of cartoon rendering (trace, oval, rectangle\n *       (default), parabola, edged)\n * @prop {boolean} ribbon - whether to use constant strand width, disregarding\n *       secondary structure; use thickness to adjust radius\n * @prop {boolean} arrows - whether to add arrows showing beta-sheet\n *       directionality; does not apply to trace or ribbon\n * @prop {boolean} tubes - whether to display alpha helices as simple cylinders;\n *       does not apply to trace\n * @prop {number} thickness - cartoon strand thickness, default is 0.4\n * @prop {number} width - cartoon strand width, default is secondary\n *       structure-dependent; does not apply to trace or ribbon\n * @prop {number} opacity - set opacity from 0-1; transparency is set per-chain\n *       with a warning outputted in the event of ambiguity\n * @prop {} In nucleic acids, the base cylinders obtain their color from the\n *       atom to which the cylinder is drawn, which is 'N1' for purines (resn:\n *       'A', 'G', 'DA', 'DG') and 'N3' for pyrimidines (resn: 'C', 'U', 'DC',\n *       'DT'). The different nucleobases can therefore be distinguished as\n *       follows:\n * @example viewer.setStyle({resn:'DA', atom:'N1'}, {cartoon:{color:'red'}});\n *          viewer.setStyle({resn:'DG', atom:'N1'}, {cartoon:{color:'green'}});\n *          viewer.setStyle({resn:'DC', atom:'N3'}, {cartoon:{color:'blue'}});\n *          viewer.setStyle({resn:'DT', atom:'N3'}, {cartoon:{color:'yellow'}});\n */\n\n/**\n * @ignore\n * @param {$3Dmol.Object3D}\n *            group\n * @param {AtomSpec}\n *            atomlist\n * @param {$3Dmol.Gradient}\n *            gradientscheme\n */\n$3Dmol.drawCartoon = (function() {\n\n  var defaultNum = 5; // for cross-sectional shape\n  var defaultDiv = 5; // for length-wise splicing\n\n  var coilWidth = 0.5;\n  var helixSheetWidth = 1.3;\n  var nucleicAcidWidth = 0.8;\n  var arrowTipWidth = 0.1;\n  var defaultThickness = 0.4;\n\n  // helper functions\n\n  // Catmull-Rom subdivision\n  var subdivide = function(_points, DIV) { // points as Vector3\n    var ret = [];\n    var points = _points;\n    points = []; // Smoothing test\n    points.push(_points[0]);\n\n    var i, lim, size;\n    var p0, p1, p2, p3, v0, v1;\n\n    for (i = 1, lim = _points.length - 1; i < lim; i++) {\n      p1 = _points[i];\n      p2 = _points[i + 1];\n      if (p1.smoothen)\n        points.push(new $3Dmol.Vector3((p1.x + p2.x) / 2,\n            (p1.y + p2.y) / 2, (p1.z + p2.z) / 2));\n      else\n        points.push(p1);\n    }\n    points.push(_points[_points.length - 1]);\n\n    for (i = -1, size = points.length; i <= size - 3; i++) {\n      p0 = points[(i === -1) ? 0 : i];\n      p1 = points[i + 1];\n      p2 = points[i + 2];\n      p3 = points[(i === size - 3) ? size - 1 : i + 3];\n      v0 = new $3Dmol.Vector3().subVectors(p2, p0).multiplyScalar(0.5);\n      v1 = new $3Dmol.Vector3().subVectors(p3, p1).multiplyScalar(0.5);\n      if (p2.skip)\n        continue;\n\n      for (var j = 0; j < DIV; j++) {\n        var t = 1.0 / DIV * j;\n        var x = p1.x + t * v0.x + t * t\n            * (-3 * p1.x + 3 * p2.x - 2 * v0.x - v1.x) + t * t * t\n            * (2 * p1.x - 2 * p2.x + v0.x + v1.x);\n        var y = p1.y + t * v0.y + t * t\n            * (-3 * p1.y + 3 * p2.y - 2 * v0.y - v1.y) + t * t * t\n            * (2 * p1.y - 2 * p2.y + v0.y + v1.y);\n        var z = p1.z + t * v0.z + t * t\n            * (-3 * p1.z + 3 * p2.z - 2 * v0.z - v1.z) + t * t * t\n            * (2 * p1.z - 2 * p2.z + v0.z + v1.z);\n\n        var pt = new $3Dmol.Vector3(x, y, z);\n\n        var atomIndex = Math.floor((ret.length + 2) / DIV);\n\n        if (_points[atomIndex] !== undefined\n            && _points[atomIndex].atom !== undefined)\n          pt.atom = _points[atomIndex].atom;\n\n        ret.push(pt);\n      }\n    }\n    ret.push(points[points.length - 1]);\n    return ret;\n  };\n\n  var drawThinStrip = function(geo, p1, p2, colors, div, opacity) {\n\n    var offset, vertoffset;\n    var color, colori;\n\n    for (var i = 0, lim = p1.length; i < lim; i++) {\n\n      colori = Math.round(i * (colors.length - 1) / lim);\n      color = $3Dmol.CC.color(colors[colori]);\n\n      geoGroup = geo.updateGeoGroup(2);\n      var vertexArray = geoGroup.vertexArray;\n      var colorArray = geoGroup.colorArray;\n      var faceArray = geoGroup.faceArray;\n      offset = geoGroup.vertices;\n      vertoffset = offset * 3;\n\n      vertexArray[vertoffset] = p1[i].x;\n      vertexArray[vertoffset + 1] = p1[i].y;\n      vertexArray[vertoffset + 2] = p1[i].z;\n\n      vertexArray[vertoffset + 3] = p2[i].x;\n      vertexArray[vertoffset + 4] = p2[i].y;\n      vertexArray[vertoffset + 5] = p2[i].z;\n\n      for (var j = 0; j < 6; ++j) {\n        colorArray[vertoffset + 3 * j] = color.r;\n        colorArray[vertoffset + 1 + 3 * j] = color.g;\n        colorArray[vertoffset + 2 + 3 * j] = color.b;\n      }\n\n      if (i > 0) {\n        var faces = [ offset, offset + 1, offset - 1, offset - 2 ];\n        var faceoffset = geoGroup.faceidx;\n\n        faceArray[faceoffset] = faces[0];\n        faceArray[faceoffset + 1] = faces[1];\n        faceArray[faceoffset + 2] = faces[3];\n        faceArray[faceoffset + 3] = faces[1];\n        faceArray[faceoffset + 4] = faces[2];\n        faceArray[faceoffset + 5] = faces[3];\n\n        geoGroup.faceidx += 6;\n      }\n\n      geoGroup.vertices += 2;\n    }\n\n  };\n\n  var drawShapeStrip = function(geo, points, colors, div, thickness, opacity,\n      shape) {\n\n    // points is a 2D array, dimensionality given by [num = cross-sectional\n    // resolution][len = length of strip]\n    var i, j, num, len;\n    num = points.length;\n    if (num < 2 || points[0].length < 2)\n      return;\n\n    div = div || axisDIV;\n    for (i = 0; i < num; i++) { // spline to generate greater length-wise\n                  // resolution\n      points[i] = subdivide(points[i], div)\n    }\n    len = points[0].length;\n\n    if (!thickness) // if thickness is 0, we can use a smaller geometry than\n            // this function generates\n      return drawThinStrip(geo, points[0], points[num - 1], colors, div,\n          opacity);\n\n    var axis, cs_shape, cs_bottom, cs_top, last_cs_bottom, last_cs_top;\n\n    // cache the available cross-sectional shapes\n    var cs_ellipse = [], cs_rectangle = [], cs_parabola = [];\n    for (j = 0; j < num; j++) {\n      cs_ellipse.push(0.25 + 1.5\n          * Math.sqrt((num - 1) * j - Math.pow(j, 2)) / (num - 1));\n      cs_rectangle.push(0.5);\n      cs_parabola.push(2 * (Math.pow(j / num, 2) - j / num) + 0.6);\n    }\n\n    /*\n     * face_refs array is used to generate faces from vertexArray\n     * iteratively. As we move through each cross-sectional segment of\n     * points, we draw lateral faces backwards to the previous\n     * cross-sectional segment.\n     *\n     * To correctly identify the points needed to make each face we use this\n     * array as a lookup table for the relative indices of each needed point\n     * in the vertices array.\n     *\n     * 4 points are used to create 2 faces.\n     */\n\n    var face_refs = [];\n    for (j = 0; j < num * 2 - 1; j++) {\n      /*\n       * [curr vertex in curr cross-section, next vertex in curr\n       * cross-section, next vertex in prev cross-section, curr vertex in\n       * prev cross-section]\n       */\n      face_refs[j] = [ j, j + 1, j + 1 - 2 * num, j - 2 * num ];\n    }\n    // last face is different. easier to conceptualize this by drawing a\n    // diagram\n    face_refs[num * 2 - 1] = [ j, j + 1 - 2 * num, j + 1 - 4 * num,\n        j - 2 * num ];\n\n    var v_offset, va_offset, f_offset;\n    var currentAtom, lastAtom\n    var color, colori;\n    var geoGroup = geo.updateGeoGroup(2 * num * len); // ensure vertex\n                              // capacity\n\n    for (i = 0; i < len; i++) {\n\n      colori = Math.round(i * (colors.length - 1) / len);\n      color = $3Dmol.CC.color(colors[colori]);\n\n      last_cs_bottom = cs_bottom;\n      last_cs_top = cs_top;\n      cs_bottom = [];\n      cs_top = [];\n      axis = [];\n\n      if (points[0][i].atom !== undefined) // TODO better edge case\n                          // handling\n      {\n        currentAtom = points[0][i].atom;\n        if (shape === \"oval\")\n          cs_shape = cs_ellipse;\n        else if (shape === \"rectangle\")\n          cs_shape = cs_rectangle;\n        else if (shape === \"parabola\")\n          cs_shape = cs_parabola;\n      }\n      if (!cs_shape)\n        cs_shape = cs_rectangle;\n\n      // calculate thickness at each width point, from cross-sectional\n      // shape\n      var toNext, toSide;\n      for (j = 0; j < num; j++) {\n        if (i < len - 1)\n          toNext = points[j][i + 1].clone().sub(points[j][i]);\n        else\n          toNext = points[j][i - 1].clone().sub(points[j][i])\n              .negate();\n\n        if (j < num - 1)\n          toSide = points[j + 1][i].clone().sub(points[j][i]);\n        else\n          toSide = points[j - 1][i].clone().sub(points[j][i])\n              .negate();\n\n        axis[j] = toSide.cross(toNext).normalize().multiplyScalar(\n            thickness * cs_shape[j]);\n      }\n\n      // generate vertices by applying cross-sectional shape thickness to\n      // input points\n      for (j = 0; j < num; j++)\n        cs_bottom[j] = points[j][i].clone().add(\n            axis[j].clone().negate());\n      for (j = 0; j < num; j++)\n        cs_top[j] = points[j][i].clone().add(axis[j]);\n\n      /*\n       * Until this point the vertices have been dealt with as\n       * $3Dmol.Vector3() objects, but we need to serialize them into the\n       * geoGroup.vertexArray, where every three indices represents the\n       * next vertex. The colorArray is analogous.\n       *\n       * In the following for-loops, j iterates through VERTICES so we\n       * need to index them in vertexArray by 3*j + either 0, 1, or 2 for\n       * xyz or rgb component.\n       */\n\n      var vertexArray = geoGroup.vertexArray;\n      var colorArray = geoGroup.colorArray;\n      var faceArray = geoGroup.faceArray;\n      v_offset = geoGroup.vertices;\n      va_offset = v_offset * 3; // in case geoGroup already contains\n                    // vertices\n\n      // bottom edge of cross-section, vertices [0, num)\n      for (j = 0; j < num; j++) {\n        vertexArray[va_offset + 3 * j + 0] = cs_bottom[j].x;\n        vertexArray[va_offset + 3 * j + 1] = cs_bottom[j].y;\n        vertexArray[va_offset + 3 * j + 2] = cs_bottom[j].z;\n      }\n\n      // top edge of cross-section, vertices [num, 2*num)\n      // add these backwards, so that each cross-section's vertices are\n      // added sequentially to vertexArray\n      for (j = 0; j < num; j++) {\n        vertexArray[va_offset + 3 * j + 0 + 3 * num] = cs_top[num - 1\n            - j].x;\n        vertexArray[va_offset + 3 * j + 1 + 3 * num] = cs_top[num - 1\n            - j].y;\n        vertexArray[va_offset + 3 * j + 2 + 3 * num] = cs_top[num - 1\n            - j].z;\n      }\n\n      for (j = 0; j < 2 * num; ++j) {\n        colorArray[va_offset + 3 * j + 0] = color.r;\n        colorArray[va_offset + 3 * j + 1] = color.g;\n        colorArray[va_offset + 3 * j + 2] = color.b;\n      }\n\n      if (i > 0) {\n\n        for (j = 0; j < num * 2; j++) {\n\n          // get VERTEX indices of the 4 points of a rectangular face\n          // (as opposed to literal vertexArray indices)\n          var face = [ v_offset + face_refs[j][0],\n              v_offset + face_refs[j][1],\n              v_offset + face_refs[j][2],\n              v_offset + face_refs[j][3] ];\n\n          f_offset = geoGroup.faceidx;\n\n          // need 2 triangles to draw a face between 4 points\n          faceArray[f_offset] = face[0];\n          faceArray[f_offset + 1] = face[1];\n          faceArray[f_offset + 2] = face[3];\n\n          faceArray[f_offset + 3] = face[1];\n          faceArray[f_offset + 4] = face[2];\n          faceArray[f_offset + 5] = face[3];\n\n          geoGroup.faceidx += 6;\n\n          // TODO implement clickable the right way. midpoints of\n          // strand between consecutive atoms\n        }\n\n        if (currentAtom.clickable) {\n          var faces = [];\n\n          faces.push(new $3Dmol.Triangle(last_cs_bottom[0],\n              cs_bottom[0], cs_bottom[num - 1]));\n          faces.push(new $3Dmol.Triangle(last_cs_bottom[0],\n              cs_bottom[num - 1], last_cs_bottom[num - 1]));\n\n          faces.push(new $3Dmol.Triangle(last_cs_bottom[num - 1],\n              cs_bottom[num - 1], cs_top[num - 1]));\n          faces.push(new $3Dmol.Triangle(last_cs_bottom[num - 1],\n              cs_top[num - 1], last_cs_top[num - 1]));\n\n          faces.push(new $3Dmol.Triangle(cs_top[0], last_cs_top[0],\n              last_cs_top[num - 1]));\n          faces.push(new $3Dmol.Triangle(cs_top[num - 1], cs_top[0],\n              last_cs_top[num - 1]));\n\n          faces.push(new $3Dmol.Triangle(cs_bottom[0],\n              last_cs_bottom[0], last_cs_top[0]));\n          faces.push(new $3Dmol.Triangle(cs_top[0], cs_bottom[0],\n              last_cs_top[0]));\n\n          for (j in faces) {\n            currentAtom.intersectionShape.triangle.push(faces[j]);\n\n          }\n        }\n\n      }\n\n      geoGroup.vertices += 2 * num;\n      lastAtom = currentAtom;\n    }\n\n    // for terminal faces\n    var vertexArray = geoGroup.vertexArray;\n    var colorArray = geoGroup.colorArray;\n    var faceArray = geoGroup.faceArray;\n    v_offset = geoGroup.vertices;\n    va_offset = v_offset * 3;\n    f_offset = geoGroup.faceidx;\n\n    for (i = 0; i < num - 1; i++) // \"rear\" face\n    {\n      var face = [ i, i + 1, 2 * num - 2 - i, 2 * num - 1 - i ];\n\n      f_offset = geoGroup.faceidx;\n\n      faceArray[f_offset] = face[0];\n      faceArray[f_offset + 1] = face[1];\n      faceArray[f_offset + 2] = face[3];\n\n      faceArray[f_offset + 3] = face[1];\n      faceArray[f_offset + 4] = face[2];\n      faceArray[f_offset + 5] = face[3];\n\n      geoGroup.faceidx += 6;\n    }\n\n    for (i = 0; i < num - 1; i++) // \"front\" face\n    {\n      var face = [ v_offset - 1 - i, v_offset - 2 - i,\n          v_offset - 2 * num + i + 1, v_offset - 2 * num + i ];\n\n      f_offset = geoGroup.faceidx;\n\n      faceArray[f_offset] = face[0];\n      faceArray[f_offset + 1] = face[1];\n      faceArray[f_offset + 2] = face[3];\n\n      faceArray[f_offset + 3] = face[1];\n      faceArray[f_offset + 4] = face[2];\n      faceArray[f_offset + 5] = face[3];\n\n      geoGroup.faceidx += 6;\n    }\n\n  };\n\n  var drawPlainStrip = function(geo, points, colors, div, thickness, opacity) {\n    if ((points.length) < 2)\n      return;\n\n    var p1, p2;\n    p1 = points[0];\n    p2 = points[points.length - 1];\n\n    div = div || axisDIV;\n    p1 = subdivide(p1, div);\n    p2 = subdivide(p2, div);\n    if (!thickness)\n      return drawThinStrip(geo, p1, p2, colors, div, opacity);\n\n    // var vs = geo.vertices, fs = geo.faces;\n    var vs = [], fs = [];\n    var axis, p1v, p2v, a1v, a2v;\n\n    var faces = [ [ 0, 2, -6, -8 ], [ -4, -2, 6, 4 ], [ 7, -1, -5, 3 ],\n        [ -3, 5, 1, -7 ] ];\n\n    var offset, vertoffset, faceoffset;\n    var color, colori;\n    var currentAtom, lastAtom;\n    var i, lim, j;\n    var face1, face2, face3;\n    var geoGroup;\n\n    for (i = 0, lim = p1.length; i < lim; i++) {\n\n      colori = Math.round(i * (colors.length - 1) / lim);\n      color = $3Dmol.CC.color(colors[colori]);\n\n      vs.push(p1v = p1[i]); // 0\n      vs.push(p1v); // 1\n      vs.push(p2v = p2[i]); // 2\n      vs.push(p2v); // 3\n      if (i < lim - 1) {\n        var toNext = p1[i + 1].clone().sub(p1[i]);\n        var toSide = p2[i].clone().sub(p1[i]);\n        axis = toSide.cross(toNext).normalize().multiplyScalar(\n            thickness);\n      }\n      vs.push(a1v = p1[i].clone().add(axis)); // 4\n      vs.push(a1v); // 5\n      vs.push(a2v = p2[i].clone().add(axis)); // 6\n      vs.push(a2v); // 7\n\n      if (p1v.atom !== undefined)\n        currentAtom = p1v.atom;\n\n      geoGroup = geo.updateGeoGroup(8);\n      var vertexArray = geoGroup.vertexArray;\n      var colorArray = geoGroup.colorArray;\n      var faceArray = geoGroup.faceArray;\n      offset = geoGroup.vertices;\n      vertoffset = offset * 3;\n\n      vertexArray[vertoffset] = p1v.x;\n      vertexArray[vertoffset + 1] = p1v.y;\n      vertexArray[vertoffset + 2] = p1v.z;\n      vertexArray[vertoffset + 3] = p1v.x;\n      vertexArray[vertoffset + 4] = p1v.y;\n      vertexArray[vertoffset + 5] = p1v.z;\n      vertexArray[vertoffset + 6] = p2v.x;\n      vertexArray[vertoffset + 7] = p2v.y;\n      vertexArray[vertoffset + 8] = p2v.z;\n      vertexArray[vertoffset + 9] = p2v.x;\n      vertexArray[vertoffset + 10] = p2v.y;\n      vertexArray[vertoffset + 11] = p2v.z;\n      vertexArray[vertoffset + 12] = a1v.x;\n      vertexArray[vertoffset + 13] = a1v.y;\n      vertexArray[vertoffset + 14] = a1v.z;\n      vertexArray[vertoffset + 15] = a1v.x;\n      vertexArray[vertoffset + 16] = a1v.y;\n      vertexArray[vertoffset + 17] = a1v.z;\n      vertexArray[vertoffset + 18] = a2v.x;\n      vertexArray[vertoffset + 19] = a2v.y;\n      vertexArray[vertoffset + 20] = a2v.z;\n      vertexArray[vertoffset + 21] = a2v.x;\n      vertexArray[vertoffset + 22] = a2v.y;\n      vertexArray[vertoffset + 23] = a2v.z;\n\n      for (j = 0; j < 8; ++j) {\n        colorArray[vertoffset + 3 * j] = color.r;\n        colorArray[vertoffset + 1 + 3 * j] = color.g;\n        colorArray[vertoffset + 2 + 3 * j] = color.b;\n      }\n\n      if (i > 0) {\n\n        // both points have distinct atoms\n        var diffAtoms = ((lastAtom !== undefined && currentAtom !== undefined) && lastAtom.serial !== currentAtom.serial);\n\n        for (j = 0; j < 4; j++) {\n\n          var face = [ offset + faces[j][0], offset + faces[j][1],\n              offset + faces[j][2], offset + faces[j][3] ];\n\n          faceoffset = geoGroup.faceidx;\n\n          faceArray[faceoffset] = face[0];\n          faceArray[faceoffset + 1] = face[1];\n          faceArray[faceoffset + 2] = face[3];\n          faceArray[faceoffset + 3] = face[1];\n          faceArray[faceoffset + 4] = face[2];\n          faceArray[faceoffset + 5] = face[3];\n\n          geoGroup.faceidx += 6;\n\n          if (currentAtom.clickable || lastAtom.clickable) {\n\n            var p1a = vs[face[3]].clone(), p1b = vs[face[0]]\n                .clone(), p2a = vs[face[2]].clone(), p2b = vs[face[1]]\n                .clone();\n\n            p1a.atom = vs[face[3]].atom || null; // should be\n                                // same\n            p2a.atom = vs[face[2]].atom || null;\n\n            p1b.atom = vs[face[0]].atom || null; // should be\n                                // same\n            p2b.atom = vs[face[1]].atom || null;\n\n            if (diffAtoms) {\n              var m1 = p1a.clone().add(p1b).multiplyScalar(0.5);\n              var m2 = p2a.clone().add(p2b).multiplyScalar(0.5);\n              var m = p1a.clone().add(p2b).multiplyScalar(0.5);\n\n              if (j % 2 === 0) {\n                if (lastAtom.clickable) {\n                  face1 = new $3Dmol.Triangle(m1, m, p1a);\n                  face2 = new $3Dmol.Triangle(m2, p2a, m);\n                  face3 = new $3Dmol.Triangle(m, p2a, p1a);\n                  lastAtom.intersectionShape.triangle\n                      .push(face1);\n                  lastAtom.intersectionShape.triangle\n                      .push(face2);\n                  lastAtom.intersectionShape.triangle\n                      .push(face3);\n                }\n\n                if (currentAtom.clickable) {\n                  face1 = new $3Dmol.Triangle(p1b, p2b, m);\n                  face2 = new $3Dmol.Triangle(p2b, m2, m);\n                  face3 = new $3Dmol.Triangle(p1b, m, m1);\n                  currentAtom.intersectionShape.triangle\n                      .push(face1);\n                  currentAtom.intersectionShape.triangle\n                      .push(face2);\n                  currentAtom.intersectionShape.triangle\n                      .push(face3);\n                }\n              } else {\n                if (currentAtom.clickable) {\n                  face1 = new $3Dmol.Triangle(m1, m, p1a);\n                  face2 = new $3Dmol.Triangle(m2, p2a, m);\n                  face3 = new $3Dmol.Triangle(m, p2a, p1a);\n                  currentAtom.intersectionShape.triangle\n                      .push(face1);\n                  currentAtom.intersectionShape.triangle\n                      .push(face2);\n                  currentAtom.intersectionShape.triangle\n                      .push(face3);\n                }\n\n                if (lastAtom.clickable) {\n                  face1 = new $3Dmol.Triangle(p1b, p2b, m);\n                  face2 = new $3Dmol.Triangle(p2b, m2, m);\n                  face3 = new $3Dmol.Triangle(p1b, m, m1);\n                  lastAtom.intersectionShape.triangle\n                      .push(face1);\n                  lastAtom.intersectionShape.triangle\n                      .push(face2);\n                  lastAtom.intersectionShape.triangle\n                      .push(face3);\n                }\n              }\n\n            }\n\n            // face for single atom\n            else if (currentAtom.clickable) {\n              face1 = new $3Dmol.Triangle(p1b, p2b, p1a);\n              face2 = new $3Dmol.Triangle(p2b, p2a, p1a);\n              currentAtom.intersectionShape.triangle.push(face1);\n              currentAtom.intersectionShape.triangle.push(face2);\n            }\n\n          }\n\n        }\n      }\n\n      geoGroup.vertices += 8;\n      lastAtom = currentAtom;\n    }\n\n    var vsize = vs.length - 8; // Cap\n\n    geoGroup = geo.updateGeoGroup(8);\n    var vertexArray = geoGroup.vertexArray;\n    var colorArray = geoGroup.colorArray;\n    var faceArray = geoGroup.faceArray;\n    offset = geoGroup.vertices;\n    vertoffset = offset * 3;\n    faceoffset = geoGroup.faceidx;\n\n    for (i = 0; i < 4; i++) {\n      vs.push(vs[i * 2]);\n      vs.push(vs[vsize + i * 2]);\n\n      var v1 = vs[i * 2], v2 = vs[vsize + i * 2];\n\n      vertexArray[vertoffset + 6 * i] = v1.x;\n      vertexArray[vertoffset + 1 + 6 * i] = v1.y;\n      vertexArray[vertoffset + 2 + 6 * i] = v1.z;\n      vertexArray[vertoffset + 3 + 6 * i] = v2.x;\n      vertexArray[vertoffset + 4 + 6 * i] = v2.y;\n      vertexArray[vertoffset + 5 + 6 * i] = v2.z;\n\n      colorArray[vertoffset + 6 * i] = color.r;\n      colorArray[vertoffset + 1 + 6 * i] = color.g;\n      colorArray[vertoffset + 2 + 6 * i] = color.b;\n      colorArray[vertoffset + 3 + 6 * i] = color.r;\n      colorArray[vertoffset + 4 + 6 * i] = color.g;\n      colorArray[vertoffset + 5 + 6 * i] = color.b;\n\n    }\n\n    vsize += 8;\n\n    face1 = [ offset, offset + 2, offset + 6, offset + 4 ];\n    face2 = [ offset + 1, offset + 5, offset + 7, offset + 3 ];\n\n    faceArray[faceoffset] = face1[0];\n    faceArray[faceoffset + 1] = face1[1];\n    faceArray[faceoffset + 2] = face1[3];\n    faceArray[faceoffset + 3] = face1[1];\n    faceArray[faceoffset + 4] = face1[2];\n    faceArray[faceoffset + 5] = face1[3];\n    faceArray[faceoffset + 6] = face2[0];\n    faceArray[faceoffset + 7] = face2[1];\n    faceArray[faceoffset + 8] = face2[3];\n    faceArray[faceoffset + 9] = face2[1];\n    faceArray[faceoffset + 10] = face2[2];\n    faceArray[faceoffset + 11] = face2[3];\n\n    geoGroup.faceidx += 12;\n    geoGroup.vertices += 8;\n\n    // TODO: Add intersection planes for caps\n\n    // HalfEdgeRec used to store adjacency info of mesh\n    var HalfEdge = function(vertIdx) {\n      this.vert = vertIdx; // Vertex index at the end of this half-edge\n      this.twin = null; // Oppositely oriented adjacent half-edge\n      this.next = null; // Next half-edge around the face\n    };\n\n    var computeAdjacency = function(faces, faceCount, vertCount) {\n      // all pieces of the half-edge data structure\n      edges = [];\n\n      // a hash table to hold the adjaceney info\n      // - Keys are pairs of vertex indices\n      // - Values are pointers to half-edge\n      var edgeTable = {};\n      var len = 0;\n\n      // Plow through faces and fill all half-edge info except twin\n      // pointers:\n      for (var i = 0; i < faceCount; i += 3) {\n        var A = faces[i];\n        var B = faces[i + 1];\n        var C = faces[i + 2];\n        // console.log(\"A=\"+A+ \" B=\"+ B+ \" C=\"+C);\n\n        // create the half-edge that goes from C to A\n        var CA = new HalfEdge(A);\n        edges.push(CA);\n        // create the half-edge that goes from A to B\n        var AB = new HalfEdge(B);\n        edges.push(AB);\n        // create the half-edge that goes from B to C\n        var BC = new HalfEdge(C);\n        edges.push(BC);\n\n        CA.next = AB;\n        AB.next = BC;\n        BC.next = CA;\n\n        edgeTable[C | (A << 16)] = CA;\n        edgeTable[A | (B << 16)] = AB;\n        edgeTable[B | (C << 16)] = BC;\n      }\n\n      // verify that the mesh is clean\n      for ( var key in edgeTable) {\n        if (edgeTable.hasOwnProperty(key)) {\n          len++;\n        }\n      }\n      if (len != faceCount * 3) {\n        console\n            .warn(\"Bad mesh: duplicated edges or inconsistent winding.len=\"\n                + len\n                + \" faceCount=\"\n                + faceCount\n                + \" vertCount=\" + vertCount);\n      }\n\n      // Populate the twin pointers by iterating over the hash table\n      var boundaryCount = 0;\n      for ( var key in edgeTable) {\n        if (edgeTable.hasOwnProperty(key)) {\n          var twinKey = ((key & 0xffff) << 16) | (key >> 16);\n          if (edgeTable.hasOwnProperty(twinKey)) {\n            edgeTable[key].twin = edgeTable[twinKey];\n            edgeTable[twinKey].twin = edgeTable[key];\n          } else {\n            boundaryCount += 1;\n          }\n        }\n      }\n\n      var ret = new Uint16Array(faceCount * 6);\n      // Now that we have a half-edge structure, it's easy to create\n      // adjacency info for WebGL\n      if (boundaryCount > 0) {\n        console.log(\"Mesh is not watertight. Contains \" + boundaryCount\n            + \" edges\");\n\n        for (var i = 0; i < faceCount; i += 3) {\n          ret[i * 2 + 0] = edges[i + 2].vert;\n          ret[i * 2 + 1] = edges[i + 0].twin == null ? ret[i * 2 + 0]\n              : edges[i + 0].twin.next.vert;\n          ret[i * 2 + 2] = edges[i + 0].vert;\n          ret[i * 2 + 3] = edges[i + 1].twin == null ? ret[i * 2 + 1]\n              : edges[i + 1].twin.next.vert;\n          ret[i * 2 + 4] = edges[i + 1].vert;\n          ret[i * 2 + 5] = edges[i + 2].twin == null ? ret[i * 2 + 2]\n              : edges[i + 2].twin.next.vert;\n        }\n      } else {\n        for (var i = 0; i < faceCount; i += 3) {\n          ret[i * 2 + 0] = edges[i + 2].vert;\n          ret[i * 2 + 1] = edges[i + 0].twin.next.vert;\n          ret[i * 2 + 2] = edges[i + 0].vert;\n          ret[i * 2 + 3] = edges[i + 1].twin.next.vert;\n          ret[i * 2 + 4] = edges[i + 1].vert;\n          ret[i * 2 + 5] = edges[i + 2].twin.next.vert;\n        }\n      }\n\n      return ret;\n    };\n\n    // geoGroup.adjFaceArray =\n    // computeAdjacency(faceArray,faceArray.length,offset);\n\n  };\n\n  // TODO: Need to update this (will we ever use this?)\n  var drawSmoothCurve = function(group, _points, width, colors, div) {\n    if (_points.length === 0)\n      return;\n\n    div = (div === undefined) ? 5 : div;\n\n    var geo = new $3Dmol.Geometry();\n    var points = subdivide(_points, div);\n    /*\n     * for ( var i = 0; i < points.length; i++) {\n     * geo.vertices.push(points[i]); geo.colors.push($3Dmol.color(colors[(i ==\n     * 0) ? 0 : Math.round((i - 1) / div)])); }\n     */\n    var lineMaterial = new $3Dmol.LineBasicMaterial({\n      linewidth : width\n    });\n    lineMaterial.vertexColors = true;\n    var line = new $3Dmol.Line(geo, lineMaterial);\n    line.type = $3Dmol.LineStrip;\n    group.add(line);\n  };\n\n  var drawStrip = function(geo, points, colors, div, thickness, opacity,\n      shape) {\n    if (!shape || shape === \"default\")\n      shape = \"rectangle\";\n    if (shape === 'edged')\n      drawPlainStrip(geo, points, colors, div, thickness, opacity);\n    else if (shape === \"rectangle\" || shape === \"oval\"\n        || shape === \"parabola\")\n      drawShapeStrip(geo, points, colors, div, thickness, opacity, shape);\n  }\n\n  // check if given atom is an alpha carbon\n  var isAlphaCarbon = function(atom) {\n    return atom && atom.elem === \"C\" && atom.atom === \"CA\"; // note that\n                                // calcium is\n                                // also CA\n  }\n\n  // check whether two atoms are members of the same residue or subsequent,\n  // connected residues (a before b)\n  var inConnectedResidues = function(a, b) {\n    if (a && b && a.chain === b.chain) {\n      if ((a.reschain === b.reschain)\n          && (a.resi === b.resi || a.resi === b.resi - 1))\n        return true;\n      if (a.resi < b.resi) {\n        // some PDBs have gaps in the numbering but the residues are\n        // still connected\n        // assume if within 4A they are connected\n        var dx = a.x - b.x;\n        var dy = a.y - b.y;\n        var dz = a.z - b.z;\n        var dist = dx * dx + dy * dy + dz * dz;\n        if (dist < 16.0)\n          return true; // calpha dist\n      }\n    }\n\n    return false;\n\n  }\n\n  // add geo to the group\n  var setGeo = function(group, geo, opacity, outline, setNormals) {\n\n    if(geo == null || geo.vertices == 0) return;\n    if (setNormals) {\n      geo.initTypedArrays();\n      geo.setUpNormals();\n    }\n\n    var cartoonMaterial = new $3Dmol.MeshDoubleLambertMaterial();\n    cartoonMaterial.vertexColors = $3Dmol.FaceColors;\n    if (typeof (opacity) === \"number\" && opacity >= 0 && opacity < 1) {\n      cartoonMaterial.transparent = true;\n      cartoonMaterial.opacity = opacity;\n    }\n    cartoonMaterial.outline = outline;\n    var cartoonMesh = new $3Dmol.Mesh(geo, cartoonMaterial);\n    group.add(cartoonMesh);\n  };\n\n\n  // proteins na backbone na terminus nucleobases\n  var cartoonAtoms = { \"C\":true, \"CA\":true, \"O\":true, \"P\":true, \"OP2\": true,\n      \"O2P\": true, \"O5'\": true, \"O3'\": true, \"C5'\":true,\n      \"C2'\": true, \"O5*\": true, \"O3*\": true, \"C5*\": true,\n      \"C2*\":true, \"N1\":true, \"N3\":true };\n  var purResns = { \"DA\":true, \"DG\":true, \"A\":true, \"G\":true};\n  var pyrResns = { \"DT\": true, \"DC\":true, \"U\":true, \"C\":true, \"T\":true };\n  var naResns = { \"DA\":true, \"DG\":true, \"A\":true, \"G\":true, \"DT\": true, \"DC\":true, \"U\":true, \"C\":true, \"T\":true };\n\n  var drawCartoon = function(group, atomList, gradientScheme, fill,\n      doNotSmoothen, num, div) {\n    num = num || defaultNum;\n    div = div || defaultDiv;\n\n    var cartoon, prev, curr, next, currColor, nextColor, thickness, i, nextResAtom, arrow;\n    var backbonePt, orientPt, prevOrientPt, terminalPt, termOrientPt, baseStartPt, baseEndPt;\n    var tubeStart, tubeEnd, drawingTube;\n    var shapeGeo = new $3Dmol.Geometry(true); // for shapes that don't need normals computed\n    var geo = new $3Dmol.Geometry(true);\n    var colors = [];\n    var points = [];\n    var opacity = 1;\n    var outline = false;\n\n    for (var i = 0; i < num; i++)\n      points[i] = [];\n\n    // first determine where beta sheet arrows and alpha helix tubes belong\n    var inSheet = false;\n    var inHelix = false;\n    i = 0;\n    var atoms = [];\n    for (i in atomList) {\n      next = atomList[i];\n      if (next.elem === 'C' && next.atom === 'CA') {\n        var connected = inConnectedResidues(curr, next);\n\n        // last two residues in a beta sheet become arrowhead\n        if (connected && next.ss === \"s\") {\n          inSheet = true;\n        } else if (inSheet) {\n          if (curr && prev && curr.style.cartoon.arrows\n              && prev.style.cartoon.arrows) {\n            curr.ss = \"arrow end\";\n            prev.ss = \"arrow start\";\n          }\n          inSheet = false;\n        }\n\n        // first and last residues in a helix are used to draw tube\n        if (connected && curr.ss === \"h\") {\n          if (!inHelix && next.style.cartoon.tubes)\n            next.ss = \"tube start\";\n          inHelix = true;\n        } else if (inHelix && curr.ss !== \"tube start\") {\n          if (prev && prev.style.cartoon.tubes)\n            prev.ss = \"tube end\";\n          inHelix = false;\n        }\n        prev = curr;\n        curr = next;\n      }\n      if(next && next.atom in cartoonAtoms) {\n        atoms.push(next);\n      }\n    }\n\n    var flushGeom = function() {\n      //write out points, update geom,etc\n      for (var i = 0; !thickness && i < num; i++)\n        drawSmoothCurve(group, points[i], 1, colors, div, opacity);\n      if (fill && points[0].length > 0) {\n        drawStrip(geo, points, colors, div, thickness, opacity,\n            points.style);\n      }\n      points = [];\n      for (i = 0; i < num; i++)\n        points[i] = [];\n      colors = [];\n\n      setGeo(group, geo, opacity, outline, true);\n      setGeo(group, shapeGeo, opacity, outline, false);\n      geo = new $3Dmol.Geometry(true);\n      shapeGeo = new $3Dmol.Geometry(true);\n    };\n\n    // then accumulate points\n    curr = undefined;\n    for (var a = 0; a < atoms.length; a++) {\n      next = atoms[a];\n\n      var nextresn = next.resn.trim();\n      var inNucleicAcid = nextresn in naResns;\n      opacity = 1;\n      // determine cartoon style\n      cartoon = next.style.cartoon;\n      if(curr && curr.style.cartoon)\n        opacity = curr.style.cartoon.opacity;\n      if(curr && curr.style.cartoon && curr.style.cartoon.outline)\n        outline = curr.style.cartoon.outline;\n\n      // create a new geometry when opacity changes\n      //the should work fine if opacity is set by chain, but will\n      //break if it changes within the chain\n      if (curr && curr.style.cartoon && (!next.style.cartoon ||\n          curr.style.cartoon.opacity != next.style.cartoon.opacity)) {\n        flushGeom();\n      }\n\n      if (cartoon.style === \"trace\") // draw cylinders connecting\n                      // consecutive 'backbone' atoms\n      {\n        /*\n         * \"trace\" style just draws cylinders between consecutive\n         * 'backbone' atoms, such as alpha carbon for polypeptides and\n         * phosphorus for DNA.\n         */\n        if (next.elem === 'C' && next.atom === 'CA' || inNucleicAcid\n            && next.atom === \"P\") {\n          // determine cylinder color\n          if (gradientScheme && cartoon.color === 'spectrum')\n            nextColor = gradientScheme.valueToHex(next.resi,gradientScheme.range());\n          else\n            nextColor = $3Dmol.getColorFromStyle(next, cartoon).getHex();\n\n          // determine cylinder thickness\n          if ($.isNumeric(cartoon.thickness))\n            thickness = cartoon.thickness;\n          else\n            thickness = defaultThickness;\n\n          if (inConnectedResidues(curr, next)) {\n            // if both atoms are same color, draw single cylinder\n            if (nextColor == currColor) {\n              var color = $3Dmol.CC.color(nextColor);\n              $3Dmol.GLDraw.drawCylinder(shapeGeo, curr, next,\n                  thickness, color, 2, 2);\n            }\n\n            else // otherwise draw cylinders for each color\n                // (split down the middle)\n            {\n              var midpoint = new $3Dmol.Vector3().addVectors(\n                  curr, next).multiplyScalar(0.5);\n              var color1 = $3Dmol.CC.color(currColor);\n              var color2 = $3Dmol.CC.color(nextColor);\n              $3Dmol.GLDraw.drawCylinder(shapeGeo, curr,\n                  midpoint, thickness, color1, 2, 0);\n              $3Dmol.GLDraw.drawCylinder(shapeGeo, midpoint,\n                  next, thickness, color2, 0, 2);\n            } // note that an atom object can be duck-typed as a\n              // $3Dmol.Vector3 in this case\n          }\n\n          curr = next;\n          currColor = nextColor;\n        }\n      } else // draw default-style cartoons based on secondary structure\n      {\n        // draw backbone through these atoms\n        if (isAlphaCarbon(next) || inNucleicAcid\n            && (next.atom === \"P\" || next.atom.indexOf('O5') == 0)) {\n          if (drawingTube) {\n            if (next.ss === \"tube end\") {\n              drawingTube = false;\n              tubeEnd = new $3Dmol.Vector3(next.x, next.y, next.z);\n              $3Dmol.GLDraw.drawCylinder(shapeGeo, tubeStart,\n                  tubeEnd, 2, $3Dmol.CC.color(currColor), 1,\n                  1);\n              next.ss = \"h\";\n\n            } else\n              continue; // don't accumulate strand points while\n                    // in the middle of drawing a tube\n          }\n\n          // end of a chain of connected residues (of same style)\n          if (curr && (!inConnectedResidues(curr, next)\n                  || curr.ss === \"tube start\")) {\n            if (curr.ss === \"tube start\") {\n              drawingTube = true;\n              tubeStart = new $3Dmol.Vector3(curr.x, curr.y,\n                  curr.z);\n              curr.ss = \"h\";\n            }\n\n            if (baseEndPt) // draw the last base if it's a NA chain\n            {\n              if (terminalPt)\n                baseStartPt = new $3Dmol.Vector3().addVectors(\n                    curr, terminalPt).multiplyScalar(0.5);\n              else\n                baseStartPt = new $3Dmol.Vector3(curr.x,\n                    curr.y, curr.z);\n\n              $3Dmol.GLDraw.drawCylinder(shapeGeo, baseStartPt,\n                  baseEndPt, 0.4, $3Dmol.CC\n                      .color(baseEndPt.color), 0, 2);\n              arrow = addBackbonePoints(points, num,\n                  !doNotSmoothen, terminalPt, termOrientPt,\n                  prevOrientPt, curr, atoms, a);\n              colors.push(nextColor);\n              if (arrow)\n                colors.push(nextColor);\n\n              baseStartPt = null;\n              baseEndPt = null;\n            }\n\n            // draw accumulated strand points\n            for (i = 0; !thickness && i < num; i++)\n              drawSmoothCurve(group, points[i], 1, colors, div,\n                  opacity);\n            if (fill && points[0].length > 0)\n              drawStrip(geo, points, colors, div, thickness,\n                  opacity, points.style);\n\n            // clear arrays for points and colors\n            points = [];\n            for (i = 0; i < num; i++)\n              points[i] = [];\n            colors = [];\n          }\n\n          // reached next residue (potentially the first residue)\n          if (curr === undefined || curr.rescode != next.rescode\n              || curr.resi != next.resi) {\n            if (baseEndPt) // draw last NA residue's base\n            {\n              // start the cylinder at the midpoint between\n              // consecutive backbone atoms\n              baseStartPt = new $3Dmol.Vector3().addVectors(curr,\n                  next).multiplyScalar(0.5);\n              var startFix = baseStartPt.clone().sub(baseEndPt)\n                  .multiplyScalar(0.02); // TODO: apply this\n                              // as function of\n                              // thickness\n              baseStartPt.add(startFix);\n\n              $3Dmol.GLDraw.drawCylinder(shapeGeo, baseStartPt,\n                  baseEndPt, 0.4, $3Dmol.CC\n                      .color(baseEndPt.color), 0, 2);\n              baseStartPt = null;\n              baseEndPt = null;\n            }\n\n            // determine color and thickness of the next strand\n            // segment\n            if (gradientScheme && cartoon.color === 'spectrum')\n              nextColor = gradientScheme.valueToHex(next.resi,\n                  gradientScheme.range());\n            else\n              nextColor = $3Dmol.getColorFromStyle(next, cartoon)\n                  .getHex();\n            colors.push(nextColor);\n            if ($.isNumeric(cartoon.thickness))\n              thickness = cartoon.thickness;\n            else\n              thickness = defaultThickness;\n\n            curr = next; // advance backbone\n            backbonePt = new $3Dmol.Vector3(curr.x, curr.y, curr.z);\n            backbonePt.resi = curr.resi;\n            currColor = nextColor;\n          }\n\n          // click handling\n          if (next.clickable === true\n              && (next.intersectionShape === undefined || next.intersectionShape.triangle === undefined))\n            next.intersectionShape = {\n              sphere : null,\n              cylinder : [],\n              line : [],\n              triangle : []\n            };\n        }\n        // atoms used to orient the backbone strand\n        else if (isAlphaCarbon(curr) && next.atom === \"O\"\n            || inNucleicAcid && curr.atom === \"P\"\n            && (next.atom === \"OP2\" || next.atom === \"O2P\")\n            || inNucleicAcid && curr.atom.indexOf(\"O5\") == 0\n            && next.atom.indexOf(\"C5\") == 0) {\n          orientPt = new $3Dmol.Vector3(next.x, next.y, next.z);\n          orientPt.resi = next.resi;\n          if (next.atom === \"OP2\" || next.atom === \"O2P\") // for NA 3'\n                                  // terminus\n            termOrientPt = new $3Dmol.Vector3(next.x, next.y,\n                next.z);\n        }\n\n        // NA 3' terminus is an edge case, need a vector for most recent\n        // O3'\n        else if (inNucleicAcid && next.atom.indexOf(\"O3\") == 0) {\n          terminalPt = new $3Dmol.Vector3(next.x, next.y, next.z);\n        }\n\n        // atoms used for drawing the NA base cylinders (diff for\n        // purines and pyramidines)\n        else if ((next.atom === \"N1\" && (nextresn in purResns))\n            || (next.atom === \"N3\" && (nextresn in pyrResns))) {\n          baseEndPt = new $3Dmol.Vector3(next.x, next.y, next.z);\n          baseEndPt.color = $3Dmol.getColorFromStyle(next, cartoon)\n              .getHex();\n        }\n\n        // when we have a backbone point and orientation point in the\n        // same residue, accumulate strand points\n        if (orientPt && backbonePt && orientPt.resi === backbonePt.resi) {\n          arrow = addBackbonePoints(points, num, !doNotSmoothen,\n              backbonePt, orientPt, prevOrientPt, curr, atoms,\n              a);\n          prevOrientPt = orientPt;\n          backbonePt = null;\n          orientPt = null;\n          colors.push(nextColor);\n          if (arrow)\n            colors.push(nextColor);\n        }\n      }\n\n    }\n\n    if (baseEndPt) // draw last NA base if needed\n    {\n      if (terminalPt)\n        baseStartPt = new $3Dmol.Vector3().addVectors(curr, terminalPt)\n            .multiplyScalar(0.5);\n      else\n        baseStartPt = new $3Dmol.Vector3(curr.x, curr.y, curr.z);\n\n      $3Dmol.GLDraw.drawCylinder(shapeGeo, baseStartPt, baseEndPt, 0.4,\n          $3Dmol.CC.color(baseEndPt.color), 0, 2);\n      arrow = addBackbonePoints(points, num, !doNotSmoothen, terminalPt,\n          termOrientPt, prevOrientPt, curr, atoms, a);\n      colors.push(nextColor);\n      if (arrow)\n        colors.push(nextColor);\n    }\n\n    // for default style, draw the last strand\n    flushGeom();\n  };\n\n  var addBackbonePoints = function(points, num, smoothen, backbonePt,\n      orientPt, prevOrientPt, backboneAtom, atoms, atomi) {\n    var widthScalar, i, delta, v, addArrowPoints, testOpacity, testStyle;\n\n\n    if (!backbonePt || !orientPt || !backboneAtom)\n      return;\n\n    // the side vector points along the axis from backbone atom to\n    // orientation atom (eg. CA to O, in peptides)\n    var sideVec = orientPt.sub(backbonePt);\n    sideVec.normalize();\n\n    //find next atom like this one\n    var forwardVec = atoms[atomi];\n    for(var i = atomi+1; i < atoms.length; i++) {\n      forwardVec = atoms[i];\n      if(forwardVec.atom == backboneAtom.atom)\n        break;\n    }\n    // the forward vector points along the axis from backbone atom to next\n    // backbone atom\n    forwardVec = forwardVec ? new $3Dmol.Vector3(forwardVec.x,\n        forwardVec.y, forwardVec.z) : new $3Dmol.Vector3(0, 0, 0);\n    forwardVec.sub(backbonePt);\n\n    // adjustments for proper beta arrow appearance\n    if (backboneAtom.ss === \"arrow start\") {\n      var adjustment = forwardVec.clone().multiplyScalar(0.3).cross(\n          orientPt); // adjust perpendicularly to strand face\n      backbonePt.add(adjustment);\n\n      var upVec = forwardVec.clone().cross(sideVec).normalize();\n      sideVec.rotateAboutVector(upVec, 0.43);\n    }\n\n    // determine from cartoon style or secondary structure how wide the\n    // strand should be here\n    // ribbon shape should have same width as thickness\n    if (backboneAtom.style.cartoon.ribbon) {\n      widthScalar = backboneAtom.style.cartoon.thickness\n          || defaultThickness;\n\n    } else // depending on secondary structure, multiply the orientation\n        // vector by some scalar\n    {\n      if (!backboneAtom.style.cartoon.width) {\n        if (backboneAtom.ss === \"c\") {\n          if (backboneAtom.atom === \"P\")\n            widthScalar = nucleicAcidWidth;\n          else\n            widthScalar = coilWidth;\n        } else if (backboneAtom.ss === \"arrow start\") {\n          widthScalar = helixSheetWidth;\n          addArrowPoints = true;\n\n        } else if (backboneAtom.ss === \"arrow end\")\n          widthScalar = coilWidth;\n\n        else if (backboneAtom.ss === \"h\"\n            && backboneAtom.style.cartoon.tubes\n            || backboneAtom.ss === \"tube start\")\n          widthScalar = coilWidth;\n\n        else\n          widthScalar = helixSheetWidth;\n      } else\n        widthScalar = backboneAtom.style.cartoon.width;\n    }\n\n    // make sure the strand orientation doesn't twist more than 90 degrees\n    if (prevOrientPt != null && sideVec.dot(prevOrientPt) < 0)\n      sideVec.negate();\n\n    sideVec.multiplyScalar(widthScalar);\n    for (i = 0; i < num; i++) {\n      // produces NUM incremental points from backbone atom minus\n      // orientation vector\n      // to backbone atom plus orientation vector\n      delta = -1 + i * 2 / (num - 1); // -1 to 1 incrementing by num\n      v = new $3Dmol.Vector3(backbonePt.x + delta * sideVec.x,\n          backbonePt.y + delta * sideVec.y, backbonePt.z + delta\n              * sideVec.z);\n      v.atom = backboneAtom;\n      if (smoothen && backboneAtom.ss === \"s\")\n        v.smoothen = true;\n      points[i].push(v); // a num-length array of arrays, where each\n                // inner array contains length-wise points\n      // along the backbone offset by some constant pertaining to its cell\n      // in the outer array\n    }\n\n    if (addArrowPoints) {\n\n      sideVec.multiplyScalar(2);\n      for (i = 0; i < num; i++) {\n        delta = -1 + i * 2 / (num - 1); // -1 to 1 incrementing by num\n        v = new $3Dmol.Vector3(backbonePt.x + delta * sideVec.x,\n            backbonePt.y + delta * sideVec.y, backbonePt.z + delta\n                * sideVec.z);\n        v.atom = backboneAtom;\n        v.smoothen = false;\n        v.skip = true;\n        points[i].push(v);\n      }\n    }\n\n    // make sure the strand is all the same style\n    testStyle = backboneAtom.style.cartoon.style || 'default';\n    if (points.style) {\n      if (points.style != testStyle) {\n        console\n            .log(\"Warning: a cartoon chain's strand-style is ambiguous\");\n        points.style = 'default';\n      }\n\n    } else\n      points.style = testStyle;\n\n    // revert ss keywords used for arrow rendering back to original value\n    if (backboneAtom.ss === \"arrow start\"\n        || backboneAtom.ss === \"arrow end\")\n      backboneAtom.ss = \"s\";\n\n    return addArrowPoints;\n  };\n\n  var defaultDrawCartoon = function(group, atomList, gradientScheme, quality) {\n    quality = parseInt(parseFloat(quality) * 5) || 5;\n    drawCartoon(group, atomList, gradientScheme, true,\n        false, quality, quality);\n  }\n\n  return defaultDrawCartoon;\n})();\n//\n\nvar $3Dmol = $3Dmol || {};\n\n/**\n * Lower level utilities for creating WebGL shape geometries.\n * These are not intended for general consumption.\n * @namespace $3Dmol.GLDraw\n  */\n$3Dmol.GLDraw = (function() {\n\n    var draw = {}; // object for exporting functions\n\n    // Rotation matrix around z and x axis -\n    // according to y basis vector\n    // TODO: Try to optimize this (square roots?)\n    var getRotationMatrix = function() {\n\n        var d = new $3Dmol.Vector3();\n        // var rot = new Float32Array(9);\n\n        return function(dir) {\n\n            d.set(dir[0], dir[1], dir[2]);\n\n            var dx = d.x, dy = d.y, dz = d.z;\n\n            var dxy = Math.sqrt(dx * dx + dy * dy);\n            var dxz, dyz;\n\n            var sinA, cosA, sinB, cosB, sinC, cosC;\n\n            // about z axis - Phi\n            if (dxy < 0.0001) {\n                sinA = 0;\n                cosA = 1;\n            }\n\n            else {\n                sinA = -dx / dxy;\n                cosA = dy / dxy;\n            }\n\n            // recast dy in terms of new axes - z is the same\n\n            dy = -sinA * dx + cosA * dy;\n            dyz = Math.sqrt(dy * dy + dz * dz);\n\n            // about new x axis - Theta\n\n            if (dyz < 0.0001) {\n                sinB = 0;\n                cosB = 1;\n            }\n\n            else {\n                sinB = dz / dyz;\n                cosB = dy / dyz;\n            }\n\n            var rot = new Float32Array(9);\n            rot[0] = cosA;\n            rot[1] = sinA;\n            rot[2] = 0;\n            rot[3] = -sinA * cosB;\n            rot[4] = cosA * cosB;\n            rot[5] = sinB;\n            rot[6] = sinA * sinB;\n            rot[7] = -cosA * sinB;\n            rot[8] = cosB;\n\n            return rot;\n\n        };\n\n    }();\n\n    // Ortho normal vectors for cylinder radius/ sphere cap equator and cones\n    // Direction is j basis (0,1,0)\n    var basisVectors = function() {\n\n        var ret = {\n            vertices : [],\n            norms : []\n        };\n\n        var nvecs = [];\n\n        var subdivisions = 4; // including the initial 2, eg. 4 => 16 subintervals\n        var N = Math.pow(2, subdivisions);  // eg. 2**4 = 16 subintervals in total\n        var i = 2;  // start with 2 subdivisions already done\n        var M = Math.pow(2, i); // 4\n        var spacing = N/M;  // 16/4 = 4; if there were 5 subdivs, then 32/4 = 8.\n        var j;\n\n        nvecs[0] = new $3Dmol.Vector3(-1, 0, 0);\n        nvecs[spacing] = new $3Dmol.Vector3(0, 0, 1);\n        nvecs[spacing*2] = new $3Dmol.Vector3(1, 0, 0);\n        nvecs[spacing*3] = new $3Dmol.Vector3(0, 0, -1);\n\n        for ( i = 3; i <= subdivisions; i ++ ) {\n            // eg. i=3, we need to add 2**(3-1) = 4 new vecs. Call it M.\n            // their spacing is N/M, eg. N=16, M=4, N/M=4; M=8, N/M=2.\n            // they start off at half this spacing\n            // and are equal to the average of the two vectors on either side\n            M = Math.pow(2, (i-1));\n            spacing = N/M;\n            for ( j = 0; j < (M-1); j ++ ) {\n                nvecs[spacing/2 + j*spacing] = nvecs[j*spacing].clone().add(nvecs[(j+1)*spacing]).normalize();\n            }\n            // treat the last one specially so it wraps around to zero\n            j = M - 1;\n            nvecs[spacing/2 + j*spacing] = nvecs[j*spacing].clone().add(nvecs[0]).normalize();\n        }\n\n        /*\n         * nvecs[0] = new $3Dmol.Vector3(-1,0,0); nvecs[1] = new\n         * $3Dmol.Vector3(0,0,1); nvecs[2] = new $3Dmol.Vector3(1,0,0);\n         * nvecs[3] = new $3Dmol.Vector3(0,0,-1);\n         */\n        return nvecs;\n\n    }();\n\n    // memoize capped cylinder for given radius\n    var cylVertexCache = {\n\n        // memoize both rounded and flat caps (hemisphere and circle)\n        cache : {false:{}, true:{}},\n\n        getVerticesForRadius : function(radius, flat) {\n\n            if (this.cache[flat][radius] !== undefined)\n                return this.cache[flat][radius];\n\n            var dir = new $3Dmol.Vector3(0, 1, 0);\n            var w = basisVectors.length;\n            var nvecs = [], norms = [];\n            var n;\n\n            for (var i = 0; i < w; i++) {\n                // bottom\n                nvecs.push(basisVectors[i].clone().multiplyScalar(radius));\n                // top\n                nvecs.push(basisVectors[i].clone().multiplyScalar(radius));\n\n                // NOTE: this normal is used for constructing sphere caps -\n                // cylinder normals taken care of in drawCylinder\n                n = basisVectors[i].clone().normalize();\n                norms.push(n);\n                norms.push(n);\n            }\n\n            // norms[0]\n\n            var verticesRows = [];\n\n            // Require that heightSegments is even and >= 2\n            // Equator points at h/2 (theta = pi/2)\n            // (repeated) polar points at 0 and h (theta = 0 and pi)\n            var heightSegments = 10, widthSegments = w; // 16 or however many\n                                                        // basis vectors for\n                                                        // cylinder\n\n            if (heightSegments % 2 !== 0 || !heightSegments) {\n                console.error(\"heightSegments must be even\");\n\n                return null;\n            }\n\n            var phiStart = 0;\n            var phiLength = Math.PI * 2;\n\n            var thetaStart = 0;\n            var thetaLength = Math.PI;\n\n            var x, y;\n            var polar = false, equator = false;\n\n            for (y = 0; y <= heightSegments; y++) {\n\n                polar = (y === 0 || y === heightSegments) ? true : false;\n                equator = (y === heightSegments / 2) ? true : false;\n\n                var verticesRow = [], toRow = [];\n\n                for (x = 0; x <= widthSegments; x++) {\n\n                    // Two vertices rows for equator pointing to previously\n                    // constructed cyl points\n                    if (equator) {\n                        var xi = (x < widthSegments) ? 2 * x : 0;\n                        toRow.push(xi + 1);\n                        verticesRow.push(xi);\n\n                        continue;\n                    }\n\n                    var u = x / widthSegments;\n                    var v = y / heightSegments;\n\n                    // Only push first polar point\n\n                    if (!polar || x === 0) {\n\n                        if (x < widthSegments) {\n                            var vertex = new $3Dmol.Vector3();\n                            vertex.x = -radius\n                                    * Math.cos(phiStart + u * phiLength)\n                                    * Math.sin(thetaStart + v * thetaLength);\n                            vertex.y = flat ? 0 : radius * Math.cos(thetaStart + v * thetaLength);\n                            vertex.z = radius\n                                    * Math.sin(phiStart + u * phiLength)\n                                    * Math.sin(thetaStart + v * thetaLength);\n\n                            if (Math.abs(vertex.x) < 1e-5)\n                                vertex.x = 0;\n                            if (Math.abs(vertex.y) < 1e-5)\n                                vertex.y = 0;\n                            if (Math.abs(vertex.z) < 1e-5)\n                                vertex.z = 0;\n\n                            if (flat) {\n                                n = new $3Dmol.Vector3(0, Math.cos(thetaStart + v * thetaLength), 0);\n                                n.normalize();\n                            }\n                            else {\n                                n = new $3Dmol.Vector3(vertex.x, vertex.y, vertex.z);\n                                n.normalize();\n                            }\n\n                            nvecs.push(vertex);\n                            norms.push(n);\n\n                            verticesRow.push(nvecs.length - 1);\n                        }\n\n                        // last point is just the first point for this row\n                        else {\n                            verticesRow.push(nvecs.length - widthSegments);\n                        }\n\n                    }\n\n                    // x > 0; index to already added point\n                    else if (polar)\n                        verticesRow.push(nvecs.length - 1);\n\n                }\n\n                // extra equator row\n                if (equator)\n                    verticesRows.push(toRow);\n\n                verticesRows.push(verticesRow);\n\n            }\n\n            var obj = {\n                vertices : nvecs,\n                normals : norms,\n                verticesRows : verticesRows,\n                w : widthSegments,\n                h : heightSegments\n            };\n\n            this.cache[flat][radius] = obj;\n\n            return obj;\n\n        }\n    };\n\n    // creates a cylinder\n    var drawnC = 0;\n\n    /** Create a cylinder\n     * @function $3Dmol.GLDraw.drawCylinder\n     * @param {geometry}\n     *            geo\n     * @param {Point}\n     *            from\n     * @param {Point}\n     *            to\n     * @param {float}\n     *            radius\n     * @param {$3Dmol.Color}\n     *            color\n     * @param {integer} fromCap - 0 for none, 1 for flat, 2 for round; Note: currently do not support different styles of caps on the same cylinder.\n     * @param {integer} toCap = 0 for none, 1 for flat, 2 for round\n     *\n     * */\n    draw.drawCylinder = function(geo, from, to, radius, color, fromCap, toCap) {\n        if (!from || !to)\n            return;\n        drawnC++;\n        // vertices\n        var drawcaps = fromCap || toCap;\n\n        var flat = false;\n        if (fromCap == 1 && toCap == 1) // 0 is none, 1 is flat, 2 is round\n            flat = true;\n\n        color = color || {r:0, g:0, b:0};\n\n        /** @type {Array.<number>} */\n        var dir = [ to.x, to.y, to.z ];\n        dir[0] -= from.x;\n        dir[1] -= from.y;\n        dir[2] -= from.z;\n\n        var e = getRotationMatrix(dir);\n        // get orthonormal vectors from cache\n        // TODO: Will have orient with model view matrix according to direction\n        var vobj = cylVertexCache.getVerticesForRadius(radius, flat);\n\n        // w (n) corresponds to the number of orthonormal vectors for cylinder\n        // (default 16)\n        var n = vobj.w, h = vobj.h;\n        var w = n;\n        // get orthonormal vector\n        var n_verts = (drawcaps) ? h * n + 2 : 2 * n;\n\n        var geoGroup = geo.updateGeoGroup(n_verts);\n\n        var vertices = vobj.vertices, normals = vobj.normals, verticesRows = vobj.verticesRows;\n        var toRow = verticesRows[h / 2], fromRow = verticesRows[h / 2 + 1];\n\n        var start = geoGroup.vertices;\n        var offset, faceoffset;\n        var i, x, y, z;\n\n        var vertexArray = geoGroup.vertexArray;\n        var normalArray = geoGroup.normalArray;\n        var colorArray = geoGroup.colorArray;\n        var faceArray = geoGroup.faceArray;\n        // add vertices, opposing vertices paired together\n        for (i = 0; i < n; ++i) {\n\n            var vi = 2 * i;\n\n            x = e[0] * vertices[vi].x + e[3] * vertices[vi].y + e[6]\n                    * vertices[vi].z;\n            y = e[1] * vertices[vi].x + e[4] * vertices[vi].y + e[7]\n                    * vertices[vi].z;\n            z = e[5] * vertices[vi].y + e[8] * vertices[vi].z;\n\n            // var xn = x/radius, yn = y/radius, zn = z/radius;\n\n            offset = 3 * (start + vi);\n            faceoffset = geoGroup.faceidx;\n\n            // from\n            vertexArray[offset] = x + from.x;\n            vertexArray[offset + 1] = y + from.y;\n            vertexArray[offset + 2] = z + from.z;\n            // to\n            vertexArray[offset + 3] = x + to.x;\n            vertexArray[offset + 4] = y + to.y;\n            vertexArray[offset + 5] = z + to.z;\n\n            // normals\n            normalArray[offset] = x;\n            normalArray[offset + 3] = x;\n            normalArray[offset + 1] = y;\n            normalArray[offset + 4] = y;\n            normalArray[offset + 2] = z;\n            normalArray[offset + 5] = z;\n\n            // colors\n            colorArray[offset] = color.r;\n            colorArray[offset + 3] = color.r;\n            colorArray[offset + 1] = color.g;\n            colorArray[offset + 4] = color.g;\n            colorArray[offset + 2] = color.b;\n            colorArray[offset + 5] = color.b;\n\n            // faces\n            // 0 - 2 - 1\n            faceArray[faceoffset] = fromRow[i] + start;\n            faceArray[faceoffset + 1] = fromRow[i + 1] + start;\n            faceArray[faceoffset + 2] = toRow[i] + start;\n            // 1 - 2 - 3\n            faceArray[faceoffset + 3] = toRow[i] + start;\n            faceArray[faceoffset + 4] = fromRow[i + 1] + start;\n            faceArray[faceoffset + 5] = toRow[i + 1] + start;\n\n            geoGroup.faceidx += 6;\n\n        }\n\n        // SPHERE CAPS\n\n        if (drawcaps) {\n\n            // h - sphere rows, verticesRows.length - 2\n            var ystart = (toCap) ? 0 : h / 2;\n            var yend = (fromCap) ? h + 1 : h / 2 + 1;\n\n            var v1, v2, v3, v4, x1, x2, x3, x4, y1, y2, y3, y4, z1, z2, z3, z4, nx1, nx2, nx3, nx4, ny1, ny2, ny3, ny4, nz1, nz2, nz3, nz4, v1offset, v2offset, v3offset, v4offset;\n\n            for (y = ystart; y < yend; y++) {\n                if (y === h / 2)\n                    continue;\n                // n number of points for each level (verticesRows[i].length -\n                // 1)\n                var cap = (y <= h / 2) ? to : from;\n\n                for (x = 0; x < n; x++) {\n\n                    faceoffset = geoGroup.faceidx;\n\n                    v1 = verticesRows[y][x + 1];\n                    v1offset = (v1 + start) * 3;\n                    v2 = verticesRows[y][x];\n                    v2offset = (v2 + start) * 3;\n                    v3 = verticesRows[y + 1][x];\n                    v3offset = (v3 + start) * 3;\n                    v4 = verticesRows[y + 1][x + 1];\n                    v4offset = (v4 + start) * 3;\n\n                    // rotate sphere vectors\n                    x1 = e[0] * vertices[v1].x + e[3] * vertices[v1].y + e[6]\n                            * vertices[v1].z;\n                    x2 = e[0] * vertices[v2].x + e[3] * vertices[v2].y + e[6]\n                            * vertices[v2].z;\n                    x3 = e[0] * vertices[v3].x + e[3] * vertices[v3].y + e[6]\n                            * vertices[v3].z;\n                    x4 = e[0] * vertices[v4].x + e[3] * vertices[v4].y + e[6]\n                            * vertices[v4].z;\n\n                    y1 = e[1] * vertices[v1].x + e[4] * vertices[v1].y + e[7]\n                            * vertices[v1].z;\n                    y2 = e[1] * vertices[v2].x + e[4] * vertices[v2].y + e[7]\n                            * vertices[v2].z;\n                    y3 = e[1] * vertices[v3].x + e[4] * vertices[v3].y + e[7]\n                            * vertices[v3].z;\n                    y4 = e[1] * vertices[v4].x + e[4] * vertices[v4].y + e[7]\n                            * vertices[v4].z;\n\n                    z1 = e[5] * vertices[v1].y + e[8] * vertices[v1].z;\n                    z2 = e[5] * vertices[v2].y + e[8] * vertices[v2].z;\n                    z3 = e[5] * vertices[v3].y + e[8] * vertices[v3].z;\n                    z4 = e[5] * vertices[v4].y + e[8] * vertices[v4].z;\n\n                    vertexArray[v1offset] = x1 + cap.x;\n                    vertexArray[v2offset] = x2 + cap.x;\n                    vertexArray[v3offset] = x3 + cap.x;\n                    vertexArray[v4offset] = x4 + cap.x;\n\n                    vertexArray[v1offset + 1] = y1 + cap.y;\n                    vertexArray[v2offset + 1] = y2 + cap.y;\n                    vertexArray[v3offset + 1] = y3 + cap.y;\n                    vertexArray[v4offset + 1] = y4 + cap.y;\n\n                    vertexArray[v1offset + 2] = z1 + cap.z;\n                    vertexArray[v2offset + 2] = z2 + cap.z;\n                    vertexArray[v3offset + 2] = z3 + cap.z;\n                    vertexArray[v4offset + 2] = z4 + cap.z;\n\n                    colorArray[v1offset] = color.r;\n                    colorArray[v2offset] = color.r;\n                    colorArray[v3offset] = color.r;\n                    colorArray[v4offset] = color.r;\n\n                    colorArray[v1offset + 1] = color.g;\n                    colorArray[v2offset + 1] = color.g;\n                    colorArray[v3offset + 1] = color.g;\n                    colorArray[v4offset + 1] = color.g;\n\n                    colorArray[v1offset + 2] = color.b;\n                    colorArray[v2offset + 2] = color.b;\n                    colorArray[v3offset + 2] = color.b;\n                    colorArray[v4offset + 2] = color.b;\n\n                    nx1 = e[0] * normals[v1].x + e[3] * normals[v1].y + e[6]\n                            * normals[v1].z;\n                    nx2 = e[0] * normals[v2].x + e[3] * normals[v2].y + e[6]\n                            * normals[v2].z;\n                    nx3 = e[0] * normals[v3].x + e[3] * normals[v3].y + e[6]\n                            * normals[v3].z;\n                    nx4 = e[0] * normals[v4].x + e[3] * normals[v4].y + e[6]\n                            * normals[v4].z;\n\n                    ny1 = e[1] * normals[v1].x + e[4] * normals[v1].y + e[7]\n                            * normals[v1].z;\n                    ny2 = e[1] * normals[v2].x + e[4] * normals[v2].y + e[7]\n                            * normals[v2].z;\n                    ny3 = e[1] * normals[v3].x + e[4] * normals[v3].y + e[7]\n                            * normals[v3].z;\n                    ny4 = e[1] * normals[v4].x + e[4] * normals[v4].y + e[7]\n                            * normals[v4].z;\n\n                    nz1 = e[5] * normals[v1].y + e[8] * normals[v1].z;\n                    nz2 = e[5] * normals[v2].y + e[8] * normals[v2].z;\n                    nz3 = e[5] * normals[v3].y + e[8] * normals[v3].z;\n                    nz4 = e[5] * normals[v4].y + e[8] * normals[v4].z;\n\n                    // if (Math.abs(vobj.sphereVertices[v1].y) === radius) {\n                    if (y === 0) {\n                        // face = [v1, v3, v4];\n                        // norm = [n1, n3, n4];\n\n                        normalArray[v1offset] = nx1;\n                        normalArray[v3offset] = nx3;\n                        normalArray[v4offset] = nx4;\n                        normalArray[v1offset + 1] = ny1;\n                        normalArray[v3offset + 1] = ny3;\n                        normalArray[v4offset + 1] = ny4;\n                        normalArray[v1offset + 2] = nz1;\n                        normalArray[v3offset + 2] = nz3;\n                        normalArray[v4offset + 2] = nz4;\n\n                        faceArray[faceoffset] = v1 + start;\n                        faceArray[faceoffset + 1] = v3 + start;\n                        faceArray[faceoffset + 2] = v4 + start;\n\n                        geoGroup.faceidx += 3;\n\n                    }\n\n                    // else if (Math.abs(vobj.sphereVertices[v3].y) === radius)\n                    // {\n                    else if (y === yend - 1) {\n                        // face = [v1, v2, v3];\n                        // norm = [n1, n2, n3];\n\n                        normalArray[v1offset] = nx1;\n                        normalArray[v2offset] = nx2;\n                        normalArray[v3offset] = nx3;\n                        normalArray[v1offset + 1] = ny1;\n                        normalArray[v2offset + 1] = ny2;\n                        normalArray[v3offset + 1] = ny3;\n                        normalArray[v1offset + 2] = nz1;\n                        normalArray[v2offset + 2] = nz2;\n                        normalArray[v3offset + 2] = nz3;\n\n                        faceArray[faceoffset] = v1 + start;\n                        faceArray[faceoffset + 1] = v2 + start;\n                        faceArray[faceoffset + 2] = v3 + start;\n\n                        geoGroup.faceidx += 3;\n\n                    }\n\n                    else {\n                        // face = [v1, v2, v3, v4];\n                        // norm = [n1, n2, n3, n4];\n\n                        normalArray[v1offset] = nx1;\n                        normalArray[v2offset] = nx2;\n                        normalArray[v4offset] = nx4;\n                        normalArray[v1offset + 1] = ny1;\n                        normalArray[v2offset + 1] = ny2;\n                        normalArray[v4offset + 1] = ny4;\n                        normalArray[v1offset + 2] = nz1;\n                        normalArray[v2offset + 2] = nz2;\n                        normalArray[v4offset + 2] = nz4;\n\n                        normalArray[v2offset] = nx2;\n                        normalArray[v3offset] = nx3;\n                        normalArray[v4offset] = nx4;\n                        normalArray[v2offset + 1] = ny2;\n                        normalArray[v3offset + 1] = ny3;\n                        normalArray[v4offset + 1] = ny4;\n                        normalArray[v2offset + 2] = nz2;\n                        normalArray[v3offset + 2] = nz3;\n                        normalArray[v4offset + 2] = nz4;\n\n                        faceArray[faceoffset] = v1 + start;\n                        faceArray[faceoffset + 1] = v2 + start;\n                        faceArray[faceoffset + 2] = v4 + start;\n\n                        faceArray[faceoffset + 3] = v2 + start;\n                        faceArray[faceoffset + 4] = v3 + start;\n                        faceArray[faceoffset + 5] = v4 + start;\n\n                        geoGroup.faceidx += 6;\n                    }\n\n                }\n            }\n\n        }\n\n        geoGroup.vertices += n_verts;\n    };\n\n    /** Create a cone\n     * @function $3Dmol.GLDraw.drawCone\n     * @param {geometry}\n     *            geo\n     * @param {Point}\n     *            from\n     * @param {Point}\n     *            to\n     * @param {float}\n     *            radius\n     * @param {$3Dmol.Color}\n     *            color\n     *            */\n    draw.drawCone = function(geo, from, to, radius, color) {\n        if (!from || !to)\n            return;\n\n        color = color || {r:0, g:0, b:0};\n\n        var dir =[to.x, to.y, to.z ];\n        dir.x -= from.x;\n        dir.y -= from.y;\n        dir.z -= from.z;\n\n        var e = getRotationMatrix(dir);\n\n\n        // n vertices around bottom plust the two points\n        var n = basisVectors.length;\n        var basis = basisVectors;\n        var n_verts =  n + 2;\n\n\n        //setup geo structures\n        var geoGroup = geo.updateGeoGroup(n_verts);\n        var start = geoGroup.vertices;\n        var offset, faceoffset;\n        var i, x, y, z;\n        var vertexArray = geoGroup.vertexArray;\n        var normalArray = geoGroup.normalArray;\n        var colorArray = geoGroup.colorArray;\n        var faceArray = geoGroup.faceArray;\n\n        var offset = start*3;\n        var ndir = new $3Dmol.Vector3(dir[0],dir[1],dir[2]).normalize();\n        //base point first vertex\n        vertexArray[offset] = from.x;\n        vertexArray[offset+1] = from.y;\n        vertexArray[offset+2] = from.z;\n        normalArray[offset] = -ndir.x;\n        normalArray[offset + 1] = -ndir.y;\n        normalArray[offset + 2] = -ndir.z;\n        colorArray[offset] = color.r;\n        colorArray[offset + 1] = color.g;\n        colorArray[offset + 2] = color.b;\n\n        //second vertex top\n        vertexArray[offset+3] = to.x;\n        vertexArray[offset+4] = to.y;\n        vertexArray[offset+5] = to.z;\n\n        normalArray[offset+3] = ndir.x;\n        normalArray[offset+4] = ndir.y;\n        normalArray[offset+5] = ndir.z;\n        colorArray[offset+3] = color.r;\n        colorArray[offset + 4] = color.g;\n        colorArray[offset + 5] = color.b;\n\n        offset += 6;\n\n        // add circle vertices\n        for (i = 0; i < n; ++i) {\n            var vec = basis[i].clone();\n            vec.multiplyScalar(radius);\n            x = e[0] * vec.x + e[3] * vec.y + e[6]\n                    * vec.z;\n            y = e[1] * vec.x + e[4] * vec.y + e[7]\n                    * vec.z;\n            z = e[5] * vec.y + e[8] * vec.z;\n\n            // from\n            vertexArray[offset] = x + from.x;\n            vertexArray[offset + 1] = y + from.y;\n            vertexArray[offset + 2] = z + from.z;\n\n            // normals\n            normalArray[offset] = x;\n            normalArray[offset + 1] = y;\n            normalArray[offset + 2] = z;\n\n            // colors\n            colorArray[offset] = color.r;\n            colorArray[offset + 1] = color.g;\n            colorArray[offset + 2] = color.b;\n\n            offset += 3;\n\n        }\n        geoGroup.vertices += (n+2);\n        //faces\n        var faceoffset = geoGroup.faceidx;\n        for( i = 0; i < n; i++) {\n            //two neighboring circle vertices\n            var v1 = start+2+i;\n            var v2 = start+2+ ((i+1)%n);\n\n            faceArray[faceoffset] = v1;\n            faceArray[faceoffset+1] = v2;\n            faceArray[faceoffset+2] = start;\n            faceoffset += 3;\n            faceArray[faceoffset] = v1;\n            faceArray[faceoffset+1] = v2;\n            faceArray[faceoffset+2] = start+1;\n            faceoffset += 3;\n        }\n        geoGroup.faceidx += 6*n;\n    };\n\n\n    // Sphere component\n    var sphereVertexCache = {\n        cache : {},\n        getVerticesForRadius : function(radius) {\n\n            if (typeof (this.cache[radius]) !== \"undefined\")\n                return this.cache[radius];\n\n            var obj = {\n                vertices : [],\n                verticesRows : [],\n                normals : []\n            };\n            // scale quality with radius heuristically\n            var sphereQuality = 1;\n            var widthSegments = 16 * sphereQuality;\n            var heightSegments = 10 * sphereQuality;\n            if (radius < 1) {\n                widthSegments = 10 * sphereQuality;\n                heightSegments = 8 * sphereQuality;\n            }\n\n            var phiStart = 0;\n            var phiLength = Math.PI * 2;\n\n            var thetaStart = 0;\n            var thetaLength = Math.PI;\n\n            var x, y, vertices = [], uvs = [];\n\n            for (y = 0; y <= heightSegments; y++) {\n\n                var verticesRow = [];\n                for (x = 0; x <= widthSegments; x++) {\n\n                    var u = x / widthSegments;\n                    var v = y / heightSegments;\n\n                    var vertex = {};\n                    vertex.x = -radius * Math.cos(phiStart + u * phiLength)\n                            * Math.sin(thetaStart + v * thetaLength);\n                    vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n                    vertex.z = radius * Math.sin(phiStart + u * phiLength)\n                            * Math.sin(thetaStart + v * thetaLength);\n\n                    var n = new $3Dmol.Vector3(vertex.x, vertex.y, vertex.z);\n                    n.normalize();\n\n                    obj.vertices.push(vertex);\n                    obj.normals.push(n);\n\n                    verticesRow.push(obj.vertices.length - 1);\n\n                }\n\n                obj.verticesRows.push(verticesRow);\n\n            }\n\n            this.cache[radius] = obj;\n            return obj;\n        }\n\n    };\n\n    /** Create a sphere.\n     * @function $3Dmol.GLDraw.drawSphere\n     * @param {geometry}\n     *            geo\n     * @param {Point}\n     *            pos\n     * @param {float}\n     *            radius\n     * @param {$3Dmol.Color}\n     *            color\n     */\n    draw.drawSphere = function(geo, pos, radius, color) {\n\n        var center = new $3Dmol.Vector3(pos.x, pos.y, pos.z);\n\n        var x, y;\n        var vobj = sphereVertexCache.getVerticesForRadius(radius);\n\n        var vertices = vobj.vertices;\n        var normals = vobj.normals;\n\n        var geoGroup = geo.updateGeoGroup(vertices.length);\n\n        var start = geoGroup.vertices;\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n        var faceArray = geoGroup.faceArray;\n        var lineArray = geoGroup.lineArray;\n        var normalArray = geoGroup.normalArray;\n\n        for (var i = 0, il = vertices.length; i < il; ++i) {\n            var offset = 3 * (start + i);\n            var v = vertices[i];\n\n            vertexArray[offset] = (v.x + pos.x);\n            vertexArray[offset + 1] = (v.y + pos.y);\n            vertexArray[offset + 2] = (v.z + pos.z);\n\n            colorArray[offset] = color.r;\n            colorArray[offset + 1] = color.g;\n            colorArray[offset + 2] = color.b;\n\n        }\n\n        geoGroup.vertices += vertices.length;\n\n        var verticesRows = vobj.verticesRows;\n        var h = verticesRows.length - 1;\n\n        for (y = 0; y < h; y++) {\n            var w = verticesRows[y].length - 1;\n            for (x = 0; x < w; x++) {\n\n                var faceoffset = geoGroup.faceidx, lineoffset = geoGroup.lineidx;\n\n                var v1 = verticesRows[y][x + 1] + start, v1offset = v1 * 3;\n                var v2 = verticesRows[y][x] + start, v2offset = v2 * 3;\n                var v3 = verticesRows[y + 1][x] + start, v3offset = v3 * 3;\n                var v4 = verticesRows[y + 1][x + 1] + start, v4offset = v4 * 3;\n\n                var n1 = normals[v1 - start];\n                var n2 = normals[v2 - start];\n                var n3 = normals[v3 - start];\n                var n4 = normals[v4 - start];\n                var face, norm;\n                if (Math.abs(vertices[v1 - start].y) === radius) {\n                    // face = [v1, v3, v4];\n                    // norm = [n1, n3, n4];\n\n                    normalArray[v1offset] = n1.x;\n                    normalArray[v3offset] = n3.x;\n                    normalArray[v4offset] = n4.x;\n                    normalArray[v1offset + 1] = n1.y;\n                    normalArray[v3offset + 1] = n3.y;\n                    normalArray[v4offset + 1] = n4.y;\n                    normalArray[v1offset + 2] = n1.z;\n                    normalArray[v3offset + 2] = n3.z;\n                    normalArray[v4offset + 2] = n4.z;\n\n                    faceArray[faceoffset] = v1;\n                    faceArray[faceoffset + 1] = v3;\n                    faceArray[faceoffset + 2] = v4;\n\n                    lineArray[lineoffset] = v1;\n                    lineArray[lineoffset + 1] = v3;\n                    lineArray[lineoffset + 2] = v1;\n                    lineArray[lineoffset + 3] = v4;\n                    lineArray[lineoffset + 4] = v3;\n                    lineArray[lineoffset + 5] = v4;\n\n                    geoGroup.faceidx += 3;\n                    geoGroup.lineidx += 6;\n\n                } else if (Math.abs(vertices[v3 - start].y) === radius) {\n                    // face = [v1, v2, v3];\n                    // norm = [n1, n2, n3];\n\n                    normalArray[v1offset] = n1.x;\n                    normalArray[v2offset] = n2.x;\n                    normalArray[v3offset] = n3.x;\n                    normalArray[v1offset + 1] = n1.y;\n                    normalArray[v2offset + 1] = n2.y;\n                    normalArray[v3offset + 1] = n3.y;\n                    normalArray[v1offset + 2] = n1.z;\n                    normalArray[v2offset + 2] = n2.z;\n                    normalArray[v3offset + 2] = n3.z;\n\n                    faceArray[faceoffset] = v1;\n                    faceArray[faceoffset + 1] = v2;\n                    faceArray[faceoffset + 2] = v3;\n\n                    lineArray[lineoffset] = v1;\n                    lineArray[lineoffset + 1] = v2;\n                    lineArray[lineoffset + 2] = v1;\n                    lineArray[lineoffset + 3] = v3;\n                    lineArray[lineoffset + 4] = v2;\n                    lineArray[lineoffset + 5] = v3;\n\n                    geoGroup.faceidx += 3;\n                    geoGroup.lineidx += 6;\n\n                } else {\n                    // face = [v1, v2, v3, v4];\n                    // norm = [n1, n2, n3, n4];\n\n                    normalArray[v1offset] = n1.x;\n                    normalArray[v2offset] = n2.x;\n                    normalArray[v4offset] = n4.x;\n                    normalArray[v1offset + 1] = n1.y;\n                    normalArray[v2offset + 1] = n2.y;\n                    normalArray[v4offset + 1] = n4.y;\n                    normalArray[v1offset + 2] = n1.z;\n                    normalArray[v2offset + 2] = n2.z;\n                    normalArray[v4offset + 2] = n4.z;\n\n                    normalArray[v2offset] = n2.x;\n                    normalArray[v3offset] = n3.x;\n                    normalArray[v4offset] = n4.x;\n                    normalArray[v2offset + 1] = n2.y;\n                    normalArray[v3offset + 1] = n3.y;\n                    normalArray[v4offset + 1] = n4.y;\n                    normalArray[v2offset + 2] = n2.z;\n                    normalArray[v3offset + 2] = n3.z;\n                    normalArray[v4offset + 2] = n4.z;\n\n                    faceArray[faceoffset] = v1;\n                    faceArray[faceoffset + 1] = v2;\n                    faceArray[faceoffset + 2] = v4;\n\n                    faceArray[faceoffset + 3] = v2;\n                    faceArray[faceoffset + 4] = v3;\n                    faceArray[faceoffset + 5] = v4;\n\n                    lineArray[lineoffset] = v1;\n                    lineArray[lineoffset + 1] = v2;\n                    lineArray[lineoffset + 2] = v1;\n                    lineArray[lineoffset + 3] = v4;\n\n                    lineArray[lineoffset + 4] = v2;\n                    lineArray[lineoffset + 5] = v3;\n                    lineArray[lineoffset + 6] = v3;\n                    lineArray[lineoffset + 7] = v4;\n\n                    geoGroup.faceidx += 6;\n                    geoGroup.lineidx += 8;\n\n                }\n\n            }\n        }\n\n    };\n\n    return draw;\n\n})();// A model is a collection of related atoms.  Bonds are only allowed between\n//atoms in the same model.  An atom is uniquely specified by its model id and\n//its serial number.\n//A glmodel knows how to apply the styles on each atom to create a gl object\n\nvar $3Dmol = $3Dmol || {};\n\n/**\n * GLModel represents a group of related atoms\n * @constructor\n * @param {number=} mid\n * @param {Object=} defaultcolors Object defining default atom colors as atom => color property value pairs\n * @see $3Dmol.download\n */\n$3Dmol.GLModel = (function() {\n\n    // class variables go here\n    var defaultAtomStyle = {\n        line : {}\n    };\n\n    var Nucleotides = [ '  G', '  A', '  T', '  C', '  U', ' DG', ' DA', ' DT',\n            ' DC', ' DU' ];\n\n    var defaultlineWidth = 1.0;\n\n    // Reference: A. Bondi, J. Phys. Chem., 1964, 68, 441.\n    var vdwRadii = {\n        \"H\" : 1.2,\n        \"Li\" : 1.82,\n        \"LI\" : 1.82,\n        \"Na\" : 2.27,\n        \"NA\" : 2.27,\n        \"K\" : 2.75,\n        \"C\" : 1.7,\n        \"N\" : 1.55,\n        \"O\" : 1.52,\n        \"F\" : 1.47,\n        \"P\" : 1.80,\n        \"S\" : 1.80,\n        \"CL\" : 1.75,\n        \"Cl\" : 1.75,\n        \"BR\" : 1.85,\n        \"Br\" : 1.85,\n        \"SE\" : 1.90,\n        \"Se\" : 1.90,\n        \"ZN\" : 1.39,\n        \"Zn\" : 1.39,\n        \"CU\" : 1.4,\n        \"Cu\" : 1.4,\n        \"NI\" : 1.63,\n        \"Ni\" : 1.63\n    };\n\n    var validAtomSpecs = [\n        \"resn\", // Parent residue name\n        \"x\", // Atom's x coordinate\n        \"y\", // Atom's y coordinate\n        \"z\", // Atom's z coordinate\n        \"color\", // Atom's color, as hex code\n        \"surfaceColor\", // Hex code for color to be used for surface patch over this atom\n        \"elem\", // Element abbreviation (e.g. 'H', 'Ca', etc)\n        \"hetflag\", // Set to true if atom is a heteroatom\n        \"chain\", // Chain this atom belongs to, if specified in input file (e.g 'A' for chain A)\n        \"resi\", // Residue number\n        \"icode\",\n        \"rescode\",\n        \"serial\", // Atom's serial id numbermodels\n        \"atom\", // Atom name; may be more specific than 'elem' (e.g 'CA' for alpha carbon)\n        \"bonds\", // Array of atom ids this atom is bonded to\n        \"ss\", // Secondary structure identifier (for cartoon render; e.g. 'h' for helix)\n        \"singleBonds\", // true if this atom forms only single bonds or no bonds at all\n        \"bondOrder\", // Array of this atom's bond orders, corresponding to bonds identfied by 'bonds'\n        \"properties\", // Optional mapping of additional properties\n        \"b\", // Atom b factor data\n        \"pdbline\", // If applicable, this atom's record entry from the input PDB file (used to output new PDB from models)\n        \"clickable\", // Set this flag to true to enable click selection handling for this atom\n        \"callback\", // Callback click handler function to be executed on this atom and its parent viewer\n        \"invert\" // for selection, inverts the meaning of the selection\n    ];\n\n    var validAtomSelectionSpecs = validAtomSpecs.concat([  // valid atom specs are ok too\n        \"model\", // a single model or list of models from which atoms should be selected\n        \"bonds\", // overloaded to select number of bonds, e.g. {bonds: 0} will select all nonbonded atoms\n        \"predicate\", // user supplied function that gets passed an {AtomSpec} and should return true if the atom should be selected\n        \"invert\", // if set, inverts the meaning of the selection\n        \"byres\", // if set, expands the selection to include all atoms of any residue that has any atom selected\n        \"expand\", // expands the selection to include all atoms within a given distance from the selection\n        \"within\" // intersects the selection with the set of atoms within a given distance from another selection\n    ]);\n\n    var validAtomStyleSpecs = [\n        \"line\", // draw bonds as lines\n        \"cross\", // draw atoms as crossed lines (aka stars)\n        \"stick\", // draw bonds as capped cylinders\n        \"sphere\", // draw atoms as spheres\n        \"cartoon\" // draw cartoon representation of secondary structure\n    ];\n\n    // class functions\n\n    // return true if a and b represent the same style\n    var sameObj = function(a,b) {\n        if(a && b)\n            return JSON.stringify(a) == JSON.stringify(b);\n        else\n            return a == b;\n    };\n\n\n    function GLModel(mid, defaultcolors) {\n        // private variables\n        var atoms = [];\n        var frames = [];\n        var id = mid;\n        var hidden = false;\n        var molObj = null;\n        var renderedMolObj = null;\n        var lastColors = null;\n        var modelData = {};\n        var idMatrix = new $3Dmol.Matrix4();\n        var dontDuplicateAtoms;\n        var defaultColor = $3Dmol.elementColors.defaultColor;\n\n        var ElementColors = (defaultcolors) ? defaultcolors : $3Dmol.elementColors.defaultColors;\n\n\n        // drawing functions must be associated with model object since\n        // geometries can't span multiple canvases\n\n        // sphere drawing\n        var defaultSphereRadius = 1.5;\n\n        // return proper radius for atom given style\n        /**\n         *\n         * @param {AtomSpec} atom\n         * @param {atomstyle} style\n         * @return {number}\n         *\n         */\n        var getRadiusFromStyle = function(atom, style) {\n            var r = defaultSphereRadius;\n            if (typeof (style.radius) != \"undefined\")\n                r = style.radius;\n            else if (vdwRadii[atom.elem])\n                r = vdwRadii[atom.elem];\n\n            if (typeof (style.scale) != \"undefined\")\n                r *= style.scale;\n            return r;\n        };\n\n        // cross drawing\n        /** @typedef CrossStyleSpec\n         * @prop {boolean} hidden - do not show\n         * @prop {number} linewidth\n         * @prop {number} radius\n         * @prop {number} scale - scale radius by specified amount\n         * @prop {ColorschemeSpec} colorscheme - element based coloring\n         * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n         */\n\n        /**\n         *\n         * @param {AtomSpec} atom\n         * @param {$3Dmol.Geometry[]} geos\n         */\n        var drawAtomCross = function(atom, geos) {\n            if (!atom.style.cross)\n                return;\n            var style = atom.style.cross;\n            if (style.hidden)\n                return;\n            var linewidth = (style.linewidth || defaultlineWidth);\n            if (!geos[linewidth])\n                geos[linewidth] = new $3Dmol.Geometry();\n\n            var geoGroup = geos[linewidth].updateGeoGroup(6);\n\n            var delta = getRadiusFromStyle(atom, style);\n\n            var points = [ [ delta, 0, 0 ], [ -delta, 0, 0 ], [ 0, delta, 0 ],\n                    [ 0, -delta, 0 ], [ 0, 0, delta ], [ 0, 0, -delta ] ];\n\n            var clickable = atom.clickable || atom.hoverable;\n            if (clickable && atom.intersectionShape === undefined)\n                atom.intersectionShape = {sphere : [], cylinder : [], line : []};\n\n            var c = $3Dmol.getColorFromStyle(atom, style);\n\n            var vertexArray = geoGroup.vertexArray;\n            var colorArray = geoGroup.colorArray;\n\n            for ( var j = 0; j < 6; j++) {\n\n                var offset = geoGroup.vertices*3;\n\n                geoGroup.vertices++;\n                vertexArray[offset] = atom.x + points[j][0];\n                vertexArray[offset+1] = atom.y + points[j][1];\n                vertexArray[offset+2] = atom.z + points[j][2];\n                colorArray[offset] = c.r;\n                colorArray[offset+1] = c.g;\n                colorArray[offset+2] = c.b;\n\n                if (clickable){\n                    var point = new $3Dmol.Vector3(points[j][0], points[j][1], points[j][2]);\n\n                    //decrease cross size for selection to prevent misselection from atom overlap\n                    point.multiplyScalar(0.1);\n                    point.set(point.x+atom.x, point.y+atom.y, point.z+atom.z);\n                    atom.intersectionShape.line.push(point);\n                }\n\n            }\n\n        };\n\n        //from atom, return a normalized vector v that is orthogonal and along which\n        //it is appropraite to draw multiple bonds\n        var getSideBondV = function(atom, atom2, i) {\n\n            var p1 = new $3Dmol.Vector3(atom.x, atom.y, atom.z);\n            var p2 = new $3Dmol.Vector3(atom2.x, atom2.y, atom2.z);\n\n            var dir = p2.clone();\n            var v = null;\n            dir.sub(p1);\n\n            var p1a, p1b, p2a, p2b;\n            var i2, j2, atom3, p3, dir2;\n            if (atom.bonds.length === 1) {\n                if (atom2.bonds.length === 1) {\n                    v = dir.clone();\n                    if (Math.abs(v.x) > 0.0001)\n                        v.y += 1;\n                    else\n                        v.x += 1;\n                } else {\n                    i2 = (i + 1) % atom2.bonds.length;\n                    j2 = atom2.bonds[i2];\n                    atom3 = atoms[j2];\n                    p3 = new $3Dmol.Vector3(atom3.x, atom3.y, atom3.z);\n\n                    dir2 = p3.clone();\n                    dir2.sub(p1);\n\n                    v = dir2.clone();\n                    v.cross(dir);\n                }\n            } else {\n                // get vector 2 different neighboring atom\n                i2 = (i + 1) % atom.bonds.length;\n                j2 = atom.bonds[i2];\n                atom3 = atoms[j2];\n                p3 = new $3Dmol.Vector3(atom3.x, atom3.y, atom3.z);\n\n                dir2 = p3.clone();\n                dir2.sub(p1);\n\n                v = dir2.clone();\n                v.cross(dir);\n            }\n\n            // especially for C#C (triple bond) dir and dir2\n            // may be opposites resulting in a zero v\n            if (v.lengthSq() < 0.01) {\n                v = dir.clone();\n                if (Math.abs(v.x) > 0.0001)\n                    v.y += 1;\n                else\n                    v.x += 1;\n            }\n\n            v.cross(dir);\n            v.normalize();\n\n            return v;\n\n            //v.multiplyScalar(r * 1.5);\n\n        }\n\n        var getTripleBondPoints = function() {\n\n            v.cross(dir);\n            v.normalize();\n            v.multiplyScalar(r * 3);\n\n            p1a = p1.clone();\n            p1a.add(v);\n            p1b = p1.clone();\n            p1b.sub(v);\n\n            p2a = p1a.clone();\n            p2a.add(dir);\n            p2b = p1b.clone();\n            p2b.add(dir);\n        }\n\n        var addLine = function(vertexArray, colorArray, offset, p1, p2, c1) {\n            //make line from p1 to p2, does not incremeant counts\n            vertexArray[offset] = p1.x; vertexArray[offset+1] = p1.y; vertexArray[offset+2] = p1.z;\n            colorArray[offset] = c1.r; colorArray[offset+1] = c1.g; colorArray[offset+2] = c1.b;\n            vertexArray[offset+3] = p2.x; vertexArray[offset+4] = p2.y; vertexArray[offset+5] = p2.z;\n            colorArray[offset+3] = c1.r; colorArray[offset+4] = c1.g; colorArray[offset+5] = c1.b;\n        }\n\n        /**@typedef LineStyleSpec\n         * @prop {boolean} hidden - do not show line\n         * @prop {number} linewidth\n         * @prop {ColorschemeSpec} colorscheme - element based coloring\n         * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n         */\n\n        // bonds - both atoms must match bond style\n        // standardize on only drawing for lowest to highest\n        /**\n         *\n         * @param {AtomSpec}\n         *            atom\n         * @param {AtomSpec[]} atoms\n         * @param {$3Dmol.Geometry[]} geos\n         */\n        var drawBondLines = function(atom, atoms, geos) {\n            if (!atom.style.line)\n                return;\n            var style = atom.style.line;\n            if (style.hidden)\n                return;\n\n            // have a separate geometry for each linewidth\n            var linewidth = (style.linewidth || defaultlineWidth);\n\n            if (!geos[linewidth])\n                geos[linewidth] = new $3Dmol.Geometry();\n            /** @type {geometryGroup} */\n            var geoGroup = geos[linewidth].updateGeoGroup(6*atom.bonds.length); //reserve enough space even for triple bonds\n\n            var vertexArray = geoGroup.vertexArray;\n            var colorArray = geoGroup.colorArray;\n\n            for ( var i = 0; i < atom.bonds.length; i++) {\n                var j = atom.bonds[i]; // our neighbor\n\n                var atom2 = atoms[j];\n                if (!atom2.style.line)\n                    continue; // don't sweat the details\n\n                if (atom.serial >= atom2.serial) // only draw if less, this way we can do multi bonds correctly\n                    continue;\n                var p1 = new $3Dmol.Vector3(atom.x, atom.y, atom.z);\n                var p2 = new $3Dmol.Vector3(atom2.x, atom2.y, atom2.z);\n                var mp = p1.clone().add(p2).multiplyScalar(0.5);\n                var singleBond = false;\n\n                if (atom.clickable || atom.hoverable){\n                    if (atom.intersectionShape === undefined)\n                        atom.intersectionShape = {sphere : [], cylinder : [], line : [], triangle : []};\n                    atom.intersectionShape.line.push(p1);\n                    atom.intersectionShape.line.push(p2);\n                }\n\n                var c1 = $3Dmol.getColorFromStyle(atom, atom.style.line);\n                var c2 = $3Dmol.getColorFromStyle(atom2, atom2.style.line);\n\n                if(atom.bondStyles && atom.bondStyles[i]) {\n                    var bstyle = atom.bondStyles[i];\n                    if(!bstyle.iswire) {\n                        continue;\n                    }\n                    if(bstyle.radius) bondR = bstyle.radius;\n                    if(bstyle.singleBond) singleBond = true;\n                    if(typeof(bstyle.color1) != \"undefined\") {\n                        c1 = $3Dmol.CC.color(bstyle.color1);\n                    }\n                    if(typeof(bstyle.color2) != \"undefined\") {\n                        c2 = $3Dmol.CC.color(bstyle.color2);\n                    }\n                }\n\n                var offset = geoGroup.vertices*3;\n\n                if(atom.bondOrder[i] > 1 && atom.bondOrder[i] < 4 && !singleBond) {\n                    var v = getSideBondV(atom, atom2, i);\n                    var dir = p2.clone();\n                    dir.sub(p1);\n\n                    if(atom.bondOrder[i] == 2) { //double\n\n                        v.multiplyScalar(.1);\n                           p1a = p1.clone();\n                        p1a.add(v);\n                        p1b = p1.clone();\n                        p1b.sub(v);\n\n                        p2a = p1a.clone();\n                        p2a.add(dir);\n                        p2b = p1b.clone();\n                        p2b.add(dir);\n\n                        if(c1 == c2) {\n                            geoGroup.vertices += 4;\n                            addLine(vertexArray, colorArray, offset, p1a, p2a, c1);\n                            addLine(vertexArray, colorArray, offset+6, p1b, p2b, c1);\n                        }\n                        else {\n                            geoGroup.vertices += 8;\n                            dir.multiplyScalar(0.5);\n                            var mpa = p1a.clone();\n                            mpa.add(dir);\n                            var mpb = p1b.clone();\n                            mpb.add(dir);\n\n                            addLine(vertexArray, colorArray, offset, p1a, mpa, c1);\n                            addLine(vertexArray, colorArray, offset+6, mpa, p2a, c2);\n                            addLine(vertexArray, colorArray, offset+12, p1b, mpb, c1);\n                            addLine(vertexArray, colorArray, offset+18, mpb, p2b, c2);\n                        }\n                    }\n                    else if(atom.bondOrder[i] == 3) { //triple\n\n                        v.multiplyScalar(.1);\n                           p1a = p1.clone();\n                        p1a.add(v);\n                        p1b = p1.clone();\n                        p1b.sub(v);\n\n                        p2a = p1a.clone();\n                        p2a.add(dir);\n                        p2b = p1b.clone();\n                        p2b.add(dir);\n\n                        if(c1 == c2) {\n                            geoGroup.vertices += 6;\n                            addLine(vertexArray, colorArray, offset, p1, p2, c1);\n                            addLine(vertexArray, colorArray, offset+6, p1a, p2a, c1);\n                            addLine(vertexArray, colorArray, offset+12, p1b, p2b, c1);\n                        }\n                        else {\n                            geoGroup.vertices += 12;\n                            dir.multiplyScalar(0.5);\n                            var mpa = p1a.clone();\n                            mpa.add(dir);\n                            var mpb = p1b.clone();\n                            mpb.add(dir);\n\n                            addLine(vertexArray, colorArray, offset, p1, mp, c1);\n                            addLine(vertexArray, colorArray, offset+6, mp, p2, c2);\n                            addLine(vertexArray, colorArray, offset+12, p1a, mpa, c1);\n                            addLine(vertexArray, colorArray, offset+18, mpa, p2a, c2);\n                            addLine(vertexArray, colorArray, offset+24, p1b, mpb, c1);\n                            addLine(vertexArray, colorArray, offset+30, mpb, p2b, c2);\n                        }\n                    }\n                }\n                else { //single bond\n                    if(c1 == c2) {\n                        geoGroup.vertices += 2;\n                        addLine(vertexArray, colorArray, offset, p1, p2, c1);\n                    } else {\n                        geoGroup.vertices += 4;\n                        addLine(vertexArray, colorArray, offset, p1, mp, c1);\n                        addLine(vertexArray, colorArray, offset+6, mp, p2, c2);\n                    }\n\n                }\n            }\n\n        };\n\n        // bonds as cylinders\n        var defaultStickRadius = 0.25;\n\n        /**@typedef SphereStyleSpec\n         * @prop {boolean} hidden - do not show atom\n         * @prop {number} radius - override van der waals radius\n         * @prop {number} scale - scale radius by specified amount\n         * @prop {ColorschemeSpec} colorscheme - element based coloring\n         * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n         */\n\n        //sphere drawing\n        //See also: drawCylinder\n        /**\n         *\n         * @param {AtomSpec} atom\n         * @param {$3Dmol.Geometry} geo\n         */\n        var drawAtomSphere = function(atom, geo) {\n\n            if (!atom.style.sphere)\n                return;\n            var style = atom.style.sphere;\n            if (style.hidden)\n                return;\n\n            var C = $3Dmol.getColorFromStyle(atom, style);\n\n            var x, y;\n            var radius = getRadiusFromStyle(atom, style);\n\n            if ((atom.clickable === true || atom.hoverable) && (atom.intersectionShape !== undefined)) {\n                var center = new $3Dmol.Vector3(atom.x, atom.y, atom.z);\n                atom.intersectionShape.sphere.push(new $3Dmol.Sphere(center, radius));\n            }\n\n            $3Dmol.GLDraw.drawSphere(geo, atom, radius, C);\n\n        };\n\n        var drawAtomInstanced = function(atom, geo) {\n\n            if (!atom.style.sphere)\n                return;\n            var style = atom.style.sphere;\n            if (style.hidden)\n                return;\n\n            var radius = getRadiusFromStyle(atom, style);\n            var C = $3Dmol.getColorFromStyle(atom, style);\n\n            var geoGroup = geo.updateGeoGroup(1);\n            var startv =  geoGroup.vertices;\n            var start = startv*3;\n            var vertexArray = geoGroup.vertexArray;\n            var colorArray = geoGroup.colorArray;\n            var radiusArray = geoGroup.radiusArray;\n\n            vertexArray[start] = atom.x;\n            vertexArray[start+1] = atom.y ;\n            vertexArray[start+2] = atom.z;\n\n            var normalArray = geoGroup.normalArray;\n            var colorArray = geoGroup.colorArray;\n            colorArray[start] = C.r;\n            colorArray[start+1] = C.g;\n            colorArray[start+2] = C.b;\n\n            radiusArray[startv] = radius;\n\n            if ((atom.clickable === true || atom.hoverable) && (atom.intersectionShape !== undefined)) {\n                var center = new $3Dmol.Vector3(atom.x, atom.y, atom.z);\n                atom.intersectionShape.sphere.push(new $3Dmol.Sphere(center, radius));\n            }\n\n            geoGroup.vertices += 1;\n\n        };\n\n        var drawSphereImposter = function(geo, center, radius, C) {\n            //create flat square\n            var geoGroup = geo.updateGeoGroup(4);\n            var startv =  geoGroup.vertices;\n            var start = startv*3;\n            var vertexArray = geoGroup.vertexArray;\n            var colorArray = geoGroup.colorArray;\n\n            //use center point for each vertex\n            for(var i = 0; i < 4; i++) {\n                vertexArray[start+3*i] = center.x;\n                vertexArray[start+3*i+1] = center.y ;\n                vertexArray[start+3*i+2] = center.z;\n            }\n\n\n            //same colors for all 4 vertices\n            var normalArray = geoGroup.normalArray;\n            var colorArray = geoGroup.colorArray;\n            for(var i = 0; i < 4; i++) {\n                colorArray[start+3*i] = C.r;\n                colorArray[start+3*i+1] = C.g;\n                colorArray[start+3*i+2] = C.b;\n            }\n\n            normalArray[start+0] = -radius;\n            normalArray[start+1] = radius;\n            normalArray[start+2] = 0;\n\n            normalArray[start+3] = -radius;\n            normalArray[start+4] = -radius;\n            normalArray[start+5] = 0;\n\n            normalArray[start+6] = radius;\n            normalArray[start+7] = -radius;\n            normalArray[start+8] = 0;\n\n            normalArray[start+9] = radius;\n            normalArray[start+10] = radius;\n            normalArray[start+11] = 0;\n\n            geoGroup.vertices += 4;\n\n            //two faces\n            var faceArray = geoGroup.faceArray;\n            var faceoffset = geoGroup.faceidx; //not number faces, but index\n            faceArray[faceoffset+0] = startv;\n            faceArray[faceoffset+1] = startv+1;\n            faceArray[faceoffset+2] = startv+2;\n            faceArray[faceoffset+3] = startv+2;\n            faceArray[faceoffset+4] = startv+3;\n            faceArray[faceoffset+5] = startv;\n            geoGroup.faceidx += 6;\n        };\n\n        //dkoes -  code for sphere imposters\n        var drawAtomImposter = function(atom, geo) {\n\n            if (!atom.style.sphere)\n                return;\n            var style = atom.style.sphere;\n            if (style.hidden)\n                return;\n\n            var radius = getRadiusFromStyle(atom, style);\n            var C = $3Dmol.getColorFromStyle(atom, style);\n\n            if ((atom.clickable === true || atom.hoverable) && (atom.intersectionShape !== undefined)) {\n                var center = new $3Dmol.Vector3(atom.x, atom.y, atom.z);\n                atom.intersectionShape.sphere.push(new $3Dmol.Sphere(center, radius));\n            }\n\n            drawSphereImposter(geo, atom, radius, C);\n        };\n\n\n        var drawStickImposter =  function(geo, from, to, radius, color, fromCap, toCap) {\n           //we need the four corners - two have from coord, two have to coord, the normal\n            //is the opposing point, from which we can get the normal and length\n            //also need the radius\n            var geoGroup = geo.updateGeoGroup(4);\n            var startv =  geoGroup.vertices;\n            var start = startv*3;\n            var vertexArray = geoGroup.vertexArray;\n            var colorArray = geoGroup.colorArray;\n            var radiusArray = geoGroup.radiusArray;\n            var normalArray = geoGroup.normalArray;\n            //encode extra bits of information in the color\n            var r = color.r;\n            var g = color.g;\n            var b = color.b;\n\n            var negateColor = function(c) {\n                //set sign bit\n                var n = -c;\n                if(n == 0) n = -0.0001;\n                return n;\n            };\n\n            /* for sticks, always draw caps, but we could in theory set caps in color */\n\n            //4 vertices, distinguish between p1 and p2 with neg blue\n            var pos = start;\n            for(var i = 0; i < 4; i++) {\n                vertexArray[pos] = from.x;\n                normalArray[pos] = to.x;\n                colorArray[pos] = r;\n                pos++;\n                vertexArray[pos] = from.y;\n                normalArray[pos] = to.y;\n                colorArray[pos] = g;\n                pos++;\n                vertexArray[pos] = from.z;\n                normalArray[pos] = to.z;\n                if(i < 2)\n                    colorArray[pos] = b;\n                else\n                    colorArray[pos] = negateColor(b);\n                pos++;\n            }\n\n            geoGroup.vertices += 4;\n\n            radiusArray[startv] = -radius;\n            radiusArray[startv+1] = radius;\n            radiusArray[startv+2] = -radius;\n            radiusArray[startv+3] = radius;\n\n            //two faces\n            var faceArray = geoGroup.faceArray;\n            var faceoffset = geoGroup.faceidx; //not number faces, but index\n            faceArray[faceoffset+0] = startv;\n            faceArray[faceoffset+1] = startv+1;\n            faceArray[faceoffset+2] = startv+2;\n            faceArray[faceoffset+3] = startv+2;\n            faceArray[faceoffset+4] = startv+3;\n            faceArray[faceoffset+5] = startv;\n            geoGroup.faceidx += 6;\n        };\n\n        /**@typedef StickStyleSpec\n         * @prop {boolean} hidden - do not show\n         * @prop {number} radius\n         * @prop {boolean} singleBonds - draw all bonds as single bonds if set\n         * @prop {ColorschemeSpec} colorscheme - element based coloring\n         * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n         */\n\n        // draws cylinders and small spheres (at bond radius)\n        var drawBondSticks = function(atom, atoms, geo) {\n            if (!atom.style.stick)\n                return;\n            var style = atom.style.stick;\n            if (style.hidden)\n                return;\n\n            var atomBondR = style.radius || defaultStickRadius;\n            var bondR = atomBondR;\n            var atomSingleBond = style.singleBonds || false;\n            var fromCap = 0, toCap = 0;\n\n            var C1 = $3Dmol.getColorFromStyle(atom, style);\n\n            var mp, mp1, mp2;\n\n            if (!atom.capDrawn && atom.bonds.length < 4)\n                fromCap = 2;\n\n            var drawCyl = $3Dmol.GLDraw.drawCylinder; //mesh cylinder\n            if(geo.imposter)\n                drawCyl = drawStickImposter;\n\n\n            for (var i = 0; i < atom.bonds.length; i++) {\n                var j = atom.bonds[i]; // our neighbor\n                var atom2 = atoms[j]; //parsePDB, etc should only add defined bonds\n\n                if (atom.serial < atom2.serial) {// only draw if less, this\n                    // lets us combine\n                    // cylinders of the same\n                    // color\n                    var style2 = atom2.style;\n                    if (!style2.stick)\n                        continue; // don't sweat the details\n\n                    var C2 = $3Dmol.getColorFromStyle(atom2, style2.stick);\n\n                    //support bond specific styles\n                    bondR = atomBondR;\n                    var singleBond = atomSingleBond;\n                    if(atom.bondStyles && atom.bondStyles[i]) {\n                        var bstyle = atom.bondStyles[i];\n                        if(bstyle.iswire) {\n                            continue;\n                        }\n                        if(bstyle.radius) bondR = bstyle.radius;\n                        if(bstyle.singleBond) singleBond = true;\n                        if(typeof(bstyle.color1) != \"undefined\") {\n                            C1 = $3Dmol.CC.color(bstyle.color1);\n                        }\n                        if(typeof(bstyle.color2) != \"undefined\") {\n                            C2 = $3Dmol.CC.color(bstyle.color2);\n                        }\n                    }\n                    var p1 = new $3Dmol.Vector3(atom.x, atom.y, atom.z);\n                    var p2 = new $3Dmol.Vector3(atom2.x, atom2.y, atom2.z);\n\n                    // draw cylinders\n                    if (atom.bondOrder[i] === 1 || singleBond) {\n\n                        if (!atom2.capDrawn && atom2.bonds.length < 4)\n                            toCap = 2;\n\n                        if (C1 != C2) {\n                            mp = new $3Dmol.Vector3().addVectors(p1, p2)\n                                    .multiplyScalar(0.5);\n                            drawCyl(geo, p1, mp, bondR, C1, fromCap, 0);\n                            drawCyl(geo, mp, p2, bondR, C2, 0, toCap);\n                        } else {\n                            drawCyl(geo, p1, p2, bondR, C1, fromCap, toCap);\n                        }\n\n                        if (atom.clickable || atom2.clickable) {\n                            mp = new $3Dmol.Vector3().addVectors(p1, p2).multiplyScalar(0.5);\n                            if (atom.clickable || atom.hoverable){\n                                var cylinder1 = new $3Dmol.Cylinder(p1 , mp , bondR);\n                                var sphere1 = new $3Dmol.Sphere(p1 , bondR);\n                                atom.intersectionShape.cylinder.push(cylinder1);\n                                atom.intersectionShape.sphere.push(sphere1);\n                            }\n                            if (atom2.clickable || atom2.hoverable){\n                                var cylinder2 = new $3Dmol.Cylinder(p2 , mp , bondR);\n                                var sphere2 = new $3Dmol.Sphere(p2 , bondR);\n                                atom2.intersectionShape.cylinder.push(cylinder2);\n                                atom2.intersectionShape.sphere.push(sphere2);\n                            }\n\n                        }\n\n                    }\n\n                    else if (atom.bondOrder[i] > 1) {\n                        var mfromCap = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tvar mtoCap = 0; //multi bond caps\n\n                        if(bondR != atomBondR) {\n                            //assume jmol style multiple bonds - the radius doesn't fit within atom sphere\n                            mfromCap = 2;\n                            mtoCap = 2;\n                        }\n\n                        var dir = p2.clone();\n                        var v = null;\n                        dir.sub(p1);\n\n                        var r, p1a, p1b, p2a, p2b;\n                        var v = getSideBondV(atom, atom2, i);\n\n                        if (atom.bondOrder[i] == 2) {\n                            var r = bondR/2.5;\n                            var v = getSideBondV(atom, atom2, i);\n\n                            v.multiplyScalar(r*1.5);\n                            p1a = p1.clone();\n                            p1a.add(v);\n                            p1b = p1.clone();\n                            p1b.sub(v);\n\n                            p2a = p1a.clone();\n                            p2a.add(dir);\n                            p2b = p1b.clone();\n                            p2b.add(dir);\n\n\n                            if (C1 != C2) {\n                                mp = new $3Dmol.Vector3().addVectors(p1a, p2a)\n                                        .multiplyScalar(0.5);\n                                mp2 = new $3Dmol.Vector3().addVectors(p1b, p2b)\n                                        .multiplyScalar(0.5);\n                                drawCyl(geo, p1a, mp, r, C1, mfromCap, 0);\n                                drawCyl(geo, mp, p2a, r, C2, 0, mtoCap);\n                                drawCyl(geo, p1b, mp2, r, C1, mfromCap, 0);\n                                drawCyl(geo, mp2, p2b, r, C2, 0, mtoCap);\n                            } else {\n                                drawCyl(geo, p1a, p2a, r, C1, mfromCap, mtoCap);\n                                drawCyl(geo, p1b, p2b, r, C1, mfromCap, mtoCap);\n                            }\n                            if (atom.clickable || atom2.clickable){\n                                mp = new $3Dmol.Vector3().addVectors(p1a, p2a)\n                                               .multiplyScalar(0.5);\n                                mp2 = new $3Dmol.Vector3().addVectors(p1b, p2b)\n                                                .multiplyScalar(0.5);\n                                if (atom.clickable || atom.hoverable) {\n                                    var cylinder1a = new $3Dmol.Cylinder(p1a , mp , r);\n                                    var cylinder1b = new $3Dmol.Cylinder(p1b , mp2 , r);\n                                    atom.intersectionShape.cylinder.push(cylinder1a);\n                                    atom.intersectionShape.cylinder.push(cylinder1b);\n                                }\n                                if (atom2.clickable || atom2.hoverable) {\n                                    var cylinder2a = new $3Dmol.Cylinder(p2a , mp , r);\n                                    var cylinder2b = new $3Dmol.Cylinder(p2b , mp2 , r);\n                                    atom2.intersectionShape.cylinder.push(cylinder2a);\n                                    atom2.intersectionShape.cylinder.push(cylinder2b);\n                                }\n                            }\n                        }\n                        else if (atom.bondOrder[i] == 3) {\n                            r = bondR / 4;\n                            v.cross(dir);\n                            v.normalize();\n                            v.multiplyScalar(r * 3);\n\n                            p1a = p1.clone();\n                            p1a.add(v);\n                            p1b = p1.clone();\n                            p1b.sub(v);\n\n                            p2a = p1a.clone();\n                            p2a.add(dir);\n                            p2b = p1b.clone();\n                            p2b.add(dir);\n\n                            if (C1 != C2) {\n                                mp = new $3Dmol.Vector3().addVectors(p1a, p2a)\n                                        .multiplyScalar(0.5);\n                                mp2 = new $3Dmol.Vector3().addVectors(p1b, p2b)\n                                        .multiplyScalar(0.5);\n                                mp3 = new $3Dmol.Vector3().addVectors(p1, p2)\n                                        .multiplyScalar(0.5);\n                                drawCyl(geo, p1a, mp, r, C1, mfromCap, 0);\n                                drawCyl(geo, mp, p2a, r, C2, 0, mtoCap);\n                                drawCyl(geo, p1, mp3, r, C1, fromCap, 0);\n                                drawCyl(geo, mp3, p2, r, C2, 0, toCap);\n                                drawCyl(geo, p1b, mp2, r, C1, mfromCap, 0);\n                                drawCyl(geo, mp2, p2b, r, C2, 0, mtoCap);\n                            } else {\n                                drawCyl(geo, p1a, p2a, r, C1, mfromCap, mtoCap);\n                                drawCyl(geo, p1, p2, r, C1, fromCap, toCap);\n                                drawCyl(geo, p1b, p2b, r, C1, mfromCap, mtoCap);\n\n                            }\n                            if (atom.clickable || atom2.clickable) {\n                                mp = new $3Dmol.Vector3().addVectors(p1a, p2a)\n                                        .multiplyScalar(0.5);\n                                mp2 = new $3Dmol.Vector3().addVectors(p1b, p2b)\n                                        .multiplyScalar(0.5);\n                                mp3 = new $3Dmol.Vector3().addVectors(p1, p2)\n                                        .multiplyScalar(0.5);\n\n                                if (atom.clickable || atom.hoverable) {\n                                    var cylinder1a = new $3Dmol.Cylinder(p1a.clone(), mp.clone(), r);\n                                    var cylinder1b = new $3Dmol.Cylinder(p1b.clone(), mp2.clone(), r);\n                                    var cylinder1c = new $3Dmol.Cylinder(p1.clone(), mp3.clone(), r);\n                                    atom.intersectionShape.cylinder.push(cylinder1a);\n                                    atom.intersectionShape.cylinder.push(cylinder1b);\n                                    atom.intersectionShape.cylinder.push(cylinder1c);\n                                }\n                                if (atom2.clickable || atom2.hoverable) {\n                                    var cylinder2a = new $3Dmol.Cylinder(p2a.clone(), mp.clone(), r);\n                                    var cylinder2b = new $3Dmol.Cylinder(p2b.clone(), mp2.clone(), r);\n                                    var cylinder2c = new $3Dmol.Cylinder(p2.clone(), mp3.clone(), r);\n                                    atom2.intersectionShape.cylinder.push(cylinder2a);\n                                    atom2.intersectionShape.cylinder.push(cylinder2b);\n                                    atom2.intersectionShape.cylinder.push(cylinder2c);\n                                }\n                            }\n                        }\n                    }\n\n                }\n\n            }\n\n            // draw non bonded heteroatoms as spheres\n            var drawSphere = false;\n            var numsinglebonds = 0;\n            var differentradii = false;\n            //also, if any bonds were drawn as multiples, need sphere\n            for(var i = 0; i < atom.bonds.length; i++) {\n                var singleBond = atomSingleBond;\n                if(atom.bondStyles && atom.bondStyles[i]) {\n                    var bstyle = atom.bondStyles[i];\n                    if(bstyle.singleBond) singleBond = true;\n                    if(bstyle.radius && bstyle.radius != atomBondR) {\n                        differentradii = true;\n                    }\n                }\n                if(singleBond || atom.bondOrder[i] == 1) {\n                    numsinglebonds++;\n                }\n            }\n\n            if(differentradii) { //jmol style double/triple bonds - no sphere\n                if(numsinglebonds > 0) drawSphere = true; //unless needed as a cap\n            }\n            else if(numsinglebonds == 0 && atom.bonds.length > 0) {\n                drawSphere = true;\n            }\n\n            if (drawSphere) {\n                var savedstyle = atom.style;\n                bondR = atomBondR;\n                //do not use bond style as this can be variable, particularly\n                //with jmol export of double/triple bonds\n                if(geo.imposter) {\n                    drawSphereImposter(geo.sphereGeometry, atom, bondR, C1);\n                }\n                else {\n                    $3Dmol.GLDraw.drawSphere(geo, atom, bondR, C1);\n                }\n            }\n\n        };\n\n\n\n        // go through all the atoms and regenerate their geometries\n        // we try to have one geometry for each style since this is much much\n        // faster\n        // at some point we should optimize this to avoid unnecessary\n        // recalculation\n        /** param {AtomSpec[]} atoms */\n        var createMolObj = function(atoms, options) {\n\n            options = options || {};\n\n            var ret = new $3Dmol.Object3D();\n            var cartoonAtoms = [];\n            var lineGeometries = {};\n            var crossGeometries = {};\n\n            var drawSphereFunc = drawAtomSphere;\n            var sphereGeometry = null;\n            var stickGeometry = null;\n            if (options.supportsImposters) {\n                drawSphereFunc = drawAtomImposter;\n                sphereGeometry = new $3Dmol.Geometry(true);\n                sphereGeometry.imposter = true;\n                stickGeometry = new $3Dmol.Geometry(true, true);\n                stickGeometry.imposter = true;\n                stickGeometry.sphereGeometry = sphereGeometry; //for caps\n                stickGeometry.drawnCaps = {};\n            }\n            else if (options.supportsAIA) {\n                drawSphereFunc = drawAtomInstanced;\n                sphereGeometry = new $3Dmol.Geometry(false, true,true);\n                sphereGeometry.instanced = true;\n                stickGeometry = new $3Dmol.Geometry(true); //don't actually have instanced sticks\n            }  else {\n                sphereGeometry = new $3Dmol.Geometry(true);\n                stickGeometry = new $3Dmol.Geometry(true);\n            }\n\n            var i, j, n, testOpacities;\n            var opacities = {};\n            var range = [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY];\n            for (i = 0, n = atoms.length; i < n; i++) {\n                var atom = atoms[i];\n                // recreate gl info for each atom as necessary\n                // set up appropriate intersection spheres for clickable atoms\n\n                if (atom && atom.style) {\n\n                    if ((atom.clickable || atom.hoverable) && atom.intersectionShape === undefined)\n                        atom.intersectionShape = {sphere: [], cylinder: [], line: [], triangle : []};\n\n                    testOpacities = {line:undefined, cross:undefined, stick:undefined, sphere:undefined};\n                    for (j in testOpacities)\n                    {\n                        if (atom.style[j])\n                        {\n                            if (atom.style[j].opacity)\n                                testOpacities[j] = parseFloat(atom.style[j].opacity);\n                            else\n                                testOpacities[j] = 1;\n\n                        } else testOpacities[j] = undefined;\n\n                        if (opacities[j])\n                        {\n                            if (testOpacities[j] != undefined && opacities[j] != testOpacities[j])\n                            {\n                                console.log(\"Warning: \" + j + \" opacity is ambiguous\");\n                                opacities[j] = 1;\n                            }\n\n                        } else opacities[j] = testOpacities[j];\n                    }\n\n                    drawSphereFunc(atom, sphereGeometry);\n\n                    drawAtomCross(atom, crossGeometries);\n                    drawBondLines(atom, atoms, lineGeometries);\n                    drawBondSticks(atom, atoms, stickGeometry);\n\n                    if (typeof (atom.style.cartoon) !== \"undefined\" && !atom.style.cartoon.hidden) {\n                        //gradient color scheme range\n                        if (atom.style.cartoon.color === \"spectrum\" && typeof(atom.resi) === \"number\" && !atom.hetflag) {\n                            if (atom.resi < range[0])\n                                range[0] = atom.resi;\n                            if (atom.resi > range[1])\n                                range[1] = atom.resi;\n                        }\n\n                        cartoonAtoms.push(atom);\n                    }\n                }\n            }\n            // create cartoon if needed - this is a whole model analysis\n            if (cartoonAtoms.length > 0) {\n                var gradientscheme = null;\n                //TODO: Should have an option to choose gradient type\n                if (range[0] < range[1])\n                    gradientscheme = new $3Dmol.Gradient.Sinebow(range[0], range[1]);\n\n                $3Dmol.drawCartoon(ret, cartoonAtoms, gradientscheme);\n\n            }\n\n            // add sphere geometry\n            if (sphereGeometry && sphereGeometry.vertices > 0) {\n                //Initialize buffers in geometry\n                sphereGeometry.initTypedArrays();\n                var sphereMaterial = null;\n\n                //create appropriate material\n                if(sphereGeometry.imposter) {\n                    sphereMaterial = new $3Dmol.SphereImposterMaterial({\n                        ambient : 0x000000,\n                        vertexColors : true,\n                        reflectivity : 0\n                    });\n                }\n                else if(sphereGeometry.instanced) {\n                    var sphere = new $3Dmol.Geometry(true);\n                    $3Dmol.GLDraw.drawSphere(sphere, {x:0, y:0, z:0}, 1, new $3Dmol.Color(0.5, 0.5, 0.5));\n                    sphere.initTypedArrays();\n                    sphereMaterial = new $3Dmol.InstancedMaterial({\n                        sphereMaterial : new $3Dmol.MeshLambertMaterial({\n                            ambient : 0x000000,\n                            vertexColors : true,\n                            reflectivity : 0,\n                        }),\n                        sphere : sphere\n                    });\n                }\n                else { //regular mesh\n                    var sphereMaterial = new $3Dmol.MeshLambertMaterial({\n                        ambient : 0x000000,\n                        vertexColors : true,\n                        reflectivity : 0,\n                    });\n                }\n                if (opacities.sphere < 1 && opacities.sphere >= 0)\n                {\n                    sphereMaterial.transparent = true;\n                    sphereMaterial.opacity = opacities.sphere;\n                }\n\n                var sphere = new $3Dmol.Mesh(sphereGeometry, sphereMaterial);\n                ret.add(sphere);\n            }\n\n            // add stick geometry\n            if (stickGeometry.vertices > 0) {\n\n                if(stickGeometry.imposter) {\n                    var imposterMaterial = new $3Dmol.StickImposterMaterial({\n                        ambient : 0x000000,\n                        vertexColors : true,\n                        reflectivity : 0\n                    });\n\n                    //Initialize buffers in geometry\n                    stickGeometry.initTypedArrays();\n\n                    var sticks = new $3Dmol.Mesh(stickGeometry, imposterMaterial);\n                    ret.add(sticks);\n                } else {\n                    var cylinderMaterial = new $3Dmol.MeshLambertMaterial({\n                        vertexColors : true,\n                        ambient : 0x000000,\n                        reflectivity : 0\n                    });\n                    if (opacities.stick < 1 && opacities.stick >= 0)\n                    {\n                        cylinderMaterial.transparent = true;\n                        cylinderMaterial.opacity = opacities.stick;\n                    }\n\n                    //Initialize buffers in geometry\n                    stickGeometry.initTypedArrays();\n\n                    if (cylinderMaterial.wireframe)\n                        stickGeometry.setUpWireframe();\n\n                    var sticks = new $3Dmol.Mesh(stickGeometry, cylinderMaterial);\n                    ret.add(sticks);\n                }\n            }\n\n            //var linewidth;\n            // add any line geometries, distinguished by line width\n            for (i in lineGeometries) {\n                if (lineGeometries.hasOwnProperty(i)) {\n                    var linewidth = i;\n                    var lineMaterial = new $3Dmol.LineBasicMaterial({\n                        linewidth : linewidth,\n                        vertexColors : true\n                    });\n                    if (opacities.line < 1 && opacities.line >= 0)\n                    {\n                        lineMaterial.transparent = true;\n                        lineMaterial.opacity = opacities.line;\n                    }\n\n                    lineGeometries[i].initTypedArrays();\n\n                    var line = new $3Dmol.Line(lineGeometries[i], lineMaterial,\n                            $3Dmol.LinePieces);\n\n                    ret.add(line);\n                }\n            }\n\n            // add any cross geometries\n            for (i in crossGeometries) {\n                if (crossGeometries.hasOwnProperty(i)) {\n                    var linewidth = i;\n                    var crossMaterial = new $3Dmol.LineBasicMaterial({\n                        linewidth : linewidth,\n                        vertexColors : true\n                    });\n                    if (opacities.cross < 1 && opacities.cross >= 0)\n                    {\n                        crossMaterial.transparent = true;\n                        crossMaterial.opacity = opacities.cross;\n                    }\n\n                    crossGeometries[i].initTypedArrays();\n\n                    var cross = new $3Dmol.Line(crossGeometries[i], crossMaterial,\n                            $3Dmol.LinePieces);\n\n                    ret.add(cross);\n                }\n            }\n\n            //for BIOMT assembly\n            if (dontDuplicateAtoms && modelData.symmetries && modelData.symmetries.length > 0) {\n                var finalRet = new $3Dmol.Object3D();\n                var t;\n                for (t = 0; t < modelData.symmetries.length; t++) {\n                    var transformedRet = new $3Dmol.Object3D();\n                    transformedRet = ret.clone();\n                    transformedRet.matrix.copy(modelData.symmetries[t]);\n                    transformedRet.matrixAutoUpdate = false;\n                    finalRet.add(transformedRet);\n                }\n                return finalRet;\n            }\n\n            return ret;\n        };\n\n\n        this.getCrystData = function() {\n            if (modelData.cryst) {\n                return modelData.cryst;\n            }\n            else {\n                return null;\n            }\n        }\n\n        /**\n         * Returns list of rotational/translational matrices if there is BIOMT data\n         * Otherwise returns a list of just the ID matrix\n         *\n         * @function $3Dmol.GlModel#getSymmetries\n         * @return {Array<$3Dmol.Matrix4>}\n         *\n         */\n        this.getSymmetries = function() {\n\n            if (typeof(modelData.symmetries) == 'undefined') {\n                modelData.symmetries = [idMatrix];\n            }\n            return modelData.symmetries;\n        };\n\n        /**\n         * Sets symmetries based on specified matrices in list\n         *\n         * @function $3Dmol.GlModel#setSymmetries\n         * @param {Array<$3Dmol.Matrix4>} list\n         *\n         */\n        this.setSymmetries = function(list) {\n            if (typeof(list) == \"undefined\") { //delete sym data\n                modelData.symmetries = [idMatrix];\n            }\n            else {\n                modelData.symmetries = list;\n            }\n        };\n\n        /**\n         * Returns model id number\n         *\n         * @function $3Dmol.GLModel#getID\n         * @return {number} Model ID\n         */\n        this.getID = function() {\n            return id;\n        };\n\n        /**\n         * Returns model's frames property, a list of atom lists\n         *\n         * @function $3Dmol.GLModel#getFrames\n         * @return {Array.<Object>}\n         */\n        this.getFrames = function() {\n            return frames;\n        };\n\n                  // AMV HACK\n                  this.forceRedraw = function(){\n                  molObj = null;\n                  }\n\n        /**\n         * Sets model's atomlist to specified frame\n         * Sets to last frame if framenum out of range\n         *\n         * @function $3Dmol.GLModel#setFrame\n         * @param {number} framenum - model's atoms are set to this index in frames list\n         */\n        this.setFrame = function(framenum) {\n            if (frames.length == 0) {\n                return;\n            }\n            if (framenum >= 0 && framenum < frames.length) {\n                atoms = frames[framenum];\n            }\n            else {\n                atoms = frames[frames.length-1];\n            }\n            molObj = null;\n        };\n\n        /**\n         * Add atoms as frames of model\n         *\n         * @function $3Dmol.GLModel#addFrame\n         * @param {AtomSpec} atom - atoms to be added\n         */\n        this.addFrame = function(atoms) {\n            frames.push(atoms);\n        };\n\n\n        /**\n         * If model atoms have dx, dy, dz properties (in some xyz files), vibrate populates the model's frame property based on parameters.\n         * Model can then be animated\n         *\n         * @function $3Dmol.GLModel#vibrate\n         * @param {number} numFrames - number of frames to be created, default to 10\n         * @param {number} amplitude - amplitude of distortion, default to 1 (full)\n         */\n        this.vibrate = function(numFrames, amplitude) {\n            var vectors = [];\n            var amplitude = amplitude || 1;\n            var numFrames = numFrames || 10;\n            for (var i = 0; i < atoms.length; i++) {\n                var vector = new $3Dmol.Vector3(atoms[i].dx, atoms[i].dy, atoms[i].dz);\n                vectors.push(vector);\n            }\n            numFrames--;\n            for (var i = 1; i <= numFrames; i++) {\n                var newAtoms = [];\n                for (var j = 0; j < atoms.length; j++) {\n                    var newVector = new $3Dmol.Vector3(atoms[j].dx, atoms[j].dy, atoms[j].dz);\n                    var starting = new $3Dmol.Vector3(atoms[j].x, atoms[j].y, atoms[j].z);\n                    newVector.sub(starting);\n                    newVector.multiplyScalar((i*amplitude)/numFrames);\n                    starting.add(newVector);\n                    var newAtom = {};\n                    for (var k in atoms[j]) {\n                        newAtom[k] = atoms[j][k];\n                    }\n                    newAtom.x = starting.x;\n                    newAtom.y = starting.y;\n                    newAtom.z = starting.z;\n                    newAtoms.push(newAtom);\n                }\n                frames.push(newAtoms);\n            }\n            frames.unshift(atoms); //add 1st frame\n        };\n\n        // set default style and colors for atoms\n        this.setAtomDefaults = function(atoms) {\n            for ( var i = 0; i < atoms.length; i++) {\n                var atom = atoms[i];\n                if (atom) {\n                    atom.style = atom.style || defaultAtomStyle;\n                    atom.color = atom.color || ElementColors[atom.elem] || defaultColor;\n                    atom.model = id;\n                    if (atom.clickable || atom.hoverable)\n                        atom.intersectionShape = {sphere : [], cylinder : [], line : [], triangle : []};\n                }\n            }\n        };\n\n        /** add atoms to this model from molecular data string\n         *\n         * @function $3Dmol.GLModel#addMolData\n         * @param {string|ArrayBuffer} data - atom structure file input data string, for gzipped input use ArrayBuffer\n         * @param {string} format - input file string format (e.g 'pdb', 'sdf', 'sdf.gz', etc.)\n         * @param {Object} options - format dependent options (e.g. 'options.keepH' to keep hydrogens)\n         */\n        this.addMolData = function(data, format, options) {\n            options = options || {};\n            var parsedAtoms = $3Dmol.GLModel.parseMolData(data, format, options);\n            dontDuplicateAtoms = !options.duplicateAssemblyAtoms;\n            var mData = parsedAtoms.modelData;\n            if (mData) {\n                if (Array.isArray(mData)) {\n                    modelData = mData[0];\n                } else {\n                    modelData = mData;\n                }\n            }\n\n            if (frames.length == 0) { //first call\n                for (var i = 0; i < parsedAtoms.length; i++) {\n                    if (parsedAtoms[i].length != 0)\n                        frames.push(parsedAtoms[i]);\n                }\n                if(frames[0])\n                    atoms = frames[0];\n            }\n\n            else { //subsequent calls\n                if (options.frames) { //add to new frame\n                    for (var i = 0; i < parsedAtoms.length; i++) {\n                        frames.push(parsedAtoms[i]);\n                    }\n                }\n                else { //add atoms to current frame\n                    for (var i = 0; i < parsedAtoms.length; i++) {\n                        this.addAtoms(parsedAtoms[i]);\n                    }\n                }\n            }\n\n            for (var i = 0; i < frames.length; i++) {\n                this.setAtomDefaults(frames[i], id);\n            }\n\n            if(options.vibrate && options.vibrate.frames && options.vibrate.amplitude) {\n                //fill in vibrational modes\n                this.vibrate(options.vibrate.frames, options.vibrate.amplitude);\n            }\n\n        };\n\n        this.setDontDuplicateAtoms = function(dup) {\n            dontDuplicateAtoms = dup;\n        }\n\n        this.setModelData = function(mData) {\n            modelData = mData;\n        }\n\n        /** given a selection specification, return true if atom is selected\n         *\n         * @function $3Dmol.GLModel#atomIsSelected\n         * @param {AtomSpec} atom\n         * @param {AtomSelectionSpec} sel\n         * @return {boolean}\n         */\n        this.atomIsSelected = function(atom, sel) {\n            if (typeof (sel) === \"undefined\")\n                return true; // undef gets all\n            var invert = !!sel.invert;\n            var ret = true;\n            for ( var key in sel) {\n                if(key === 'predicate') { //a user supplied function for evaluating atoms\n                    if(!sel['predicate'](atom) ) {\n                        ret = false;\n                        break;\n                    }\n                }\n                else if(key == \"properties\" && atom[key]) {\n                    for (var propkey in sel.properties) {\n                        if(typeof(atom.properties[propkey]) === 'undefined') {\n                            ret = false;\n                            break\n                        }\n                        if(atom.properties[propkey] != sel.properties[propkey]) {\n                            ret = false;\n                            break;\n                        }\n                    }\n                }\n                else if (sel.hasOwnProperty(key) && key != \"props\" && key != \"invert\" && key != \"model\" && key != \"byres\" && key != \"expand\" && key != \"within\") {\n\n                    // if something is in sel, atom must have it\n                    if (typeof (atom[key]) === \"undefined\") {\n                        ret = false;\n                        break;\n                    }\n                    var isokay = false;\n                    if(key === \"bonds\") {\n                        //special case counting number of bonds, for selecting nonbonded mostly\n                        var val = sel[key];\n                        if(val != atom.bonds.length) {\n                            ret = false;\n                            break;\n                        }\n                    }\n                    else if ($.isArray(sel[key])) {\n                        // can be any of the listed values\n                        var valarr = sel[key];\n                        for ( var i = 0; i < valarr.length; i++) {\n                            if (atom[key] == valarr[i]) {\n                                isokay = true;\n                                break;\n                            }\n                        }\n                        if (!isokay) {\n                            ret = false;\n                            break;\n                        }\n                    } else { // single match\n                        var val = sel[key];\n                        if (atom[key] != val) {\n                            ret = false;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return invert ? !ret : ret;\n        };\n\n\n        /** return list of atoms selected by sel, this is specific to glmodel\n         *\n         * @function $3Dmol.GLModel#selectedAtoms\n         * @param {AtomSelectionSpec} sel\n         * @return {Array.<Object>}\n         */\n        this.selectedAtoms = function(sel, from) {\n            var ret = [];\n            sel = sel || {};\n            if (!from) from = atoms;\n            var aLength = from.length;\n            for ( var i = 0; i < aLength; i++) {\n                var atom = from[i];\n                if (atom) {\n                    if (this.atomIsSelected(atom, sel))\n                        ret.push(atom);\n                }\n            }\n\n            // expand selection by some distance\n            if (sel.hasOwnProperty(\"expand\")) {\n\n                // get atoms in expanded bounding box\n\n                var expand = expandAtomList(ret, parseFloat(sel.expand));\n                var retlen = ret.length;\n                for (var i = 0; i < expand.length; i++) {\n                    for (var j = 0; j < retlen; j++) {\n\n                        var dist = squaredDistance(expand[i], ret[j]);\n                        var thresh = Math.pow(sel.expand, 2);\n                        if (dist < thresh && dist > 0) {\n                            ret.push(expand[i]);\n                        }\n                    }\n                }\n            }\n\n            // selection within distance of sub-selection\n            if (sel.hasOwnProperty(\"within\") && sel.within.hasOwnProperty(\"sel\") && sel.within.hasOwnProperty(\"distance\")) {\n\n                // get atoms in second selection\n                var sel2 = this.selectedAtoms(sel.within.sel, atoms);\n                var within = [];\n                for (var i = 0; i < sel2.length; i++) {\n                    for (var j = 0; j < ret.length; j++) {\n\n                        var dist = squaredDistance(sel2[i], ret[j]);\n                        var thresh = Math.pow(parseFloat(sel.within.distance), 2);\n                        if (dist < thresh && dist > 0) {\n                            within.push(ret[j]);\n                        }\n                    }\n                }\n                ret = within;\n            }\n\n            // byres selection flag\n            if (sel.hasOwnProperty(\"byres\")) {\n\n                // Keep track of visited residues, visited atoms, and atom stack\n                var vResis = {};\n                var vAtoms = [];\n                var stack = [];\n\n                for (var i = 0; i < ret.length; i++) {\n\n                    // Check if atom is part of a residue, and that the residue hasn't been traversed yet\n                    var atom = ret[i];\n                    var c = atom.chain;\n                    var r = atom.resi;\n                    if (vResis[c] === undefined) vResis[c] = {};\n                    if (atom.hasOwnProperty(\"resi\") && vResis[c][r] === undefined) {\n\n                        // Perform a depth-first search of atoms with the same resi\n                        vResis[c][r] = true;\n                        stack.push(atom);\n                        while(stack.length > 0) {\n                            atom = stack.pop();\n                            c = atom.chain;\n                            r = atom.resi;\n                            if (vAtoms[atom.index] === undefined) {\n                                vAtoms[atom.index] = true;\n                                for (var j = 0; j < atom.bonds.length; j++) {\n                                    var atom2 = atoms[atom.bonds[j]];\n                                    if (vAtoms[atom2.index] === undefined && atom2.hasOwnProperty(\"resi\") && atom2.chain == c && atom2.resi == r) {\n                                        stack.push(atom2);\n                                        ret.push(atom2);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        var squaredDistance = function(atom1, atom2) {\n            var xd = atom2.x - atom1.x;\n            var yd = atom2.y - atom1.y;\n            var zd = atom2.z - atom1.z;\n            return (Math.pow(xd, 2) + Math.pow(yd, 2) + Math.pow(zd, 2));\n        };\n\n        /** returns a list of atoms in the expanded bounding box, but not in the current one\n         *\n         *  Bounding box:\n         *\n         *    [ [ xmin, ymin, zmin ],\n         *      [ xmax, ymax, zmax ],\n         *      [ xctr, yctr, zctr ] ]\n         *\n         **/\n        var expandAtomList = function(atomList, amt) {\n\n            if (amt <= 0) return atomList;\n\n            var pb = $3Dmol.getExtent(atomList); // previous bounding box\n            var nb = [[], [], []]; // expanded bounding box\n\n            for (var i = 0; i < 3; i++)\n            {\n                nb[0][i] = pb[0][i]-amt;\n                nb[1][i] = pb[1][i]+amt;\n                nb[2][i] = pb[2][i];\n            }\n\n            // look in added box \"shell\" for new atoms\n            var expand = [];\n            for (var i = 0; i < atoms.length; i++) {\n\n                var x = atoms[i].x;\n                var y = atoms[i].y;\n                var z = atoms[i].z;\n\n                if (x >= nb[0][0] && x <= nb[1][0] && y >= nb[0][1] && y <= nb[1][1] && z >= nb[0][2] && z <= nb[1][2]) {\n                    if (!(x >= pb[0][0] && x <= pb[1][0] && y >= pb[0][1] && y <= pb[1][1] && z >= pb[0][2] && z <= pb[1][2])) {\n                        expand.push(atoms[i]);\n                    }\n                }\n            }\n            return expand;\n        };\n\n        /** Add list of new atoms to model.  Adjusts bonds appropriately.\n         *\n         * @function $3Dmol.GLModel#addAtoms\n         * @param {type} newatoms\n         */\n        this.addAtoms = function(newatoms) {\n            molObj = null;\n            var start = atoms.length;\n            var indexmap = [];\n            // mapping from old index to new index\n            var i;\n            for(i = 0; i < newatoms.length; i++) {\n                if(typeof(newatoms[i].index) == \"undefined\")\n                    newatoms[i].index = i;\n                if(typeof(newatoms[i].serial) == \"undefined\")\n                    newatoms[i].serial = i;\n                indexmap[newatoms[i].index] = start+i;\n            }\n\n            // copy and push newatoms onto atoms\n            for(i = 0; i < newatoms.length; i++) {\n                var olda = newatoms[i];\n                var nindex = indexmap[olda.index];\n                var a = $.extend(false, {}, olda);\n                a.index = nindex;\n                a.bonds = [];\n                a.bondOrder = [];\n                a.model = id;\n                a.style = a.style || defaultAtomStyle;\n                if(typeof(a.color) == \"undefined\")\n                    a.color = ElementColors[a.elem] || defaultColor;\n                // copy over all bonds contained in selection,\n                // updating indices appropriately\n                var nbonds = olda.bonds ? olda.bonds.length : 0;\n                for(var j = 0; j < nbonds; j++) {\n                    var neigh = indexmap[olda.bonds[j]];\n                    if(typeof(neigh) != \"undefined\") {\n                        a.bonds.push(neigh);\n                        a.bondOrder.push(olda.bondOrder ? olda.bondOrder[j] : 1);\n                    }\n                }\n                atoms.push(a);\n            }\n        };\n\n        /** Remove specified atoms from model\n         *\n         * @function $3Dmol.GLModel#removeAtoms\n         * @param {type} badatoms\n         * @return {removeAtoms}\n         */\n        this.removeAtoms = function(badatoms) {\n            molObj = null;\n            // make map of all baddies\n            var baddies = [];\n            var i;\n            for(i = 0; i < badatoms.length; i++) {\n                baddies[badatoms[i].index] = true;\n            }\n\n            // create list of good atoms\n            var newatoms = [];\n            for(i = 0; i < atoms.length; i++) {\n                var a = atoms[i];\n                if(!baddies[a.index])\n                    newatoms.push(a);\n            }\n\n            // clear it all out\n            atoms = [];\n            // and add back in to get updated bonds\n            this.addAtoms(newatoms);\n        };\n\n\n        /** Set atom style of selected atoms\n         *\n         * @function $3Dmol.GLModel#setStyle\n         * @param {AtomSelectionSpec} sel\n         * @param {AtomStyleSpec} style\n         * @param {boolean} add - if true, add to current style, don't replace\n         */\n        this.setStyle = function(sel, style, add) {\n\n            if(typeof(style) === 'undefined' && typeof(add) == 'undefined') {\n                //if a single argument is provided, assume it is a style and select all\n                style = sel;\n                sel = {};\n            }\n\n            // report to console if this is not a valid selector\n            var s;\n            for (s in sel) {\n                if(validAtomSelectionSpecs.indexOf(s) === -1) {\n                    console.log('Unknown selector ' + s);\n                }\n            }\n            // report to console if this is not a valid style\n            for (s in style) {\n                if(validAtomStyleSpecs.indexOf(s) === -1) {\n                    console.log('Unknown style ' + s);\n                }\n            }\n\n            var changedAtoms = false;\n            // somethings we only calculate if there is a change in a certain\n            // style, although these checks will only catch cases where both\n            // are either null or undefined\n\n            var setStyleHelper = function(atomArr) {\n                var selected = that.selectedAtoms(sel, atomArr);\n                for (var i = 0; i < atomArr.length; i++) {\n                    if (atomArr[i]) atomArr[i].capDrawn = false; //reset for proper stick render\n                }\n\n                for ( var i = 0; i < selected.length; i++) {\n                    changedAtoms = true;\n                    if (selected[i].clickable || selected[i].hoverable)\n                        selected[i].intersectionShape = {sphere : [], cylinder : [], line : [], triangle : []};\n\n\n                    if(!add) selected[i].style = {};\n                    for(s in style) {\n                        if(style.hasOwnProperty(s)) {\n                            selected[i].style[s]=selected[i].style[s]||{}; //create distinct object for each atom\n                            for(var prop in style[s]){\n                                selected[i].style[s][prop]=style[s][prop];\n                            }\n                        }\n                    }\n                }\n            }\n\n            var that = this;\n            setStyleHelper(atoms);\n            for (var i = 0; i < frames.length; i++) {\n                setStyleHelper(frames[i]);\n            }\n\n            if (changedAtoms)\n                molObj = null; //force rebuild\n\n        };\n\n        /** Set clickable and callback of selected atoms\n         *\n         * @function $3Dmol.GLModel#setClickable\n         * @param {AtomSelectionSpec} sel - atom selection to apply clickable settings to\n         * @param {boolean} clickable - whether click-handling is enabled for the selection\n         * @param {function} callback - function called when an atom in the selection is clicked\n         */\n        this.setClickable = function(sel, clickable, callback) {\n\n            // report to console if this is not a valid selector\n            var s;\n            for (s in sel) {\n                if (validAtomSelectionSpecs.indexOf(s) === -1) {\n                    console.log('Unknown selector ' + s);\n                }\n            }\n\n            // make sure clickable is a boolean\n            clickable = !!clickable;\n\n            // report to console if callback is not a valid function\n            if (callback && typeof callback != \"function\") {\n                console.log(\"Callback is not a function\");\n                return;\n            }\n\n            var i;\n            var selected = this.selectedAtoms(sel, atoms);\n            var len = selected.length;\n            for (i = 0; i < len; i++) {\n\n                selected[i].intersectionShape = {sphere : [], cylinder : [], line : [], triangle : []};\n                selected[i].clickable = clickable;\n                if (callback) selected[i].callback = callback;\n\n            }\n\n            if (len > 0) molObj = null; // force rebuild to get correct intersection shapes\n        };\n\n        this.setHoverable = function(sel, hoverable, hover_callback,unhover_callback){\n            var s;\n            for (s in sel) {\n                if (validAtomSelectionSpecs.indexOf(s) === -1) {\n                    console.log('Unknown selector ' + s);\n                }\n            }\n\n            // make sure hoverable is a boolean\n            hoverable = !!hoverable;\n\n            // report to console if hover_callback is not a valid function\n            if (hover_callback && typeof hover_callback != \"function\") {\n                console.log(\"Hover_callback is not a function\");\n                return;\n            }\n            // report to console if unhover_callback is not a valid function\n            if (unhover_callback && typeof unhover_callback != \"function\") {\n                console.log(\"Unhover_callback is not a function\");\n                return;\n            }\n\n            var i;\n            var selected = this.selectedAtoms(sel, atoms);\n            var len = selected.length;\n            for (i = 0; i < len; i++) {\n\n                selected[i].intersectionShape = {sphere : [], cylinder : [], line : [], triangle : []};\n                selected[i].hoverable= hoverable;\n                if (hover_callback) selected[i].hover_callback = hover_callback;\n                if (unhover_callback) selected[i].unhover_callback = unhover_callback;\n\n            }\n\n            if (len > 0) molObj = null; // force rebuild to get correct intersection shapes\n        }\n        /** given a mapping from element to color, set atom colors\n         *\n         * @function $3Dmol.GLModel#setColorByElement\n         * @param {type} sel\n         * @param {type} colors\n         */\n        this.setColorByElement = function(sel, colors) {\n\n            if(molObj !== null && sameObj(colors,lastColors))\n                return; // don't recompute\n            lastColors = colors;\n            var atoms = this.selectedAtoms(sel, atoms);\n            if(atoms.length > 0)\n                molObj = null; // force rebuild\n            for ( var i = 0; i < atoms.length; i++) {\n                var a = atoms[i];\n                if(typeof(colors[a.elem]) !== \"undefined\") {\n                    a.color = colors[a.elem];\n                }\n            }\n        };\n\n        /**\n         * @function $3Dmol.GLModel.setColorByProperty\n         * @param {type} sel\n         * @param {type} prop\n         * @param {type} scheme\n         */\n        this.setColorByProperty = function(sel, prop, scheme, range) {\n            var atoms = this.selectedAtoms(sel, atoms);\n            lastColors = null; // don't bother memoizing\n            if(atoms.length > 0)\n                molObj = null; // force rebuild\n            var min =  Number.POSITIVE_INFINITY;\n            var max =  Number.NEGATIVE_INFINITY;\n            var i, a;\n\n            if(!range) { //no explicit range, get from scheme\n                range = scheme.range();\n            }\n\n            if(!range) { //no range in scheme, compute the range for this model\n                range = $3Dmol.getPropertyRange(atoms, prop);\n            }\n            // now apply colors using scheme\n            for (i = 0; i < atoms.length; i++) {\n                a = atoms[i];\n                var val = $3Dmol.getAtomProperty(a, prop);\n                if(val != null) {\n                    a.color = scheme.valueToHex(parseFloat(a.properties[prop]), [range[0],range[1]]);\n                }\n            }\n        };\n\n        /**\n         * @function $3Dmol.GLModel.setColorByFunction\n         * @param {type} sel\n         * @param {type} func\n         */\n        this.setColorByFunction = function(sel, colorfun) {\n            var atoms = this.selectedAtoms(sel, atoms);\n            lastColors = null; // don't bother memoizing\n            if(atoms.length > 0)\n                molObj = null; // force rebuild\n\n            // now apply colorfun\n            for (i = 0; i < atoms.length; i++) {\n                a = atoms[i];\n                a.color = colorfun(a);\n            }\n        };\n\n        /** Convert the model into an object in the format of a ChemDoodle JSON model.\n         *\n         * @function $3Dmol.GLModel#toCDObject\n         * @param {boolean} whether or not to include style information. Defaults to false.\n         * @return {Object}\n         */\n        this.toCDObject = function(includeStyles) {\n            var out = { a:[], b:[] };\n            if (includeStyles) {\n                out.s = [];\n            }\n            for (var i = 0; i < atoms.length; i++) {\n                var atomJSON = {};\n                var atom = atoms[i];\n                atomJSON.x = atom.x;\n                atomJSON.y = atom.y;\n                atomJSON.z = atom.z;\n                if (atom.elem != \"C\") {\n                    atomJSON.l = atom.elem;\n                }\n                if (includeStyles) {\n                    var s = 0;\n                    while (s < out.s.length &&\n                          (JSON.stringify(atom.style) !== JSON.stringify(out.s[s]))) {\n                        s++;\n                    }\n                    if (s === out.s.length) {\n                        out.s.push(atom.style);\n                    }\n                    if (s !== 0) {\n                        atomJSON.s = s;\n                    }\n                }\n\n                out.a.push(atomJSON);\n\n                for (var b = 0; b < atom.bonds.length; b++) {\n                    var firstAtom = i;\n                    var secondAtom = atom.bonds[b];\n                    if (firstAtom >= secondAtom)\n                        continue;\n                    var bond = {\n                        b: firstAtom,\n                        e: secondAtom\n                    };\n                    var bondOrder =  atom.bondOrder[b];\n                    if (bondOrder != 1) {\n                        bond.o = bondOrder;\n                    }\n                    out.b.push(bond);\n                }\n            }\n            return out;\n        }\n\n\n        /** manage the globj for this model in the possed modelGroup - if it has to be regenerated, remove and add\n         *\n         * @function $3Dmol.GLModel#globj\n         * @param {$3Dmol.Object3D} group\n         * @param Object options\n         */\n        this.globj = function(group, options) {\n            var time = new Date();\n            if(molObj === null) { // have to regenerate\n                molObj = createMolObj(atoms, options);\n                var time2 = new Date();\n                //console.log(\"object creation time: \" + (time2 - time));\n                if(renderedMolObj) { // previously rendered, remove\n                    group.remove(renderedMolObj);\n                    renderedMolObj = null;\n                }\n                renderedMolObj = molObj.clone();\n                if(hidden) {\n                    renderedMolObj.setVisible(false);\n                    molObj.setVisible(false);\n                }\n                group.add(renderedMolObj);\n            }\n        };\n\n        /** Remove any renderable mol object from scene\n         *\n         * @function $3Dmol.GLModel#removegl\n         * @param {$3Dmol.Object3D} group\n         */\n        this.removegl = function(group) {\n            if(renderedMolObj) {\n                //dispose of geos and materials\n                if (renderedMolObj.geometry !== undefined) renderedMolObj.geometry.dispose();\n                if (renderedMolObj.material !== undefined) renderedMolObj.material.dispose();\n                group.remove(renderedMolObj);\n                renderedMolObj = null;\n            }\n            molObj = null;\n        };\n\n        /** Don't show this model is future renderings.  Keep all styles and state\n         * so it can be efficiencly shown again.\n         *\n         * @function $3Dmol.GLModel#hide\n         */\n        this.hide = function() {\n            hidden = true;\n            if(renderedMolObj) renderedMolObj.setVisible(false);\n            if(molObj) molObj.setVisible(false);\n        }\n\n        this.show = function() {\n            hidden = false;\n            if(renderedMolObj) renderedMolObj.setVisible(true);\n            if(molObj) molObj.setVisible(true);\n        }\n\n        /** Create labels for residues of selected atoms.\n         * Will create a single label at the center of mass of all atoms\n         * with the same chain,resn, and resi.\n         * @function $3Dmol.GLModel#addResLabels\n         *\n         * @param {AtomSelectionSpec} sel\n         * @param {$3Dmol.GLViewer} viewer\n         */\n        this.addResLabels = function(sel, viewer, style) {\n            var atoms = this.selectedAtoms(sel, atoms);\n            var bylabel = {}\n            //collect by chain:resn:resi\n            for(var i = 0; i < atoms.length; i++) {\n                var a = atoms[i];\n                var c = a.chain;\n                var resn = a.resn;\n                var resi = a.resi;\n                var label =  resn + '' + resi;\n                if(!bylabel[c]) bylabel[c] = {};\n                if(!bylabel[c][label]) bylabel[c][label] = []\n                bylabel[c][label].push(a);\n            }\n\n            var mystyle = $.extend(true, {}, style);\n            //now compute centers of mass\n            for(var c in bylabel) {\n                if(bylabel.hasOwnProperty(c)) {\n                    var labels = bylabel[c];\n                    for(var label in labels) {\n                        if(labels.hasOwnProperty(label)) {\n                            var atoms = labels[label];\n                            var sum = new $3Dmol.Vector3(0,0,0);\n                            for(var i = 0; i < atoms.length; i++) {\n                                var a = atoms[i];\n                                sum.x += a.x;\n                                sum.y += a.y;\n                                sum.z += a.z;\n                            }\n                            sum.divideScalar(atoms.length);\n                            mystyle.position = sum;\n                            viewer.addLabel(label, mystyle);\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n  * Set coordinates for the atoms parsed from the prmtop file.\n  * @function $3Dmol.GLModel#setCoordinates\n  * @param {string} str - contains the data of the file\n  * @param {string} format - contains the format of the file\n  * @param {function} callback - function called when a inpcrd or a mdcrd file is uploaded\n   */\n\n  this.setCoordinates = function(str, format) {\n      format = format || \"\";\n      if (!str)\n          return []; //leave an empty model\n\n            if(/\\.gz$/.test(format)) {\n    //unzip gzipped files\n              format = format.replace(/\\.gz$/,'');\n             try {\n                  str = pako.inflate(str, {to: 'string'});\n              } catch(err) {\n                    console.log(err);\n              }\n            }\n\n      if (format == \"mdcrd\" || format == \"inpcrd\"){\n    frames = [];\n          var atomCount = atoms.length;\n          var values = GLModel.parseCrd(str, format);\n          var count = 0;\n    while (count < values.length){\n           var temp = JSON.parse(JSON.stringify(atoms));\n        for (i=0; i<atomCount; i++){\n      temp[i].x = values[count++];\n      temp[i].y = values[count++];\n      temp[i].z = values[count++];\n        }\n        frames.push(temp);\n    }\n    atoms = frames[0];\n    return frames;\n      }\n      return [];\n  }\n    }\n\n    GLModel.parseCrd = function(data, format) {\n  var values = []; //this will contain the all the float values in the file.\n  var valueLength = 8;\n  var index = data.indexOf(\"\\n\");\n  data = data.slice(index+1);//remove the first line containing title.\n  if (format == \"inpcrd\"){\n      index = data.indexOf(\"\\n\");\n      data = data.slice(index+1);//remove the second line containing number of atoms.\n      valueLength = 12;\n  }\n  index = 0;\n  var counter = 0;\n  while (index < data.length - valueLength){\n      if (data[index] == \"\\n\")\n    index++;\n      if (data[index] != \"\\n\"){\n    values[counter] = parseFloat(data.slice(index, index+valueLength));\n    index = index+valueLength;\n    counter++;\n      }\n  }\n  return values;\n    }\n\n    GLModel.parseMolData = function(data, format, options) {\n        format = format || \"\";\n\n        if (!data)\n            return []; //leave an empty model\n\n        if(/\\.gz$/.test(format)) {\n            //unzip gzipped files\n            format = format.replace(/\\.gz$/,'');\n            try {\n                data = pako.inflate(data, {to: 'string'});\n            } catch(err) {\n                console.log(err);\n            }\n        }\n\n        if(typeof($3Dmol.Parsers[format]) == \"undefined\") {\n            //let someone provide a file name and get format from extension\n            format = format.split('.').pop();\n            if(typeof($3Dmol.Parsers[format]) == \"undefined\") {\n                console.log(\"Unknown format: \"+format);\n                //try to guess correct format from data contents\n                if(data.match(/^@<TRIPOS>MOLECULE/gm)) {\n                    format = \"mol2\";\n                } else if(data.match(/^HETATM/gm) || data.match(/^ATOM/gm)) {\n                    format = \"pdb\";\n                } else if(data.match(/^.*\\n.*\\n.\\s*(\\d+)\\s+(\\d+)/gm)){\n                    format = \"sdf\"; //could look at line 3\n                } else if(data.match(/^%VERSION\\s+\\VERSION_STAMP/gm)){\n         format = \"prmtop\";\n    } else{\n                    format = \"xyz\";\n                }\n                console.log(\"Best guess: \"+format);\n            }\n        }\n        var parse = $3Dmol.Parsers[format];\n        var parsedAtoms = parse(data, options);\n\n        return parsedAtoms;\n    };\n\n\n    // set default style and colors for atoms\n    GLModel.setAtomDefaults = function(atoms, id) {\n        for ( var i = 0; i < atoms.length; i++) {\n            var atom = atoms[i];\n            if (atom) {\n                atom.style = atom.style || defaultAtomStyle;\n                atom.color = atom.color || ElementColors[atom.elem] || defaultColor;\n                atom.model = id;\n                if (atom.clickable || atom.hoverable)\n                    atom.intersectionShape = {sphere : [], cylinder : [], line : [], triangle : []};\n            }\n        }\n    };\n\n    return GLModel;\n\n})();\n/**\n * A GLShape is a collection of user specified shapes.\n *\n * @constructor $3Dmol.GLShape\n * @extends {ShapeSpec}\n * @param {number} sid - Unique identifier\n * @param {ShapeSpec} stylespec - shape style specification\n */\n$3Dmol.GLShape = (function() {\n\n    // Marching cube, to match with protein surface generation\n    var ISDONE = 2;\n\n\n    var finalizeGeo = function(geo) {\n        //to avoid creating a bunch of geometries, we leave geoGroup untruncated\n        //until render is called, at which point we truncate;\n        //successive called up updateGeo will return a new geometry\n        var geoGroup = geo.updateGeoGroup(0);\n        if(geoGroup.vertices > 0) {\n            geoGroup.truncateArrayBuffers(true, true);\n        }\n    };\n\n    /**\n     *\n     * @param {$3Dmol.Geometry}\n     *            geo\n     * @param {$3Dmol.Color |\n     *            colorlike} color\n     */\n    var updateColor = function(geo, color) {\n\n        var C = color || $3Dmol.CC.color(color);\n        geo.colorsNeedUpdate = true;\n\n        var r,g,b;\n        if(! (color.constructor === Array)) {\n            r = color.r;\n            g = color.g;\n            b = color.b;\n        }\n\n\n        for ( var gg in geo.geometryGroups) {\n\n            var geoGroup = geo.geometryGroups[gg];\n            var colorArr = geoGroup.colorArray;\n\n            for (var i = 0, il = geoGroup.vertices; i < il; ++i) {\n\n                if( color.constructor === Array) {\n                    var c = color[i];\n                    r = c.r;\n                    g = c.g;\n                    b = c.b;\n                }\n\n                colorArr[i * 3] = r;\n                colorArr[i * 3 + 1] = g;\n                colorArr[i * 3 + 2] = b;\n            }\n        }\n\n    };\n\n\n    /**\n     * @param {$3Dmol.GLShape}\n     *            shape\n     * @param {geometryGroup}\n     *            geoGroup\n     * @param {ArrowSpec}\n     *            spec\n     */\n    var drawArrow = function(shape, geo, spec) {\n\n        var from = spec.start, end = spec.end, radius = spec.radius, radiusRatio = spec.radiusRatio, mid = spec.mid;\n\n        if (!(from && end))\n            return;\n\n        var geoGroup = geo.updateGeoGroup(51);\n\n        // vertices\n\n        var dir = end.clone();\n        dir.sub(from).multiplyScalar(mid);\n        var to = from.clone().add(dir);\n        var negDir = dir.clone().negate();\n\n        shape.intersectionShape.cylinder.push(new $3Dmol.Cylinder(from.clone(),\n                to.clone(), radius));\n        shape.intersectionShape.sphere.push(new $3Dmol.Sphere(from.clone(),\n                radius));\n\n        // get orthonormal vector\n        var nvecs = [];\n        nvecs[0] = dir.clone();\n        if (Math.abs(nvecs[0].x) > 0.0001)\n            nvecs[0].y += 1;\n        else\n            nvecs[0].x += 1;\n        nvecs[0].cross(dir);\n        nvecs[0].normalize();\n\n        nvecs[0] = nvecs[0];\n        // another orth vector\n        nvecs[4] = nvecs[0].clone();\n        nvecs[4].crossVectors(nvecs[0], dir);\n        nvecs[4].normalize();\n        nvecs[8] = nvecs[0].clone().negate();\n        nvecs[12] = nvecs[4].clone().negate();\n\n        // now quarter positions\n        nvecs[2] = nvecs[0].clone().add(nvecs[4]).normalize();\n        nvecs[6] = nvecs[4].clone().add(nvecs[8]).normalize();\n        nvecs[10] = nvecs[8].clone().add(nvecs[12]).normalize();\n        nvecs[14] = nvecs[12].clone().add(nvecs[0]).normalize();\n\n        // eights\n        nvecs[1] = nvecs[0].clone().add(nvecs[2]).normalize();\n        nvecs[3] = nvecs[2].clone().add(nvecs[4]).normalize();\n        nvecs[5] = nvecs[4].clone().add(nvecs[6]).normalize();\n        nvecs[7] = nvecs[6].clone().add(nvecs[8]).normalize();\n        nvecs[9] = nvecs[8].clone().add(nvecs[10]).normalize();\n        nvecs[11] = nvecs[10].clone().add(nvecs[12]).normalize();\n        nvecs[13] = nvecs[12].clone().add(nvecs[14]).normalize();\n        nvecs[15] = nvecs[14].clone().add(nvecs[0]).normalize();\n\n        var start = geoGroup.vertices;\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n        var faceArray = geoGroup.faceArray;\n        var normalArray = geoGroup.normalArray;\n        var lineArray = geoGroup.lineArray;\n\n        var offset, i, n;\n        // add vertices, opposing vertices paired together\n        for (i = 0, n = nvecs.length; i < n; ++i) {\n            offset = 3 * (start + 3 * i);\n            var bottom = nvecs[i].clone().multiplyScalar(radius).add(from);\n            var top = nvecs[i].clone().multiplyScalar(radius).add(to);\n            var conebase = nvecs[i].clone()\n                    .multiplyScalar(radius * radiusRatio).add(to);\n\n            vertexArray[offset] = bottom.x;\n            vertexArray[offset + 1] = bottom.y;\n            vertexArray[offset + 2] = bottom.z;\n\n            vertexArray[offset + 3] = top.x;\n            vertexArray[offset + 4] = top.y;\n            vertexArray[offset + 5] = top.z;\n\n            vertexArray[offset + 6] = conebase.x;\n            vertexArray[offset + 7] = conebase.y;\n            vertexArray[offset + 8] = conebase.z;\n\n            if (i > 0) {\n                var prev_x = vertexArray[offset - 3];\n                var prev_y = vertexArray[offset - 2];\n                var prev_z = vertexArray[offset - 1];\n\n                var c = new $3Dmol.Vector3(prev_x, prev_y, prev_z);\n                var b = end.clone(), b2 = to.clone();\n                var a = new $3Dmol.Vector3(conebase.x, conebase.y, conebase.z);\n\n                shape.intersectionShape.triangle.push(new $3Dmol.Triangle(a, b,\n                        c));\n                shape.intersectionShape.triangle.push(new $3Dmol.Triangle(c\n                        .clone(), b2, a.clone()));\n            }\n        }\n\n        geoGroup.vertices += 48;\n        offset = geoGroup.vertices * 3;\n\n        // caps\n        vertexArray[offset] = from.x;\n        vertexArray[offset + 1] = from.y;\n        vertexArray[offset + 2] = from.z;\n\n        vertexArray[offset + 3] = to.x;\n        vertexArray[offset + 4] = to.y;\n        vertexArray[offset + 5] = to.z;\n\n        vertexArray[offset + 6] = end.x;\n        vertexArray[offset + 7] = end.y;\n        vertexArray[offset + 8] = end.z;\n\n        geoGroup.vertices += 3;\n\n        // now faces\n        var face, norm, faceoffset, lineoffset;\n        var t1, t2, t2b, t3, t3b, t4, t1offset, t2offset, t2boffset, t3offset, t3boffset, t4offset;\n        var n1, n2, n3, n4;\n        var n_vertices = 0;\n        var fromi = geoGroup.vertices - 3, toi = geoGroup.vertices - 2, endi = geoGroup.vertices - 1;\n        var fromoffset = fromi * 3, tooffset = toi * 3, endoffset = endi * 3;\n        for (i = 0, n = nvecs.length - 1; i < n; ++i) {\n\n            var ti = start + 3 * i;\n            offset = ti * 3;\n            faceoffset = geoGroup.faceidx;\n            lineoffset = geoGroup.lineidx;\n\n            t1 = ti;\n            t1offset = t1 * 3;\n            t2 = ti + 1;\n            t2offset = t2 * 3;\n            t2b = ti + 2;\n            t2boffset = t2b * 3;\n            t3 = ti + 4;\n            t3offset = t3 * 3;\n            t3b = ti + 5;\n            t3boffset = t3b * 3;\n            t4 = ti + 3;\n            t4offset = t4 * 3;\n\n            // face = [t1, t2, t4], [t2, t3, t4];\n            // face = [t1, t2, t3, t4];\n\n            norm = [ nvecs[i], nvecs[i], nvecs[i + 1], nvecs[i + 1] ];\n\n            n1 = n2 = nvecs[i];\n            n3 = n4 = nvecs[i + 1];\n\n            normalArray[t1offset] = n1.x;\n            normalArray[t2offset] = n2.x;\n            normalArray[t4offset] = n4.x;\n            normalArray[t1offset + 1] = n1.y;\n            normalArray[t2offset + 1] = n2.y;\n            normalArray[t4offset + 1] = n4.y;\n            normalArray[t1offset + 2] = n1.z;\n            normalArray[t2offset + 2] = n2.z;\n            normalArray[t4offset + 2] = n4.z;\n\n            normalArray[t2offset] = n2.x;\n            normalArray[t3offset] = n3.x;\n            normalArray[t4offset] = n4.x;\n            normalArray[t2offset + 1] = n2.y;\n            normalArray[t3offset + 1] = n3.y;\n            normalArray[t4offset + 1] = n4.y;\n            normalArray[t2offset + 2] = n2.z;\n            normalArray[t3offset + 2] = n3.z;\n            normalArray[t4offset + 2] = n4.z;\n\n            normalArray[t2boffset] = n2.x;\n            normalArray[t3boffset] = n3.x;\n            normalArray[t2boffset + 1] = n2.y;\n            normalArray[t3boffset + 1] = n3.y;\n            normalArray[t2boffset + 2] = n2.z;\n            normalArray[t3boffset + 2] = n3.z;\n\n            // sides\n            faceArray[faceoffset] = t1;\n            faceArray[faceoffset + 1] = t2;\n            faceArray[faceoffset + 2] = t4;\n            faceArray[faceoffset + 3] = t2;\n            faceArray[faceoffset + 4] = t3;\n            faceArray[faceoffset + 5] = t4;\n            // caps\n            faceArray[faceoffset + 6] = t1;\n            faceArray[faceoffset + 7] = t4;\n            faceArray[faceoffset + 8] = fromi;\n            faceArray[faceoffset + 9] = t2b;\n            faceArray[faceoffset + 10] = toi;\n            faceArray[faceoffset + 11] = t3b;\n            // arrowhead\n            faceArray[faceoffset + 12] = t2b;\n            faceArray[faceoffset + 13] = endi;\n            faceArray[faceoffset + 14] = t3b;\n\n            // sides\n            lineArray[lineoffset] = t1;\n            lineArray[lineoffset + 1] = t2;\n            lineArray[lineoffset + 2] = t1;\n            lineArray[lineoffset + 3] = t4;\n            // lineArray[lineoffset+4] = t2, lineArray[lineoffset+5] = t3;\n            lineArray[lineoffset + 4] = t3;\n            lineArray[lineoffset + 5] = t4;\n            // caps\n            lineArray[lineoffset + 6] = t1;\n            lineArray[lineoffset + 7] = t4;\n            // lineArray[lineoffset+10] = t1, lineArray[lineoffset+11] = fromi;\n            // lineArray[lineoffset+12] = t4, lineArray[lineoffset+13] = fromi;\n\n            lineArray[lineoffset + 8] = t2b;\n            lineArray[lineoffset + 9] = t2; // toi\n            lineArray[lineoffset + 10] = t2b;\n            lineArray[lineoffset + 11] = t3b;\n            lineArray[lineoffset + 12] = t3;\n            lineArray[lineoffset + 13] = t3b; // toi\n            // arrowhead\n            lineArray[lineoffset + 14] = t2b;\n            lineArray[lineoffset + 15] = endi;\n            lineArray[lineoffset + 16] = t2b;\n            lineArray[lineoffset + 17] = t3b;\n            lineArray[lineoffset + 18] = endi;\n            lineArray[lineoffset + 19] = t3b;\n\n            geoGroup.faceidx += 15;\n            geoGroup.lineidx += 20;\n\n        }\n        // final face\n\n        face = [ start + 45, start + 46, start + 1, start, start + 47,\n                start + 2 ];\n        norm = [ nvecs[15], nvecs[15], nvecs[0], nvecs[0] ];\n\n        faceoffset = geoGroup.faceidx;\n        lineoffset = geoGroup.lineidx;\n\n        t1 = face[0];\n        t1offset = t1 * 3;\n        t2 = face[1];\n        t2offset = t2 * 3;\n        t2b = face[4];\n        t2boffset = t2b * 3;\n        t3 = face[2];\n        t3offset = t3 * 3;\n        t3b = face[5];\n        t3boffset = t3b * 3;\n        t4 = face[3];\n        t4offset = t4 * 3;\n\n        n1 = n2 = nvecs[15];\n        n3 = n4 = nvecs[0];\n\n        normalArray[t1offset] = n1.x;\n        normalArray[t2offset] = n2.x;\n        normalArray[t4offset] = n4.x;\n        normalArray[t1offset + 1] = n1.y;\n        normalArray[t2offset + 1] = n2.y;\n        normalArray[t4offset + 1] = n4.y;\n        normalArray[t1offset + 2] = n1.z;\n        normalArray[t2offset + 2] = n2.z;\n        normalArray[t4offset + 2] = n4.z;\n\n        normalArray[t2offset] = n2.x;\n        normalArray[t3offset] = n3.x;\n        normalArray[t4offset] = n4.x;\n        normalArray[t2offset + 1] = n2.y;\n        normalArray[t3offset + 1] = n3.y;\n        normalArray[t4offset + 1] = n4.y;\n        normalArray[t2offset + 2] = n2.z;\n        normalArray[t3offset + 2] = n3.z;\n        normalArray[t4offset + 2] = n4.z;\n\n        normalArray[t2boffset] = n2.x;\n        normalArray[t3boffset] = n3.x;\n        normalArray[t2boffset + 1] = n2.y;\n        normalArray[t3boffset + 1] = n3.y;\n        normalArray[t2boffset + 2] = n2.z;\n        normalArray[t3boffset + 2] = n3.z;\n\n        // Cap normals\n        dir.normalize();\n        negDir.normalize();\n        normalArray[fromoffset] = negDir.x;\n        normalArray[tooffset] = normalArray[endoffset] = dir.x;\n        normalArray[fromoffset + 1] = negDir.y;\n        normalArray[tooffset + 1] = normalArray[endoffset + 1] = dir.y;\n        normalArray[fromoffset + 2] = negDir.z;\n        normalArray[tooffset + 2] = normalArray[endoffset + 2] = dir.z;\n\n        // Final side\n        faceArray[faceoffset] = t1;\n        faceArray[faceoffset + 1] = t2;\n        faceArray[faceoffset + 2] = t4;\n        faceArray[faceoffset + 3] = t2;\n        faceArray[faceoffset + 4] = t3;\n        faceArray[faceoffset + 5] = t4;\n        // final caps\n        faceArray[faceoffset + 6] = t1;\n        faceArray[faceoffset + 7] = t4;\n        faceArray[faceoffset + 8] = fromi;\n        faceArray[faceoffset + 9] = t2b;\n        faceArray[faceoffset + 10] = toi;\n        faceArray[faceoffset + 11] = t3b;\n        // final arrowhead\n        faceArray[faceoffset + 12] = t2b;\n        faceArray[faceoffset + 13] = endi;\n        faceArray[faceoffset + 14] = t3b;\n\n        // sides\n        lineArray[lineoffset] = t1;\n        lineArray[lineoffset + 1] = t2;\n        lineArray[lineoffset + 2] = t1;\n        lineArray[lineoffset + 3] = t4;\n        // lineArray[lineoffset+4] = t2, lineArray[lineoffset+5] = t3;\n        lineArray[lineoffset + 4] = t3;\n        lineArray[lineoffset + 5] = t4;\n        // caps\n        lineArray[lineoffset + 6] = t1;\n        lineArray[lineoffset + 7] = t4;\n        // lineArray[lineoffset+10] = t1, lineArray[lineoffset+11] = fromi;\n        // lineArray[lineoffset+12] = t4, lineArray[lineoffset+13] = fromi;\n\n        lineArray[lineoffset + 8] = t2b;\n        lineArray[lineoffset + 9] = t2; // toi\n        lineArray[lineoffset + 10] = t2b;\n        lineArray[lineoffset + 11] = t3b;\n        lineArray[lineoffset + 12] = t3;\n        lineArray[lineoffset + 13] = t3b; // toi\n        // arrowhead\n        lineArray[lineoffset + 14] = t2b;\n        lineArray[lineoffset + 15] = endi;\n        lineArray[lineoffset + 16] = t2b;\n        lineArray[lineoffset + 17] = t3b;\n        lineArray[lineoffset + 18] = endi;\n        lineArray[lineoffset + 19] = t3b;\n\n        geoGroup.faceidx += 15;\n        geoGroup.lineidx += 20;\n\n    };\n\n    //helper function for adding an appropriately sized mesh\n    var addCustomGeo = function(shape, geo, mesh, color, clickable) {\n        var geoGroup = geo.addGeoGroup();\n        var vertexArr = mesh.vertexArr, normalArr = mesh.normalArr,\n            faceArr = mesh.faceArr;\n\n        geoGroup.vertices = vertexArr.length;\n        geoGroup.faceidx = faceArr.length;\n\n        var offset, v, a, b, c, i, il;\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n\n        if(! (color.constructor === Array)) {\n            var r = color.r;\n            var g = color.g;\n            var b = color.b;\n        }\n        for (i = 0, il = geoGroup.vertices; i < il; ++i) {\n            offset = i * 3;\n            v = vertexArr[i];\n            vertexArray[offset] = v.x;\n            vertexArray[offset + 1] = v.y;\n            vertexArray[offset + 2] = v.z;\n\n            if( color.constructor === Array) {\n                var c = color[i];\n                var r = c.r;\n                var g = c.g;\n                var b = c.b;\n            }\n\n            colorArray[offset] = r;\n            colorArray[offset + 1] = g;\n            colorArray[offset + 2] = b;\n        }\n\n        if(clickable) {\n            for (i = 0, il = geoGroup.faceidx / 3; i < il; ++i) {\n                offset = i * 3;\n                a = faceArr[offset];\n                b = faceArr[offset + 1];\n                c = faceArr[offset + 2];\n                var vA = new $3Dmol.Vector3(), vB = new $3Dmol.Vector3(), vC = new $3Dmol.Vector3();\n                shape.intersectionShape.triangle.push(new $3Dmol.Triangle(vA\n                        .copy(vertexArr[a]), vB.copy(vertexArr[b]), vC\n                        .copy(vertexArr[c])));\n            }\n        }\n\n        if(clickable) {\n\n            var center = new $3Dmol.Vector3(0,0,0);\n            var cnt = 0;\n            for(var g = 0; g < geo.geometryGroups.length; g++) {\n                center.add(geo.geometryGroups[g].getCentroid());\n                cnt++;\n            }\n            center.divideScalar(cnt);\n\n\n            updateBoundingFromPoints(shape.boundingSphere, {centroid: center}, vertexArray);\n        }\n\n        geoGroup.faceArray = new Uint16Array(faceArr);\n\n        geoGroup.truncateArrayBuffers(true, true);\n\n        if (normalArr.length < geoGroup.vertices)\n            geoGroup.setNormals();\n        else {\n\n            var normalArray = geoGroup.normalArray = new Float32Array(geoGroup.vertices * 3);\n            var n;\n            for (i = 0, il = geoGroup.vertices; i < il; ++i) {\n                offset = i * 3;\n                n = normalArr[i];\n                normalArray[offset] = n.x;\n                normalArray[offset + 1] = n.y;\n                normalArray[offset + 2] = n.z;\n            }\n        }\n\n        geoGroup.setLineIndices();\n        geoGroup.lineidx = geoGroup.lineArray.length;\n    };\n\n\n\n    // handles custom shape generation from user supplied arrays\n    // May need to generate normal and/or line indices\n    /**\n     * @param {$3Dmol.GLShape}\n     *            shape\n     * @param {geometry}\n     *            geo\n     * @param {CustomSpec}\n     *            customSpec\n     */\n    var drawCustom = function(shape, geo, customSpec) {\n        var mesh = customSpec;\n        var vertexArr = mesh.vertexArr, normalArr = mesh.normalArr,\n        faceArr = mesh.faceArr;\n        if (vertexArr.length === 0 || faceArr.length === 0) {\n            console\n                    .warn(\"Error adding custom shape component: No vertices and/or face indices supplied!\");\n        }\n\n        var color = customSpec.color;\n        if(typeof(color) == 'undefined') {\n            color = shape.color;\n        }\n        color =  $3Dmol.CC.color(color);\n\n        //var firstgeo = geo.geometryGroups.length;\n        var splits = $3Dmol.splitMesh(mesh);\n        for(var i = 0, n = splits.length; i < n; i++) {\n            addCustomGeo(shape, geo, splits[i], splits[i].colorArr ? splits[i].colorArr : color, customSpec.clickable);\n        }\n    };\n\n    // Update a bounding sphere's position and radius\n    // from list of centroids and new points\n    /**\n     * @param {$3Dmol.Sphere}\n     *            sphere\n     * @param {Object}\n     *            components\n     * @param {Array}\n     *            points\n     */\n    var updateBoundingFromPoints = function(sphere, components, points) {\n\n        sphere.center.set(0, 0, 0);\n\n        var i, il;\n\n        if (components.length > 0) {\n\n            for (i = 0, il = components.length; i < il; ++i) {\n                var centroid = components[i].centroid;\n                sphere.center.add(centroid);\n            }\n\n            sphere.center.divideScalar(components.length);\n        }\n\n        var maxRadiusSq = sphere.radius * sphere.radius;\n\n        for (i = 0, il = points.length / 3; i < il; i++) {\n            var x = points[i * 3], y = points[i * 3 + 1], z = points[i * 3 + 2];\n            var radiusSq = sphere.center.distanceToSquared({\n                x : x,\n                y : y,\n                z : z\n            });\n            maxRadiusSq = Math.max(maxRadiusSq, radiusSq);\n        }\n\n        sphere.radius = Math.sqrt(maxRadiusSq);\n\n    };\n\n    /**\n     *\n     * @param {$3Dmol.GLShape}\n     *            shape\n     * @param {ShapeSpec}\n     *            stylespec\n     * @returns {undefined}\n     */\n    var updateFromStyle = function(shape, stylespec) {\n        if(typeof(stylespec.color) != 'undefined') {\n            shape.color = stylespec.color || new $3Dmol.Color();\n            if(! (stylespec.color instanceof $3Dmol.Color))\n                shape.color = $3Dmol.CC.color(stylespec.color);\n        }\n        shape.wireframe = stylespec.wireframe ? true : false;\n        //opacity is the preferred nomenclature, support alpha for backwards compat\n        shape.opacity = stylespec.alpha ? $3Dmol.Math.clamp(stylespec.alpha, 0.0,\n                1.0) : 1.0;\n        if(typeof(stylespec.opacity) != 'undefined') {\n            shape.opacity = $3Dmol.Math.clamp(stylespec.opacity, 0.0, 1.0);\n        }\n        shape.side = (stylespec.side !== undefined) ? stylespec.side\n                : $3Dmol.DoubleSide;\n\n        shape.linewidth = typeof(stylespec.linewidth) == 'undefined' ? 1 : stylespec.linewidth;\n        // Click handling\n        shape.clickable = stylespec.clickable ? true : false;\n        shape.callback = typeof (stylespec.callback) === \"function\" ? stylespec.callback\n                : null;\n\n        shape.hoverable = stylespec.hoverable ? true : false;\n        shape.hover_callback = typeof (stylespec.hover_callback) === \"function\" ? stylespec.hover_callback\n                : null;\n\n  shape.unhover_callback = typeof (stylespec.unhover_callback) === \"function\" ? stylespec.unhover_callback\n                : null;\n\n        shape.hidden = stylespec.hidden;\n    };\n\n    /**\n     * Custom renderable shape\n     *\n     * @constructor $3Dmol.GLShape\n     *\n     * @param {Object}\n     *            stylespec\n     * @returns {$3Dmol.GLShape}\n     */\n    function GLShape(stylespec) {\n\n        stylespec = stylespec || {};\n        $3Dmol.ShapeIDCount++;\n\n        this.boundingSphere = new $3Dmol.Sphere();\n        /** @type {IntersectionShapes} */\n        this.intersectionShape = {\n            sphere : [],\n            cylinder : [],\n            line : [],\n            triangle : []\n        };\n\n        updateFromStyle(this, stylespec);\n\n        // Keep track of shape components and their centroids\n        var components = [];\n        var shapeObj = null;\n        var renderedShapeObj = null;\n\n        var geo = new $3Dmol.Geometry(true);\n        var linegeo = new $3Dmol.Geometry(true);\n\n        /** Update shape with new style specification\n         * @param {ShapeSpec} newspec\n         * @return {$3Dmol.GLShape}\n         */\n        this.updateStyle = function(newspec) {\n\n            for ( var prop in newspec) {\n                stylespec[prop] = newspec[prop];\n            }\n\n            updateFromStyle(this, stylespec);\n        };\n\n        /**\n         * Creates a custom shape from supplied vertex and face arrays\n         * @function $3Dmol.GLShape#addCustom\n         * @param {CustomSpec} customSpec\n         * @return {$3Dmol.GLShape}\n         */\n        this.addCustom = function(customSpec) {\n\n            customSpec.vertexArr = customSpec.vertexArr || [];\n            customSpec.faceArr = customSpec.faceArr || [];\n            customSpec.normalArr = customSpec.normalArr || [];\n\n            var firstgeo = geo.geometryGroups.length;\n            // will split mesh as needed\n            drawCustom(this, geo, customSpec);\n        };\n\n        /**\n         * Creates a sphere shape\n         * @function $3Dmol.GLShape#addSphere\n         * @param {SphereSpec} sphereSpec\n         * @return {$3Dmol.GLShape}\n         */\n        this.addSphere = function(sphereSpec) {\n\n            sphereSpec.center = sphereSpec.center || {\n                x : 0,\n                y : 0,\n                z : 0\n            };\n            sphereSpec.radius = sphereSpec.radius ? $3Dmol.Math.clamp(\n                    sphereSpec.radius, 0, Infinity) : 1.5;\n            sphereSpec.color = $3Dmol.CC.color(sphereSpec.color);\n\n            this.intersectionShape.sphere.push(new $3Dmol.Sphere(\n                    sphereSpec.center, sphereSpec.radius));\n\n            $3Dmol.GLDraw.drawSphere(geo, sphereSpec.center,\n                    sphereSpec.radius, sphereSpec.color);\n\n            components.push({\n                centroid : new $3Dmol.Vector3(sphereSpec.center.x,\n                        sphereSpec.center.y, sphereSpec.center.z)\n            });\n            var geoGroup = geo.updateGeoGroup(0);\n\n            updateBoundingFromPoints(this.boundingSphere, components,\n                    geoGroup.vertexArray);\n        };\n\n        /**\n         * Creates a cylinder shape\n         * @function $3Dmol.GLShape#addCylinder\n         * @param {CylinderSpec} cylinderSpec\n         * @return {$3Dmol.GLShape}\n         */\n        this.addCylinder = function(cylinderSpec) {\n\n            cylinderSpec.start = cylinderSpec.start || {};\n            cylinderSpec.end = cylinderSpec.end || {};\n\n            var start = new $3Dmol.Vector3(cylinderSpec.start.x || 0,\n                    cylinderSpec.start.y || 0, cylinderSpec.start.z || 0);\n            var end = new $3Dmol.Vector3(cylinderSpec.end.x,\n                    cylinderSpec.end.y || 0, cylinderSpec.end.z || 0);\n          if(typeof(end.x) == 'undefined') end.x = 3; //show something even if undefined\n\n            var radius = cylinderSpec.radius || 0.1;\n            var color = $3Dmol.CC.color(cylinderSpec.color);\n\n            this.intersectionShape.cylinder.push(new $3Dmol.Cylinder(start, end, radius));\n\n            $3Dmol.GLDraw.drawCylinder(geo, start, end, radius, color, cylinderSpec.fromCap, cylinderSpec.toCap);\n\n            var centroid = new $3Dmol.Vector3();\n            components.push({\n                centroid : centroid.addVectors(start,end).multiplyScalar(0.5)\n            });\n            var geoGroup = geo.updateGeoGroup(0);\n            updateBoundingFromPoints(this.boundingSphere, components,\n                    geoGroup.vertexArray);\n\n        };\n\n        /**\n         * Creates a line shape\n         * @function $3Dmol.GLShape#addLine\n         * @param {LineSpec} lineSpec\n         * @return {$3Dmol.GLShape}\n         */\n        this.addLine = function(lineSpec) {\n            lineSpec.start = lineSpec.start || {};\n            lineSpec.end = lineSpec.end || {};\n\n            var start = new $3Dmol.Vector3(lineSpec.start.x || 0,\n                    lineSpec.start.y || 0, lineSpec.start.z || 0);\n            var end = new $3Dmol.Vector3(lineSpec.end.x,\n                    lineSpec.end.y || 0, lineSpec.end.z || 0);\n            if(typeof(end.x) == 'undefined') end.x = 3; //show something even if undefined\n\n            var geoGroup = geo.updateGeoGroup(2);\n\n            //make line from start to end\n            //for consistency with rest of shapes, uses vertices and lines rather\n            //than a separate line geometry\n            var vstart = geoGroup.vertices;\n            var i = vstart*3;\n            var vertexArray = geoGroup.vertexArray;\n            vertexArray[i] = start.x;\n            vertexArray[i+1] = start.y;\n            vertexArray[i+2] = start.z;\n            vertexArray[i+3] = end.x;\n            vertexArray[i+4] = end.y;\n            vertexArray[i+5] = end.z;\n            geoGroup.vertices += 2;\n\n            var lineArray = geoGroup.lineArray;\n            var li =  geoGroup.lineidx;\n            lineArray[li] = vstart;\n            lineArray[li+1] = vstart+1;\n            geoGroup.lineidx += 2;\n\n        }\n        /**\n         * Creates an arrow shape\n         * @function $3Dmol.GLShape#addArrow\n         * @param {ArrowSpec} arrowSpec\n         * @return {$3Dmol.GLShape}\n         */\n        this.addArrow = function(arrowSpec) {\n\n            arrowSpec.start = arrowSpec.start || {};\n            arrowSpec.end = arrowSpec.end || {};\n\n            arrowSpec.start = new $3Dmol.Vector3(arrowSpec.start.x || 0,\n                    arrowSpec.start.y || 0, arrowSpec.start.z || 0);\n\n            if (arrowSpec.dir instanceof $3Dmol.Vector3\n                    && arrowSpec.length instanceof number) {\n                var end = arrowSpec.dir.clone().multiplyScalar(arrowSpec.length).add(\n                        start);\n                arrowSpec.end = end;\n            }\n\n            else {\n                arrowSpec.end = new $3Dmol.Vector3(arrowSpec.end.x,\n                        arrowSpec.end.y || 0, arrowSpec.end.z || 0);\n              if(typeof(arrowSpec.end.x) == 'undefined') arrowSpec.end.x = 3; //show something even if undefined\n            }\n\n            arrowSpec.radius = arrowSpec.radius || 0.1;\n\n            arrowSpec.radiusRatio = arrowSpec.radiusRatio || 1.618034;\n            arrowSpec.mid = (0 < arrowSpec.mid && arrowSpec.mid < 1) ? arrowSpec.mid\n                    : 0.618034;\n\n\n            drawArrow(this, geo, arrowSpec);\n\n            var centroid = new $3Dmol.Vector3();\n            components.push({\n                centroid : centroid.addVectors(arrowSpec.start, arrowSpec.end)\n                        .multiplyScalar(0.5)\n            });\n            var geoGroup = geo.updateGeoGroup(0);\n            updateBoundingFromPoints(this.boundingSphere, components,\n                    geoGroup.vertexArray);\n\n        };\n\n        /**\n         * Create isosurface from voluemetric data.\n         * @function $3Dmol.GLShape#addIsosurface\n         * @param {$3Dmol.VolumeData} data - volumetric input data\n         * @param {IsoSurfaceSpec} isoSpec - volumetric data shape specification\n         */\n        this.addIsosurface = function(data, volSpec) {\n\n            var isoval = (volSpec.isoval !== undefined && typeof (volSpec.isoval) === \"number\") ? volSpec.isoval\n                    : 0.0;\n            var voxel = (volSpec.voxel) ? true : false;\n            var smoothness = (volSpec.smoothness === undefined) ? 1 : volSpec.smoothness;\n\n            var nX = data.size.x;\n            var nY = data.size.y;\n            var nZ = data.size.z;\n            var vertnums = new Int16Array(nX * nY * nZ);\n            var vals = data.data;\n\n            var i, il;\n\n            for (i = 0, il = vertnums.length; i < il; ++i)\n                vertnums[i] = -1;\n\n            var bitdata = new Uint8Array(nX * nY * nZ);\n\n            //mark locations partitioned by isoval\n            for (i = 0, il = vals.length; i < il; ++i) {\n                var val = (isoval >= 0) ? vals[i] - isoval : isoval - vals[i];\n\n                if (val > 0)\n                    bitdata[i] |= ISDONE;\n\n            }\n\n            if(volSpec.selectedRegion!==undefined){\n                for(var i=0; i <nX;i++){\n                    for(var j=0;j<nY;j++){\n                        for(var k=0;k<nZ;k++){\n                            var coordinate = convert(i,j,k,data);\n                            //sortSelectedRegion(volSpec.selectedRegion);\n                            if(!inSelectedRegion(coordinate,volSpec.selectedRegion,volSpec.selectedOffset,volSpec.radius)){\n                                var gridindex = ((i*nY)+j)*nZ+k;\n                                bitdata[gridindex]=0;\n                            }\n                        }\n                    }\n                }\n            }\n\n\n            var verts = [], faces = [];\n\n            $3Dmol.MarchingCube.march(bitdata, verts, faces, {\n                fulltable : true,\n                voxel : voxel,\n                unitCube : data.unit,\n                origin : data.origin,\n                matrix: data.matrix,\n                nX : nX,\n                nY : nY,\n                nZ : nZ\n            });\n\n            if (!voxel && smoothness > 0)\n                $3Dmol.MarchingCube.laplacianSmooth(smoothness, verts, faces);\n\n            drawCustom(this, geo, {\n                vertexArr : verts,\n                faceArr : faces,\n                normalArr : [],\n                clickable : volSpec.clickable,\n                hoverable : volSpec.hoverable\n            });\n\n            this.updateStyle(volSpec);\n\n            //computing bounding sphere from vertices\n            var origin = new $3Dmol.Vector3(data.origin.x, data.origin.y, data.origin.z);\n            var size = new $3Dmol.Vector3(data.size.x*data.unit.x, data.size.y*data.unit.y, data.size.z*data.unit.z);\n\n            var total = new $3Dmol.Vector3(0,0,0);\n            var maxv = origin.clone();\n            var minv = origin.clone().add(size);\n            for(var i = 0; i < verts.length; i++) {\n                total.add(verts[i]);\n                maxv.max(verts[i]);\n                minv.min(verts[i]);\n            }\n            total.divideScalar(verts.length);\n            var len1 = total.distanceTo(minv);\n            var len2 = total.distanceTo(maxv);\n            this.boundingSphere.center = total;\n            this.boundingSphere.radius = Math.max(len1,len2);\n\n        };\n\n        var inSelectedRegion=function(coordinate,selectedRegion,offset,radius){\n\n            //takes up most of the time\n\n            for(var i=0;i<selectedRegion.length;i++){\n                if(distance_from(selectedRegion[i],coordinate)<=radius)\n                    return true;\n            }\n            return false;\n\n\n        }\n        /*\n        var sortSelectedRegion= function(selectedRegion){//sorts by x value\n            for(var i=1; i<selectedRegion.length;i++){\n                var currentValue= selectedRegion[i].x;\n                var position=i;\n\n                while(position >0 && selectedRegion[position-1].x>currentValue){\n                    selectedRegion[position].x=selectedRegion[position-1].x;\n                    position=position-1;\n\n                }\n                selectedRegion[position].x=currentValue\n            }\n        }\n        */\n        var distance_from= function(c1,c2){\n            return Math.sqrt(Math.pow((c1.x-c2.x),2)+Math.pow((c1.y-c2.y),2)+Math.pow((c1.z-c2.z),2));\n        }\n\n        var convert=function(i,j,k,data){\n            var pt;\n            if(data.matrix) {\n                pt = new $3Dmol.Vector3(i,j,k);\n                pt = pt.applyMatrix4(data.matrix);\n                pt = {x: pt.x, y: pt.y, z: pt.z}; //remove vector gunk\n\n            } else {\n                pt.x = data.origin.x+data.unit.x*i;\n                pt.y = data.origin.y+data.unit.y*j;\n                pt.z = data.origin.z+data.unit.z*k;\n            }\n            //console.log(pt.x+\",\"+pt.y+\",\"+pt.z);\n            return pt;\n        }\n        /**\n         * @deprecated Use addIsosurface instead\n         * Creates custom shape from volumetric data\n         * @param {string} data - Volumetric input data\n         * @param {string} fmt - Input data format (e.g. 'cube' for cube file format)\n         * @param {IsoSurfaceSpec} isoSpec - Volumetric data shape specification\n         * @return {$3Dmol.GLShape}\n         */\n        this.addVolumetricData = function(data, fmt, volSpec) {\n            var data = new $3Dmol.VolumeData(data, fmt);\n            this.addIsosurface(data, volSpec);\n        };\n\n        /**\n         * Initialize webgl objects for rendering\n         * @param {$3Dmol.Object3D} group\n         *\n         */\n        this.globj = function(group) {\n\n            if (renderedShapeObj) {\n                group.remove(renderedShapeObj);\n                renderedShapeObj = null;\n            }\n\n            if(this.hidden)\n                return;\n            finalizeGeo(geo);\n            geo.initTypedArrays();\n\n            if(typeof(this.color) != 'undefined')\n                updateColor(geo, this.color);\n\n            shapeObj = new $3Dmol.Object3D();\n            var material = null;\n            if(this.side == $3Dmol.DoubleSide) {\n                var material = new $3Dmol.MeshDoubleLambertMaterial({\n                    wireframe : this.wireframe,\n                    side : this.side,\n                    transparent : (this.opacity < 1) ? true : false,\n                    opacity : this.opacity,\n                    wireframeLinewidth: this.linewidth\n                });\n            } else {\n                var material = new $3Dmol.MeshLambertMaterial({\n                    wireframe : this.wireframe,\n                    side : this.side,\n                    transparent : (this.opacity < 1) ? true : false,\n                    opacity : this.opacity,\n                    wireframeLinewidth: this.linewidth\n                });\n            }\n\n            var mesh = new $3Dmol.Mesh(geo, material);\n\n            shapeObj.add(mesh);\n\n            var lineMaterial = new $3Dmol.LineBasicMaterial({\n                linewidth : this.linewidth,\n                color: this.color\n            });\n            var line = new $3Dmol.Line(linegeo, lineMaterial,\n                    $3Dmol.LinePieces);\n            shapeObj.add(line);\n\n            renderedShapeObj = shapeObj.clone();\n            group.add(renderedShapeObj);\n\n        };\n\n        this.removegl = function(group) {\n            if (renderedShapeObj) {\n                // dispose of geos and materials\n                if (renderedShapeObj.geometry !== undefined)\n                    renderedShapeObj.geometry.dispose();\n                if (renderedShapeObj.material !== undefined)\n                    renderedShapeObj.material.dispose();\n                group.remove(renderedShapeObj);\n                renderedShapeObj = null;\n            }\n            shapeObj = null;\n        };\n\n    };\n\n    Object.defineProperty(GLShape.prototype, \"position\", {\n\n        get : function() {\n            return this.boundingSphere.center;\n        }\n\n    });\n\n    Object.defineProperty(GLShape.prototype, \"x\", {\n\n        get : function() {\n            return this.boundingSphere.center.x;\n        }\n\n    });\n\n    Object.defineProperty(GLShape.prototype, \"y\", {\n\n        get : function() {\n            return this.boundingSphere.center.y;\n        }\n\n    });\n\n    Object.defineProperty(GLShape.prototype, \"z\", {\n\n        get : function() {\n            return this.boundingSphere.center.z;\n        }\n\n    });\n\n    return GLShape;\n\n}());\n\n$3Dmol.ShapeIDCount = 0;\n\n\n$3Dmol.splitMesh = function(mesh) {\n      var MAXVERT = 64000; //webgl only supports 2^16 elements, leave a little breathing room (require at least 2)\n    //peel off 64k vertices rsvh into their own mesh\n    //duplicating vertices and normals as necessary to preserve faces and lines\n\n        if(mesh.vertexArr.length < MAXVERT) return [mesh]; //typical case\n\n        var nverts = mesh.vertexArr.length;\n        var slices = [{vertexArr: [], normalArr: [], faceArr: []}];\n        if(mesh.colorArr) slices.colorArr = [];\n        var vertSlice = []; //indexed by original vertex to get current slice\n        var vertIndex =[]; //indexed by original vertex to get index within slice\n        var currentSlice = 0;\n\n        //for each face, make sure all three vertices (or copies) are in the same slice\n        var faces = mesh.faceArr;\n        var vs = [0,0,0];\n        for(var i = 0, nf = faces.length; i < nf; i += 3) {\n            var slice = slices[currentSlice];\n            for(var j = 0; j < 3; j++) {\n                //process each vertex to make sure it is assigned a slice\n                //all vertices of a face must belong to the same slice\n                var v = faces[i+j];\n                if(vertSlice[v] !== currentSlice) { //true if undefined\n                    vertSlice[v] = currentSlice;\n                    vertIndex[v] = slice.vertexArr.length;\n                    slice.vertexArr.push(mesh.vertexArr[v]);\n                    if(mesh.normalArr && mesh.normalArr[v]) slice.normalArr.push(mesh.normalArr[v]);\n                    if(mesh.colorArr && mesh.colorArr[v]) slice.colorArr.push(mesh.colorArr[v]);\n                }\n                slice.faceArr.push(vertIndex[v]);\n            }\n\n            if(slice.vertexArr.length >= MAXVERT) {\n                //new slice\n                slices.push({vertexArr: [], normalArr: [], faceArr: []});\n                if(mesh.colorArr) slices.colorArr = [];\n                currentSlice++;\n            }\n        }\n        return slices;\n    }\n//a molecular viewer based on GLMol\n\n\n\n/**\n * WebGL-based 3Dmol.js viewer\n * Note: The preferred method of instantiating a GLViewer is through {@link $3Dmol.createViewer}\n *\n * @constructor\n * @param {Object} element HTML element within which to create viewer\n * @param {function} callback - Callback function to be immediately executed on this viewer\n * @param {Object} defaultcolors - Object defining default atom colors as atom => color property value pairs for all models within this viewer\n */\n$3Dmol.GLViewer = (function() {\n    // private class variables\n    var numWorkers = 4; // number of threads for surface generation\n    var maxVolume = 64000; // how much to break up surface calculations\n\n    // private class helper functions\n\n    function GLViewer(element, config) {\n        // set variables\n        config = config || {};\n        var callback = config.callback;\n        var defaultcolors = config.defaultcolors;\n        if(!defaultcolors)\n            defaultcolors = $3Dmol.elementColors.defaultColors;\n        var nomouse = config.nomouse;\n        var bgColor = 0;\n\n        if(typeof(config.backgroundColor) != undefined) {\n            bgColor = $3Dmol.CC.color(config.backgroundColor).getHex();\n        }\n\n        var camerax = 0;\n        if(typeof(config.camerax) != undefined) {\n            camerax = parseFloat(config.camerax);\n        }\n        var _viewer = this;\n        var container = element;\n        var id = container.id;\n        var glDOM = null;\n\n        var models = []; // atomistic molecular models\n        var surfaces = {};\n        var shapes = []; // Generic shapes\n        var labels = [];\n        var clickables = []; //things you can click on\n        var hoverables = []; //things you can hover over\n        var popups = [];\n        var current_hover = null;\n\n        var WIDTH = container.width();\n        var HEIGHT = container.height();\n\n        // set dimensions\n        // $(container).width(WIDTH);\n        // $(container).height(HEIGHT);\n\n        var ASPECT = WIDTH / HEIGHT;\n        var NEAR = 1, FAR = 800;\n        var CAMERA_Z = 150;\n        var fov = 20;\n\n        var linkedViewers = [];\n\n        var renderer = new $3Dmol.Renderer({\n            antialias : true,\n            preserveDrawingBuffer: true, //so we can export images\n            premultipliedAlpha : false/* more traditional compositing with background */\n        });\n\n        renderer.domElement.style.width = \"100%\";\n        renderer.domElement.style.height = \"100%\";\n        renderer.domElement.style.padding = \"0\";\n        renderer.domElement.style.position = \"absolute\"; //TODO: get rid of this\n        renderer.domElement.style.top = \"0px\";\n        renderer.domElement.style.left = \"0px\";\n        renderer.domElement.style.zIndex = \"0\";\n\n        var camera = new $3Dmol.Camera(fov, ASPECT, NEAR, FAR, config.orthographic);\n        camera.position = new $3Dmol.Vector3(camerax, 0, CAMERA_Z);\n        var lookingAt = new $3Dmol.Vector3();\n        camera.lookAt(lookingAt);\n\n        var raycaster = new $3Dmol.Raycaster(new $3Dmol.Vector3(0, 0, 0),\n                new $3Dmol.Vector3(0, 0, 0));\n        var projector = new $3Dmol.Projector();\n        var mouseVector = new $3Dmol.Vector3(0, 0, 0);\n\n        var scene = null;\n        var rotationGroup = null; // which contains modelGroup\n        var modelGroup = null;\n\n        var fogStart = 0.4;\n        var slabNear = -50; // relative to the center of rotationGroup\n        var slabFar = 50;\n\n        // UI variables\n        var cq = new $3Dmol.Quaternion(0, 0, 0, 1);\n        var dq = new $3Dmol.Quaternion(0, 0, 0, 1);\n        var animated = false;\n        var isDragging = false;\n        var mouseStartX = 0;\n        var mouseStartY = 0;\n        var touchDistanceStart = 0;\n        var currentModelPos = 0;\n        var cz = 0;\n        var cslabNear = 0;\n        var cslabFar = 0;\n\n        var nextSurfID = function() {\n            //compute the next highest surface id directly from surfaces\n            //this is necessary to support linking of model data\n            var max = 0;\n            for (i in surfaces) { // this is an object with possible holes\n                if(!surfaces.hasOwnProperty(i)) continue;\n                if(i > max) max = i;\n            }\n            return max+1;\n        };\n\n        var setSlabAndFog = function() {\n            var center = camera.position.z - rotationGroup.position.z;\n            if (center < 1)\n                center = 1;\n            camera.near = center + slabNear;\n            if (camera.near < 1)\n                camera.near = 1;\n            camera.far = center + slabFar;\n            if (camera.near + 1 > camera.far)\n                camera.far = camera.near + 1;\n\n            camera.fov = fov;\n            camera.right = center * Math.tan(Math.PI / 180 * fov);\n            camera.left = -camera.right;\n            camera.top = camera.right / ASPECT;\n            camera.bottom = -camera.top;\n\n            camera.updateProjectionMatrix();\n            scene.fog.near = camera.near + fogStart\n                    * (camera.far - camera.near);\n            // if (scene.fog.near > center) scene.fog.near = center;\n            scene.fog.far = camera.far;\n        };\n\n        // display scene\n        //if nolink is set/true, don't propagate changes to linked viewers\n        var show = function(nolink) {\n            if (!scene)\n                return;\n\n            // var time = new Date();\n            setSlabAndFog();\n            renderer.render(scene, camera);\n            // console.log(\"rendered in \" + (+new Date() - time) + \"ms\");\n\n            if(!nolink && linkedViewers.length > 0) {                var view = _viewer.getView();\n                for(var i = 0; i < linkedViewers.length; i++) {\n                    var other = linkedViewers[i];\n                    other.setView(view, true);\n                }\n            }\n        };\n\n        var initializeScene = function() {\n\n            scene = new $3Dmol.Scene();\n            scene.fog = new $3Dmol.Fog(bgColor, 100, 200);\n\n            modelGroup = new $3Dmol.Object3D();\n            rotationGroup = new $3Dmol.Object3D();\n            rotationGroup.useQuaternion = true;\n            rotationGroup.quaternion = new $3Dmol.Quaternion(0, 0, 0, 1);\n            rotationGroup.add(modelGroup);\n\n            scene.add(rotationGroup);\n\n            // setup lights\n            var directionalLight = new $3Dmol.Light(0xFFFFFF);\n            directionalLight.position = new $3Dmol.Vector3(0.2, 0.2, 1)\n                    .normalize();\n            directionalLight.intensity = 1.0;\n            scene.add(directionalLight);\n        };\n\n        initializeScene();\n\n        renderer.setClearColorHex(bgColor, 1.0);\n        scene.fog.color = $3Dmol.CC.color(bgColor);\n\n        var clickedAtom = null;\n\n        // enable mouse support\n\n        //regenerate the list of clickables\n        //also updates hoverables\n        var updateClickables = function() {\n            clickables.splice(0,clickables.length);\n            hoverables.splice(0,hoverables.length);\n            var i, il;\n\n            for (i = 0, il = models.length; i < il; i++) {\n                var model = models[i];\n                if(model) {\n                    var atoms = model.selectedAtoms({\n                        clickable : true\n                    });\n\n                    var hoverable_atoms = model.selectedAtoms({\n                        hoverable : true\n                    });\n                    Array.prototype.push.apply(hoverables,hoverable_atoms);\n\n                    Array.prototype.push.apply(clickables, atoms); //add atoms into clickables\n\n                }\n            }\n            for (i = 0, il = shapes.length; i < il; i++) {\n\n                var shape = shapes[i];\n                if (shape && shape.clickable) {\n                    clickables.push(shape);\n                }\n                if( shape && shape.hoverable){\n                    hoverables.push(shape);\n                }\n            }\n        };\n        // Checks for selection intersects on mousedown\n        var handleClickSelection = function(mouseX, mouseY, event) {\n\n            if(clickables.length == 0) return;\n            var mouse = {\n                x : mouseX,\n                y : mouseY,\n                z : -1.0\n            };\n            mouseVector.set(mouse.x, mouse.y, mouse.z);\n            projector.unprojectVector(mouseVector, camera);\n            mouseVector.sub(camera.position).normalize();\n\n            raycaster.set(camera.position, mouseVector);\n\n            var intersects = [];\n\n            intersects = raycaster.intersectObjects(modelGroup, clickables);\n            if (intersects.length) {\n                var selected = intersects[0].clickable;\n                if (selected.callback !== undefined\n                        && typeof (selected.callback) === \"function\") {\n                    selected.callback(selected, _viewer, event, container);\n                }\n            }\n        };\n        //checks for selection intersects on hover\n        var handleHoverSelection = function(mouseX, mouseY, event){\n            if(hoverables.length == 0) return;\n            var mouse = {\n                x : mouseX,\n                y : mouseY,\n                z : -1.0\n            };\n            mouseVector.set(mouse.x, mouse.y, mouse.z);\n            projector.unprojectVector(mouseVector, camera);\n            mouseVector.sub(camera.position).normalize();\n\n            raycaster.set(camera.position, mouseVector);\n\n            var intersects = [];\n            intersects = raycaster.intersectObjects(modelGroup, hoverables);\n            if (intersects.length) {\n                var selected = intersects[0].clickable;\n                current_hover=selected;\n                if (selected.hover_callback !== undefined\n                        && typeof (selected.hover_callback) === \"function\") {\n                    selected.hover_callback(selected, _viewer, event, container);\n                }\n            }\n            else{\n                current_hover=null;\n            }\n        }\n        //sees if the mouse is still on the object that invoked a hover event and if not then the unhover callback is called\n        var handleHoverContinue = function(mouseX,mouseY,event){\n            console.log(\"continue\");\n            var mouse = {\n                x : mouseX,\n                y : mouseY,\n                z : -1.0\n            };\n\n            mouseVector.set(mouse.x, mouse.y, mouse.z);\n            projector.unprojectVector(mouseVector, camera);\n            mouseVector.sub(camera.position).normalize();\n\n            raycaster.set(camera.position, mouseVector);\n\n            var intersects = [];\n            intersects = raycaster.intersectObjects(modelGroup, hoverables);\n            if(intersects[0] === undefined){\n                current_hover.unhover_callback(current_hover, _viewer, event, container);\n                current_hover=null;\n            }\n            if(intersects[0]!== undefined)\n            if(intersects[0].clickable !== current_hover){\n                current_hover.unhover_callback(current_hover, _viewer, event, container);\n                current_hover=null;\n            }\n        }\n\n\n        var calcTouchDistance = function(ev) { // distance between first two\n                                                // fingers\n            var xdiff = ev.originalEvent.targetTouches[0].pageX\n                    - ev.originalEvent.targetTouches[1].pageX;\n            var ydiff = ev.originalEvent.targetTouches[0].pageY\n                    - ev.originalEvent.targetTouches[1].pageY;\n            return Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        }\n\n        //check targetTouches as well\n        var getXY = function(ev) {\n            var x = ev.pageX, y = ev.pageY;\n            if (ev.originalEvent.targetTouches\n                    && ev.originalEvent.targetTouches[0]) {\n                x = ev.originalEvent.targetTouches[0].pageX;\n                y = ev.originalEvent.targetTouches[0].pageY;\n            }\n            else if (ev.originalEvent.changedTouches\n                    && ev.originalEvent.changedTouches[0]) {\n                x = ev.originalEvent.changedTouches[0].pageX;\n                y = ev.originalEvent.changedTouches[0].pageY;\n            }\n            return [x,y];\n        };\n\n        //for a given screen (x,y) displacement return model displacement\n        var screenXY2model = function(x,y) {\n            var dx = x/WIDTH;\n            var dy = y/HEIGHT;\n            var zpos = rotationGroup.position.z;\n            var q = rotationGroup.quaternion;\n            var t = new $3Dmol.Vector3(0,0,zpos);\n            projector.projectVector(t, camera);\n            t.x += dx*2;\n            t.y -= dy*2;\n            projector.unprojectVector(t, camera);\n            t.z = 0;\n            t.applyQuaternion(q);\n            return t;\n        }\n\n        // this event is bound to the body element, not the container,\n        // so no need to put it inside initContainer()\n        $('body').bind('mouseup touchend', function(ev) {\n            // handle selection\n            if(isDragging && scene) { //saw mousedown, haven't moved\n                var xy = getXY(ev);\n                var x = xy[0];\n                var y = xy[1];\n                if(x == mouseStartX && y == mouseStartY) {\n                    var offset = $('canvas',container).offset();\n                    var mouseX = ((x - offset.left) / WIDTH) * 2 - 1;\n                    var mouseY = -((y - offset.top) / HEIGHT) * 2 + 1;\n                    handleClickSelection(mouseX, mouseY, ev, container);\n                }\n            }\n\n            isDragging = false;\n\n        });\n\n        var mouseButton;\n\n        var _handleMouseDown = this._handleMouseDown = function(ev) {\n            ev.preventDefault();\n            if (!scene)\n                return;\n            var xy = getXY(ev);\n            var x = xy[0];\n            var y = xy[1];\n            if (x === undefined)\n                return;\n            isDragging = true;\n            clickedAtom = null;\n            mouseButton = ev.which;\n            mouseStartX = x;\n            mouseStartY = y;\n            touchDistanceStart = 0;\n            if (ev.originalEvent.targetTouches\n                    && ev.originalEvent.targetTouches.length == 2) {\n                touchDistanceStart = calcTouchDistance(ev);\n            }\n            cq = rotationGroup.quaternion;\n            cz = rotationGroup.position.z;\n            currentModelPos = modelGroup.position.clone();\n            cslabNear = slabNear;\n            cslabFar = slabFar;\n        };\n\n        var _handleMouseScroll  = this._handleMouseScroll = function(ev) { // Zoom\n            ev.preventDefault();\n            if (!scene)\n                return;\n            var scaleFactor = (CAMERA_Z - rotationGroup.position.z) * 0.85;\n            var mult = 1.0;\n            if(ev.originalEvent.ctrlKey) {\n                mult = -1.0; //this is a pinch event turned into a wheel event (or they're just holding down the ctrl)\n            }\n            if (ev.originalEvent.detail) { // Webkit\n                rotationGroup.position.z += mult * scaleFactor\n                        * ev.originalEvent.detail / 10;\n            } else if (ev.originalEvent.wheelDelta) { // Firefox\n                rotationGroup.position.z -= mult * scaleFactor\n                        * ev.originalEvent.wheelDelta / 400;\n            }\n            if(rotationGroup.position.z > CAMERA_Z) rotationGroup.position.z = CAMERA_Z*0.999; //avoid getting stuck\n\n            show();\n        };\n        var hoverTimeout;\n        var _handleMouseMove = this._handleMouseMove = function(ev) { // touchmove\n\n            clearTimeout(hoverTimeout);\n\n\n            var offset = $('canvas',container).offset();\n            var mouseX = ((getXY(ev)[0] - offset.left) / WIDTH) * 2 - 1;\n            var mouseY = -((getXY(ev)[1] - offset.top) / HEIGHT) * 2 + 1;\n            if(current_hover !== null)\n                handleHoverContinue(mouseX,mouseY,ev);\n            hoverTimeout=setTimeout(\n                function(){\n                    handleHoverSelection(mouseX,mouseY,ev);\n                }\n                ,500);\n\n            WIDTH = container.width();\n            HEIGHT = container.height();\n            ev.preventDefault();\n            if (!scene)\n                return;\n            if (!isDragging)\n                return;\n            var mode = 0;\n\n            var xy = getXY(ev);\n            var x = xy[0];\n            var y = xy[1];\n            if (x === undefined)\n                return;\n            //hover timeout\n\n            var dx = (x - mouseStartX) / WIDTH;\n            var dy = (y - mouseStartY) / HEIGHT;\n            // check for pinch\n            if (touchDistanceStart != 0\n                    && ev.originalEvent.targetTouches\n                    && ev.originalEvent.targetTouches.length == 2) {\n                var newdist = calcTouchDistance(ev);\n                // change to zoom\n                mode = 2;\n                dy = (newdist - touchDistanceStart) * 2\n                        / (WIDTH + HEIGHT);\n                console.log(\"pinch \"+touchDistanceStart+\" dy \"+dy);\n            } else if (ev.originalEvent.targetTouches\n                    && ev.originalEvent.targetTouches.length == 3) {\n                // translate\n                mode = 1;\n            }\n\n            var r = Math.sqrt(dx * dx + dy * dy);\n            var scaleFactor;\n            if (mode == 3\n                    || (mouseButton == 3 && ev.ctrlKey)) { // Slab\n                slabNear = cslabNear + dx * 100;\n                slabFar = cslabFar + dy * 100;\n            } else if (mode == 2 || mouseButton == 3\n                    || ev.shiftKey) { // Zoom\n                scaleFactor = (CAMERA_Z - rotationGroup.position.z) * 0.85;\n                if (scaleFactor < 80)\n                    scaleFactor = 80;\n                rotationGroup.position.z = cz + dy * scaleFactor;\n                if(rotationGroup.position.z > CAMERA_Z) rotationGroup.position.z = CAMERA_Z*0.999; //avoid getting stuck\n            } else if (mode == 1 || mouseButton == 2\n                    || ev.ctrlKey) { // Translate\n                var t = screenXY2model(x-mouseStartX, y-mouseStartY);\n                modelGroup.position.addVectors(currentModelPos,t);\n\n            } else if ((mode === 0 || mouseButton == 1)\n                    && r !== 0) { // Rotate\n                var rs = Math.sin(r * Math.PI) / r;\n                dq.x = Math.cos(r * Math.PI);\n                dq.y = 0;\n                dq.z = rs * dx;\n                dq.w = -rs * dy;\n                rotationGroup.quaternion = new $3Dmol.Quaternion(\n                        1, 0, 0, 0);\n                rotationGroup.quaternion.multiply(dq);\n                rotationGroup.quaternion.multiply(cq);\n            }\n            show();\n        };\n\n        var initContainer = function(element) {\n            container = element;\n            WIDTH = container.width();\n            HEIGHT = container.height();\n            ASPECT = WIDTH / HEIGHT;\n            renderer.setSize(WIDTH, HEIGHT);\n            container.append(renderer.domElement);\n            glDOM = $(renderer.domElement);\n\n            if (!nomouse) {\n                // user can request that the mouse handlers not be installed\n                glDOM.bind('mousedown touchstart', _handleMouseDown);\n                glDOM.bind('DOMMouseScroll mousewheel', _handleMouseScroll);\n                glDOM.bind('mousemove touchmove', _handleMouseMove);\n\n                glDOM.bind(\"contextmenu\", function(ev) {\n                    ev.preventDefault();\n                });\n            }\n        };\n        initContainer(container);\n\n        // public methods\n        /**\n         * Change the viewer's container element\n         * Also useful if the original container element was removed from the DOM.\n         *\n         * @function $3Dmol.GLViewer#resetContainer\n         *\n         * @param {Object | string} element\n         *            Either HTML element or string identifier. Defaults to the element used to initialize the viewer.\n         * @example\n         * // Assume there exist HTML divs with ids \"gldiv\", \"gldiv2\"\n         * var element = $(\"#gldiv\"), element2 = $(\"#gldiv2\");\n         * // Create GLViewer within 'gldiv'\n         * var myviewer = $3Dmol.createViewer(element);\n         * // Move the canvas to the other div\n         * myviewer.setContainer(element2)\n         *\n         * @example\n         * // Assume there exists an HTML div with id \"gldiv\"\n         * var element = $(\"#gldiv\");\n         * // Create GLViewer within 'gldiv'\n         * var myviewer = $3Dmol.createViewer(element);\n         * // Remove the element from the DOM, and add a new element\n         * element.remove()\n         * $('body').prepend(\"<div id='newdiv'></div>\")\n         * // Show the canvas in the new element\n         * myviewer.setContainer('newdiv')\n         */\n        this.setContainer = function(element) {\n            if($.type(element) === \"string\")\n                element = $(\"#\"+element);\n            if(!element) {\n                element = container\n            };\n            initContainer(element);\n            return this;\n        };\n\n        /**\n         * Set the background color (default white)\n         *\n         * @function $3Dmol.GLViewer#setBackgroundColor\n         * @param {number}\n         *            hex Hexcode specified background color, or standard color spec\n         * @param {number}\n         *            a Alpha level (default 1.0)\n         *\n         * @example\n         *\n         * //Set 'myviewer' background color to white\n         * myviewer.setBackgroundColor(0xffffff)\n         *\n         */\n        this.setBackgroundColor = function(hex, a) {\n            if(typeof(a) == \"undefined\") {\n                a = 1.0;\n            }\n            else if(a < 0 || a > 1.0) {\n                a = 1.0;\n            }\n            var c = $3Dmol.CC.color(hex);\n            scene.fog.color = c;\n            bgColor = c.getHex();\n            renderer.setClearColorHex(c.getHex(), a);\n            show();\n            return this;\n        };\n\n        /**\n         * Set view projection scheme.  Either orthographic or perspective.\n         * Default is perspective.  Orthographic can also be enabled on viewer creation\n         * by setting orthographic to true in the config object.\n         *\n         * @function $3Dmol.GLViewer#setProjection\n         *\n         * @example\n         * myviewer.setProjection(\"orthographic\");\n         *\n         */\n        this.setProjection = function(proj) {\n            camera.ortho = (proj === \"orthographic\");\n            setSlabAndFog();\n        };\n\n        /**\n         * Set global view styles.\n         * @function $3Dmol.GLViewer#setViewStyle\n         *\n         * @example\n         * myviewer.setViewStyle({style:\"outline\", color:\"black\", width:0.1})\n         *\n         */\n         this.setViewStyle = function(parameters) {\n            if (parameters[\"style\"] === \"outline\") {\n                var params = {};\n                if(parameters.color) params.color =  $3Dmol.CC.color(parameters.color);\n                if(parameters.width) params.width = parameters.width;\n                renderer.enableOutline(params);\n            } else {\n                renderer.disableOutline();\n            }\n            return this;\n        }\n\n        if(config.style) { //enable setting style in constructor\n             this.setViewStyle(config);\n        }\n\n        /**\n         * Set viewer width\n         *\n         * @function $3Dmol.GLViewer#setWidth\n         * @param {number}\n         *            w Width in pixels\n         */\n        this.setWidth = function(w) {\n            WIDTH = w || WIDTH;\n            renderer.setSize(WIDTH, HEIGHT);\n            return this;\n        };\n\n        /**\n         * Set viewer height\n         *\n         * @function $3Dmol.GLViewer#setHeight\n         * @param {number}\n         *            h Height in pixels\n         */\n        this.setHeight = function(h) {\n            HEIGHT = h || HEIGHT;\n            renderer.setSize(WIDTH, HEIGHT);\n            return this;\n        };\n\n        /**\n         * Resize viewer according to containing HTML element's dimensions\n         *\n         * @function $3Dmol.GLViewer#resize\n         */\n        this.resize = function() {\n            WIDTH = container.width();\n            HEIGHT = container.height();\n            ASPECT = WIDTH / HEIGHT;\n            renderer.setSize(WIDTH, HEIGHT);\n            camera.aspect = ASPECT;\n            camera.updateProjectionMatrix();\n            show();\n            return this;\n        };\n\n        $(window).resize(this.resize);\n\n        /**\n         * Return specified model\n         *\n         * @function $3Dmol.GLViewer#getModel\n         * @param {number}\n         *            [id=last model id] - Retrieve model with specified id\n         * @default Returns last model added to viewer\n         * @return {GLModel}\n         *\n         * @example // Retrieve reference to first GLModel added var m =\n         *          glviewer.getModel(0);\n         */\n        this.getModel = function(id) {\n            id = id || models.length - 1;\n            return models[id];\n        };\n\n        /**\n         * Rotate scene by angle degrees around axis\n         *\n         * @function $3Dmol.GLViewer#rotate\n         * @param {number}\n         *            [angle] - Angle, in degrees, to rotate by.\n         * @param {string}\n         *            [angle] - Axis (\"x\", \"y\", or \"z\") to rotate around.\n         *            Default \"y\"\n         *\n         */\n        this.rotate = function(angle, axis) {\n            if (typeof (axis) === \"undefined\") {\n                axis = \"y\";\n            }\n            var i = 0, j = 0, k = 0;\n            var rangle = Math.PI * angle / 180.0;\n            var s = Math.sin(rangle / 2.0);\n            var c = Math.cos(rangle / 2.0);\n            if (axis == \"x\")\n                i = s;\n            if (axis == \"y\")\n                j = s;\n            if (axis == \"z\")\n                k = s;\n\n            var q = new $3Dmol.Quaternion(i, j, k, c).normalize();\n            rotationGroup.quaternion.multiply(q);\n            show();\n            return this;\n        };\n\n        /** Returns an array representing the current viewpoint.\n         * Translation, zoom, and rotation quaternion.\n         * @function $3Dmol.GLViewer#getView\n         * @returns {Array.<number>} arg\n         *  */\n        this.getView = function() {\n            if (!modelGroup)\n                return [ 0, 0, 0, 0, 0, 0, 0, 1 ];\n            var pos = modelGroup.position;\n            var q = rotationGroup.quaternion;\n            return [ pos.x, pos.y, pos.z, rotationGroup.position.z, q.x, q.y,\n                    q.z, q.w ];\n        };\n\n        /** Sets the view to the specified translation, zoom, and rotation.\n         *\n         * @function $3Dmol.GLViewer#setView\n         * @param {Array.<number>} arg Array formatted identically to the return value of getView */\n        this.setView = function(arg, nolink) {\n\n            if (arg === undefined\n                    || !(arg instanceof Array || arg.length !== 8))\n                return this;\n\n            if (!modelGroup || !rotationGroup)\n                return this;\n            modelGroup.position.x = arg[0];\n            modelGroup.position.y = arg[1];\n            modelGroup.position.z = arg[2];\n            rotationGroup.position.z = arg[3];\n            rotationGroup.quaternion.x = arg[4];\n            rotationGroup.quaternion.y = arg[5];\n            rotationGroup.quaternion.z = arg[6];\n            rotationGroup.quaternion.w = arg[7];\n            if(typeof(arg[8]) != \"undefined\") {\n                rotationGroup.position.x = arg[8];\n                rotationGroup.position.y = arg[9];\n            }\n            show(nolink);\n            return this;\n        };\n\n        // apply styles, models, etc in viewer\n        /**\n         * Render current state of viewer, after\n         * adding/removing models, applying styles, etc.\n         *\n         * @function $3Dmol.GLViewer#render\n         */\n        this.render = function() {\n            var time1 = new Date();\n\n            updateClickables(); //must render for clickable styles to take effect\n            var view = this.getView();\n\n            var i, n;\n            var exts = renderer.supportedExtensions();\n            for (i = 0; i < models.length; i++) {\n                if (models[i]) {\n                    models[i].globj(modelGroup, exts);\n                }\n            }\n\n            for (i = 0; i < shapes.length; i++) {\n                if (shapes[i]) {\n                    shapes[i].globj(modelGroup, exts);\n                }\n            }\n\n            for (i in surfaces) { // this is an object with possible holes\n                if(!surfaces.hasOwnProperty(i)) continue;\n                var surfArr = surfaces[i];\n                for (n = 0; n < surfArr.length; n++) {\n                    if (surfArr.hasOwnProperty(n)) {\n                        var geo = surfArr[n].geo;\n                        // async surface generation can cause\n                        // the geometry to be webgl initialized before it is fully\n                        // formed; force various recalculations until full surface\n                        // is\n                        // available\n                        if (!surfArr[n].finished) {\n                            geo.verticesNeedUpdate = true;\n                            geo.elementsNeedUpdate = true;\n                            geo.normalsNeedUpdate = true;\n                            geo.colorsNeedUpdate = true;\n                            geo.buffersNeedUpdate = true;\n                            geo.boundingSphere = null;\n\n                            if (surfArr[n].done)\n                                surfArr[n].finished = true;\n\n                            // remove partially rendered surface\n                            if (surfArr[n].lastGL)\n                                modelGroup.remove(surfArr[n].lastGL);\n\n                            // create new surface\n                            var smesh = null;\n\n                            if(surfArr[n].mat instanceof $3Dmol.LineBasicMaterial) {\n                                //special case line meshes\n                                smesh = new $3Dmol.Line(geo, surfArr[n].mat);\n                            }\n                            else {\n                                smesh = new $3Dmol.Mesh(geo, surfArr[n].mat);\n                            }\n                            if(surfArr[n].mat.transparent && surfArr[n].mat.opacity == 0) {\n                                //don't bother with hidden surfaces\n                                smesh.visible = false;\n                            } else {\n                                smesh.visible = true;\n                            }\n                            if (surfArr[n].symmetries.length > 1 ||\n                            (surfArr[n].symmetries.length == 1 &&\n                            !(surfArr[n].symmetries[n].isIdentity()))) {\n                                var j;\n                                var tmeshes = new $3Dmol.Object3D(); //transformed meshes\n                                for (j = 0; j < surfArr[n].symmetries.length; j++) {\n                                    var tmesh = smesh.clone();\n                                    tmesh.matrix = surfArr[n].symmetries[j];\n                                    tmesh.matrixAutoUpdate = false;\n                                    tmeshes.add(tmesh);\n                                }\n                                surfArr[n].lastGL = tmeshes;\n                                modelGroup.add(tmeshes);\n                            }\n                            else {\n                                surfArr[n].lastGL = smesh;\n                                modelGroup.add(smesh);\n                            }\n                        } // else final surface already there\n                    }\n                }\n            }\n\n            this.setView(view); // Calls show() => renderer render\n            var time2 = new Date();\n            console.log(\"render time: \" + (time2 - time1));\n            return this;\n        };\n\n        /**\n         *\n         * @param {AtomSelectionSpec}\n         *            sel\n         * @return {AtomSpec[]}\n         */\n        function getAtomsFromSel(sel) {\n            var atoms = [];\n            if (typeof (sel) === \"undefined\")\n                sel = {};\n\n            var ms = [];\n            var i;\n\n            if (typeof sel.model === \"undefined\") {\n                for (i = 0; i < models.length; i++) {\n                    if (models[i])\n                        ms.push(models[i]);\n                }\n            } else { // specific to some models\n                ms = sel.model;\n                if (!$.isArray(ms))\n                    ms = [ ms ];\n            }\n\n            for (i = 0; i < ms.length; i++) {\n                atoms = atoms.concat(ms[i].selectedAtoms(sel));\n            }\n\n            return atoms;\n        }\n\n        /**\n         *\n         * @param {AtomSpec}\n         *            atom\n         * @param {AtomSpec}\n         *            sel\n         * @return {boolean}\n         */\n        function atomIsSelected(atom, sel) {\n            if (typeof (sel) === \"undefined\")\n                sel = {};\n\n            var ms = [];\n            var i;\n\n            if (typeof sel.model === \"undefined\") {\n                for (i = 0; i < models.length; i++) {\n                    if (models[i])\n                        ms.push(models[i]);\n                }\n            } else { // specific to some models\n                ms = sel.model;\n                if (!$.isArray(ms))\n                    ms = [ ms ];\n            }\n\n            for (i = 0; i < ms.length; i++) {\n                if (ms[i].atomIsSelected(atom, sel))\n                    return true;\n            }\n\n            return false;\n        }\n\n\n        /** return list of atoms selected by sel\n         *\n         * @function $3Dmol.GLViewer#selectedAtoms\n         * @param {AtomSelectionSpec} sel\n         * @return {Array.<Object>}\n         */\n        this.selectedAtoms = function(sel) {\n            return getAtomsFromSel(sel);\n        };\n\n        /**\n         * Return pdb output of selected atoms (if atoms from pdb input)\n         *\n         * @function $3Dmol.GLViewer#pdbData\n         * @param {Object=} [sel] - Selection specification specifying model and atom properties to select.  Default: all atoms in viewer\n         * @return {string} PDB string of selected atoms\n         */\n        this.pdbData = function(sel) {\n            var atoms = getAtomsFromSel(sel);\n            var ret = \"\";\n            for (var i = 0, n = atoms.length; i < n; ++i) {\n                ret += atoms[i].pdbline + \"\\n\";\n            }\n            return ret;\n        };\n\n        /**\n         * Zoom current view by a constant factor\n         *\n         * @function $3Dmol.GLViewer#zoom\n         * @param {number}\n         *            [factor] - Magnification factor. Values greater than 1\n         *            will zoom in, less than one will zoom out. Default 2.\n         *\n         */\n        this.zoom = function(factor) {\n            var factor = factor || 2;\n            var scale = (CAMERA_Z - rotationGroup.position.z) / factor;\n            rotationGroup.position.z = CAMERA_Z - scale;\n            show();\n            return this;\n        };\n\n        /**\n         * Translate current view by x,y screen coordinates\n         * This pans the camera rather than translating the model.\n         *\n         * @function $3Dmol.GLViewer#translate\n         * @param {number} x\n         * @param {number} y\n         *\n         */\n        this.translate = function(x, y) {\n\n            var dx = x/WIDTH;\n            var dy = y/HEIGHT;\n            var v = new $3Dmol.Vector3(0,0,-CAMERA_Z);\n\n            projector.projectVector(v, camera);\n            v.x -= dx;\n            v.y -= dy;\n            projector.unprojectVector(v, camera);\n            v.z = 0;\n            lookingAt.add(v);\n            camera.lookAt(lookingAt);\n            show();\n            return this;\n        };\n\n\n        /**\n         * Zoom to center of atom selection\n         *\n         * @function $3Dmol.GLViewer#zoomTo\n         * @param {Object}\n         *            [sel] - Selection specification specifying model and atom\n         *            properties to select. Default: all atoms in viewer\n         * @example // Assuming we have created a model of a protein with\n         *          multiple chains (e.g. from a PDB file), focus on atoms in\n         *          chain B glviewer.zoomTo({chain: 'B'});\n         *  // Focus on centroid of all atoms of all models in this\n         * viewer glviewer.zoomTo(); // (equivalent to glviewer.zoomTo({}) )\n         */\n        this.zoomTo = function(sel) {\n            var allatoms, alltmp;\n            sel = sel || {};\n            var atoms = getAtomsFromSel(sel);\n            var tmp = $3Dmol.getExtent(atoms);\n\n            if($.isEmptyObject(sel)) {\n                //include shapes when zooming to full scene\n                //TODO: figure out a good way to specify shapes as part of a selection\n                $.each(shapes, function(i, shape) {\n                  if(shape && shape.boundingSphere && shape.boundingSphere.center)\n                      var c = shape.boundingSphere.center;\n                      var r = shape.boundingSphere.radius;\n                      if(r > 0) {\n                          //make sure full shape is visible\n                            atoms.push(new $3Dmol.Vector3(c.x+r,c.y,c.z));\n                            atoms.push(new $3Dmol.Vector3(c.x-r,c.y,c.z));\n                            atoms.push(new $3Dmol.Vector3(c.x,c.y+r,c.z));\n                            atoms.push(new $3Dmol.Vector3(c.x,c.y-r,c.z));\n                            atoms.push(new $3Dmol.Vector3(c.x,c.y,c.z+r));\n                            atoms.push(new $3Dmol.Vector3(c.x,c.y,c.z-r));\n                      } else {\n                            atoms.push(c);\n                      }\n                });\n                tmp = $3Dmol.getExtent(atoms);\n                allatoms = atoms;\n                alltmp = tmp;\n\n            }\n            else {\n                allatoms = getAtomsFromSel({});\n                alltmp = $3Dmol.getExtent(allatoms);\n            }\n\n            // use selection for center\n            var center = new $3Dmol.Vector3(tmp[2][0], tmp[2][1], tmp[2][2]);\n            modelGroup.position = center.clone().multiplyScalar(-1);\n            // but all for bounding box\n            var x = alltmp[1][0] - alltmp[0][0], y = alltmp[1][1]\n                    - alltmp[0][1], z = alltmp[1][2] - alltmp[0][2];\n\n            var maxD = Math.sqrt(x * x + y * y + z * z);\n            if (maxD < 5)\n                maxD = 5;\n\n            // use full bounding box for slab/fog\n            slabNear = -maxD / 1.9;\n            slabFar = maxD / 2;\n\n            // for zoom, use selection box\n            x = tmp[1][0] - tmp[0][0];\n            y = tmp[1][1] - tmp[0][1];\n            z = tmp[1][2] - tmp[0][2];\n            maxD = Math.sqrt(x * x + y * y + z * z);\n            if (maxD < 5)\n                maxD = 5;\n\n            //find the farthest atom from center to get max distance needed for view\n            var maxDsq = 25;\n            for (var i = 0; i < atoms.length; i++) {\n                if(atoms[i]) {\n                    var dsq = center.distanceToSquared(atoms[i]);\n                    if(dsq > maxDsq)\n                        maxDsq = dsq;\n                }\n            }\n\n            var maxD = Math.sqrt(maxDsq)*2;\n\n            rotationGroup.position.z = -(maxD * 0.5\n                    / Math.tan(Math.PI / 180.0 * camera.fov / 2) - CAMERA_Z);\n            show();\n\n            return this;\n        };\n\n        /**\n         * Set slab of view (contents outside of slab are clipped). M\n         * Must call render to update.\n         *\n         * @function $3Dmol.GLViewer#setSlab\n         * @param {near}\n         * @param {far}\n         */\n        this.setSlab = function(near, far) {\n            slabNear = near;\n            slabFar = far;\n        };\n\n        /**\n         * Get slab of view (contents outside of slab are clipped).\n         *\n         * @function $3Dmol.GLViewer#setSlab\n         * @return {Object} near/far\n         */\n        this.getSlab = function(sel) {\n            return {near: slabNear, far: slabFar};\n        };\n\n        /**\n         * Add label to viewer\n         *\n         * @function $3Dmol.GLViewer#addLabel\n         * @param {string}\n         *            text - Label text\n         * @param {Object}\n         *            data - Label style specification\n         * @return {$3Dmol.Label}\n         *\n         * @example\n         *  // Assuming glviewer contains a model representing a protein, label\n         * all alpha carbons with their residue name\n         *  // Select all alpha carbons (have property atom : \"CA\") from last\n         * model added var atoms =\n         * glviewer.getModel().selectedAtoms({atom:\"CA\"}); var labels = [];\n         *\n         * for (var a in atoms) { var atom = atoms[a];\n         *  // Create label at alpha carbon's position displaying atom's residue\n         * and residue number var labelText = atom.resname + \" \" + atom.resi;\n         *\n         * var l = glviewer.createLabel(labelText, {fontSize: 12, position: {x:\n         * atom.x, y: atom.y, z: atom.z});\n         *\n         * labels.push(l); }\n         *  // Render labels glviewer.render();\n         */\n        this.addLabel = function(text, data) {\n            var label = new $3Dmol.Label(text, data);\n            label.setContext();\n            modelGroup.add(label.sprite);\n            labels.push(label);\n            show();\n            return label;\n        };\n\n\n\n        /** Add residue labels.  This will generate one label per a\n         * residue within the selected atoms.  The label will be at the\n         * centroid of the atoms and styled according to the passed style.\n         * The label text will be [resn][resi]\n         *\n         * @param {Object} sel\n         * @param {Object} style\n         */\n        this.addResLabels = function(sel, style) {\n            applyToModels(\"addResLabels\", sel, this, style);\n            return this;\n        }\n\n        /**\n         * Remove label from viewer\n         *\n         * @function $3Dmol.GLViewer#removeLabel\n         * @param {$3Dmol.Label}\n         *            label - $3Dmol label\n         *\n         * @example // Remove labels created in [addLabel example]{@link $3Dmol.GLViewer#addLabel}\n         *\n         * for (var i = 0; i < labels.length; i++) {\n         * glviewer.removeLabel(label); }\n         *\n         * glviewer.render();\n         */\n        this.removeLabel = function(label) {\n            //todo: don't do the linear search\n            for(var i = 0; i < labels.length; i++) {\n                if(labels[i] == label) {\n                    labels.splice(i,1);\n                    label.dispose();\n                    modelGroup.remove(label.sprite);\n                    break;\n                }\n            }\n            return this;\n        };\n\n\n\n        /**\n         * Remove all labels from viewer\n         *\n         * @function $3Dmol.GLViewer#removeAllLabels\n         */\n        this.removeAllLabels = function() {\n            for (var i = 0; i < labels.length; i++) {\n                modelGroup.remove(labels[i].sprite);\n            }\n            labels.splice(0,labels.length); //don't overwrite in case linked\n            return this;\n        };\n\n        // Modify label style\n        /**\n         * Modify existing label's style\n         *\n         * @function $3Dmol.GLViewer#setLabelStyle\n         * @param {$3Dmol.Label}\n         *            label - $3Dmol label\n         * @param {Object}\n         *            stylespec - Label style specification\n         * @return {$3Dmol.Label}\n         */\n        this.setLabelStyle = function(label, stylespec) {\n            modelGroup.remove(label.sprite);\n            label.dispose();\n            label.stylespec = stylespec;\n            label.setContext();\n            modelGroup.add(label.sprite);\n            show();\n            return label;\n\n        };\n\n        // Change label text\n        /**\n         * Modify existing label's text\n         *\n         * @function $3Dmol.GLViewer#setLabelText\n         * @param {$3Dmol.Label}\n         *            label - $3Dmol label\n         * @param {String}\n         *            text - Label text\n         * @return {$3Dmol.Label}\n         */\n        this.setLabelText = function(label, text) {\n            modelGroup.remove(label.sprite);\n            label.dispose();\n            label.text = text;\n            label.setContext();\n            modelGroup.add(label.sprite);\n            show();\n            return label;\n\n        };\n\n        /**\n         * Add shape object to viewer\n         * @see {@link $3Dmol.GLShape}\n         *\n         * @function $3Dmol.GLViewer#addShape\n         * @param {ShapeSpec} shapeSpec - style specification for label\n         * @return {$3Dmol.GLShape}\n         */\n        this.addShape = function(shapeSpec) {\n            shapeSpec = shapeSpec || {};\n            var shape = new $3Dmol.GLShape(shapeSpec);\n            shape.shapePosition = shapes.length;\n            shapes.push(shape);\n\n            return shape;\n\n        };\n\n        /**\n         * Remove shape object from viewer\n         *\n         * @function $3Dmol.GLViewer#removeShape\n         * @param {$3Dmol.GLShape} shape - Reference to shape object to remove\n         */\n        this.removeShape = function(shape) {\n            if (!shape)\n                return this;\n            shape.removegl(modelGroup);\n            delete shapes[shape.shapePosition];\n            // clear off back of model array\n            while (shapes.length > 0\n                    && typeof (shapes[shapes.length - 1]) === \"undefined\")\n                shapes.pop();\n            return this;\n        };\n\n        /**\n         * Remove all shape objects from viewer\n         * @function $3Dmol.GLViewer#removeAllShapes\n         */\n        this.removeAllShapes = function() {\n            for (var i = 0; i < shapes.length; i++) {\n                var shape = shapes[i];\n                shape.removegl(modelGroup);\n            }\n            shapes.splice(0,shapes.length);\n            return this;\n        }\n\n        /**\n         * Create and add sphere shape. This method provides a shorthand\n         * way to create a spherical shape object\n         *\n         * @function $3Dmol.GLViewer#addSphere\n         * @param {SphereSpec} spec - Sphere shape style specification\n         * @return {$3Dmol.GLShape}\n         */\n        this.addSphere = function(spec) {\n            spec = spec || {};\n            var s = new $3Dmol.GLShape(spec);\n            s.shapePosition = shapes.length;\n            s.addSphere(spec);\n            shapes.push(s);\n\n            return s;\n        };\n\n        /**\n         * Create and add arrow shape\n         *\n         * @function $3Dmol.GLViewer#addArrow\n         * @param {ArrowSpec} spec - Style specification\n         * @return {$3Dmol.GLShape}\n         */\n        this.addArrow = function(spec) {\n            spec = spec || {};\n            var s = new $3Dmol.GLShape(spec);\n            s.shapePosition = shapes.length;\n            s.addArrow(spec);\n            shapes.push(s);\n\n            return s;\n        };\n\n        /**\n         * Create and add cylinder shape\n         *\n         * @function $3Dmol.GLViewer#addCylinder\n         * @param {CylinderSpec} spec - Style specification\n         * @return {$3Dmol.GLShape}\n         */\n        this.addCylinder = function(spec) {\n            spec = spec || {};\n            var s = new $3Dmol.GLShape(spec);\n            s.shapePosition = shapes.length;\n            s.addCylinder(spec);\n            shapes.push(s);\n\n            return s;\n        };\n\n        /**\n         * Create and add line shape\n         *\n         * @function $3Dmol.GLViewer#addLine\n         * @param {LineSpec} spec - Style specification, can specify dashed, dashLength, and gapLength\n         * @return {$3Dmol.GLShape}\n         */\n        this.addLine = function(spec) {\n            spec = spec || {};\n            spec.wireframe = true;\n            var s = new $3Dmol.GLShape(spec);\n            s.shapePosition = shapes.length;\n            if (spec.dashed)\n                s = addLineDashed(spec, s);\n            else\n                s.addLine(spec);\n            shapes.push(s);\n\n            return s;\n        };\n\n\n        /**\n         * Create and add unit cell\n         *\n         * @function $3Dmol.GLViewer#addUnitCell\n         * @param {GLModel} Model with unit cell information (e.g., pdb derived).\n         * @return {$3Dmol.GLShape}  Line shape delineating unit cell.\n         */\n        this.addUnitCell = function(model) {\n\n            var s = new $3Dmol.GLShape({'wireframe' : true});\n            s.shapePosition = shapes.length;\n            var data = model.getCrystData();\n            if (data) {\n                var a = data.a, b = data.b, c = data.c, alpha = data.alpha, beta = data.beta, gamma = data.gamma;\n                alpha = alpha * Math.PI/180.0;\n                beta = beta * Math.PI/180.0;\n                gamma = gamma * Math.PI/180.0;\n\n                var u, v, w;\n\n                u = Math.cos(beta);\n                v = (Math.cos(alpha) - Math.cos(beta)*Math.cos(gamma))/Math.sin(gamma);\n                w = Math.sqrt(Math.max(0, 1-u*u-v*v));\n\n                var matrix = new $3Dmol.Matrix4(a, b*Math.cos(gamma), c*u, 0,\n                                                0, b*Math.sin(gamma), c*v, 0,\n                                                0, 0,                 c*w, 0,\n                                                0, 0,                 0,   1);\n\n                var points = [  new $3Dmol.Vector3(0, 0, 0),\n                                new $3Dmol.Vector3(1, 0, 0),\n                                new $3Dmol.Vector3(0, 1, 0),\n                                new $3Dmol.Vector3(0, 0, 1),\n                                new $3Dmol.Vector3(1, 1, 0),\n                                new $3Dmol.Vector3(0, 1, 1),\n                                new $3Dmol.Vector3(1, 0, 1),\n                                new $3Dmol.Vector3(1, 1, 1)  ];\n\n                for (var i = 0; i < points.length; i++) {\n                    points[i] = points[i].applyMatrix4(matrix);\n                }\n\n                s.addLine({start: points[0], end: points[1]});\n                s.addLine({start: points[0], end: points[2]});\n                s.addLine({start: points[1], end: points[4]});\n                s.addLine({start: points[2], end: points[4]});\n\n                s.addLine({start: points[0], end: points[3]});\n                s.addLine({start: points[3], end: points[5]});\n                s.addLine({start: points[2], end: points[5]});\n\n                s.addLine({start: points[1], end: points[6]});\n                s.addLine({start: points[4], end: points[7]});\n                s.addLine({start: points[6], end: points[7]});\n\n                s.addLine({start: points[3], end: points[6]});\n                s.addLine({start: points[5], end: points[7]});\n            }\n\n            shapes.push(s);\n            return s;\n        };\n\n        function addLineDashed(spec, s) {\n            spec.dashLength = spec.dashLength || 0.5;\n            spec.gapLength = spec.gapLength || 0.5;\n            spec.start = spec.start || {};\n            spec.end = spec.end || {};\n\n            var p1 = new $3Dmol.Vector3(spec.start.x || 0,\n              spec.start.y || 0, spec.start.z || 0)\n          var p2 = new $3Dmol.Vector3(spec.end.x,\n              spec.end.y || 0, spec.end.z || 0);\n\n            var dir = new $3Dmol.Vector3();\n            var dash = new $3Dmol.Vector3();\n            var gap = new $3Dmol.Vector3();\n            var length, dashAmt, gapAmt;\n            var temp = p1.clone();\n            var drawn = 0;\n\n            dir.subVectors(p2, p1);\n            length = dir.length();\n            dir.normalize();\n            dash = dir.clone();\n            gap = dir.clone();\n            dash.multiplyScalar(spec.dashLength);\n            gap.multiplyScalar(spec.gapLength);\n            dashAmt = dash.length();\n            gapAmt = gap.length();\n\n            while (drawn < length) {\n                if ((drawn + dashAmt) > length) {\n                    spec.start = p1;\n                    spec.end = p2;\n                    s.addLine(spec);\n                    break;\n                }\n                temp.addVectors(p1, dash);\n                spec.start = p1;\n                spec.end = temp;\n                s.addLine(spec);\n                p1 = temp.clone();\n                drawn += dashAmt;\n\n                temp.addVectors(p1, gap);\n                p1 = temp.clone();\n                drawn += gapAmt;\n            }\n\n          return s;\n        }\n\n        /**\n         * Add custom shape component from user supplied function\n         *\n         * @function $3Dmol.GLViewer#addCustom\n         * @param {CustomSpec} spec - Style specification\n         * @return {$3Dmol.GLShape}\n         */\n        this.addCustom = function(spec) {\n            spec = spec || {};\n            var s = new $3Dmol.GLShape(spec);\n            s.shapePosition = shapes.length;\n            s.addCustom(spec);\n            shapes.push(s);\n\n            return s;\n        };\n\n        /**\n         * Construct isosurface from volumetric data in gaussian cube format\n         * @deprecated\n         * @function $3Dmol.GLViewer#addVolumetricData\n         * @param {String} data - Input file contents\n         * @param {String} format - Input file format (currently only supports \"cube\")\n         * @param {IsoSurfaceSpec} spec - Shape style specification\n         * @return {$3Dmol.GLShape}\n         *\n         * @example\n         * viewer.addVolumetricData(data, \"cube\", {isoval: 0.01, color: \"blue\", opacity: 0.95});\n         * viewer.addVolumetricData(data, \"cube\", {isoval: -0.01, color: \"red\", opacity: 0.95});\n         */\n        this.addVolumetricData = function(data, format, spec) {\n            spec = spec || {};\n            var s = new $3Dmol.GLShape(spec);\n            s.shapePosition = shapes.length;\n            s.addVolumetricData(data, format, spec);\n            shapes.push(s);\n\n            return s;\n        };\n\n        /**\n         * Construct isosurface from volumetric data\n         * @function $3Dmol.GLViewer#addIsosurface\n         * @param {$3Dmol.VolumeData} data - volumetric data\n         * @param {IsoSurfaceSpec} spec - Shape style specification\n         * @return {$3Dmol.GLShape}\n         *\n         * @example\n         * var data = new $3Dmol.VolumeData(str,\"cube\");\n         * viewer.addIsosurface(data, {isoval: 0.01, color: \"blue\", opacity: 0.95});\n         * viewer.addIsosurface(data, {isoval: -0.01, color: \"red\", opacity: 0.95});\n         */\n        this.addIsosurface = function(data,  spec) {\n            spec = spec || {};\n            var s = new $3Dmol.GLShape(spec);\n            s.shapePosition = shapes.length;\n            s.addIsosurface(data, spec);\n            shapes.push(s);\n\n            return s;\n        };\n\n        /**\n         * Sets the atomlists of all models in the viewer to specified frame\n         * Sets to last frame if framenum out of range\n         *\n         * @function $3Dmol.GLViewer#setFrame\n         * @param {number} framenum - each model in viewer has their atoms set to this index in frames list\n         */\n        this.setFrame = function(framenum) {\n            for (var i = 0; i < models.length; i++) {\n                models[i].setFrame(framenum);\n            }\n            return this;\n        };\n\n        /**\n         * Returns the number of frames that the model with the most frames in the viewer has\n         *\n         * @function $3Dmol.GLViewer#getFrames\n         * @return {number}\n         */\n        this.getFrames = function() {\n            var mostFrames = 0;\n            var modelNum = 0;\n            for (var i = 0; i < models.length; i++) {\n                if (models[i].getFrames().length > mostFrames) {\n                    modelNum = i;\n                    mostFrames = models[i].getFrames().length;\n                }\n            }\n            return mostFrames;\n        };\n\n\n        /**\n         * Animate all models in viewer from their respective frames\n         * @function $3Dmol.GLViewer#animate\n         * @param {Object} options - can specify interval (speed of animation), loop (direction\n         * of looping, 'backward', 'forward' or 'backAndForth') and reps (numer of repetitions, 0 indicates infinite loop)\n         *\n         * @example\n         * viewer.addModelAsFrames(data, \"pdb\");\n         * viewer.animate({interval: 75, loop: \"backward\", reps: 30});\n         */\n        this.animate = function(options) {\n            animated = true;\n            var interval = 100;\n            var loop = \"forward\";\n            var reps = 0;\n            options = options || {};\n            if (options.interval) {\n                interval = options.interval;\n            }\n            if (options.loop) {\n                loop = options.loop;\n            }\n            if (options.reps) {\n                reps = options.reps;\n            }\n            var mostFrames = this.getFrames();\n            var that = this;\n            var currFrame = 0;\n            var inc = 1;\n            var displayCount = 0;\n            var displayMax = mostFrames * reps;\n            var display = function(direction) {\n                if (direction == \"forward\") {\n                    that.setFrame(currFrame);\n                    currFrame = (currFrame + inc) % mostFrames;\n                }\n                else if (direction == \"backward\") {\n                    that.setFrame((mostFrames-1) - currFrame);\n                    currFrame = (currFrame + inc) % mostFrames;\n                }\n                else { //back and forth\n                    that.setFrame(currFrame);\n                    currFrame += inc;\n                    inc *= (((currFrame % (mostFrames-1)) == 0) ? -1 : 1);\n                }\n                that.render();\n                if (++displayCount == displayMax || !that.isAnimated()) {\n                    clearInterval(intervalID);\n                }\n            };\n            var intervalID = setInterval( function() { display(loop); }, interval);\n            return this;\n        };\n\n        /**\n         * Stop animation of all models in viewer\n         * @function $3Dmol.GLViewer#stopAnimate\n         */\n        this.stopAnimate = function() {\n            animated = false;\n            return this;\n        };\n\n        /**\n         * Return true if viewer is currently being animated, false otherwise\n         * @function $3Dmol.GLViewer#isAnimated\n         * @return {boolean}\n         */\n        this.isAnimated = function() {\n            return animated;\n        };\n\n\n        /**\n         * Create and add model to viewer, given molecular data and its format\n         * (pdb, sdf, xyz, or mol2)\n         *\n         * @function $3Dmol.GLViewer#addModel\n         * @param {string} data - Input data\n         * @param {string} format - Input format ('pdb', 'sdf', 'xyz', or 'mol2')\n         * @return {$3Dmol.GLModel}\n         */\n        this.addModel = function(data, format, options) {\n            var m = new $3Dmol.GLModel(models.length, defaultcolors);\n            m.addMolData(data, format, options);\n            models.push(m);\n\n            return m;\n        };\n\n        /**\n         * Given multimodel file and its format, add atom data to the viewer as separate models\n         * and return list of these models\n         *\n         * @function $3Dmol.GLViewer#addModels\n         * @param {string} data - Input data\n         * @param {string} format - Input format ('pdb', 'sdf', 'xyz', or 'mol2')\n         * @return {Array<$3Dmol.GLModel>}\n         */\n        this.addModels = function(data, format, options) {\n            options = options || {};\n            options.multimodel = true;\n            options.frames = true;\n\n            var modelatoms = $3Dmol.GLModel.parseMolData(data, format, options);\n\n            for (var i = 0; i < modelatoms.length; i++) {\n                var newModel = new $3Dmol.GLModel(models.length, defaultcolors);\n                newModel.setAtomDefaults(modelatoms[i]);\n                newModel.addFrame(modelatoms[i]);\n                newModel.setFrame(0);\n                newModel.setModelData(modelatoms.modelData[i]);\n                newModel.setDontDuplicateAtoms(!options.duplicateAssemblyAtoms);\n                models.push(newModel);\n            }\n\n            return models;\n        };\n\n        /**\n         * Create and add model to viewer. Given multimodel file and its format,\n         * different atomlists are stored in model's frame\n         * property and model's atoms are set to the 0th frame\n         *\n         * @function $3Dmol.GLViewer#addModelsAsFrames\n         * @param {string} data - Input data\n         * @param {string} format - Input format ('pdb', 'sdf', 'xyz', or 'mol2')\n         * @return {$3Dmol.GLModel}\n         */\n        this.addModelsAsFrames = function(data, format, options) {\n            options = options || {};\n            options.multimodel = true;\n            options.frames = true;\n            var m = new $3Dmol.GLModel(models.length, defaultcolors);\n            m.addMolData(data, format, options);\n            models.push(m);\n\n            return m;\n        };\n\n        /**\n         * Create and add model to viewer. Given multimodel file and its format,\n         * all atoms are added to one model\n         *\n         * @function $3Dmol.GLViewer#addAsOneMolecule\n         * @param {string} data - Input data\n         * @param {string} format - Input format ('pdb', 'sdf', 'xyz', or 'mol2')\n         * @return {$3Dmol.GLModel}\n         */\n        this.addAsOneMolecule = function(data, format, options) {\n            options = options || {};\n            options.multimodel = true;\n            options.onemol = true;\n            var m = new $3Dmol.GLModel(models.length, defaultcolors);\n            m.addMolData(data, format, options);\n            models.push(m);\n\n            return m;\n        };\n\n\n        /**\n         * Delete specified model from viewer\n         *\n         * @function $3Dmol.GLViewer#removeModel\n         * @param {$3Dmol.GLModel} model\n         */\n        this.removeModel = function(model) {\n            if (!model)\n                return;\n            model.removegl(modelGroup);\n            delete models[model.getID()];\n            // clear off back of model array\n            while (models.length > 0\n                    && typeof (models[models.length - 1]) === \"undefined\")\n                models.pop();\n            return this;\n        };\n\n        /**\n         * Delete all existing models\n         * @function $3Dmol.GLViewer#removeAllModels\n         */\n        this.removeAllModels = function() {\n            for (var i = 0; i < models.length; i++) {\n                var model = models[i];\n                model.removegl(modelGroup);\n\n            }\n            models.splice(0,models.length); //don't simply overwrite array in case linked\n            return this;\n        };\n\n        /**\n         * Export one or all of the loaded models into ChemDoodle compatible JSON.\n         * @function $3Dmol.GLViewer#exportJSON\n         * @param {boolean} includeStyles - Whether or not to include style information.\n         * @param {number} modelID - Optional parameter for which model to export. If left out, export all of them.\n         * @return {string}\n         */\n        this.exportJSON = function(includeStyles, modelID) {\n            var object = {};\n            if (modelID === undefined) {\n                object.m = models.map(function(model) {\n                    return model.toCDObject(includeStyles);\n                });\n            } else {\n                object.m = [ model[modelID].toCDObject() ];\n            }\n            return JSON.stringify(object);\n        }\n\n        /**\n         * Create a new model from atoms specified by sel.\n         * If extract, removes selected atoms from existing models\n         *\n         * @function $3Dmol.GLViewer#createModelFrom\n         * @param {Object} sel - Atom selection specification\n         * @param {boolean=} extract - If true, remove selected atoms from existing models\n         * @return {$3Dmol.GLModel}\n         */\n        this.createModelFrom = function(sel, extract) {\n            var m = new $3Dmol.GLModel(models.length, defaultcolors);\n            for (var i = 0; i < models.length; i++) {\n                if (models[i]) {\n                    var atoms = models[i].selectedAtoms(sel);\n                    m.addAtoms(atoms);\n                    if (extract)\n                        models[i].removeAtoms(atoms);\n                }\n            }\n            models.push(m);\n            return m;\n        };\n\n        function applyToModels(func, sel, value1, value2) {\n\n            //apply func to all models that are selected by sel with value1 and 2\n            var ms = []\n            if (typeof sel.model === \"undefined\") {\n                for (i = 0; i < models.length; i++) {\n                    if (models[i])\n                        ms.push(models[i]);\n                }\n            } else { // specific to some models\n                ms = sel.model;\n                if (!$.isArray(ms))\n                    ms = [ ms ];\n            }\n\n\n            for (var i = 0; i < ms.length; i++) {\n                if (ms[i]) {\n                    ms[i][func](sel, value1, value2);\n                }\n            }\n        }\n\n        /**\n         * Set style properties to all selected atoms\n         *\n         * @function $3Dmol.GLViewer#setStyle\n         * @param {AtomSelectionSpec} sel - Atom selection specification\n         * @param {AtomStyleSpec} style - Style spec to apply to specified atoms\n         *\n         * @example\n         * viewer.setStyle({}, {stick:{}}); //set all atoms to stick\n         * viewer.setStyle({chain: 'B'}, {cartoon: {color: 'spectrum'}}); //set chain B to rainbow cartoon\n         */\n        this.setStyle = function(sel, style) {\n            if(typeof(style) === 'undefined') {\n                //if a single argument is provided, assume it is a style and select all\n                style = sel;\n                sel = {};\n            }\n\n            applyToModels(\"setStyle\", sel, style, false);\n            return this;\n        };\n\n        /**\n         * Add style properties to all selected atoms\n         *\n         * @function $3Dmol.GLViewer#addStyle\n         * @param {AtomSelectionSpec} sel - Atom selection specification\n         * @param {AtomStyleSpec} style - style spec to add to specified atoms\n         */\n        this.addStyle = function(sel, style) {\n            if(typeof(style) === 'undefined') {\n                //if a single argument is provided, assume it is a style and select all\n                style = sel;\n                sel = {};\n            }\n            applyToModels(\"setStyle\", sel, style, true);\n            return this;\n        };\n\n        /**\n         * Set click-handling properties to all selected atoms\n         *\n         * @function $3Dmol.GLViewer#setClickable\n         * @param {AtomSelectionSpec} sel - atom selection to apply clickable settings to\n         * @param {boolean} clickable - whether click-handling is enabled for the selection\n         * @param {function} callback - function called when an atom in the selection is clicked\n         *\n         * @example\n         * viewer.setClickable({}, false); // disable click-handling for entire viewer\n         * viewer.setClickable({chain: 'B'}, true, function(){ console.log(this.elem); }); // chain B prints the clicked element to console\n         */\n        this.setClickable = function(sel, clickable, callback) {\n            applyToModels(\"setClickable\", sel, clickable, callback);\n            return this;\n        };\n\n        this.setHoverable = function(sel,hoverable,hover_callback,unhover_callback){\n            applyToModels(\"setHoverable\", sel,hoverable, hover_callback,unhover_callback);\n            return this;\n        }\n        /**\n         * @function $3Dmol.GLViewer#setColorByProperty\n         * @param {AtomSelectionSpec} sel\n         * @param {type} prop\n         * @param {type} scheme\n         */\n        this.setColorByProperty = function(sel, prop, scheme) {\n            applyToModels(\"setColorByProperty\", sel, prop, scheme);\n            return this;\n        };\n\n        /**\n         * @function $3Dmol.GLViewer#setColorByElement\n         * @param {AtomSelectionSpec} sel\n         * @param {type} colors\n         */\n        this.setColorByElement = function(sel, colors) {\n            applyToModels(\"setColorByElement\", sel, colors);\n            return this;\n        };\n\n        /**\n         *\n         * @param {AtomSpec[]} atomlist\n         * @param {Array}\n         *            extent\n         * @return {Array}\n         */\n        var getAtomsWithin = function(atomlist, extent) {\n            var ret = [];\n\n            for (var i = 0; i < atomlist.length; i++) {\n                var atom = atomlist[i];\n                if (typeof (atom) == \"undefined\")\n                    continue;\n\n                if (atom.x < extent[0][0] || atom.x > extent[1][0])\n                    continue;\n                if (atom.y < extent[0][1] || atom.y > extent[1][1])\n                    continue;\n                if (atom.z < extent[0][2] || atom.z > extent[1][2])\n                    continue;\n                ret.push(atom);\n            }\n            return ret;\n        };\n\n        // return volume of extent\n        var volume = function(extent) {\n            var w = extent[1][0] - extent[0][0];\n            var h = extent[1][1] - extent[0][1];\n            var d = extent[1][2] - extent[0][2];\n            return w * h * d;\n        }; // volume\n        /*\n         * Break up bounding box/atoms into smaller pieces so we can parallelize\n         * with webworkers and also limit the size of the working memory Returns\n         * a list of bounding boxes with the corresponding atoms. These extents\n         * are expanded by 4 angstroms on each side.\n         */\n        /**\n         *\n         * @param {Array}\n         *            extent\n         * @param {AtomSpec[]} atomlist\n         * @param {AtomSpec[]} atomstoshow\n         * @return {Array}\n         */\n        var carveUpExtent = function(extent, atomlist, atomstoshow) {\n            var ret = [];\n\n            var index2atomlist = {}; //map from atom.index to position in atomlist\n            for(var i = 0, n = atomlist.length; i < n; i++) {\n                index2atomlist[atomlist[i].index] = i;\n            }\n\n            var atomsToListIndex = function(atoms) {\n            //return a list of indices into atomlist\n                var ret = [];\n                for(var i = 0, n = atoms.length; i < n; i++) {\n                    if(atoms[i].index in index2atomlist)\n                        ret.push(index2atomlist[atoms[i].index])\n                }\n                return ret;\n            }\n            var copyExtent = function(extent) {\n                // copy just the dimensions\n                var ret = [];\n                ret[0] = [ extent[0][0], extent[0][1], extent[0][2] ];\n                ret[1] = [ extent[1][0], extent[1][1], extent[1][2] ];\n                return ret;\n            }; // copyExtent\n            var splitExtentR = function(extent) {\n                // recursively split until volume is below maxVol\n                if (volume(extent) < maxVolume) {\n                    return [ extent ];\n                } else {\n                    // find longest edge\n                    var w = extent[1][0] - extent[0][0];\n                    var h = extent[1][1] - extent[0][1];\n                    var d = extent[1][2] - extent[0][2];\n\n                    var index;\n\n                    if (w > h && w > d) {\n                        index = 0;\n                    } else if (h > w && h > d) {\n                        index = 1;\n                    } else {\n                        index = 2;\n                    }\n\n                    // create two halves, splitting at index\n                    var a = copyExtent(extent);\n                    var b = copyExtent(extent);\n                    var mid = (extent[1][index] - extent[0][index]) / 2\n                            + extent[0][index];\n                    a[1][index] = mid;\n                    b[0][index] = mid;\n\n                    var alist = splitExtentR(a);\n                    var blist = splitExtentR(b);\n                    return alist.concat(blist);\n                }\n            }; // splitExtentR\n\n            // divide up extent\n            var splits = splitExtentR(extent);\n            // now compute atoms within expanded (this could be more efficient)\n            var off = 6; // enough for water and 2*r, also depends on scale\n            // factor\n            for (var i = 0, n = splits.length; i < n; i++) {\n                var e = copyExtent(splits[i]);\n                e[0][0] -= off;\n                e[0][1] -= off;\n                e[0][2] -= off;\n                e[1][0] += off;\n                e[1][1] += off;\n                e[1][2] += off;\n\n                var atoms = getAtomsWithin(atomlist, e);\n                var toshow = getAtomsWithin(atomstoshow, splits[i]);\n\n                // ultimately, divide up by atom for best meshing\n                ret.push({\n                    extent : splits[i],\n                    atoms : atomsToListIndex(atoms),\n                    toshow : atomsToListIndex(toshow)\n                });\n            }\n\n            return ret;\n        };\n\n        // create a mesh defined from the passed vertices and faces and material\n        // Just create a single geometry chunk - broken up whether sync or not\n        /**\n         *\n         * @param {AtomSpec[]} atoms\n         * @param {{vertices:number,faces:number}}\n         *            VandF\n         * @param {$3Dmol.MeshLambertMaterial}\n         *            mat\n         * @return {$3Dmol.Mesh}\n         */\n        var generateSurfaceMesh = function(atoms, VandF, mat) {\n            var geo = new $3Dmol.Geometry(true);\n            // Only one group per call to generate surface mesh (addSurface\n            // should split up mesh render)\n            var geoGroup = geo.updateGeoGroup(0);\n\n            // set colors for vertices\n            var colors = [];\n            for (i = 0, il = atoms.length; i < il; i++) {\n                var atom = atoms[i];\n                if (atom) {\n                    if (typeof (atom.surfaceColor) != \"undefined\") {\n                        colors[i] = atom.surfaceColor;\n                    } else if (atom.color) // map from atom\n                        colors[i] = $3Dmol.CC.color(atom.color);\n                }\n            }\n\n            var vertexArray = geoGroup.vertexArray;\n\n            // reconstruct vertices and faces\n            var v = VandF['vertices'];\n            var offset;\n            var i, il;\n            for (i = 0, il = v.length; i < il; i++) {\n                offset = geoGroup.vertices * 3;\n                vertexArray[offset] = v[i].x;\n                vertexArray[offset + 1] = v[i].y;\n                vertexArray[offset + 2] = v[i].z;\n                geoGroup.vertices++;\n            }\n\n            //set colorArray of there are per-atom colors\n            var colorArray = geoGroup.colorArray;\n\n            if(mat.voldata && mat.volscheme) {\n                //convert volumetric data into colors\n                var scheme = mat.volscheme;\n                var voldata = mat.voldata;\n                var range = scheme.range() || [-1,1];\n                for (i = 0, il = v.length; i < il; i++) {\n                    var val = voldata.getVal(v[i].x,v[i].y,v[i].z);\n                    var col =  $3Dmol.CC.color(scheme.valueToHex(val, range));\n                    var offset = i * 3;\n                    colorArray[offset] = col.r;\n                    colorArray[offset + 1] = col.g;\n                    colorArray[offset + 2] = col.b;\n                }\n            }\n            else if(colors.length > 0) { //have atom colors\n                for (i = 0, il = v.length; i < il; i++) {\n                    var A = v[i].atomid;\n                    var offsetA = i * 3;\n\n                    colorArray[offsetA] = colors[A].r;\n                    colorArray[offsetA + 1] = colors[A].g;\n                    colorArray[offsetA + 2] = colors[A].b;\n                }\n            }\n\n            var faces = VandF['faces'];\n            geoGroup.faceidx = faces.length;// *3;\n            geo.initTypedArrays();\n\n            var verts = geoGroup.vertexArray;\n            var normalArray = geoGroup.normalArray;\n            var vA, vB, vC, norm;\n\n            // Setup colors, faces, and normals\n            for (i = 0, il = faces.length; i < il; i += 3) {\n\n                // var a = faces[i].a, b = faces[i].b, c = faces[i].c;\n                var a = faces[i], b = faces[i + 1], c = faces[i + 2];\n                var A = v[a]['atomid'];\n                var B = v[b]['atomid'];\n                var C = v[c]['atomid'];\n\n                var offsetA = a * 3, offsetB = b * 3, offsetC = c * 3;\n\n                // setup Normals\n                // todo - calculate normals in parallel code\n                vA = new $3Dmol.Vector3(verts[offsetA], verts[offsetA + 1],\n                        verts[offsetA + 2]);\n                vB = new $3Dmol.Vector3(verts[offsetB], verts[offsetB + 1],\n                        verts[offsetB + 2]);\n                vC = new $3Dmol.Vector3(verts[offsetC], verts[offsetC + 1],\n                        verts[offsetC + 2]);\n\n                vC.subVectors(vC, vB);\n                vA.subVectors(vA, vB);\n                vC.cross(vA);\n\n                // face normal\n                norm = vC;\n                norm.normalize();\n\n                normalArray[offsetA] += norm.x;\n                normalArray[offsetB] += norm.x;\n                normalArray[offsetC] += norm.x;\n                normalArray[offsetA + 1] += norm.y;\n                normalArray[offsetB + 1] += norm.y;\n                normalArray[offsetC + 1] += norm.y;\n                normalArray[offsetA + 2] += norm.z;\n                normalArray[offsetB + 2] += norm.z;\n                normalArray[offsetC + 2] += norm.z;\n\n            }\n            geoGroup.faceArray = new Uint16Array(faces);\n            var mesh = new $3Dmol.Mesh(geo, mat);\n            mesh.doubleSided = true;\n            return mesh;\n        };\n\n        // do same thing as worker in main thread\n        /**\n         *\n         * @param {$3Dmol.SurfaceType}\n         *            type\n         * @param {Array}\n         *            expandedExtent\n         * @param {Array}\n         *            extendedAtoms\n         * @param {Array}\n         *            atomsToShow\n         * @param {AtomSpec[]} atoms\n         * @param {number}\n         *            vol\n         * @return {Object}\n         */\n        var generateMeshSyncHelper = function(type, expandedExtent,\n                extendedAtoms, atomsToShow, atoms, vol) {\n            var time = new Date();\n            var ps = new $3Dmol.ProteinSurface();\n            ps.initparm(expandedExtent, (type === 1) ? false : true, vol);\n\n            var time2 = new Date();\n            //console.log(\"initialize \" + (time2 - time) + \"ms\");\n\n            ps.fillvoxels(atoms, extendedAtoms);\n\n            var time3 = new Date();\n            //console.log(\"fillvoxels \" + (time3 - time2) + \"  \" + (time3 - time) + \"ms\");\n\n            ps.buildboundary();\n\n            if (type == $3Dmol.SurfaceType.SES || type == $3Dmol.SurfaceType.MS) {\n                ps.fastdistancemap();\n                ps.boundingatom(false);\n                ps.fillvoxelswaals(atoms, extendedAtoms);\n            }\n\n            var time4 = new Date();\n            //console.log(\"buildboundaryetc \" + (time4 - time3) + \"  \" + (time4 - time) + \"ms\");\n\n            ps.marchingcube(type);\n\n            var time5 = new Date();\n            //console.log(\"marching cube \" + (time5 - time4) + \"  \"+ (time5 - time) + \"ms\");\n\n            return ps.getFacesAndVertices(atomsToShow);\n        };\n\n        /**\n         *\n         * @param {matSpec}\n         *            style\n         * @return {$3Dmol.MeshLambertMaterial}\n         */\n        function getMatWithStyle(style) {\n            var mat = new $3Dmol.MeshLambertMaterial();\n            mat.vertexColors = $3Dmol.VertexColors;\n\n            for ( var prop in style) {\n                if (prop === \"color\" || prop === \"map\") {\n                    // ignore\n                } else if (style.hasOwnProperty(prop))\n                    mat[prop] = style[prop];\n            }\n            if (style.opacity !== undefined) {\n                if (style.opacity === 1)\n                    mat.transparent = false;\n                else\n                    mat.transparent = true;\n            }\n\n            return mat;\n        }\n\n\n        /**\n         * Adds an explicit mesh as a surface object.\n         * @function $3Dmol.GLViewer#addMesh\n         * @param {$3Dmol.Mesh}\n         *            mesh\n         * @param {Object}\n         *            style\n         * @returns {Number} surfid\n         */\n        this.addMesh = function(mesh) {\n            var surfobj = {\n                geo : mesh.geometry,\n                mat : mesh.material,\n                done : true,\n                finished : false //the rendered finishes surfaces when they are done\n            };\n            var surfid = nextSurfID();\n            surfaces[surfid] = surfobj;\n            return surfid;\n        }\n\n        //return a shallow copy of list l, e.g., for atoms so we can\n        //ignore superficial changes (ie surfacecolor, position) that happen\n        //while we're surface building\n        var shallowCopy = function(l) {\n            var ret = [];\n            $.each(l, function(k,v) {\n                ret[k] = $.extend({},v);\n            });\n            return ret;\n        }\n        /**\n         * Add surface representation to atoms\n         *  @function $3Dmol.GLViewer#addSurface\n         * @param {$3Dmol.SurfaceType} type - Surface type\n         * @param {SurfaceStyleSpec} style - optional style specification for surface material (e.g. for different coloring scheme, etc)\n         * @param {AtomSelectionSpec} atomsel - Show surface for atoms in this selection\n         * @param {AtomSelectionSpec} allsel - Use atoms in this selection to calculate surface; may be larger group than 'atomsel'\n         * @param {AtomSelectionSpec} focus - Optionally begin rendering surface specified atoms\n         *\n         * @return {number} surfid - Identifying number for this surface\n         */\n        this.addSurface = function(type, style, atomsel, allsel, focus) {\n            // type 1: VDW 3: SAS 4: MS 2: SES\n            // if sync is true, does all work in main thread, otherwise uses\n            // workers\n            // with workers, must ensure group is the actual modelgroup since\n            // surface\n            // will get added asynchronously\n            // all atoms in atomlist are used to compute surfaces, but only the\n            // surfaces\n            // of atomsToShow are displayed (e.g., for showing cavities)\n            // if focusSele is specified, will start rending surface around the\n            // atoms specified by this selection\n            var atomlist = null, focusSele = null;\n            //TODO: currently generating a shallow copy to avoid problems when atoms are chagned\n            //during surface generation - come up with a better solution\n            var atomsToShow = shallowCopy(getAtomsFromSel(atomsel));\n            if(!allsel) {\n                atomlist = atomsToShow;\n            }\n            else {\n                atomlist = shallowCopy(getAtomsFromSel(allsel));\n            }\n\n            var symmetries = false;\n            var n;\n            for (n = 0; n < models.length; n++) {\n                if(models[n]) {\n                    var symMatrices = models[n].getSymmetries();\n                    if (symMatrices.length > 1 || (symMatrices.length == 1 && !(symMatrices[0].isIdentity()))) {\n                        symmetries = true;\n                        break;\n                    }\n                }\n            }\n\n            var addSurfaceHelper = function addSurfaceHelper(surfobj, atomlist, atomsToShow) {\n\n                if(!focus) {\n                    focusSele = atomsToShow;\n                } else {\n                    focusSele = shallowCopy(getAtomsFromSel(focus));\n                }\n\n                var atom;\n                var time = new Date();\n                var extent = $3Dmol.getExtent(atomsToShow, true);\n\n                var i, il;\n                if (style['map'] && style['map']['prop']) {\n                    // map color space using already set atom properties\n                    /** @type {AtomSpec} */\n                    var prop = style['map']['prop'];\n                    /** @type {Gradient} */\n                    var scheme = style['map']['scheme'] || style['map']['gradient'] || new $3Dmol.Gradient.RWB();\n                    var range = scheme.range();\n                    if (!range) {\n                        range = $3Dmol.getPropertyRange(atomsToShow, prop);\n                    }\n                    style.colorscheme = {prop: prop, gradient: scheme};\n\n                }\n\n                //cache surface color on each atom\n                for (i = 0, il = atomlist.length; i < il; i++) {\n                    atom = atomlist[i];\n                    atom.surfaceColor = $3Dmol.getColorFromStyle(atom, style);\n                }\n\n                var totalVol = volume(extent); // used to scale resolution\n                var extents = carveUpExtent(extent, atomlist, atomsToShow);\n\n                if (focusSele && focusSele.length && focusSele.length > 0) {\n                    var seleExtent = $3Dmol.getExtent(focusSele, true);\n                    // sort by how close to center of seleExtent\n                    var sortFunc = function(a, b) {\n                        var distSq = function(ex, sele) {\n                            // distance from e (which has no center of mass) and\n                            // sele which does\n                            var e = ex.extent;\n                            var x = e[1][0] - e[0][0];\n                            var y = e[1][1] - e[0][1];\n                            var z = e[1][2] - e[0][2];\n                            var dx = (x - sele[2][0]);\n                            dx *= dx;\n                            var dy = (y - sele[2][1]);\n                            dy *= dy;\n                            var dz = (z - sele[2][2]);\n                            dz *= dz;\n\n                            return dx + dy + dz;\n                        };\n                        var d1 = distSq(a, seleExtent);\n                        var d2 = distSq(b, seleExtent);\n                        return d1 - d2;\n                    };\n                    extents.sort(sortFunc);\n                }\n\n                //console.log(\"Extents \" + extents.length + \"  \"+ (+new Date() - time) + \"ms\");\n\n\n                var reducedAtoms = [];\n                // to reduce amount data transfered, just pass x,y,z,serial and elem\n                for (i = 0, il = atomlist.length; i < il; i++) {\n                    atom = atomlist[i];\n                    reducedAtoms[i] = {\n                        x : atom.x,\n                        y : atom.y,\n                        z : atom.z,\n                        serial : i,\n                        elem : atom.elem\n                    };\n                }\n\n                var sync = !!($3Dmol.syncSurface);\n                if (sync) { // don't use worker, still break up for memory purposes\n\n                    // to keep the browser from locking up, call through setTimeout\n                    var callSyncHelper = function callSyncHelper(i) {\n                        if (i >= extents.length)\n                            return;\n\n                        var VandF = generateMeshSyncHelper(type, extents[i].extent,\n                                extents[i].atoms, extents[i].toshow, reducedAtoms,\n                                totalVol);\n                        var mesh = generateSurfaceMesh(atomlist, VandF, mat);\n                        $3Dmol.mergeGeos(surfobj.geo, mesh);\n                        _viewer.render();\n\n                        setTimeout(callSyncHelper, 1, i + 1);\n                    }\n\n                    setTimeout(callSyncHelper, 1, 0);\n\n                    // TODO: Asynchronously generate geometryGroups (not separate\n                    // meshes) and merge them into a single geometry\n                } else { // use worker\n\n                    var workers = [];\n                    if (type < 0)\n                        type = 0; // negative reserved for atom data\n                    for (i = 0, il = numWorkers; i < il; i++) {\n                        // var w = new Worker('3Dmol/SurfaceWorker.js');\n                        var w = new Worker($3Dmol.SurfaceWorker);\n                        workers.push(w);\n                        w.postMessage({\n                            'type' : -1,\n                            'atoms' : reducedAtoms,\n                            'volume' : totalVol\n                        });\n                    }\n                    var cnt = 0;\n\n                    var rfunction = function(event) {\n                        var VandFs = $3Dmol.splitMesh({vertexArr:event.data.vertices,\n                                                       faceArr:event.data.faces});\n                        for(var i=0,vl=VandFs.length;i<vl;i++){\n                            var VandF={vertices:VandFs[i].vertexArr,\n                                       faces:VandFs[i].faceArr};\n                            var mesh = generateSurfaceMesh(atomlist, VandF, mat);\n                            $3Dmol.mergeGeos(surfobj.geo, mesh);\n                            _viewer.render();\n                        }\n\n                    //    console.log(\"async mesh generation \" + (+new Date() - time) + \"ms\");\n                        cnt++;\n                        if (cnt == extents.length)\n                            surfobj.done = true;\n                    };\n\n                    var efunction = function(event) {\n                        console.log(event.message + \" (\" + event.filename + \":\" + event.lineno + \")\");\n                    };\n\n                    for (i = 0; i < extents.length; i++) {\n                        var worker = workers[i % workers.length];\n                        worker.onmessage = rfunction;\n\n                        worker.onerror = efunction;\n\n                        worker.postMessage({\n                            'type' : type,\n                            'expandedExtent' : extents[i].extent,\n                            'extendedAtoms' : extents[i].atoms,\n                            'atomsToShow' : extents[i].toshow\n                        });\n                    }\n                }\n\n                // NOTE: This is misleading if 'async' mesh generation - returns\n                // immediately\n                //console.log(\"full mesh generation \" + (+new Date() - time) + \"ms\");\n            }\n\n            style = style || {};\n            var mat = getMatWithStyle(style);\n            var surfobj = [];\n\n            if (symmetries) { //do preprocessing\n                var modelsAtomList = {};\n                var modelsAtomsToShow = {};\n                for (n = 0; n < models.length; n++) {\n                    modelsAtomList[n] = [];\n                    modelsAtomsToShow[n] = [];\n                }\n                for (n = 0; n < atomlist.length; n++) {\n                    modelsAtomList[atomlist[n].model].push(atomlist[n]);\n                }\n                for (n = 0; n < atomsToShow.length; n++) {\n                    modelsAtomsToShow[atomsToShow[n].model].push(atomsToShow[n]);\n                }\n                for (n = 0; n < models.length; n++) {\n                    surfobj.push({\n                        geo : new $3Dmol.Geometry(true),\n                        mat : mat,\n                        done : false,\n                        finished : false,\n                        symmetries : models[n].getSymmetries()\n                    // also webgl initialized\n                    });\n                    addSurfaceHelper(surfobj[n], modelsAtomList[n], modelsAtomsToShow[n]);\n                }\n            }\n            else {\n                surfobj.push({\n                    geo : new $3Dmol.Geometry(true),\n                    mat : mat,\n                    done : false,\n                    finished : false,\n                    symmetries : [new $3Dmol.Matrix4()]\n                });\n                addSurfaceHelper(surfobj[surfobj.length-1], atomlist, atomsToShow);\n            }\n            var surfid = nextSurfID();\n            surfaces[surfid] = surfobj;\n\n            return surfid;\n\n        };\n\n        /**\n         * Set the surface material to something else, must render change\n        *  @function $3Dmol.GLViewer#setSurfaceMaterialStyle\n         * @param {number} surf - Surface ID to apply changes to\n         * @param {matSpec} style - new material style specification\n         */\n        this.setSurfaceMaterialStyle = function(surf, style) {\n            if (surfaces[surf]) {\n                surfArr = surfaces[surf];\n                for (var i = 0; i < surfArr.length; i++) {\n                    surfArr[i].mat = getMatWithStyle(style);\n                    surfArr[i].mat.side = $3Dmol.FrontSide;\n                    surfArr[i].finished = false; // trigger redraw\n                }\n            }\n            return this;\n        };\n\n        /**\n         * Remove surface with given ID\n         * @function $3Dmol.GLViewer#removeSurface\n         * @param {number} surf - surface id\n         */\n        this.removeSurface = function(surf) {\n            var surfArr = surfaces[surf];\n            for (var i = 0; i < surfArr.length; i++) {\n                if (surfArr[i] && surfArr[i].lastGL) {\n                    if (surfArr[i].geo !== undefined)\n                        surfArr[i].geo.dispose();\n                    if (surfArr[i].mat !== undefined)\n                        surfArr[i].mat.dispose();\n                    modelGroup.remove(surfArr[i].lastGL); // remove from scene\n                }\n            }\n            delete surfaces[surf];\n            show();\n            return this;\n        };\n\n        /** Remove all surfaces.\n         * @function $3Dmol.GLViewer#removeAllSurfaces */\n        this.removeAllSurfaces = function() {\n            for (n in  surfaces) {\n                if(!surfaces.hasOwnProperty(n)) continue;\n                var surfArr = surfaces[n];\n                for(var i = 0; i < surfArr.length; i++) {\n                    if (surfArr[i] && surfArr[i].lastGL) {\n                        if (surfArr[i].geo !== undefined)\n                            surfArr[i].geo.dispose();\n                        if (surfArr[i].mat !== undefined)\n                            surfArr[i].mat.dispose();\n                        modelGroup.remove(surfArr[i].lastGL); // remove from scene\n                    }\n                }\n                delete surfaces[n];\n            }\n            show();\n            return this;\n        };\n\n        /** return Jmol moveto command to position this scene */\n        this.jmolMoveTo = function() {\n            var pos = modelGroup.position;\n            // center on same position\n            var ret = \"center { \" + (-pos.x) + \" \" + (-pos.y) + \" \" + (-pos.z)\n                    + \" }; \";\n            // apply rotation\n            var q = rotationGroup.quaternion;\n            ret += \"moveto .5 quaternion { \" + q.x + \" \" + q.y + \" \" + q.z\n                    + \" \" + q.w + \" };\";\n            // zoom is tricky.. maybe i would be best to let callee zoom on\n            // selection?\n            // can either do a bunch of math, or maybe zoom to the center with a\n            // fixed\n            // but reasonable percentage\n\n            return ret;\n        };\n\n        /** Clear scene of all objects\n         * @function $3Dmol.GLViewer#clear\n         * */\n        this.clear = function() {\n            this.removeAllSurfaces();\n            this.removeAllModels();\n            this.removeAllLabels();\n            this.removeAllShapes();\n            show();\n            return this;\n        };\n\n        // props is a list of objects that select certain atoms and enumerate\n        // properties for those atoms\n        /**\n         * @function $3Dmol.GLViewer#mapAtomProperties\n         * Add specified properties to all atoms matching input argument\n         * @function $3Dmol.GLViewer#mapAtomProperties\n         * @param {Object} props, either array of atom selectors with associated props, or function that takes atom and sets its properties\n         * @param {AtomSelectionSpec} sel\n         */\n        this.mapAtomProperties = function(props, sel) {\n            sel = sel || {};\n            var atoms = getAtomsFromSel(sel);\n\n            if(typeof(props) == \"function\") {\n                for (var a = 0, numa = atoms.length; a < numa; a++) {\n                    var atom = atoms[a];\n                    props(atom);\n                }\n            }\n            else {\n                for (var a = 0, numa = atoms.length; a < numa; a++) {\n                    var atom = atoms[a];\n                    for (var i = 0, n = props.length; i < n; i++) {\n                        var prop = props[i];\n                        if (prop.props) {\n                            for ( var p in prop.props) {\n                                if (prop.props.hasOwnProperty(p)) {\n                                    // check the atom\n                                    if (atomIsSelected(atom, prop)) {\n                                        if (!atom.properties)\n                                            atom.properties = {};\n                                        atom.properties[p] = prop.props[p];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this;\n        };\n\n        /**\n         * @function $3Dmol.GLViewer#linkViewer\n         * Synchronize this view matrix of this viewer to the passed viewer.\n         * When the viewpoint of this viewer changes, the other viewer will\n         * be set to this viewer's view.\n         * @function $3Dmol.GLViewer#linkViewer\n         */\n        this.linkViewer = function(otherviewer) {\n           linkedViewers.push(otherviewer);\n           return this;\n        };\n\n\n        try {\n            if (typeof (callback) === \"function\")\n                callback(this);\n        } catch (e) {\n            // errors in callback shouldn't invalidate the viewer\n            console.log(\"error with glviewer callback: \" + e);\n        }\n    }\n\n    return GLViewer;\n\n})();\n\n$3Dmol['glmolViewer'] = $3Dmol.GLViewer;\n\n//color scheme mappings\nvar $3Dmol = $3Dmol || {};\n\n/** Color mapping gradiens\n * @interface\n * @param {number} min\n * @param {number} max\n */\n$3Dmol.Gradient = function(min, max) {};\n\n/**\n * Map value to hex color\n * @param {number} val\n * @param {number} range\n * @returns {number}\n */\n$3Dmol.Gradient.valueToHex = function(val, range) {};\n//return range used for color mapping, null if none set\n$3Dmol.Gradient.range = function() {};\n\n\n\n/**\n * Color scheme red to white to blue, for charges\n * @constructor\n * @implements {$3Dmol.Gradient}\n */\n$3Dmol.Gradient.RWB = function(min, max,mid) {\n    var mult = 1.0;\n    if(typeof(max) == 'undefined' && $.isArray(min) && min.length >= 2) {\n        //we were passed a single range\n        max = min[1];\n        min = min[0];\n    }\n    if(max < min) { //reverse the order\n        mult = -1.0;\n        min *= -1.0;\n        max *= -1.0;\n    }\n\n    //map value to hex color, range is provided\n    this.valueToHex = function(val, range) {\n        var lo, hi;\n        val = mult*val; //reverse if necessary\n        if(range) {\n            lo = range[0];\n            hi = range[1];\n        }\n        else {\n            lo = min;\n            hi = max;\n        }\n\n        if(val === undefined)\n            return 0xffffff;\n\n        if(val < lo) val = lo;\n        if(val > hi) val = hi;\n\n        var middle = (hi+lo)/2;\n        if(typeof(mid) != 'undefined')\n            middle = mid; //allow user to specify midpoint\n        var scale, color;\n\n        //scale bottom from red to white\n        if(val <= middle) {\n            scale = Math.floor(255*Math.sqrt((val-lo)/(middle-lo)));\n            color = 0xff0000 + 0x100*scale + scale;\n            return color;\n        }\n        else { //form white to blue\n            scale = Math.floor(255*Math.sqrt((1-(val-middle)/(hi-middle))));\n            color =  0x10000*scale+0x100*scale+0xff;\n            return color;\n        }\n    };\n\n\n    //return range used for color mapping, null if none set\n    this.range = function() {\n        if(typeof(min) != \"undefined\" && typeof(max) != \"undefined\") {\n            return [min,max];\n        }\n        return null;\n    };\n\n};\n\n/**\n * rainbow gradient, but without purple to match jmol\n * @constructor\n * @implements {$3Dmol.Gradient}\n */\n$3Dmol.Gradient.ROYGB = function(min, max) {\n    var mult = 1.0;\n    if(typeof(max) == 'undefined' && $.isArray(min) && min.length >= 2) {\n        //we were passed a single range\n        max = min[1];\n        min = min[0];\n    }\n    if(max < min) { //reverse the order\n        mult = -1.0;\n        min *= -1.0;\n        max *= -1.0;\n    }\n\n    //map value to hex color, range is provided\n    this.valueToHex = function(val, range) {\n        var lo, hi;\n        val = mult*val;\n        if(range) {\n            lo = range[0];\n            hi = range[1];\n        }\n        else {\n            lo = min;\n            hi = max;\n        }\n\n        if(typeof(val) == \"undefined\")\n            return 0xffffff;\n\n        if(val < lo) val = lo;\n        if(val > hi) val = hi;\n\n        var mid = (lo+hi)/2;\n        var q1 = (lo+mid)/2;\n        var q3 = (mid+hi)/2;\n\n        var scale, color;\n\n        if(val < q1) { //scale green up, red up, blue down\n            scale = Math.floor(255*Math.sqrt((val-lo)/(q1-lo)));\n            color = 0xff0000 + 0x100*scale + 0;\n            return color;\n        }\n        else if(val < mid) { //scale red down, green up, blue down\n            scale = Math.floor(255*Math.sqrt((1-(val-q1)/(mid-q1))));\n            color =  0x010000*scale+0xff00+0x0;\n            return color;\n        }\n        else if(val < q3) { //scale blue up, red down, green up\n            scale = Math.floor(255*Math.sqrt((val-mid)/(q3-mid)));\n            color = 0x000000 + 0xff00 + 0x1*scale;\n            return color;\n        }\n        else { //scale green down, blue up, red down\n            scale = Math.floor(255*Math.sqrt((1-(val-q3)/(hi-q3))));\n            color =  0x000000+0x0100*scale+0xff;\n            return color;\n        }\n    };\n\n\n    //return range used for color mapping, null if none set\n    this.range = function() {\n        if(typeof(min) != \"undefined\" && typeof(max) != \"undefined\") {\n            return [min,max];\n        }\n        return null;\n    };\n\n};\n\n/**\n * rainbow gradient with constant saturation, all the way to purple!\n * @constructor\n * @implements {$3Dmol.Gradient}\n */\n$3Dmol.Gradient.Sinebow = function(min, max) {\n    var mult = 1.0;\n    if(typeof(max) == 'undefined' && $.isArray(min) && min.length >= 2) {\n        //we were passed a single range\n        max = min[1];\n        min = min[0];\n    }\n    if(max < min) { //reverse the order\n        mult = -1.0;\n        min *= -1.0;\n        max *= -1.0;\n    }\n    //map value to hex color, range is provided\n    this.valueToHex = function(val, range) {\n        var lo, hi;\n        val = mult*val;\n        if(range) {\n            lo = range[0];\n            hi = range[1];\n        }\n        else {\n            lo = min;\n            hi = max;\n        }\n\n        if(typeof(val) == \"undefined\")\n            return 0xffffff;\n\n        if(val < lo) val = lo;\n        if(val > hi) val = hi;\n\n        var scale = (val-lo)/(hi-lo);\n        var h = (5*scale/6.0+0.5);\n        var r = Math.sin(Math.PI*h);\n        r *= r*255;\n        var g = Math.sin(Math.PI*(h+1/3.0));\n        g *= g*255;\n        var b = Math.sin(Math.PI*(h+2/3.0));\n        b *= b*255;\n\n        return 0x10000*Math.floor(r)+0x100*Math.floor(b)+0x1*Math.floor(g);\n    };\n\n\n    //return range used for color mapping, null if none set\n    this.range = function() {\n        if(typeof(min) != \"undefined\" && typeof(max) != \"undefined\") {\n            return [min,max];\n        }\n        return null;\n    };\n\n};\n//Adapted from the text sprite example from http://stemkoski.github.io/Three.js/index.html\n\n$3Dmol.LabelCount = 0;\n\n/**\n * Renderable labels\n * @constructor $3Dmol.Label\n * @param {string} tag - Label text\n * @param {LabelSpec} parameters Label style and font specifications\n */\n$3Dmol.Label = function(text, parameters) {\n\n    this.id = $3Dmol.LabelCount++;\n    this.stylespec = parameters || {};\n\n    this.canvas = document.createElement('canvas');\n    //todo: implement resizing canvas..\n    this.canvas.width = 134;\n    this.canvas.height = 35;\n    this.context = this.canvas.getContext('2d');\n    this.sprite = new $3Dmol.Sprite();\n    this.text = text;\n\n};\n\n$3Dmol.Label.prototype = {\n\n    constructor : $3Dmol.Label,\n\n    getStyle : function () { return this.stylespec; },\n\n    setContext : function() {\n        // function for drawing rounded rectangles - for Label drawing\n        var roundRect = function(ctx, x, y, w, h, r, drawBorder) {\n\n            ctx.beginPath();\n            ctx.moveTo(x + r, y);\n            ctx.lineTo(x + w - r, y);\n            ctx.quadraticCurveTo(x + w, y, x + w, y + r);\n            ctx.lineTo(x + w, y + h - r);\n            ctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n            ctx.lineTo(x + r, y + h);\n            ctx.quadraticCurveTo(x, y + h, x, y + h - r);\n            ctx.lineTo(x, y + r);\n            ctx.quadraticCurveTo(x, y, x + r, y);\n            ctx.closePath();\n            ctx.fill();\n            if(drawBorder)\n                ctx.stroke();\n\n        };\n\n        //do all the checks to figure out what color is desired\n        var getColor = function(style, stylealpha, init) {\n            var ret = init;\n            if(typeof(style) != 'undefined') {\n                //convet regular colors\n                 if(style instanceof $3Dmol.Color)\n                     ret = style.scaled();\n                 else //hex or name\n                    ret = $3Dmol.CC.color(style).scaled();\n            }\n            if(typeof(stylealpha) != 'undefined') {\n                ret.a = parseFloat(stylealpha);\n            }\n            return ret;\n        }\n\n        /**\n         * Label type specification\n         * @typedef LabelSpec\n         * @struct\n         * @prop {string} font - font name, default sans-serif\n         * @prop {number} fontSize - height of text, default 18\n         * @prop {ColorSpec} fontColor - font color, default white\n         * @prop {number} fontOpacity - font opacity, default 1\n         * @prop {number} borderThickness - line width of border around label, default 0\n         * @prop {ColorSpec} borderColor - color of border, default backgroundColor\n         * @prop {string} borderOpacity - color of border\n         * @prop {ColorSpec} backgroundColor - color of background, default black\n         * @prop {string} backgroundOpacity - opacity of background, default 1\n         * @prop {Object} position - x,y,z coordinates for label\n         * @prop {boolean} inFront - always put labels in from of model\n         * @prop {boolean} showBackground - show background rounded rectangle, default true\n         */\n        return function() {\n\n            var style = this.stylespec;\n            var useScreen =  typeof(style.useScreen) == \"undefined\" ? false : style.useScreen;\n\n            var showBackground = style.showBackground;\n            if(showBackground === '0' || showBackground === 'false') showBackground = false;\n            if(typeof(showBackground) == \"undefined\") showBackground = true; //default\n            var font = style.font ? style.font : \"sans-serif\";\n\n            var fontSize = parseInt(style.fontSize) ? parseInt(style.fontSize) : 18;\n\n            var fontColor = getColor(style.fontColor, style.fontOpacity,\n                     {\n                        r : 255,\n                        g : 255,\n                        b : 255,\n                        a : 1.0\n                    });\n\n            var padding = style.padding ? style.padding : 4;\n            var borderThickness = style.borderThickness ? style.borderThickness\n                    : 0;\n\n            var backgroundColor = getColor(style.backgroundColor, style.backgroundOpacity,\n                     {\n                        r : 0,\n                        g : 0,\n                        b : 0,\n                        a : 1.0\n                    });\n\n            var borderColor = getColor(style.borderColor, style.borderOpacity, backgroundColor);\n\n\n            var position = style.position ? style.position\n                    : {\n                        x : -10,\n                        y : 1,\n                        z : 1\n                    };\n\n            // Should labels always be in front of model?\n            var inFront = (style.inFront !== undefined) ? style.inFront    : true;\n            if(inFront === 'false' || inFront === '0') inFront = false;\n\n            // clear canvas\n\n            var spriteAlignment = style.alignment || $3Dmol.SpriteAlignment.topLeft;\n\n            var bold = \"\";\n            if(style.bold)\n                bold = \"bold \";\n            this.context.font = bold+fontSize + \"px  \" + font;\n\n            var metrics = this.context.measureText(this.text);\n            var textWidth = metrics.width;\n\n            if(!showBackground) borderThickness = 0;\n\n            var width = textWidth+2.5*borderThickness +2*padding;\n            var height = fontSize*1.25+2*borderThickness+2*padding;            // 1.25 is extra height factor for text below baseline: g,j,p,q.\n\n\n            if(style.backgroundImage) {\n                var img = style.backgroundImage;\n                var w = style.backgroundWidth ? style.backgroundWidth : img.width;\n                var h = style.backgroundHeight ? style.backgroundHeight : img.height;\n                if(w > width) width = w;\n                if(h > height) height = h;\n            }\n\n            this.canvas.width = width;\n            this.canvas.height = height;\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n            var bold = \"\";\n            if(style.bold)\n                bold = \"bold \";\n            this.context.font = bold+fontSize + \"px  \" + font;\n\n            // background color\n            this.context.fillStyle = \"rgba(\" + backgroundColor.r + \",\"\n                    + backgroundColor.g + \",\" + backgroundColor.b\n                    + \",\" + backgroundColor.a + \")\";\n            // border color\n            this.context.strokeStyle = \"rgba(\" + borderColor.r + \",\"\n                    + borderColor.g + \",\" + borderColor.b + \",\"\n                    + borderColor.a + \")\";\n\n            this.context.lineWidth = borderThickness;\n            if(showBackground) {\n                roundRect(this.context, borderThickness,borderThickness , width-2*borderThickness,height-2*borderThickness, 6, borderThickness > 0);\n            }\n\n            if(style.backgroundImage) {\n                var img = style.backgroundImage;\n                var w = style.backgroundWidth ? style.backgroundWidth : img.width;\n                var h = style.backgroundHeight ? style.backgroundHeight : img.height;\n                this.context.drawImage(img,0,0, w, h);\n            }\n\n\n            // text color\n            this.context.fillStyle = \"rgba(\" + fontColor.r + \",\"\n                    + fontColor.g + \",\" + fontColor.b + \",\"\n                    + fontColor.a + \")\";\n\n            this.context.fillText(this.text, borderThickness+padding,\n                    fontSize + borderThickness+padding, textWidth);\n\n            // canvas contents will be used for a texture\n            var texture = new $3Dmol.Texture(this.canvas);\n            texture.needsUpdate = true;\n            this.sprite.material = new $3Dmol.SpriteMaterial({\n                map : texture,\n                useScreenCoordinates : useScreen,\n                alignment : spriteAlignment,\n                depthTest : !inFront\n            });\n\n            this.sprite.scale.set(1,1,1);\n\n            this.sprite.position.set(position.x, position.y, position.z);\n        };\n\n    }(),\n\n    // clean up material and texture\n    dispose : function() {\n\n        if (this.sprite.material.map !== undefined)\n            this.sprite.material.map.dispose();\n        if (this.sprite.material !== undefined)\n            this.sprite.material.dispose();\n    }\n\n};\n\n$3Dmol = $3Dmol || {};\n//Encapsulate marching cube algorithm for isosurface generation\n// (currently used by protein surface rendering and generic volumetric data reading)\n$3Dmol.MarchingCubeInitializer = function() {\n\n    //Marching cube algorithm - assume data has been pre-treated so isovalue is 0\n    // (i.e. select points greater than 0)\n    //origin -  vector of origin of volumetric data (default is (0,0,0))\n    // nX, nY, nZ - specifies number of voxels in each dimension\n    // scale - cube diagonal unit vector scale (3Dmol vector) (specifying distance between data points); diagonal of cube\n    // - default is 1 - assumes unit cube (1,1,1) diag)\n    // fulltable - if true, use full marching cubes and tritables - else use trimmed table (e.g. surf render)\n    // voxel - if true, draws with a blocky voxel style (default false)\n    // verts, faces - vertex and face arrays to fill up\n\n    //to match with protein surface...\n    var ISDONE = 2;\n    var my = {};\n\n    my.march = function(data, verts, faces, spec) {\n\n        var fulltable = !!(spec.fulltable);\n        var origin = (spec.hasOwnProperty('origin') && spec.origin.hasOwnProperty('x')) ? spec.origin : {x:0, y:0, z:0};\n        var voxel = !!(spec.voxel);\n        var transform = spec.matrix; //if this is set, it overrides origin and unitCube\n\n        var nX = spec.nX || 0;\n        var nY = spec.nY || 0;\n        var nZ = spec.nZ || 0;\n\n        var scale = spec.scale || 1.0;\n        var unitCube = null;\n        if(spec.unitCube) {\n            unitCube = spec.unitCube;\n        } else {\n            unitCube = {x:scale,y:scale,z:scale};\n        }\n\n        //keep track of calculated vertices to avoid repeats\n        var vertnums = new Int32Array(nX*nY*nZ);\n\n        var i, il;\n\n        for (i = 0, il = vertnums.length; i < il; ++i)\n            vertnums[i] = -1;\n\n        // create (or retrieve) a vertex at the appropriate point for\n        // the edge (p1,p2)\n\n        var getVertex = function(i, j, k, code, p1, p2) {\n            var pt = {x:0,y:0,z:0};\n            var val1 = !!(code & (1 << p1));\n            var val2 = !!(code & (1 << p2));\n\n            // p1 if they are the same or if !val1\n            var p = p1;\n            if (!val1 && val2)\n                p = p2;\n\n            // adjust i,j,k by p\n            if (p & 1)\n                k++;\n            if (p & 2)\n                j++;\n            if (p & 4)\n                i++;\n\n            if(transform) {\n                pt = new $3Dmol.Vector3(i,j,k);\n                pt = pt.applyMatrix4(transform);\n                pt = {x: pt.x, y: pt.y, z: pt.z}; //remove vector gunk\n            } else {\n                pt.x = origin.x+unitCube.x*i;\n                pt.y = origin.y+unitCube.y*j;\n                pt.z = origin.z+unitCube.z*k;\n            }\n\n            var index = ((nY * i) + j) * nZ + k;\n\n            //Have to add option to do voxels\n            if (!voxel) {\n\n                if (vertnums[index] < 0) // not created yet\n                {\n                    vertnums[index] = verts.length;\n                    verts.push( pt );\n                }\n                return vertnums[index];\n\n            }\n\n            else {\n                verts.push(pt);\n                return verts.length - 1;\n            }\n\n        };\n\n        var intersects = new Int32Array(12);\n\n        var etable = (fulltable) ? edgeTable2 : edgeTable;\n        var tritable = (fulltable) ? triTable2 : triTable;\n\n        //Run marching cubes algorithm\n        for (i = 0; i < nX-1; ++i) {\n\n            for (var j = 0; j < nY-1; ++j){\n\n                for (var k = 0; k < nZ-1; ++k){\n\n                    var code = 0;\n\n                    for (var p = 0; p < 8; ++p) {\n                        var index = ((nY * (i + ((p & 4) >> 2))) + j + ((p & 2) >> 1)) *\n                                        nZ + k + (p & 1);\n\n                        //TODO: Need to fix vpBits in protein surface for this to work\n                        var val = !!(data[index] & ISDONE);\n                        //var val = !!(data[index] > 0);\n\n                        code |= val << p;\n                    }\n\n                    if (code === 0 || code === 255)\n                        continue;\n\n                    var ecode = etable[code];\n\n                    if (ecode === 0)\n                        continue;\n\n                    var ttable = tritable[code];\n\n                    if (ecode & 1)\n                        intersects[0] = getVertex(i, j, k, code, 0, 1);\n                    if (ecode & 2)\n                        intersects[1] = getVertex(i, j, k, code, 1, 3);\n                    if (ecode & 4)\n                        intersects[2] = getVertex(i, j, k, code, 3, 2);\n                    if (ecode & 8)\n                        intersects[3] = getVertex(i, j, k, code, 2, 0);\n                    if (ecode & 16)\n                        intersects[4] = getVertex(i, j, k, code, 4, 5);\n                    if (ecode & 32)\n                        intersects[5] = getVertex(i, j, k, code, 5, 7);\n                    if (ecode & 64)\n                        intersects[6] = getVertex(i, j, k, code, 7, 6);\n                    if (ecode & 128)\n                        intersects[7] = getVertex(i, j, k, code, 6, 4);\n                    if (ecode & 256)\n                        intersects[8] = getVertex(i, j, k, code, 0, 4);\n                    if (ecode & 512)\n                        intersects[9] = getVertex(i, j, k, code, 1, 5);\n                    if (ecode & 1024)\n                        intersects[10] = getVertex(i, j, k, code, 3, 7);\n                    if (ecode & 2048)\n                        intersects[11] = getVertex(i, j, k, code, 2, 6);\n\n                    for (var t = 0; t < ttable.length; t += 3) {\n\n                        var a = intersects[ttable[t]],\n                            b = intersects[ttable[t+1]],\n                            c = intersects[ttable[t+2]];\n\n                        if (voxel && t >= 3) {\n                            verts.push(verts[a]); a = verts.length - 1;\n                            verts.push(verts[b]); b = verts.length - 1;\n                            verts.push(verts[c]); c = verts.length - 1;\n                        }\n\n\n                        faces.push(a); faces.push(b); faces.push(c);\n                    }\n\n                }\n\n            }\n\n        }\n\n\n    };\n\n    my.laplacianSmooth = function(numiter, verts, faces) {\n            var tps = new Array(verts.length);\n            var i, il, j, jl, k, kl;\n            for (i = 0, il = verts.length; i < il; i++)\n                    tps[i] = {\n                        x : 0,\n                        y : 0,\n                        z : 0\n                    };\n            var vertdeg = new Array(20);\n            var flagvert;\n            for (i = 0; i < 20; i++)\n                    vertdeg[i] = new Array(verts.length);\n            for (i = 0, il = verts.length; i < il; i++)\n                    vertdeg[0][i] = 0;\n            for (i = 0, il = faces.length / 3; i < il; i++) {\n                var aoffset = i*3, boffset = i*3 + 1, coffset = i*3 + 2;\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[aoffset]]; j < jl; j++) {\n                    if (faces[boffset] == vertdeg[j + 1][faces[aoffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[aoffset]]++;\n                    vertdeg[vertdeg[0][faces[aoffset]]][faces[aoffset]] = faces[boffset];\n                }\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[aoffset]]; j < jl; j++) {\n                    if (faces[coffset] == vertdeg[j + 1][faces[aoffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[aoffset]]++;\n                    vertdeg[vertdeg[0][faces[aoffset]]][faces[aoffset]] = faces[coffset];\n                }\n                // b\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[boffset]]; j < jl; j++) {\n                    if (faces[aoffset] == vertdeg[j + 1][faces[boffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[boffset]]++;\n                    vertdeg[vertdeg[0][faces[boffset]]][faces[boffset]] = faces[aoffset];\n                }\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[boffset]]; j < jl; j++) {\n                    if (faces[coffset] == vertdeg[j + 1][faces[boffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[boffset]]++;\n                    vertdeg[vertdeg[0][faces[boffset]]][faces[boffset]] = faces[coffset];\n                }\n                // c\n                flagvert = true;\n                for (j = 0; j < vertdeg[0][faces[coffset]]; j++) {\n                    if (faces[aoffset] == vertdeg[j + 1][faces[coffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[coffset]]++;\n                    vertdeg[vertdeg[0][faces[coffset]]][faces[coffset]] = faces[aoffset];\n                }\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[coffset]]; j < jl; j++) {\n                    if (faces[boffset] == vertdeg[j + 1][faces[coffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[coffset]]++;\n                    vertdeg[vertdeg[0][faces[coffset]]][faces[coffset]] = faces[boffset];\n                }\n            }\n\n            var wt = 1.00;\n            var wt2 = 0.50;\n            var ssign;\n            var scaleFactor = 1;\n            var outwt = 0.75 / (scaleFactor + 3.5); // area-preserving\n            for (k = 0; k < numiter; k++) {\n                    for (i = 0, il = verts.length; i < il; i++) {\n                            if (vertdeg[0][i] < 3) {\n                                    tps[i].x = verts[i].x;\n                                    tps[i].y = verts[i].y;\n                                    tps[i].z = verts[i].z;\n                            } else if (vertdeg[0][i] == 3 || vertdeg[0][i] == 4) {\n                                    tps[i].x = 0;\n                                    tps[i].y = 0;\n                                    tps[i].z = 0;\n                                    for (j = 0, jl = vertdeg[0][i]; j < jl; j++) {\n                                            tps[i].x += verts[vertdeg[j + 1][i]].x;\n                                            tps[i].y += verts[vertdeg[j + 1][i]].y;\n                                            tps[i].z += verts[vertdeg[j + 1][i]].z;\n                                    }\n                                    tps[i].x += wt2 * verts[i].x;\n                                    tps[i].y += wt2 * verts[i].y;\n                                    tps[i].z += wt2 * verts[i].z;\n                                    tps[i].x /= wt2 + vertdeg[0][i];\n                                    tps[i].y /= wt2 + vertdeg[0][i];\n                                    tps[i].z /= wt2 + vertdeg[0][i];\n                            } else {\n                                    tps[i].x = 0;\n                                    tps[i].y = 0;\n                                    tps[i].z = 0;\n                                    for (j = 0, jl = vertdeg[0][i]; j < jl; j++) {\n                                            tps[i].x += verts[vertdeg[j + 1][i]].x;\n                                            tps[i].y += verts[vertdeg[j + 1][i]].y;\n                                            tps[i].z += verts[vertdeg[j + 1][i]].z;\n                                    }\n                                    tps[i].x += wt * verts[i].x;\n                                    tps[i].y += wt * verts[i].y;\n                                    tps[i].z += wt * verts[i].z;\n                                    tps[i].x /= wt + vertdeg[0][i];\n                                    tps[i].y /= wt + vertdeg[0][i];\n                                    tps[i].z /= wt + vertdeg[0][i];\n                            }\n                    }\n                    for (i = 0, il = verts.length; i < il; i++) {\n                            verts[i].x = tps[i].x;\n                            verts[i].y = tps[i].y;\n                            verts[i].z = tps[i].z;\n                    }\n                    /*\n                     * computenorm(); for (var i = 0; i < vertnumber; i++) { if\n                     * (verts[i].inout) ssign = 1; else ssign = -1; verts[i].x += ssign *\n                     * outwt * verts[i].pn.x; verts[i].y += ssign * outwt *\n                     * verts[i].pn.y; verts[i].z += ssign * outwt * verts[i].pn.z; }\n                     */\n            }\n    };\n\n\n    /*\n     * These tables are based off those by Paul Bourke and Geoffrey Heller:\n     * http://paulbourke.net/geometry/polygonise/\n     * http://paulbourke.net/geometry/polygonise/table2.txt\n     *\n     * However, they have been substantially modified to reflect a more\n     * sensible corner numbering scheme and the discrete nature of our voxel data\n     * (resulting in fewer faces).\n     */\n    my.edgeTable = [ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n            0xb00, 0x0, 0x0, 0x0, 0x700, 0x0, 0xd00, 0xe00, 0xf00, 0x0, 0x0, 0x0,\n            0x8a, 0x0, 0x15, 0x0, 0x86, 0x0, 0x0, 0x0, 0x28c, 0x0, 0x813, 0xf19,\n            0xe10, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x126, 0x0, 0x0, 0x15, 0x1c,\n            0x0, 0xf23, 0x419, 0xd20, 0x0, 0xa8, 0xa2, 0xaa, 0x0, 0x285, 0x9ab,\n            0x8a2, 0x0, 0x2af, 0x125, 0xac, 0xfaa, 0xea3, 0xda9, 0xca0, 0x0, 0x0,\n            0x0, 0x0, 0x0, 0x45, 0x0, 0x384, 0x0, 0x0, 0x0, 0x700, 0x8a, 0x83,\n            0x648, 0x780, 0x0, 0x51, 0x0, 0x81a, 0x54, 0x55, 0x54, 0x56, 0x0, 0x51,\n            0x0, 0xe5c, 0x14a, 0x451, 0x759, 0x650, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x45,\n            0x0, 0x1f6, 0x0, 0x0, 0x15, 0xdfc, 0x8a, 0x7f3, 0x4f9, 0x5f0, 0xb00,\n            0x68, 0x921, 0x6a, 0x348, 0x245, 0x16f, 0x66, 0xb00, 0xe6f, 0xd65,\n            0xc6c, 0x76a, 0x663, 0x569, 0x460, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n            0xf46, 0x0, 0x0, 0x45, 0x24c, 0x2a, 0x823, 0x29, 0xb40, 0x0, 0x0, 0x0,\n            0x6ba, 0x0, 0x8f5, 0xfff, 0xef6, 0x0, 0xff, 0x2f5, 0x2fc, 0x9ea, 0x8f3,\n            0xbf9, 0xaf0, 0x0, 0x0, 0x51, 0x152, 0x0, 0xf55, 0x45f, 0xd56, 0x54,\n            0x357, 0x55, 0x154, 0x852, 0xb53, 0x59, 0x950, 0x700, 0x2c8, 0xc2,\n            0x48a, 0xfc4, 0xec5, 0xdcf, 0xcc6, 0x2c4, 0x2cf, 0xc5, 0xcc, 0xbca,\n            0xac3, 0x9c9, 0x8c0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x1a4, 0xa8, 0x7a6,\n            0xa2, 0xa2, 0x2a4, 0xbac, 0xaa, 0xa3, 0x2a8, 0x3a0, 0xd00, 0xc18,\n            0xd00, 0xe3a, 0x34, 0x35, 0x73f, 0x636, 0x924, 0x83f, 0xb35, 0xa3c,\n            0x12a, 0x33, 0x339, 0x230, 0xe00, 0xe00, 0xc12, 0xd9a, 0x684, 0x795,\n            0x49f, 0x596, 0x92, 0xb9f, 0x815, 0x99c, 0x9a, 0x393, 0x99, 0x190,\n            0xf00, 0xe08, 0xd01, 0xc0a, 0x704, 0x605, 0x50f, 0x406, 0xb02, 0xa0f,\n            0x905, 0x80c, 0x30a, 0x203, 0x109, 0x0 ];\n\n    var edgeTable = new Uint32Array(my.edgeTable);\n\n    var triTable = my.triTable = [ [], [], [], [], [], [], [], [ 11, 9, 8 ], [], [], [],\n            [ 8, 10, 9 ], [], [ 10, 8, 11 ], [ 9, 11, 10 ],\n            [ 8, 10, 9, 8, 11, 10 ], [], [], [], [ 1, 7, 3 ], [], [ 4, 2, 0 ], [],\n            [ 2, 1, 7 ], [], [], [], [ 2, 7, 3, 2, 9, 7 ], [],\n            [ 1, 4, 11, 1, 0, 4 ], [ 3, 8, 0, 11, 9, 4, 11, 10, 9 ],\n            [ 4, 11, 9, 11, 10, 9 ], [], [], [], [ 5, 3, 1 ], [], [], [],\n            [ 2, 5, 8, 2, 1, 5 ], [], [], [ 2, 4, 0 ], [ 3, 2, 4 ], [],\n            [ 0, 9, 1, 8, 10, 5, 8, 11, 10 ], [ 3, 4, 0, 3, 10, 4 ],\n            [ 5, 8, 10, 8, 11, 10 ], [], [ 3, 5, 7 ], [ 7, 1, 5 ],\n            [ 1, 7, 3, 1, 5, 7 ], [], [ 9, 2, 0, 9, 7, 2 ],\n            [ 0, 3, 8, 1, 7, 11, 1, 5, 7 ], [ 11, 1, 7, 1, 5, 7 ], [],\n            [ 9, 1, 0, 5, 3, 2, 5, 7, 3 ], [ 8, 2, 5, 8, 0, 2 ],\n            [ 2, 5, 3, 5, 7, 3 ], [ 3, 9, 1, 3, 8, 9, 7, 11, 10, 7, 10, 5 ],\n            [ 9, 1, 0, 10, 7, 11, 10, 5, 7 ], [ 3, 8, 0, 7, 10, 5, 7, 11, 10 ],\n            [ 11, 5, 7, 11, 10, 5 ], [], [], [], [], [], [ 0, 6, 2 ], [],\n            [ 7, 2, 9, 7, 9, 8 ], [], [], [], [ 8, 10, 9 ], [ 7, 1, 3 ],\n            [ 7, 1, 0 ], [ 6, 9, 3, 6, 10, 9 ], [ 7, 10, 8, 10, 9, 8 ], [],\n            [ 6, 0, 4 ], [], [ 11, 1, 4, 11, 3, 1 ], [ 2, 4, 6 ],\n            [ 2, 0, 4, 2, 4, 6 ], [ 2, 4, 6 ], [ 1, 4, 2, 4, 6, 2 ], [],\n            [ 6, 0, 4 ], [], [ 2, 11, 3, 6, 9, 4, 6, 10, 9 ], [ 8, 6, 1, 8, 1, 3 ],\n            [ 10, 0, 6, 0, 4, 6 ], [ 8, 0, 3, 9, 6, 10, 9, 4, 6 ],\n            [ 10, 4, 6, 10, 9, 4 ], [], [], [], [ 5, 3, 1 ], [], [ 0, 6, 2 ], [],\n            [ 7, 4, 8, 5, 2, 1, 5, 6, 2 ], [], [], [ 2, 4, 0 ],\n            [ 7, 4, 8, 2, 11, 3, 10, 5, 6 ], [ 7, 1, 3 ],\n            [ 5, 6, 10, 0, 9, 1, 8, 7, 4 ], [ 5, 6, 10, 7, 0, 3, 7, 4, 0 ],\n            [ 10, 5, 6, 4, 8, 7 ], [ 9, 11, 8 ], [ 3, 5, 6 ],\n            [ 0, 5, 11, 0, 11, 8 ], [ 6, 3, 5, 3, 1, 5 ], [ 3, 9, 6, 3, 8, 9 ],\n            [ 9, 6, 0, 6, 2, 0 ], [ 0, 3, 8, 2, 5, 6, 2, 1, 5 ],\n            [ 1, 6, 2, 1, 5, 6 ], [ 9, 11, 8 ], [ 1, 0, 9, 6, 10, 5, 11, 3, 2 ],\n            [ 6, 10, 5, 2, 8, 0, 2, 11, 8 ], [ 3, 2, 11, 10, 5, 6 ],\n            [ 10, 5, 6, 9, 3, 8, 9, 1, 3 ], [ 0, 9, 1, 5, 6, 10 ],\n            [ 8, 0, 3, 10, 5, 6 ], [ 10, 5, 6 ], [], [], [], [], [], [], [],\n            [ 1, 10, 2, 9, 11, 6, 9, 8, 11 ], [], [], [ 6, 0, 2 ],\n            [ 3, 6, 9, 3, 2, 6 ], [ 3, 5, 1 ], [ 0, 5, 1, 0, 11, 5 ], [ 0, 3, 5 ],\n            [ 6, 9, 11, 9, 8, 11 ], [], [], [], [ 4, 5, 9, 7, 1, 10, 7, 3, 1 ], [],\n            [ 11, 6, 7, 2, 4, 5, 2, 0, 4 ],\n            [ 11, 6, 7, 8, 0, 3, 1, 10, 2, 9, 4, 5 ],\n            [ 6, 7, 11, 1, 10, 2, 9, 4, 5 ], [],\n            [ 4, 1, 0, 4, 5, 1, 6, 7, 3, 6, 3, 2 ], [ 9, 4, 5, 0, 6, 7, 0, 2, 6 ],\n            [ 4, 5, 9, 6, 3, 2, 6, 7, 3 ], [ 6, 7, 11, 5, 3, 8, 5, 1, 3 ],\n            [ 6, 7, 11, 4, 1, 0, 4, 5, 1 ], [ 4, 5, 9, 3, 8, 0, 11, 6, 7 ],\n            [ 9, 4, 5, 7, 11, 6 ], [], [], [ 0, 6, 4 ], [ 8, 6, 4, 8, 1, 6 ], [],\n            [ 0, 10, 2, 0, 9, 10, 4, 8, 11, 4, 11, 6 ],\n            [ 10, 2, 1, 6, 0, 3, 6, 4, 0 ], [ 10, 2, 1, 11, 4, 8, 11, 6, 4 ],\n            [ 4, 2, 6 ], [ 1, 0, 9, 2, 4, 8, 2, 6, 4 ], [ 2, 4, 0, 2, 6, 4 ],\n            [ 8, 2, 4, 2, 6, 4 ], [ 11, 4, 1, 11, 6, 4 ],\n            [ 0, 9, 1, 4, 11, 6, 4, 8, 11 ], [ 3, 6, 0, 6, 4, 0 ],\n            [ 8, 6, 4, 8, 11, 6 ], [ 10, 8, 9 ], [ 6, 3, 9, 6, 7, 3 ], [ 6, 7, 1 ],\n            [ 10, 7, 1, 7, 3, 1 ], [ 7, 11, 6, 8, 10, 2, 8, 9, 10 ],\n            [ 11, 6, 7, 10, 0, 9, 10, 2, 0 ], [ 2, 1, 10, 7, 11, 6, 8, 0, 3 ],\n            [ 1, 10, 2, 6, 7, 11 ], [ 7, 2, 6, 7, 9, 2 ],\n            [ 1, 0, 9, 3, 6, 7, 3, 2, 6 ], [ 7, 0, 6, 0, 2, 6 ],\n            [ 2, 7, 3, 2, 6, 7 ], [ 7, 11, 6, 3, 9, 1, 3, 8, 9 ],\n            [ 9, 1, 0, 11, 6, 7 ], [ 0, 3, 8, 11, 6, 7 ], [ 11, 6, 7 ], [], [], [],\n            [], [ 5, 3, 7 ], [ 8, 5, 2, 8, 7, 5 ], [ 5, 3, 7 ],\n            [ 1, 10, 2, 5, 8, 7, 5, 9, 8 ], [ 1, 7, 5 ], [ 1, 7, 5 ],\n            [ 9, 2, 7, 9, 7, 5 ], [ 11, 3, 2, 8, 5, 9, 8, 7, 5 ],\n            [ 1, 3, 7, 1, 7, 5 ], [ 0, 7, 1, 7, 5, 1 ], [ 9, 3, 5, 3, 7, 5 ],\n            [ 9, 7, 5, 9, 8, 7 ], [ 8, 10, 11 ], [ 3, 4, 10, 3, 10, 11 ],\n            [ 8, 10, 11 ], [ 5, 9, 4, 1, 11, 3, 1, 10, 11 ], [ 2, 4, 5 ],\n            [ 5, 2, 4, 2, 0, 4 ], [ 0, 3, 8, 5, 9, 4, 10, 2, 1 ],\n            [ 2, 1, 10, 9, 4, 5 ], [ 2, 8, 5, 2, 11, 8 ],\n            [ 3, 2, 11, 1, 4, 5, 1, 0, 4 ], [ 9, 4, 5, 8, 2, 11, 8, 0, 2 ],\n            [ 11, 3, 2, 9, 4, 5 ], [ 8, 5, 3, 5, 1, 3 ], [ 5, 0, 4, 5, 1, 0 ],\n            [ 3, 8, 0, 4, 5, 9 ], [ 9, 4, 5 ], [ 11, 9, 10 ], [ 11, 9, 10 ],\n            [ 1, 11, 4, 1, 10, 11 ], [ 8, 7, 4, 11, 1, 10, 11, 3, 1 ],\n            [ 2, 7, 9, 2, 9, 10 ], [ 4, 8, 7, 0, 10, 2, 0, 9, 10 ],\n            [ 2, 1, 10, 0, 7, 4, 0, 3, 7 ], [ 10, 2, 1, 8, 7, 4 ], [ 1, 7, 4 ],\n            [ 3, 2, 11, 4, 8, 7, 9, 1, 0 ], [ 11, 4, 2, 4, 0, 2 ],\n            [ 2, 11, 3, 7, 4, 8 ], [ 4, 1, 7, 1, 3, 7 ], [ 1, 0, 9, 8, 7, 4 ],\n            [ 3, 4, 0, 3, 7, 4 ], [ 8, 7, 4 ], [ 8, 9, 10, 8, 10, 11 ],\n            [ 3, 9, 11, 9, 10, 11 ], [ 0, 10, 8, 10, 11, 8 ],\n            [ 10, 3, 1, 10, 11, 3 ], [ 2, 8, 10, 8, 9, 10 ], [ 9, 2, 0, 9, 10, 2 ],\n            [ 8, 0, 3, 1, 10, 2 ], [ 10, 2, 1 ], [ 1, 11, 9, 11, 8, 9 ],\n            [ 11, 3, 2, 0, 9, 1 ], [ 11, 0, 2, 11, 8, 0 ], [ 11, 3, 2 ],\n            [ 8, 1, 3, 8, 9, 1 ], [ 9, 1, 0 ], [ 8, 0, 3 ], [] ];\n\n    var edgeTable2 = [ 0x0, 0x109, 0x203, 0x30a, 0x80c, 0x905, 0xa0f,\n            0xb06, 0x406, 0x50f, 0x605, 0x70c, 0xc0a, 0xd03, 0xe09, 0xf00, 0x190,\n            0x99, 0x393, 0x29a, 0x99c, 0x895, 0xb9f, 0xa96, 0x596, 0x49f, 0x795,\n            0x69c, 0xd9a, 0xc93, 0xf99, 0xe90, 0x230, 0x339, 0x33, 0x13a, 0xa3c,\n            0xb35, 0x83f, 0x936, 0x636, 0x73f, 0x435, 0x53c, 0xe3a, 0xf33, 0xc39,\n            0xd30, 0x3a0, 0x2a9, 0x1a3, 0xaa, 0xbac, 0xaa5, 0x9af, 0x8a6, 0x7a6,\n            0x6af, 0x5a5, 0x4ac, 0xfaa, 0xea3, 0xda9, 0xca0, 0x8c0, 0x9c9, 0xac3,\n            0xbca, 0xcc, 0x1c5, 0x2cf, 0x3c6, 0xcc6, 0xdcf, 0xec5, 0xfcc, 0x4ca,\n            0x5c3, 0x6c9, 0x7c0, 0x950, 0x859, 0xb53, 0xa5a, 0x15c, 0x55, 0x35f,\n            0x256, 0xd56, 0xc5f, 0xf55, 0xe5c, 0x55a, 0x453, 0x759, 0x650, 0xaf0,\n            0xbf9, 0x8f3, 0x9fa, 0x2fc, 0x3f5, 0xff, 0x1f6, 0xef6, 0xfff, 0xcf5,\n            0xdfc, 0x6fa, 0x7f3, 0x4f9, 0x5f0, 0xb60, 0xa69, 0x963, 0x86a, 0x36c,\n            0x265, 0x16f, 0x66, 0xf66, 0xe6f, 0xd65, 0xc6c, 0x76a, 0x663, 0x569,\n            0x460, 0x460, 0x569, 0x663, 0x76a, 0xc6c, 0xd65, 0xe6f, 0xf66, 0x66,\n            0x16f, 0x265, 0x36c, 0x86a, 0x963, 0xa69, 0xb60, 0x5f0, 0x4f9, 0x7f3,\n            0x6fa, 0xdfc, 0xcf5, 0xfff, 0xef6, 0x1f6, 0xff, 0x3f5, 0x2fc, 0x9fa,\n            0x8f3, 0xbf9, 0xaf0, 0x650, 0x759, 0x453, 0x55a, 0xe5c, 0xf55, 0xc5f,\n            0xd56, 0x256, 0x35f, 0x55, 0x15c, 0xa5a, 0xb53, 0x859, 0x950, 0x7c0,\n            0x6c9, 0x5c3, 0x4ca, 0xfcc, 0xec5, 0xdcf, 0xcc6, 0x3c6, 0x2cf, 0x1c5,\n            0xcc, 0xbca, 0xac3, 0x9c9, 0x8c0, 0xca0, 0xda9, 0xea3, 0xfaa, 0x4ac,\n            0x5a5, 0x6af, 0x7a6, 0x8a6, 0x9af, 0xaa5, 0xbac, 0xaa, 0x1a3, 0x2a9,\n            0x3a0, 0xd30, 0xc39, 0xf33, 0xe3a, 0x53c, 0x435, 0x73f, 0x636, 0x936,\n            0x83f, 0xb35, 0xa3c, 0x13a, 0x33, 0x339, 0x230, 0xe90, 0xf99, 0xc93,\n            0xd9a, 0x69c, 0x795, 0x49f, 0x596, 0xa96, 0xb9f, 0x895, 0x99c, 0x29a,\n            0x393, 0x99, 0x190, 0xf00, 0xe09, 0xd03, 0xc0a, 0x70c, 0x605, 0x50f,\n            0x406, 0xb06, 0xa0f, 0x905, 0x80c, 0x30a, 0x203, 0x109, 0x0 ];\n\n    var triTable2 = [ [], [ 8, 3, 0 ], [ 9, 0, 1 ], [ 8, 3, 1, 8, 1, 9 ],\n            [ 11, 2, 3 ], [ 11, 2, 0, 11, 0, 8 ], [ 11, 2, 3, 0, 1, 9 ],\n            [ 2, 1, 11, 1, 9, 11, 11, 9, 8 ], [ 10, 1, 2 ], [ 8, 3, 0, 1, 2, 10 ],\n            [ 9, 0, 2, 9, 2, 10 ], [ 3, 2, 8, 2, 10, 8, 8, 10, 9 ],\n            [ 10, 1, 3, 10, 3, 11 ], [ 1, 0, 10, 0, 8, 10, 10, 8, 11 ],\n            [ 0, 3, 9, 3, 11, 9, 9, 11, 10 ], [ 8, 10, 9, 8, 11, 10 ], [ 8, 4, 7 ],\n            [ 3, 0, 4, 3, 4, 7 ], [ 1, 9, 0, 8, 4, 7 ],\n            [ 9, 4, 1, 4, 7, 1, 1, 7, 3 ], [ 2, 3, 11, 7, 8, 4 ],\n            [ 7, 11, 4, 11, 2, 4, 4, 2, 0 ], [ 3, 11, 2, 4, 7, 8, 9, 0, 1 ],\n            [ 2, 7, 11, 2, 1, 7, 1, 4, 7, 1, 9, 4 ], [ 10, 1, 2, 8, 4, 7 ],\n            [ 2, 10, 1, 0, 4, 7, 0, 7, 3 ], [ 4, 7, 8, 0, 2, 10, 0, 10, 9 ],\n            [ 2, 7, 3, 2, 9, 7, 7, 9, 4, 2, 10, 9 ],\n            [ 8, 4, 7, 11, 10, 1, 11, 1, 3 ],\n            [ 11, 4, 7, 1, 4, 11, 1, 11, 10, 1, 0, 4 ],\n            [ 3, 8, 0, 7, 11, 4, 11, 9, 4, 11, 10, 9 ],\n            [ 7, 11, 4, 4, 11, 9, 11, 10, 9 ], [ 9, 5, 4 ], [ 3, 0, 8, 4, 9, 5 ],\n            [ 5, 4, 0, 5, 0, 1 ], [ 4, 8, 5, 8, 3, 5, 5, 3, 1 ],\n            [ 11, 2, 3, 9, 5, 4 ], [ 9, 5, 4, 8, 11, 2, 8, 2, 0 ],\n            [ 3, 11, 2, 1, 5, 4, 1, 4, 0 ],\n            [ 8, 5, 4, 2, 5, 8, 2, 8, 11, 2, 1, 5 ], [ 2, 10, 1, 9, 5, 4 ],\n            [ 0, 8, 3, 5, 4, 9, 10, 1, 2 ], [ 10, 5, 2, 5, 4, 2, 2, 4, 0 ],\n            [ 3, 4, 8, 3, 2, 4, 2, 5, 4, 2, 10, 5 ],\n            [ 5, 4, 9, 1, 3, 11, 1, 11, 10 ],\n            [ 0, 9, 1, 4, 8, 5, 8, 10, 5, 8, 11, 10 ],\n            [ 3, 4, 0, 3, 10, 4, 4, 10, 5, 3, 11, 10 ],\n            [ 4, 8, 5, 5, 8, 10, 8, 11, 10 ], [ 9, 5, 7, 9, 7, 8 ],\n            [ 0, 9, 3, 9, 5, 3, 3, 5, 7 ], [ 8, 0, 7, 0, 1, 7, 7, 1, 5 ],\n            [ 1, 7, 3, 1, 5, 7 ], [ 11, 2, 3, 8, 9, 5, 8, 5, 7 ],\n            [ 9, 2, 0, 9, 7, 2, 2, 7, 11, 9, 5, 7 ],\n            [ 0, 3, 8, 2, 1, 11, 1, 7, 11, 1, 5, 7 ],\n            [ 2, 1, 11, 11, 1, 7, 1, 5, 7 ], [ 1, 2, 10, 5, 7, 8, 5, 8, 9 ],\n            [ 9, 1, 0, 10, 5, 2, 5, 3, 2, 5, 7, 3 ],\n            [ 5, 2, 10, 8, 2, 5, 8, 5, 7, 8, 0, 2 ],\n            [ 10, 5, 2, 2, 5, 3, 5, 7, 3 ],\n            [ 3, 9, 1, 3, 8, 9, 7, 11, 10, 7, 10, 5 ],\n            [ 9, 1, 0, 10, 7, 11, 10, 5, 7 ], [ 3, 8, 0, 7, 10, 5, 7, 11, 10 ],\n            [ 11, 5, 7, 11, 10, 5 ], [ 11, 7, 6 ], [ 0, 8, 3, 11, 7, 6 ],\n            [ 9, 0, 1, 11, 7, 6 ], [ 7, 6, 11, 3, 1, 9, 3, 9, 8 ],\n            [ 2, 3, 7, 2, 7, 6 ], [ 8, 7, 0, 7, 6, 0, 0, 6, 2 ],\n            [ 1, 9, 0, 3, 7, 6, 3, 6, 2 ], [ 7, 6, 2, 7, 2, 9, 2, 1, 9, 7, 9, 8 ],\n            [ 1, 2, 10, 6, 11, 7 ], [ 2, 10, 1, 7, 6, 11, 8, 3, 0 ],\n            [ 11, 7, 6, 10, 9, 0, 10, 0, 2 ],\n            [ 7, 6, 11, 3, 2, 8, 8, 2, 10, 8, 10, 9 ],\n            [ 6, 10, 7, 10, 1, 7, 7, 1, 3 ],\n            [ 6, 10, 1, 6, 1, 7, 7, 1, 0, 7, 0, 8 ],\n            [ 9, 0, 3, 6, 9, 3, 6, 10, 9, 6, 3, 7 ],\n            [ 6, 10, 7, 7, 10, 8, 10, 9, 8 ], [ 8, 4, 6, 8, 6, 11 ],\n            [ 11, 3, 6, 3, 0, 6, 6, 0, 4 ], [ 0, 1, 9, 4, 6, 11, 4, 11, 8 ],\n            [ 1, 9, 4, 11, 1, 4, 11, 3, 1, 11, 4, 6 ],\n            [ 3, 8, 2, 8, 4, 2, 2, 4, 6 ], [ 2, 0, 4, 2, 4, 6 ],\n            [ 1, 9, 0, 3, 8, 2, 2, 8, 4, 2, 4, 6 ], [ 9, 4, 1, 1, 4, 2, 4, 6, 2 ],\n            [ 10, 1, 2, 11, 8, 4, 11, 4, 6 ],\n            [ 10, 1, 2, 11, 3, 6, 6, 3, 0, 6, 0, 4 ],\n            [ 0, 2, 10, 0, 10, 9, 4, 11, 8, 4, 6, 11 ],\n            [ 2, 11, 3, 6, 9, 4, 6, 10, 9 ],\n            [ 8, 4, 6, 8, 6, 1, 6, 10, 1, 8, 1, 3 ],\n            [ 1, 0, 10, 10, 0, 6, 0, 4, 6 ], [ 8, 0, 3, 9, 6, 10, 9, 4, 6 ],\n            [ 10, 4, 6, 10, 9, 4 ], [ 9, 5, 4, 7, 6, 11 ],\n            [ 4, 9, 5, 3, 0, 8, 11, 7, 6 ], [ 6, 11, 7, 4, 0, 1, 4, 1, 5 ],\n            [ 6, 11, 7, 4, 8, 5, 5, 8, 3, 5, 3, 1 ], [ 4, 9, 5, 6, 2, 3, 6, 3, 7 ],\n            [ 9, 5, 4, 8, 7, 0, 0, 7, 6, 0, 6, 2 ],\n            [ 4, 0, 1, 4, 1, 5, 6, 3, 7, 6, 2, 3 ], [ 7, 4, 8, 5, 2, 1, 5, 6, 2 ],\n            [ 6, 11, 7, 1, 2, 10, 9, 5, 4 ],\n            [ 11, 7, 6, 8, 3, 0, 1, 2, 10, 9, 5, 4 ],\n            [ 11, 7, 6, 10, 5, 2, 2, 5, 4, 2, 4, 0 ],\n            [ 7, 4, 8, 2, 11, 3, 10, 5, 6 ],\n            [ 4, 9, 5, 6, 10, 7, 7, 10, 1, 7, 1, 3 ],\n            [ 5, 6, 10, 0, 9, 1, 8, 7, 4 ], [ 5, 6, 10, 7, 0, 3, 7, 4, 0 ],\n            [ 10, 5, 6, 4, 8, 7 ], [ 5, 6, 9, 6, 11, 9, 9, 11, 8 ],\n            [ 0, 9, 5, 0, 5, 3, 3, 5, 6, 3, 6, 11 ],\n            [ 0, 1, 5, 0, 5, 11, 5, 6, 11, 0, 11, 8 ],\n            [ 11, 3, 6, 6, 3, 5, 3, 1, 5 ], [ 9, 5, 6, 3, 9, 6, 3, 8, 9, 3, 6, 2 ],\n            [ 5, 6, 9, 9, 6, 0, 6, 2, 0 ], [ 0, 3, 8, 2, 5, 6, 2, 1, 5 ],\n            [ 1, 6, 2, 1, 5, 6 ], [ 1, 2, 10, 5, 6, 9, 9, 6, 11, 9, 11, 8 ],\n            [ 1, 0, 9, 6, 10, 5, 11, 3, 2 ], [ 6, 10, 5, 2, 8, 0, 2, 11, 8 ],\n            [ 3, 2, 11, 10, 5, 6 ], [ 10, 5, 6, 9, 3, 8, 9, 1, 3 ],\n            [ 0, 9, 1, 5, 6, 10 ], [ 8, 0, 3, 10, 5, 6 ], [ 10, 5, 6 ],\n            [ 10, 6, 5 ], [ 8, 3, 0, 10, 6, 5 ], [ 0, 1, 9, 5, 10, 6 ],\n            [ 10, 6, 5, 9, 8, 3, 9, 3, 1 ], [ 3, 11, 2, 10, 6, 5 ],\n            [ 6, 5, 10, 2, 0, 8, 2, 8, 11 ], [ 1, 9, 0, 6, 5, 10, 11, 2, 3 ],\n            [ 1, 10, 2, 5, 9, 6, 9, 11, 6, 9, 8, 11 ], [ 1, 2, 6, 1, 6, 5 ],\n            [ 0, 8, 3, 2, 6, 5, 2, 5, 1 ], [ 5, 9, 6, 9, 0, 6, 6, 0, 2 ],\n            [ 9, 6, 5, 3, 6, 9, 3, 9, 8, 3, 2, 6 ], [ 11, 6, 3, 6, 5, 3, 3, 5, 1 ],\n            [ 0, 5, 1, 0, 11, 5, 5, 11, 6, 0, 8, 11 ],\n            [ 0, 5, 9, 0, 3, 5, 3, 6, 5, 3, 11, 6 ],\n            [ 5, 9, 6, 6, 9, 11, 9, 8, 11 ], [ 10, 6, 5, 4, 7, 8 ],\n            [ 5, 10, 6, 7, 3, 0, 7, 0, 4 ], [ 5, 10, 6, 0, 1, 9, 8, 4, 7 ],\n            [ 4, 5, 9, 6, 7, 10, 7, 1, 10, 7, 3, 1 ],\n            [ 7, 8, 4, 2, 3, 11, 10, 6, 5 ],\n            [ 11, 6, 7, 10, 2, 5, 2, 4, 5, 2, 0, 4 ],\n            [ 11, 6, 7, 8, 0, 3, 1, 10, 2, 9, 4, 5 ],\n            [ 6, 7, 11, 1, 10, 2, 9, 4, 5 ], [ 7, 8, 4, 5, 1, 2, 5, 2, 6 ],\n            [ 4, 1, 0, 4, 5, 1, 6, 7, 3, 6, 3, 2 ],\n            [ 9, 4, 5, 8, 0, 7, 0, 6, 7, 0, 2, 6 ], [ 4, 5, 9, 6, 3, 2, 6, 7, 3 ],\n            [ 6, 7, 11, 4, 5, 8, 5, 3, 8, 5, 1, 3 ],\n            [ 6, 7, 11, 4, 1, 0, 4, 5, 1 ], [ 4, 5, 9, 3, 8, 0, 11, 6, 7 ],\n            [ 9, 4, 5, 7, 11, 6 ], [ 10, 6, 4, 10, 4, 9 ],\n            [ 8, 3, 0, 9, 10, 6, 9, 6, 4 ], [ 1, 10, 0, 10, 6, 0, 0, 6, 4 ],\n            [ 8, 6, 4, 8, 1, 6, 6, 1, 10, 8, 3, 1 ],\n            [ 2, 3, 11, 6, 4, 9, 6, 9, 10 ],\n            [ 0, 10, 2, 0, 9, 10, 4, 8, 11, 4, 11, 6 ],\n            [ 10, 2, 1, 11, 6, 3, 6, 0, 3, 6, 4, 0 ],\n            [ 10, 2, 1, 11, 4, 8, 11, 6, 4 ], [ 9, 1, 4, 1, 2, 4, 4, 2, 6 ],\n            [ 1, 0, 9, 3, 2, 8, 2, 4, 8, 2, 6, 4 ], [ 2, 4, 0, 2, 6, 4 ],\n            [ 3, 2, 8, 8, 2, 4, 2, 6, 4 ],\n            [ 1, 4, 9, 11, 4, 1, 11, 1, 3, 11, 6, 4 ],\n            [ 0, 9, 1, 4, 11, 6, 4, 8, 11 ], [ 11, 6, 3, 3, 6, 0, 6, 4, 0 ],\n            [ 8, 6, 4, 8, 11, 6 ], [ 6, 7, 10, 7, 8, 10, 10, 8, 9 ],\n            [ 9, 3, 0, 6, 3, 9, 6, 9, 10, 6, 7, 3 ],\n            [ 6, 1, 10, 6, 7, 1, 7, 0, 1, 7, 8, 0 ],\n            [ 6, 7, 10, 10, 7, 1, 7, 3, 1 ],\n            [ 7, 11, 6, 3, 8, 2, 8, 10, 2, 8, 9, 10 ],\n            [ 11, 6, 7, 10, 0, 9, 10, 2, 0 ], [ 2, 1, 10, 7, 11, 6, 8, 0, 3 ],\n            [ 1, 10, 2, 6, 7, 11 ], [ 7, 2, 6, 7, 9, 2, 2, 9, 1, 7, 8, 9 ],\n            [ 1, 0, 9, 3, 6, 7, 3, 2, 6 ], [ 8, 0, 7, 7, 0, 6, 0, 2, 6 ],\n            [ 2, 7, 3, 2, 6, 7 ], [ 7, 11, 6, 3, 9, 1, 3, 8, 9 ],\n            [ 9, 1, 0, 11, 6, 7 ], [ 0, 3, 8, 11, 6, 7 ], [ 11, 6, 7 ],\n            [ 11, 7, 5, 11, 5, 10 ], [ 3, 0, 8, 7, 5, 10, 7, 10, 11 ],\n            [ 9, 0, 1, 10, 11, 7, 10, 7, 5 ],\n            [ 3, 1, 9, 3, 9, 8, 7, 10, 11, 7, 5, 10 ],\n            [ 10, 2, 5, 2, 3, 5, 5, 3, 7 ],\n            [ 5, 10, 2, 8, 5, 2, 8, 7, 5, 8, 2, 0 ],\n            [ 9, 0, 1, 10, 2, 5, 5, 2, 3, 5, 3, 7 ],\n            [ 1, 10, 2, 5, 8, 7, 5, 9, 8 ], [ 2, 11, 1, 11, 7, 1, 1, 7, 5 ],\n            [ 0, 8, 3, 2, 11, 1, 1, 11, 7, 1, 7, 5 ],\n            [ 9, 0, 2, 9, 2, 7, 2, 11, 7, 9, 7, 5 ],\n            [ 11, 3, 2, 8, 5, 9, 8, 7, 5 ], [ 1, 3, 7, 1, 7, 5 ],\n            [ 8, 7, 0, 0, 7, 1, 7, 5, 1 ], [ 0, 3, 9, 9, 3, 5, 3, 7, 5 ],\n            [ 9, 7, 5, 9, 8, 7 ], [ 4, 5, 8, 5, 10, 8, 8, 10, 11 ],\n            [ 3, 0, 4, 3, 4, 10, 4, 5, 10, 3, 10, 11 ],\n            [ 0, 1, 9, 4, 5, 8, 8, 5, 10, 8, 10, 11 ],\n            [ 5, 9, 4, 1, 11, 3, 1, 10, 11 ],\n            [ 3, 8, 4, 3, 4, 2, 2, 4, 5, 2, 5, 10 ],\n            [ 10, 2, 5, 5, 2, 4, 2, 0, 4 ], [ 0, 3, 8, 5, 9, 4, 10, 2, 1 ],\n            [ 2, 1, 10, 9, 4, 5 ], [ 8, 4, 5, 2, 8, 5, 2, 11, 8, 2, 5, 1 ],\n            [ 3, 2, 11, 1, 4, 5, 1, 0, 4 ], [ 9, 4, 5, 8, 2, 11, 8, 0, 2 ],\n            [ 11, 3, 2, 9, 4, 5 ], [ 4, 5, 8, 8, 5, 3, 5, 1, 3 ],\n            [ 5, 0, 4, 5, 1, 0 ], [ 3, 8, 0, 4, 5, 9 ], [ 9, 4, 5 ],\n            [ 7, 4, 11, 4, 9, 11, 11, 9, 10 ],\n            [ 3, 0, 8, 7, 4, 11, 11, 4, 9, 11, 9, 10 ],\n            [ 11, 7, 4, 1, 11, 4, 1, 10, 11, 1, 4, 0 ],\n            [ 8, 7, 4, 11, 1, 10, 11, 3, 1 ],\n            [ 2, 3, 7, 2, 7, 9, 7, 4, 9, 2, 9, 10 ],\n            [ 4, 8, 7, 0, 10, 2, 0, 9, 10 ], [ 2, 1, 10, 0, 7, 4, 0, 3, 7 ],\n            [ 10, 2, 1, 8, 7, 4 ], [ 2, 11, 7, 2, 7, 1, 1, 7, 4, 1, 4, 9 ],\n            [ 3, 2, 11, 4, 8, 7, 9, 1, 0 ], [ 7, 4, 11, 11, 4, 2, 4, 0, 2 ],\n            [ 2, 11, 3, 7, 4, 8 ], [ 9, 1, 4, 4, 1, 7, 1, 3, 7 ],\n            [ 1, 0, 9, 8, 7, 4 ], [ 3, 4, 0, 3, 7, 4 ], [ 8, 7, 4 ],\n            [ 8, 9, 10, 8, 10, 11 ], [ 0, 9, 3, 3, 9, 11, 9, 10, 11 ],\n            [ 1, 10, 0, 0, 10, 8, 10, 11, 8 ], [ 10, 3, 1, 10, 11, 3 ],\n            [ 3, 8, 2, 2, 8, 10, 8, 9, 10 ], [ 9, 2, 0, 9, 10, 2 ],\n            [ 8, 0, 3, 1, 10, 2 ], [ 10, 2, 1 ], [ 2, 11, 1, 1, 11, 9, 11, 8, 9 ],\n            [ 11, 3, 2, 0, 9, 1 ], [ 11, 0, 2, 11, 8, 0 ], [ 11, 3, 2 ],\n            [ 8, 1, 3, 8, 9, 1 ], [ 9, 1, 0 ], [ 8, 0, 3 ], [] ];\n\n            return my;\n};\n\n//each webworker needs its own marching cube object\n$3Dmol.MarchingCube  = $3Dmol.MarchingCubeInitializer();\n\n\n\n/**\n * $3Dmol.Parsers stores functions for parsing molecular data. They all take a string of molecular data\n * and options. The default behavior is to only read the first model in the case of multimodel files, and\n * all parsers return a list of atom list(s)\n *\n * $3Dmol.Parsers.<ext> corresponds to the parsers for files with extension ext\n */\n$3Dmol.Parsers = (function() {\n    var parsers = {};\n\n    /**\n     * @param {AtomSpec[]}\n     *            atomsarray\n     */\n    var assignBonds = function(atoms) {\n        // assign bonds - yuck, can't count on connect records\n\n        for (var i = 0, n = atoms.length; i < n; i++) {\n            // Don't reindex if atoms are already indexed\n            if (!atoms[i].index)\n                atoms[i].index = i;\n        }\n\n        var grid = {};\n        var MAX_BOND_LENGTH = 4.95; // (largest bond length, Cs) 2.25 * 2 * 1.1 (fudge factor)\n\n        for (var index = 0; index < atoms.length; index++) {\n            var atom = atoms[index];\n            var x = Math.floor(atom.x / MAX_BOND_LENGTH);\n            var y = Math.floor(atom.y / MAX_BOND_LENGTH);\n            var z = Math.floor(atom.z / MAX_BOND_LENGTH);\n            if (!grid[x]) {\n                grid[x] = {};\n            }\n            if (!grid[x][y]) {\n                grid[x][y] = {};\n            }\n            if (!grid[x][y][z]) {\n                grid[x][y][z] = [];\n            }\n\n            grid[x][y][z].push(atom);\n        }\n\n        var findConnections = function(points, otherPoints) {\n            for (var i = 0; i < points.length; i++) {\n                var atom1 = points[i];\n                for (var j = 0; j < otherPoints.length; j++) {\n                    var atom2 = otherPoints[j];\n\n                    if (areConnected(atom1, atom2)) {\n                        if (atom1.bonds.indexOf(atom2.index) == -1) {\n                            atom1.bonds.push(atom2.index);\n                            atom1.bondOrder.push(1);\n                            atom2.bonds.push(atom1.index);\n                            atom2.bondOrder.push(1);\n                        }\n                    }\n                }\n            }\n        }\n\n\n        /*const*/ var OFFSETS = [\n            {x: 0, y: 0, z: 1},\n            {x: 0, y: 1, z:-1},\n            {x: 0, y: 1, z: 0},\n            {x: 0, y: 1, z: 1},\n            {x: 1, y:-1, z:-1},\n            {x: 1, y:-1, z: 0},\n            {x: 1, y:-1, z: 1},\n            {x: 1, y: 0, z:-1},\n            {x: 1, y: 0, z: 0},\n            {x: 1, y: 0, z: 1},\n            {x: 1, y: 1, z:-1},\n            {x: 1, y: 1, z: 0},\n            {x: 1, y: 1, z: 1}\n        ];\n        for (var x in grid) {\n            x = parseInt(x);\n            for (var y in grid[x]) {\n                y = parseInt(y);\n                for (var z in grid[x][y]) {\n                    z = parseInt(z);\n                    var points = grid[x][y][z];\n\n                    for (var i = 0; i < points.length; i++) {\n                        var atom1 = points[i];\n                        for (var j = i + 1; j < points.length; j++) {\n                            var atom2 = points[j];\n                            if (areConnected(atom1, atom2)) {\n                                if (atom1.bonds.indexOf(atom2.index) == -1) {\n                                    atom1.bonds.push(atom2.index);\n                                    atom1.bondOrder.push(1);\n                                    atom2.bonds.push(atom1.index);\n                                    atom2.bondOrder.push(1);\n                                }\n                            }\n                        }\n                    }\n\n                    for (var o = 0; o < OFFSETS.length; o++) {\n                        var offset = OFFSETS[o];\n                        if (!grid[x+offset.x]\n                            || !grid[x+offset.x][y+offset.y]\n                            || !grid[x+offset.x][y+offset.y][z+offset.z]) continue;\n\n                        var otherPoints = grid[x + offset.x][y + offset.y][z + offset.z];\n                        findConnections(points, otherPoints);\n                    }\n                }\n            }\n        }\n    };\n\n    // this is optimized for proteins where it is assumed connected\n    // atoms are on the same or next residue\n    /**\n     * @param {AtomSpec[]}\n     *            atomsarray\n     */\n    var assignPDBBonds = function(atomsarray) {\n        // assign bonds - yuck, can't count on connect records\n        var protatoms = [];\n        var hetatoms = [];\n        var i, n;\n        for (i = 0, n = atomsarray.length; i < n; i++) {\n            var atom = atomsarray[i];\n            atom.index = i;\n            if (atom.hetflag)\n                hetatoms.push(atom);\n            else\n                protatoms.push(atom);\n        }\n\n        assignBonds(hetatoms);\n\n        // sort by resid\n        protatoms.sort(function(a, b) {\n            if (a.chain != b.chain)\n                return a.chain < b.chain ? -1 : 1;\n            return a.resi - b.resi;\n        });\n\n        // for identifying connected residues\n        var currentResi = -1;\n        var reschain = -1;\n        var lastResConnected;\n\n        for (i = 0, n = protatoms.length; i < n; i++) {\n            var ai = protatoms[i];\n\n            if (ai.resi !== currentResi) {\n                currentResi = ai.resi;\n                if (!lastResConnected)\n                    reschain++;\n\n                lastResConnected = false;\n            }\n\n            ai.reschain = reschain;\n\n            for (var j = i + 1; j < protatoms.length; j++) {\n                var aj = protatoms[j];\n                if (aj.chain != ai.chain)\n                    break;\n                if (aj.resi - ai.resi > 1) // can't be connected\n                    break;\n                if (areConnected(ai, aj)) {\n                    if (ai.bonds.indexOf(aj.index) === -1) {\n                        // only add if not already there\n                        ai.bonds.push(aj.index);\n                        ai.bondOrder.push(1);\n                        aj.bonds.push(ai.index);\n                        aj.bondOrder.push(1);\n                    }\n\n                    if (ai.resi !== aj.resi)\n                        lastResConnected = true;\n\n                }\n            }\n        }\n\n    };\n\n    // this will identify all hydrogen bonds between backbone\n    // atoms; assume atom names are correct, only identifies\n    // single closest hbond\n    var assignBackboneHBonds = function(atomsarray) {\n        var maxlength = 3.2;\n        var maxlengthSq = 10.24;\n        var atoms = [];\n        var i, j, n;\n        for (i = 0, n = atomsarray.length; i < n; i++) {\n            atomsarray[i].index = i;\n            // only consider 'N' and 'O'\n            var atom = atomsarray[i];\n            if (!atom.hetflag && (atom.atom === \"N\" || atom.atom === \"O\")) {\n                atoms.push(atom);\n                atom.hbondOther = null;\n                atom.hbondDistanceSq = Number.POSITIVE_INFINITY;\n            }\n        }\n\n        atoms.sort(function(a, b) {\n            return a.z - b.z;\n        });\n        for (i = 0, n = atoms.length; i < n; i++) {\n            var ai = atoms[i];\n\n            for (j = i + 1; j < n; j++) {\n                var aj = atoms[j];\n                var zdiff = aj.z - ai.z;\n                if (zdiff > maxlength) // can't be connected\n                    break;\n                if (aj.atom == ai.atom)\n                    continue; // can't be connected, but later might be\n                var ydiff = Math.abs(aj.y - ai.y);\n                if (ydiff > maxlength)\n                    continue;\n                var xdiff = Math.abs(aj.x - ai.x);\n                if (xdiff > maxlength)\n                    continue;\n                var dist = xdiff * xdiff + ydiff * ydiff + zdiff * zdiff;\n                if (dist > maxlengthSq)\n                    continue;\n\n                if (aj.chain == ai.chain && Math.abs(aj.resi - ai.resi) < 4)\n                    continue; // ignore bonds between too close residues\n                // select closest hbond\n                if (dist < ai.hbondDistanceSq) {\n                    ai.hbondOther = aj;\n                    ai.hbondDistanceSq = dist;\n                }\n                if (dist < aj.hbondDistanceSq) {\n                    aj.hbondOther = ai;\n                    aj.hbondDistanceSq = dist;\n                }\n            }\n        }\n    };\n\n    var computeSecondaryStructure = function(atomsarray) {\n        assignBackboneHBonds(atomsarray);\n\n        // compute, per residue, what the secondary structure is\n        var chres = {}; // lookup by chain and resid\n        var i, il, c, r;\n        var atom, val;\n\n        //identify helices first\n        for (i = 0, il = atomsarray.length; i < il; i++) {\n            atom = atomsarray[i];\n\n            if (typeof (chres[atom.chain]) === \"undefined\")\n                chres[atom.chain] = [];\n\n            if (isFinite(atom.hbondDistanceSq)) {\n                var other = atom.hbondOther;\n                if (typeof (chres[other.chain]) === \"undefined\")\n                    chres[other.chain] = [];\n\n                if (Math.abs(other.resi - atom.resi) === 4) {\n                    // helix\n                    chres[atom.chain][atom.resi] = 'h';\n                }\n            }\n        }\n\n        // plug gaps in helices\n        for (c in chres) {\n            for (r = 1; r < chres[c].length - 1; r++) {\n                var valbefore = chres[c][r - 1];\n                var valafter = chres[c][r + 1];\n                val = chres[c][r];\n                if (valbefore == 'h' && valbefore == valafter && val != valbefore) {\n                    chres[c][r] = valbefore;\n                }\n            }\n        }\n\n        //now potential sheets - but only if mate not part of helix\n        for (i = 0, il = atomsarray.length; i < il; i++) {\n            atom = atomsarray[i];\n\n            if (isFinite(atom.hbondDistanceSq) && chres[atom.chain][atom.resi] != 'h' && atom.ss != 'h') {\n                chres[atom.chain][atom.resi] = 'maybesheet';\n            }\n        }\n\n\n        //sheets must bond to other sheets\n        for (i = 0, il = atomsarray.length; i < il; i++) {\n            atom = atomsarray[i];\n\n            if (isFinite(atom.hbondDistanceSq) && chres[atom.chain][atom.resi] == 'maybesheet') {\n                var other = atom.hbondOther;\n                var otherval = chres[other.chain][other.resi];\n                if (otherval == 'maybesheet' || otherval == 's') {\n                    // true sheet\n                    chres[atom.chain][atom.resi] = 's';\n                    chres[other.chain][other.resi] = 's';\n                }\n            }\n        }\n\n        // plug gaps in sheets and remove singletons\n        for (c in chres) {\n            for (r = 1; r < chres[c].length - 1; r++) {\n                var valbefore = chres[c][r - 1];\n                var valafter = chres[c][r + 1];\n                val = chres[c][r];\n                if (valbefore == 's' && valbefore == valafter && val != valbefore) {\n                    chres[c][r] = valbefore;\n                }\n            }\n            for (r = 0; r < chres[c].length; r++) {\n                val = chres[c][r];\n                if (val == 'h' || val == 's') {\n                    if (chres[c][r - 1] != val && chres[c][r + 1] != val)\n                        delete chres[c][r];\n                }\n            }\n        }\n\n\n        // assign to all atoms in residue, keep track of start\n        var curres = null;\n        for (i = 0, il = atomsarray.length; i < il; i++) {\n            atom = atomsarray[i];\n            val = chres[atom.chain][atom.resi];\n            if (typeof (val) == \"undefined\" || val == 'maybesheet')\n                continue;\n            atom.ss = val;\n            if (chres[atom.chain][atom.resi - 1] != val)\n                atom.ssbegin = true;\n            if (chres[atom.chain][atom.resi + 1] != val)\n                atom.ssend = true;\n        }\n    };\n\n    /**\n     * @param {string}\n     *            str\n     * @param {Object}\n     *            options\n     */\n    parsers.vasp = parsers.VASP = function (str, options) {\n      var atoms = [[]];\n      var lattice = {};\n\n      var lines = str.replace(/^\\s+/, \"\").split(/[\\n\\r]/);\n\n      if (lines.length < 3){\n        return atoms;\n      }\n\n      if (lines[1].match(/\\d+/)) {\n        lattice.length = parseFloat(lines[1]);\n      } else {\n        console.log(\"Warning: second line of the vasp structure file must be a number\");\n        return atoms;\n      }\n\n      if (lattice.length<0) {\n        console.log(\"Warning: Vasp implementation for negative lattice lengths is not yet available\");\n        return atoms;\n      }\n\n      lattice.xVec = new Float32Array(lines[2].replace(/^\\s+/, \"\").split(/\\s+/));\n      lattice.yVec = new Float32Array(lines[3].replace(/^\\s+/, \"\").split(/\\s+/));\n      lattice.zVec = new Float32Array(lines[4].replace(/^\\s+/, \"\").split(/\\s+/));\n\n\n      var atomSymbols=lines[5].replace(/\\s+/, \"\").replace(/\\s+$/,\"\").split(/\\s+/);\n      var atomSpeciesNumber=new Int16Array(lines[6].replace(/^\\s+/, \"\").split(/\\s+/));\n      var vaspMode=lines[7].replace(/\\s+/, \"\");\n\n\n      if (vaspMode.match(/C/)) {\n        vaspMode = \"cartesian\";\n      }else if (vaspMode.match(/D/)){\n        vaspMode=\"direct\";\n      } else {\n        console.log(\"Warning: Unknown vasp mode in POSCAR file: mode must be either C(artesian) or D(irect)\");\n        return atoms;\n      }\n\n      if (atomSymbols.length != atomSpeciesNumber.length) {\n        console.log(\"Warning: declaration of atomary species wrong:\");\n        console.log(atomSymbols);\n        console.log(atomSpeciesNumber);\n        return atoms;\n      }\n\n      lines.splice(0,8);\n\n      var atomCounter = 0;\n\n      for (var i = 0, len = atomSymbols.length; i < len; i++) {\n        var atomSymbol = atomSymbols[i];\n       for (var j = 0, atomLen = atomSpeciesNumber[i]; j < atomLen; j++) {\n\n        var coords = new Float32Array(lines[atomCounter + j].replace(/^\\s+/, \"\").split(/\\s+/));\n\n        atom={};\n        atom.elem = atomSymbol;\n        if (vaspMode == \"cartesian\") {\n          atom.x = lattice.length*coords[0];\n          atom.y = lattice.length*coords[1];\n          atom.z = lattice.length*coords[2];\n        } else {\n          atom.x = lattice.length*(coords[0]*lattice.xVec[0] + coords[1]*lattice.yVec[0] + coords[2]*lattice.zVec[0]);\n          atom.y = lattice.length*(coords[0]*lattice.xVec[1] + coords[1]*lattice.yVec[1] + coords[2]*lattice.zVec[1]);\n          atom.z = lattice.length*(coords[0]*lattice.xVec[2] + coords[1]*lattice.yVec[2] + coords[2]*lattice.zVec[2]);\n        }\n\n        atom.bonds=[];\n\n        atoms[0].push(atom);\n       }\n        atomCounter += atomSpeciesNumber[i];\n      }\n\n      return atoms;\n\n\n    }\n\n    /**\n     * @param {string}\n     *            str\n     * @param {Object}\n     *            options\n     */\n    parsers.cube = parsers.CUBE = function(str, options) {\n        var atoms = [[]];\n        var lines = str.replace(/^\\s+/, \"\").split(/\\n\\r|\\r+/);\n\n        if (lines.length < 6)\n            return atoms;\n\n        var lineArr = lines[2].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\n                \" \");\n\n        var natoms = Math.abs(parseFloat(lineArr[0]));\n\n        lineArr = lines[3].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n\n        // might have to convert from bohr units to angstroms\n        var convFactor = (parseFloat(lineArr[0]) > 0) ? 0.529177 : 1;\n\n        // Extract atom portion; send to new GLModel...\n        lines = lines.splice(6, natoms);\n\n        var start = atoms[atoms.length-1].length;\n        var end = start + lines.length;\n\n        for (var i = start; i < end; ++i) {\n            var atom = {};\n            atom.serial = i;\n            var line = lines[i - start];\n            var tokens = line.replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\n                    \" \");\n\n            if (tokens[0] == 6)\n                atom.elem = \"C\";\n\n            else if (tokens[0] == 1)\n                atom.elem = \"H\";\n\n            else if (tokens[0] == 8)\n                atom.elem = \"O\";\n\n            else if (tokens[0] == 17)\n                atom.elem = \"Cl\";\n\n            atom.x = parseFloat(tokens[2]) * convFactor;\n            atom.y = parseFloat(tokens[3]) * convFactor;\n            atom.z = parseFloat(tokens[4]) * convFactor;\n\n            atom.hetflag = true;\n            atom.bonds = [];\n            atom.bondOrder = [];\n            atom.properties = {};\n            atoms[atoms.length-1].push(atom);\n\n        }\n        for (var i = 0; i < atoms.length; i++)\n            assignBonds(atoms[i]);\n\n        return atoms;\n    };\n\n    // read an XYZ file from str and return result\n    /**\n     * @param {string}\n     *            str\n     * @param {Object}\n     *            options\n     */\n    parsers.xyz = parsers.XYZ = function(str, options) {\n\n        var atoms = [[]];\n        var lines = str.split(/\\r?\\n|\\r/);\n        while (lines.length > 0) {\n            if (lines.length < 3)\n                break;\n            var atomCount = parseInt(lines[0]);\n            if (isNaN(atomCount) || atomCount <= 0)\n                break;\n            if (lines.length < atomCount + 2)\n                break;\n            var offset = 2;\n            var start = atoms[atoms.length-1].length;\n            var end = start + atomCount;\n            for (var i = start; i < end; i++) {\n                var line = lines[offset++];\n                var tokens = line.replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\n                        \" \");\n                var atom = {};\n                atom.serial = i;\n                var elem = tokens[0];\n                atom.atom = atom.elem = elem[0].toUpperCase() + elem.substr(1).toLowerCase();\n                atom.x = parseFloat(tokens[1]);\n                atom.y = parseFloat(tokens[2]);\n                atom.z = parseFloat(tokens[3]);\n                atom.hetflag = true;\n                atom.bonds = [];\n                atom.bondOrder = [];\n                atom.properties = {};\n                atoms[atoms.length-1][i] = atom;\n                if (tokens.length >= 7) {\n                    atom.dx = parseFloat(tokens[4]);\n                    atom.dy = parseFloat(tokens[5]);\n                    atom.dz = parseFloat(tokens[6]);\n                }\n            }\n\n            if (options.multimodel) {\n                atoms.push([]);\n                lines.splice(0, offset);\n            }\n            else {\n                break;\n            }\n        }\n\n        for (var i = 0; i < atoms.length; i++) {\n            assignBonds(atoms[i]);\n        }\n\n        if (options.onemol) {\n            var temp = atoms;\n            atoms = [];\n            atoms.push(temp[0]);\n            for (var i = 1; i < temp.length; i++) {\n                var offset = atoms[0].length;\n                for (var j = 0; j < temp[i].length; j++) {\n                    var a = temp[i][j];\n                    for (var k = 0; k < a.bonds.length; k++) {\n                        a.bonds[k] = a.bonds[k] + offset;\n                    }\n                    a.index = atoms[0].length;\n                    a.serial = atoms[0].length;\n                    atoms[0].push(a);\n                }\n            }\n        }\n\n         return atoms;\n    };\n\n    // put atoms specified in sdf fromat in str into atoms\n    // adds to atoms, does not replace\n    /**\n     * @param {string}\n     *            str\n     * @param {Object}\n     *            options\n     */\n    parsers.sdf = parsers.SDF = function(str, options) {\n\n        var atoms = [[]];\n        var noH = false;\n        if (typeof options.keepH !== \"undefined\")\n            noH = !options.keepH;\n        var lines = str.split(/\\r?\\n|\\r/);\n\n        while(lines.length > 0) {\n            if (lines.length < 4)\n                break;\n            var atomCount = parseInt(lines[3].substr(0, 3));\n            if (isNaN(atomCount) || atomCount <= 0)\n                break;\n            var bondCount = parseInt(lines[3].substr(3, 3));\n            var offset = 4;\n            if (lines.length < 4 + atomCount + bondCount)\n                break;\n\n            // serial is atom's index in file; index is atoms index in 'atoms'\n            var serialToIndex = [];\n            var start = atoms[atoms.length-1].length;\n            var end = start + atomCount;\n            var i, line;\n            for (i = start; i < end; i++,offset++) {\n                line = lines[offset];\n                var atom = {};\n                var elem = line.substr(31, 3).replace(/ /g, \"\");\n                atom.atom = atom.elem = elem[0].toUpperCase() + elem.substr(1).toLowerCase();\n\n                if (atom.elem != 'H' || !noH) {\n                    atom.serial = i;\n                    serialToIndex[i] = atoms[atoms.length-1].length;\n                    atom.x = parseFloat(line.substr(0, 10));\n                    atom.y = parseFloat(line.substr(10, 10));\n                    atom.z = parseFloat(line.substr(20, 10));\n                    atom.hetflag = true;\n                    atom.bonds = [];\n                    atom.bondOrder = [];\n                    atom.properties = {};\n                    atom.index = atoms[atoms.length-1].length;\n                    atoms[atoms.length-1].push(atom);\n                }\n            }\n\n            for (i = 0; i < bondCount; i++,offset++) {\n                line = lines[offset];\n                var from = serialToIndex[parseInt(line.substr(0, 3)) - 1 + start];\n                var to = serialToIndex[parseInt(line.substr(3, 3)) - 1 + start];\n                var order = parseInt(line.substr(6, 3));\n                if (typeof (from) != 'undefined' && typeof (to) != 'undefined') {\n                    atoms[atoms.length-1][from].bonds.push(to);\n                    atoms[atoms.length-1][from].bondOrder.push(order);\n                    atoms[atoms.length-1][to].bonds.push(from);\n                    atoms[atoms.length-1][to].bondOrder.push(order);\n                }\n            }\n            if (options.multimodel) {\n                if (!options.onemol)\n                    atoms.push([]);\n                while (lines[offset] != \"$$$$\")\n                    offset++\n                lines.splice(0, ++offset);\n            }\n            else {\n                break;\n            }\n        }\n\n        return atoms;\n    };\n\n    // This parses the ChemDoodle json file format. Although this is registered\n    // for the json file extension, other chemical json file formats exist that\n    // this can not parse. Check which one you have and do not assume that\n    // .json can be parsed\n    parsers.cdjson = parsers.json = function(str, options) {\n        var atoms = [[]];\n        if (typeof str === \"string\") { // Str is usually automatically parsed by JQuery\n            str = JSON.parse(str);\n        }\n        var molecules = str.m;\n        var atomsInFile = molecules[0].a; // Assumes there is at least one\n        var bondsInFile = molecules[0].b; // molecule and ignores any more\n                                          // Ignores any shapes\n        var styles = molecules[0].s;\n        var parseStyle = options !== undefined && options.parseStyle !== undefined ? options.parseStyle : styles !== undefined;\n\n        var offset = atoms[atoms.length-1].length; // When adding atoms their index will be\n                                   // Offset by the number of existing atoms\n\n        for (var i = 0; i < atomsInFile.length; i++) {\n            var currentAtom = atomsInFile[i];\n            var atom = {};\n            atom.id = currentAtom.i; // Probably won't exist. Doesn't seem to\n                                     // break anything.\n            atom.x = currentAtom.x;\n            atom.y = currentAtom.y;\n            atom.z = currentAtom.z || 0; // Default value if file is 2D\n\n            atom.bonds = [];\n            atom.bondOrder = [];\n\n            var elem = currentAtom.l || 'C';\n            atom.elem = elem[0].toUpperCase() + elem.substr(1).toLowerCase();\n\n            atom.serial = atoms[atoms.length-1].length;\n            if (parseStyle) {\n                atom.style = styles[currentAtom.s || 0];\n            }\n            atoms[atoms.length-1].push(atom);\n        }\n        for (var i = 0; i < bondsInFile.length; i++) {\n            var currentBond = bondsInFile[i];\n            var beginIndex = currentBond.b + offset;\n            var endIndex = currentBond.e + offset;\n            var bondOrder = currentBond.o || 1;\n\n            var firstAtom = atoms[atoms.length-1][beginIndex];\n            var secondAtom = atoms[atoms.length-1][endIndex];\n\n            firstAtom.bonds.push(endIndex);\n            firstAtom.bondOrder.push(bondOrder);\n            secondAtom.bonds.push(beginIndex);\n            secondAtom.bondOrder.push(bondOrder);\n        }\n        return atoms;\n    }\n\n    // puts atoms specified in mmCIF fromat in str into atoms\n    /**\n     * @param {string}\n     *            str\n     * @param {Object}\n     *            options\n     */\n    parsers.mcif = parsers.cif = function(str, options) {\n        var atoms = [];\n        var noAssembly = !options.doAssembly; // don't assemble by default\n        var copyMatrix = !options.duplicateAssemblyAtoms;\n        var modelData = atoms.modelData = [];\n\n        // Used to handle quotes correctly\n        function splitRespectingQuotes(string, separator) {\n            var sections = [];\n            var sectionStart = 0;\n            var sectionEnd = 0;\n            while (sectionEnd < string.length) {\n                while (string.substr(sectionEnd, separator.length) !== separator\n                        && sectionEnd < string.length) {\n                    // currently does not support escaping quotes\n                    if (string[sectionEnd] === \"'\") {\n                        sectionEnd++;\n                        while (sectionEnd < string.length\n                                && string[sectionEnd] !== \"'\") {\n                            sectionEnd++;\n                        }\n                    } else if (string[sectionEnd] === '\"') {\n                        sectionEnd++;\n                        while (sectionEnd < string.length\n                                && string[sectionEnd] !== '\"') {\n                            sectionEnd++;\n                        }\n                    }\n                    sectionEnd++;\n\n                }\n                sections.push(string.substr(sectionStart, sectionEnd\n                        - sectionStart));\n                sectionStart = sectionEnd = sectionEnd + separator.length;\n            }\n            return sections;\n        }\n\n\n        var lines = str.split(/\\r?\\n|\\r/);\n        // Filter text to remove comments, trailing spaces, and empty lines\n        var linesFiltered = [];\n        var trimDisabled = false;\n        for (var lineNum = 0; lineNum < lines.length; lineNum++) {\n            // first remove comments\n            // incorrect if #'s are allowed in strings\n            // comments might only be allowed at beginning of line, not sure\n            var line = lines[lineNum].split('#')[0];\n\n            // inside data blocks, the string must be left verbatim\n            // datablocks are started with a ';' at the beginning of a line\n            // and ended with a ';' on its own line.\n            if (trimDisabled) {\n                if (line[0] === ';') {\n                    trimDisabled = false;\n                }\n            } else {\n                if (line[0] === ';') {\n                    trimDisabled = true;\n                }\n            }\n\n            if (trimDisabled || line !== \"\") {\n                if (!trimDisabled) {\n                    line = line.trim();\n                    if (line[0] === '_') {\n                        // Replace dot separating category from data item with underscore. Dots aren't guarenteed, to makes\n                        // files consistent.\n                        var dot = line.split(/\\s/)[0].indexOf('.');\n                        if (dot > -1) {\n                            line[dot] = '_';\n                            line = line.substr(0,dot) + '_' + line.substr(dot + 1)\n                        }\n                    }\n                }\n                linesFiltered.push(line);\n            }\n        }\n\n        var lineNum = 0;\n        while (lineNum < linesFiltered.length) {\n            while (! linesFiltered[lineNum].startsWith(\"data_\") ||\n                   linesFiltered[lineNum] === \"data_global\") {\n                lineNum++;\n            }\n            lineNum++;\n\n            // Process the lines and puts all of the data into an object.\n            var mmCIF = {};\n            while (lineNum < linesFiltered.length &&\n                   ! linesFiltered[lineNum].startsWith(\"data_\")) {\n                if (linesFiltered[lineNum][0] === undefined) {\n                    lineNum++;\n                } else if (linesFiltered[lineNum][0] === '_') {\n                    var dataItemName = (linesFiltered[lineNum].split(/\\s/)[0]).toLowerCase();\n                    var dataItem = (mmCIF[dataItemName] = mmCIF[dataItemName] || []);\n\n                    // if nothing left on the line go to the next one\n                    var restOfLine = linesFiltered[lineNum]\n                        .substr(linesFiltered[lineNum].indexOf(dataItemName)\n                                + dataItemName.length);\n                    if (restOfLine === \"\") {\n                        lineNum++;\n                        if (linesFiltered[lineNum][0] === ';') {\n                            var dataBlock = linesFiltered[lineNum].substr(1);\n                            lineNum++;\n                            while (linesFiltered[lineNum] !== ';') {\n                                dataBlock = dataBlock + '\\n'\n                                            + linesFiltered[lineNum];\n                                lineNum++;\n                            }\n                            dataItem.push(dataBlock);\n                        } else {\n                            dataItem.push(linesFiltered[lineNum]);\n                        }\n                    } else {\n                        dataItem.push(restOfLine.trim());\n                    }\n                    lineNum++;\n                } else if (linesFiltered[lineNum].substr(0, 5) === \"loop_\") {\n                    lineNum++;\n                    var dataItems = [];\n                    while (linesFiltered[lineNum] === \"\"\n                           || linesFiltered[lineNum][0] === '_') {\n                        if (linesFiltered[lineNum] !== \"\") {\n                            var dataItemName = (linesFiltered[lineNum].split(/\\s/)[0]).toLowerCase();\n                            var dataItem = (mmCIF[dataItemName] = mmCIF[dataItemName] || []);\n                            dataItems.push(dataItem);\n                        }\n                        lineNum++;\n                    }\n\n                    var currentDataItem = 0;\n                    while (lineNum < linesFiltered.length\n                           && linesFiltered[lineNum][0] !== '_'\n                           && !linesFiltered[lineNum].startsWith(\"loop_\")\n                           && !linesFiltered[lineNum].startsWith(\"data_\")) {\n                        var line = splitRespectingQuotes(linesFiltered[lineNum], \" \");\n                        for (var field = 0; field < line.length; field++) {\n                            if (line[field] !== \"\") {\n                                dataItems[currentDataItem].push(line[field]);\n                                currentDataItem = (currentDataItem + 1) % dataItems.length;\n                            }\n                        }\n                        lineNum++;\n                    }\n                } else {\n                    lineNum++;\n                }\n            }\n\n            modelData.push({symmetries:[]});\n\n            // Pulls atom information out of the data\n            atoms.push([]);\n            var currentIndex = 0;\n            var atomCount = mmCIF._atom_site_id !== undefined ? mmCIF._atom_site_id.length\n                : mmCIF._atom_site_label.length;\n            function sqr(n) {\n                return n*n;\n            }\n            var conversionMatrix;\n            if (mmCIF._cell_length_a !== undefined) {\n                var a = parseFloat(mmCIF._cell_length_a);\n                var b = parseFloat(mmCIF._cell_length_b);\n                var c = parseFloat(mmCIF._cell_length_c);\n                var alpha_deg = parseFloat(mmCIF._cell_angle_alpha) || 90;\n                var beta_deg = parseFloat(mmCIF._cell_angle_beta) || 90;\n                var gamma_deg = parseFloat(mmCIF._cell_angle_gamma) || 90;\n                var alpha = alpha_deg * Math.PI / 180;\n                var beta = beta_deg * Math.PI / 180;\n                var gamma = gamma_deg * Math.PI / 180;\n                var cos_alpha = Math.cos(alpha);\n                var cos_beta = Math.cos(beta);\n                var cos_gamma = Math.cos(gamma);\n                var sin_gamma = Math.sin(gamma);\n                conversionMatrix = [\n                    [a, b*cos_gamma, c*cos_beta],\n                    [0, b*sin_gamma, c*(cos_alpha-cos_beta*cos_gamma)/sin_gamma],\n                    [0, 0, c*Math.sqrt(1-sqr(cos_alpha)-sqr(cos_beta)-sqr(cos_gamma)+2*cos_alpha*cos_beta*cos_gamma)/sin_gamma]\n                ];\n                modelData[modelData.length-1].cryst = {'a' : a, 'b' : b, 'c' : c, 'alpha' : alpha_deg, 'beta' : beta_deg, 'gamma' : gamma_deg};\n            }\n            function fractionalToCartesian(a, b, c) {\n                var x = conversionMatrix[0][0]*a + conversionMatrix[0][1]*b + conversionMatrix[0][2]*c;\n                var y = conversionMatrix[1][0]*a + conversionMatrix[1][1]*b + conversionMatrix[1][2]*c;\n                var z = conversionMatrix[2][0]*a + conversionMatrix[2][1]*b + conversionMatrix[2][2]*c;\n                return {x:x, y:y, z:z};\n            }\n            for (var i = 0; i < atomCount; i++) {\n                if (mmCIF._atom_site_group_pdb !== undefined && mmCIF._atom_site_group_pdb[i] === \"TER\")\n                    continue;\n                var atom = {};\n                if (mmCIF._atom_site_cartn_x !== undefined) {\n                    atom.x = parseFloat(mmCIF._atom_site_cartn_x[i]);\n                    atom.y = parseFloat(mmCIF._atom_site_cartn_y[i]);\n                    atom.z = parseFloat(mmCIF._atom_site_cartn_z[i]);\n                }\n                else {\n                    var coords = fractionalToCartesian(\n                        parseFloat(mmCIF._atom_site_fract_x[i]),\n                        parseFloat(mmCIF._atom_site_fract_y[i]),\n                        parseFloat(mmCIF._atom_site_fract_z[i]));\n                    atom.x = coords.x;\n                    atom.y = coords.y;\n                    atom.z = coords.z;\n                }\n                atom.chain = mmCIF._atom_site_auth_asym_id ? mmCIF._atom_site_auth_asym_id[i] : undefined;\n                atom.resi = mmCIF._atom_site_auth_seq_id ? parseInt(mmCIF._atom_site_auth_seq_id[i]) : undefined;\n                atom.resn = mmCIF._atom_site_auth_comp_id ? mmCIF._atom_site_auth_comp_id[i].trim() : undefined;\n                atom.atom = mmCIF._atom_site_auth_atom_id ? mmCIF._atom_site_auth_atom_id[i].replace(/\"/gm,'')  : undefined; //\"primed\" names are in quotes\n                atom.hetflag = !mmCIF._atom_site_group_pdb || mmCIF._atom_site_group_pdb[i] === \"HETA\" || mmCIF._atom_site_group_pdb[i] === \"HETATM\";\n                var elem = mmCIF._atom_site_type_symbol[i];\n                atom.elem = elem[0].toUpperCase() + elem.substr(1).toLowerCase();\n                atom.bonds = [];\n                atom.ss = 'c';\n                atom.serial = i;\n                atom.bondOrder = [];\n                atom.properties = {};\n                atoms[atoms.length-1].push(atom);\n            }\n\n            if (mmCIF._pdbx_struct_oper_list_id !== undefined && !noAssembly) {\n                for (var i = 0; i < mmCIF._pdbx_struct_oper_list_id.length; i++) {\n                    var matrix11 = parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[1][1]'][i]);\n                    var matrix12 = parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[1][2]'][i]);\n                    var matrix13 = parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[1][3]'][i]);\n                    var vector1 = parseFloat(mmCIF['_pdbx_struct_oper_list_vector[1]'][i]);\n                    var matrix21 = parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[2][1]'][i]);\n                    var matrix22 = parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[2][2]'][i]);\n                    var matrix23 = parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[2][3]'][i]);\n                    var vector2 = parseFloat(mmCIF['_pdbx_struct_oper_list_vector[2]'][i]);\n              var matrix31 = parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[3][1]'][i]);\n                    var matrix32 = parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[3][2]'][i]);\n                    var matrix33 = parseFloat(mmCIF['_pdbx_struct_oper_list_matrix[3][3]'][i]);\n                    var vector3 = parseFloat(mmCIF['_pdbx_struct_oper_list_vector[3]'][i]);\n\n                    var matrix = new $3Dmol.Matrix4(matrix11, matrix12, matrix13, vector1,\n                                                    matrix21, matrix22, matrix23, vector2,\n                                                    matrix31, matrix32, matrix33, vector3);\n                    modelData[modelData.length-1].symmetries.push(matrix);\n                }\n                for (var i = 0; i < atoms.length; i++) {\n                    processSymmetries(modelData[modelData.length-1].symmetries, copyMatrix, atoms[i]);\n                }\n            }\n            function parseTerm(term){\n                var negative = term.match('-');\n                term = term.replace(/[-xyz]/g, \"\");\n                var fractionParts = term.split('/');\n\n                var numerator, denominator;\n                if (fractionParts[1] === undefined) {\n                    denominator = 1;\n                }\n                else {\n                    denominator = parseInt(fractionParts[1]);\n                }\n                if (fractionParts[0] === \"\") {\n                    numerator = 1;\n                }\n                else {\n                    numerator = parseInt(fractionParts[0]);\n                }\n                return numerator / denominator * (negative ? -1 : 1);\n            }\n            if (mmCIF._symmetry_equiv_pos_as_xyz !== undefined) {\n                for (var sym = 0; sym < mmCIF._symmetry_equiv_pos_as_xyz.length; sym++) {\n                    var transform = mmCIF._symmetry_equiv_pos_as_xyz[sym].replace(/[\"' ]/g,\"\");\n                    var componentStrings = transform.split(',').map(\n                        function(val){\n                            return val.replace(/-/g,\"+-\");\n                        });\n                    var matrix = new $3Dmol.Matrix4(0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1);\n                    for (var coord = 0; coord < 3; coord++) {\n                        var terms = componentStrings[coord].split('+');\n                        var constant = 0, xTerm = 0, yTerm = 0, zTerm = 0;\n                        for (var t = 0; t < terms.length; t++) {\n                            var term = terms[t];\n                            if (term === \"\")\n                                continue;\n                            var coefficient = parseTerm(term);\n                            if (term.match('x')) {\n                                matrix.elements[coord + 0] = coefficient;\n                            }\n                            else if (term.match('y')) {\n                                matrix.elements[coord + 4] = coefficient;\n                            }\n                            else if (term.match('z')) {\n                                matrix.elements[coord + 8] = coefficient;\n                            }\n                            else {\n                                matrix.elements[coord + 12] = coefficient;\n                            }\n                        }\n                    }\n                    var conversionMatrix4 = new $3Dmol.Matrix4(\n                        conversionMatrix[0][0], conversionMatrix[0][1], conversionMatrix[0][2], 0,\n                        conversionMatrix[1][0], conversionMatrix[1][1], conversionMatrix[1][2], 0,\n                        conversionMatrix[2][0], conversionMatrix[2][1], conversionMatrix[2][2], 0);\n                    var conversionInverse = (new $3Dmol.Matrix4()).getInverse(conversionMatrix4, true);\n                    matrix = (new $3Dmol.Matrix4()).multiplyMatrices(matrix, conversionInverse);\n                    matrix = (new $3Dmol.Matrix4()).multiplyMatrices(conversionMatrix4, matrix);\n                    modelData[modelData.length-1].symmetries.push(matrix);\n                }\n            }\n        }\n        for (var i = 0; i < atoms.length; i++) {\n            assignBonds(atoms[i]);\n            computeSecondaryStructure(atoms[i]);\n            processSymmetries(modelData[i].symmetries, copyMatrix, atoms[i]);\n        }\n\n        return atoms;\n    }\n\n    // parse SYBYL mol2 file from string - assumed to only contain one molecule\n    // tag\n    /**\n     * @param {string}\n     *            str\n     * @param {Object}\n     *            options\n     */\n    parsers.mol2 = parsers.MOL2 = function(str, options) {\n\n        var atoms = [[]];\n        var noH = false;\n        if (typeof options.keepH !== \"undefined\")\n            noH = !options.keepH;\n\n        // assert (mol_pos < atom_pos), \"Unexpected formatting of mol2 file\n        // (expected 'molecule' section before 'atom' section)\";\n\n        var lines = str.substr(mol_pos, str.length).split(/\\r?\\n|\\r/);\n\n        while(lines.length > 0) {\n\n            // Note: these regex's work, though they don't match '<TRIPOS>'\n            // correctly - something to do with angle brackets\n            var mol_pos = str.search(/@<TRIPOS>MOLECULE/);\n            var atom_pos = str.search(/@<TRIPOS>ATOM/);\n\n            // Assuming both Molecule and Atom sections exist\n            if (mol_pos == -1 || atom_pos == -1)\n                break;\n\n            // serial is atom's index in file; index is atoms index in 'atoms'\n            var serialToIndex = [];\n            var tokens = lines[2].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\n                    \" \");\n            var natoms = parseInt(tokens[0]);\n            var nbonds = 0;\n\n            if (tokens.length > 1)\n                nbonds = parseInt(tokens[1]);\n\n            var offset = 4;\n            var i;\n            // Continue until 'Atom' section\n            for (i = 3; i < lines.length; i++) {\n                if (lines[i] == \"@<TRIPOS>ATOM\") {\n                    offset = i + 1;\n                    break;\n                }\n            }\n\n            var start = atoms[atoms.length-1].length;\n            var end = start + natoms;\n            var line;\n            // Process ATOMS\n            for (i = start; i < end; i++) {\n                line = lines[offset++];\n                tokens = line.replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n                var atom = {};\n                // get element\n                var elem = tokens[5].split('.')[0];\n                atom.atom = atom.elem = elem[0].toUpperCase() + elem.substr(1).toLowerCase();\n                if (atom.elem == 'H' && noH) {\n                    // ignore\n                } else {\n                    // 'index' is this atom's index in 'atoms'; 'serial' is this\n                    // atom's\n                    // serial id in mol2 file\n                    var index = atoms[atoms.length-1].length;\n                    var serial = parseInt(tokens[0]);\n                    atom.serial = serial;\n                    // atom.serial = i;\n\n                    atom.x = parseFloat(tokens[2]);\n                    atom.y = parseFloat(tokens[3]);\n                    atom.z = parseFloat(tokens[4]);\n                    atom.atom = tokens[5];\n                    var charge = parseFloat(tokens[8]);\n\n                    atom.index = index;\n                    atom.bonds = [];\n                    atom.bondOrder = [];\n                    atom.properties = {\n                        'charge' : charge,\n                        'partialCharge' : charge\n                    };\n                    serialToIndex[serial] = index;\n\n                    atoms[atoms.length-1].push(atom);\n                }\n            }\n\n            // Process BONDS\n            var bonds_found = false;\n            while (offset < lines.length) {\n                if (lines[offset++] == \"@<TRIPOS>BOND\") {\n                    bonds_found = true;\n                    break;\n                }\n            }\n\n            if (bonds_found && nbonds) {\n                for (i = 0; i < nbonds; i++) {\n                    line = lines[offset++];\n\n                    tokens = line.replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\n                            \" \");\n                    var from = parseInt(tokens[1]);\n                    fromAtom = atoms[atoms.length-1][serialToIndex[from]];\n                    var to = parseInt(tokens[2]);\n                    toAtom = atoms[atoms.length-1][serialToIndex[to]];\n\n                    // Won't be able to read aromatic bonds correctly...\n                    var order = parseInt(tokens[3]);\n                    if (isNaN(order))\n                        order = 1;\n\n                    if (fromAtom !== undefined && toAtom !== undefined) {\n                        fromAtom.bonds.push(serialToIndex[to]);\n                        fromAtom.bondOrder.push(order);\n                        toAtom.bonds.push(serialToIndex[from]);\n                        toAtom.bondOrder.push(order);\n                    }\n\n                }\n            }\n            if (options.multimodel) {\n                if (!options.onemol)\n                    atoms.push([])\n                lines.splice(0, offset);\n                str = lines.join(\"\\n\"); //update for str.search\n                continue;\n            }\n            else {\n                break;\n            }\n        }\n        return atoms;\n\n    };\n\n    var bondTable = {\n            H :0.37,                                                                                                                                He:0.32,\n            Li:1.34,Be:0.90,                                                                                B :0.82,C :0.77,N :0.75,O :0.73,F :0.71,Ne:0.69,\n            Na:1.54,Mg:1.30,                                                                                Al:1.18,Si:1.11,P :1.06,S :1.02,Cl:0.99,Ar:0.97,\n            K :1.96,Ca:1.74,Sc:1.44,Ti:1.56,V :1.25,/* Cr */Mn:1.39,Fe:1.25,Co:1.26,Ni:1.21,Cu:1.38,Zn:1.31,Ga:1.26,Ge:1.22,/* As */Se:1.16,Br:1.14,Kr:1.10,\n            Rb:2.11,Sr:1.92,Y :1.62,Zr:1.48,Nb:1.37,Mo:1.45,Tc:1.56,Ru:1.26,Rh:1.35,Pd:1.31,Ag:1.53,Cd:1.48,In:1.44,Sn:1.41,Sb:1.38,Te:1.35,I :1.33,Xe:1.30,\n            Cs:2.25,Ba:1.98,Lu:1.60,Hf:1.50,Ta:1.38,W :1.46,Re:1.59,Os:1.44,Ir:1.37,Pt:1.28,Au:1.44,Hg:1.49,Tl:1.48,Pb:1.47,Bi:1.46,/* Po *//* At */Rn:1.45,\n\n            // None of the boottom row or any of the Lanthanides have bond lengths\n    }\n    var bondLength = function(elem) {\n        return bondTable[elem] || 1.6;\n    }\n    // return true if atom1 and atom2 are probably bonded to each other\n    // based on distance alone\n    var areConnected = function(atom1, atom2) {\n        var maxsq = bondLength(atom1.elem) + bondLength(atom2.elem);\n        maxsq += 0.25;// fudge factor, especially important for md frames, also see 1i3d\n        maxsq *= maxsq;\n\n        var xdiff = atom1.x - atom2.x;\n        xdiff *= xdiff;\n        if (xdiff > maxsq)\n            return false;\n        var ydiff = atom1.y - atom2.y;\n        ydiff *= ydiff;\n        if (ydiff > maxsq)\n            return false;\n        var zdiff = atom1.z - atom2.z;\n        zdiff *= zdiff;\n        if (zdiff > maxsq)\n            return false;\n\n        var distSquared = xdiff + ydiff + zdiff;\n\n        if (isNaN(distSquared))\n            return false;\n        else if (distSquared < 0.5)\n            return false; // maybe duplicate position.\n        else if (distSquared > maxsq)\n            return false;\n        else\n            return true;\n    };\n\n    //adds symmetry info to either duplicate and rotate/translate biological unit later or add extra atoms now\n    var processSymmetries = function(copyMatrices, copyMatrix, atoms) {\n        var end = atoms.length;\n        var offset = end;\n        var t, l, n;\n        if (!copyMatrix) { // do full assembly\n            for (t = 0; t < copyMatrices.length; t++) {\n                if (!copyMatrices[t].isIdentity()) {\n                    var xyz = new $3Dmol.Vector3();\n                    for (n = 0; n < end; n++) {\n                        var bondsArr = [];\n                        for (l = 0; l < atoms[n].bonds.length; l++) {\n                            bondsArr.push(atoms[n].bonds[l] + offset);\n                        }\n                        xyz.set(atoms[n].x, atoms[n].y, atoms[n].z);\n                        xyz.applyMatrix4(copyMatrices[t]);\n                        var newAtom = {};\n                        for (var i in atoms[n]) {\n                            newAtom[i] = atoms[n][i];\n                        }\n                        newAtom.x = xyz.x;\n                        newAtom.y = xyz.y;\n                        newAtom.z = xyz.z;\n                        newAtom.bonds = bondsArr;\n                        atoms.push(newAtom);\n                    }\n                    offset = atoms.length;\n                }\n            }\n        }\n        else if(copyMatrices.length > 1) {\n            for (t = 0; t < atoms.length; t++) {\n                var symmetries = [];\n                for (l = 0; l < copyMatrices.length; l++) {\n                    if (!copyMatrices[l].isIdentity()) {\n                        var newXYZ = new $3Dmol.Vector3();\n                        newXYZ.set(atoms[t].x, atoms[t].y, atoms[t].z);\n                        newXYZ.applyMatrix4(copyMatrices[l]);\n                        symmetries.push(newXYZ);\n                    }\n                }\n                atoms[t].symmetries = symmetries;\n            }\n        }\n    }\n\n    var isEmpty = function( obj ) {\n        var name;\n        for ( name in obj ) {\n            return false;\n        }\n        return true;\n    };\n\n    //return one model worth of pdb, returns atoms, modelData, and remaining lines\n    var getSinglePDB = function(lines, options, sslookup) {\n        var atoms = [];\n        var noH = !options.keepH; // suppress hydrogens by default\n        var ignoreStruct = !!options.noSecondaryStructure;\n        var computeStruct = !options.noComputeSecondaryStructure;\n        var noAssembly = !options.doAssembly; // don't assemble by default\n        var copyMatrix = !options.duplicateAssemblyAtoms; //default true\n        var modelData  = {symmetries:[]};\n        var atom;\n        var remainingLines = [];\n\n        var hasStruct = false;\n        var serialToIndex = []; // map from pdb serial to index in atoms\n        var i, j, k, line;\n        var seenbonds = {}; //sometimes connect records are duplicated as an unofficial means of relaying bond orders\n\n        for (i = 0; i < lines.length; i++) {\n            line = lines[i].replace(/^\\s*/, ''); // remove indent\n            var recordName = line.substr(0, 6);\n            var startChain, startResi, endChain, endResi;\n\n            if(recordName.indexOf(\"END\") == 0) {\n                remainingLines = lines.slice(i+1);\n                if(recordName == \"END\") { //ass opposed to ENDMDL\n                    //reset secondary structure\n                    for (var prop in sslookup) {\n                        if (sslookup.hasOwnProperty(prop)) {\n                            delete sslookup[prop];\n                        }\n                    }\n                }\n                break;\n            }\n            else if (recordName == 'ATOM  ' || recordName == 'HETATM') {\n                var resn, chain, resi, icode, x, y, z, hetflag, elem, serial, altLoc, b;\n                altLoc = line.substr(16, 1);\n                if (altLoc != ' ' && altLoc != 'A')\n                    continue; // FIXME: ad hoc\n                serial = parseInt(line.substr(6, 5));\n                atom = line.substr(12, 4).replace(/ /g, \"\");\n                resn = line.substr(17, 3).replace(/ /g, \"\");\n                chain = line.substr(21, 1);\n                resi = parseInt(line.substr(22, 4));\n                icode = line.substr(26, 1);\n                x = parseFloat(line.substr(30, 8));\n                y = parseFloat(line.substr(38, 8));\n                z = parseFloat(line.substr(46, 8));\n                b = parseFloat(line.substr(60, 8));\n                elem = line.substr(76, 2).replace(/ /g, \"\");\n                if (elem === '' || typeof(bondTable[elem]) === 'undefined') { // for some incorrect PDB files\n                    elem = line.substr(12, 2).replace(/ /g, \"\");\n                    if(elem.length > 0 && elem[0] == 'H' && elem != 'Hg') {\n                        elem = 'H'; //workaround weird hydrogen names from MD, note mercury must use lowercase\n                    }\n                    if(elem.length > 1) {\n                        elem = elem[0].toUpperCase() + elem.substr(1).toLowerCase();\n                        if(typeof(bondTable[elem]) === 'undefined') {\n                            //not a known element, probably should just use first letter\n                            elem = elem[0];\n                        } else if(line[0] == 'A' && elem == 'Ca') { //alpha carbon, not calcium\n                            elem = \"C\";\n                        }\n                    }\n                } else {\n                    elem = elem[0].toUpperCase() + elem.substr(1).toLowerCase();\n                }\n\n                if(elem == 'H' && noH)\n                    continue;\n                if (recordName[0] == 'H')\n                    hetflag = true;\n                else\n                    hetflag = false;\n                serialToIndex[serial] = atoms.length;\n                atoms.push({\n                    'resn' : resn,\n                    'x' : x,\n                    'y' : y,\n                    'z' : z,\n                    'elem' : elem,\n                    'hetflag' : hetflag,\n                    'chain' : chain,\n                    'resi' : resi,\n                    'icode' : icode,\n                    'rescode' : resi + (icode != ' ' ? \"^\" + icode : \"\"), // combo\n                    // resi\n                    // and\n                    // icode\n                    'serial' : serial,\n                    'atom' : atom,\n                    'bonds' : [],\n                    'ss' : 'c',\n                    'bondOrder' : [],\n                    'properties' : {},\n                    'b' : b,\n                    'pdbline' : line\n                });\n            } else if (recordName == 'SHEET ') {\n                hasStruct = true;\n                startChain = line.substr(21, 1);\n                startResi = parseInt(line.substr(22, 4));\n                endChain = line.substr(32, 1);\n                endResi = parseInt(line.substr(33, 4));\n                if(!(startChain in sslookup)) {\n                    sslookup[startChain] = {};\n                }\n                //mark start and end with additional character\n                sslookup[startChain][startResi] = 's1';\n                for(var res = startResi+1; res < endResi; res++) {\n                    sslookup[startChain][res] = 's';\n                }\n                sslookup[startChain][endResi] = 's2';\n\n            } else if (recordName == 'CONECT') {\n                // MEMO: We don't have to parse SSBOND, LINK because both are\n                // also\n                // described in CONECT. But what about 2JYT???\n                var from = parseInt(line.substr(6, 5));\n                var fromindex = serialToIndex[from];\n                var fromAtom = atoms[fromindex];\n                for (j = 0; j < 4; j++) {\n                    var to = parseInt(line.substr([ 11, 16, 21, 26 ][j], 5));\n                    var toindex = serialToIndex[to];\n                    var toAtom = atoms[toindex];\n                    if (fromAtom !== undefined && toAtom !== undefined) {\n                        // duplicated conect records indicate bond order\n                        if(!seenbonds[ [fromindex,toindex] ]) {\n                            seenbonds[ [fromindex,toindex] ] = 1;\n                            if (fromAtom.bonds.length == 0 || fromAtom.bonds[fromAtom.bonds.length - 1] != toindex) {\n                                fromAtom.bonds.push(toindex);\n                                fromAtom.bondOrder.push(1);\n                            }\n                        } else { //update bond order\n                            seenbonds[ [fromindex,toindex] ] += 1;\n\n                            for(var bi = 0; bi < fromAtom.bonds.length; bi++) {\n                                if(fromAtom.bonds[bi] == toindex) {\n                                    var newbo = seenbonds[ [fromindex,toindex] ];\n                                    if(newbo >= 4) { //aromatic\n                                        fromAtom.bondOrder[bi] = 1;\n                                    } else {\n                                        fromAtom.bondOrder[bi] = newbo;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            } else if (recordName == 'HELIX ') {\n                hasStruct = true;\n                startChain = line.substr(19, 1);\n                startResi = parseInt(line.substr(21, 4));\n                endChain = line.substr(31, 1);\n                endResi = parseInt(line.substr(33, 4));\n                if(!(startChain in sslookup)) {\n                    sslookup[startChain] = {};\n                }\n                sslookup[startChain][startResi] = 'h1';\n                for(var res = startResi+1; res < endResi; res++) {\n                    sslookup[startChain][res] = 'h';\n                }\n                sslookup[startChain][endResi] = 'h2';\n\n            } else if ((!noAssembly) && (recordName == 'REMARK')\n                    && (line.substr(13, 5) == 'BIOMT')) {\n                var n;\n                var matrix = new $3Dmol.Matrix4();\n                for (n = 1; n <= 3; n++) {\n                    line = lines[i].replace(/^\\s*/, '');\n                    if (parseInt(line.substr(18, 1)) == n) { // check for all\n                                                                // three lines\n                                                                // by matching #\n                                                                // @ end of\n                                                                // \"BIOMT\" to n\n                        matrix.elements[(n - 1)] = parseFloat(line.substr(23,\n                                10));\n                        matrix.elements[(n - 1) + 4] = parseFloat(line.substr(\n                                33, 10));\n                        matrix.elements[(n - 1) + 8] = parseFloat(line.substr(\n                                43, 10));\n                        matrix.elements[(n - 1) + 12] = parseFloat(line\n                                .substr(53));\n                        i++;\n                    } else {\n                        while (line.substr(13, 5) == 'BIOMT') {\n                            i++;\n                            line = lines[i].replace(/^\\s*/, '');\n                        }\n                    }\n                }\n                matrix.elements[3] = 0;\n                matrix.elements[7] = 0;\n                matrix.elements[11] = 0;\n                matrix.elements[15] = 1;\n                modelData.symmetries.push(matrix);\n                i--; // set i back\n            } else if (recordName == 'CRYST1') {\n                var a, b, c, alpha, beta, gamma;\n                a = parseFloat(line.substr(7, 8));\n                b = parseFloat(line.substr(16, 8));\n                c = parseFloat(line.substr(25, 8));\n                alpha = parseFloat(line.substr(34, 6));\n                beta = parseFloat(line.substr(41, 6));\n                gamma = parseFloat(line.substr(48, 6));\n                modelData.cryst = {'a' : a, 'b' : b, 'c' : c, 'alpha' : alpha, 'beta' : beta, 'gamma' : gamma};\n            }\n        }\n\n        var starttime = (new Date()).getTime();\n\n        // assign bonds - yuck, can't count on connect records\n        assignPDBBonds(atoms);\n       // console.log(\"bond connecting \" + ((new Date()).getTime() -starttime));\n\n        if (!noAssembly)\n            processSymmetries(modelData.symmetries, copyMatrix, atoms);\n\n        if (computeStruct  && !ignoreStruct) {\n            starttime = (new Date()).getTime();\n            computeSecondaryStructure(atoms);\n           // console.log(\"secondary structure \" + ((new Date()).getTime() - starttime));\n        }\n        starttime = (new Date()).getTime();\n\n        // Assign secondary structures from pdb file\n        if(!isEmpty(sslookup)) {\n            for (i = 0; i < atoms.length; i++) {\n                atom = atoms[i];\n                if (atom === undefined)\n                    continue;\n                if(atom.chain in sslookup &&\n                    atom.resi in sslookup[atom.chain]) {\n                    var code = sslookup[atom.chain][atom.resi];\n                    atom.ss = code[0];\n                    if(code.length > 1) {\n                        if(code[1] == '1') atom.ssbegin = true;\n                        else if(code[1] == '2') atom.ssend = true;\n                    }\n                }\n            }\n        }\n    //console.log(\"assign structure \" + ((new Date()).getTime() - starttime));\n\n        return [atoms,modelData,remainingLines];\n    };\n\n\n    // parse pdb file from str and create atoms\n    // if computeStruct is true will always perform secondary structure\n    // analysis,\n    // otherwise only do analysis of SHEET/HELIX comments are missing\n    /**\n     * @param {string}\n     *            str\n     * @param {Object}\n     *            options - keepH (do not strip hydrogens), noSecondaryStructure\n     *            (do not compute ss)\n     */\n    parsers.pdb = parsers.PDB = parsers.pdbqt = parsers.PDBQT = function(str, options) {\n\n        var atoms = []; //a separate list for each model\n        var sslookup = {}; //stores SHEET and HELIX info, which is shared across models\n        atoms.modelData = [];\n        var lines = str.split(/\\r?\\n|\\r/);\n        while(lines.length > 0) {\n            var pdbinfo = getSinglePDB(lines, options, sslookup);\n            var modelatoms = pdbinfo[0];\n            var modelData = pdbinfo[1];\n            lines = pdbinfo[2];\n\n            if(modelatoms.length == 0) {\n                continue; //happens when there are blank lines\n            }\n            if(options.multimodel && options.onemol && atoms.length > 0) {\n                //merge into existing atoms\n                var inc = atoms[0].length;\n                for(var i = 0; i < modelatoms.length; i++) {\n                    //renumber\n                    var atom = modelatoms[i];\n                    atom.index = i;\n                    for(var b = 0; b < atom.bonds.length; b++) {\n                        atom.bonds[b] += inc;\n                    }\n                    atoms[0].push(atom);\n                }\n            } else  {\n                atoms.modelData.push(modelData);\n                atoms.push(modelatoms);\n            }\n\n            if(!options.multimodel) {\n                break;\n            }\n        }\n\n        return atoms;\n    };\n\n    /**\n     * Parse a pqr file from str and create atoms. A pqr file is assumed to be a\n     * whitespace delimited PDB with charge and radius fields.\n     *\n     * @param {string}\n     *            str\n     * @param {Object}\n     *            options - noSecondaryStructure (do not compute ss)\n     */\n    parsers.pqr = parsers.PQR = function(str, options) {\n\n        var atoms = [[]];\n        var atoms_cnt = 0;\n        var start = atoms[atoms.length-1].length;\n        var atom;\n        var computeStruct = !options.noSecondaryStructure;\n        var noAssembly = !options.doAssembly; // don't assemble by default\n        var copyMatrix = !options.duplicateAssemblyAtoms; //default true\n        var modelData = atoms.modelData = [{symmetries:[]}];\n\n        var serialToIndex = []; // map from pdb serial to index in atoms\n        var lines = str.split(/\\r?\\n|\\r/);\n        var i, j, k, line;\n        for (i = 0; i < lines.length; i++) {\n            line = lines[i].replace(/^\\s*/, ''); // remove indent\n            var recordName = line.substr(0, 6);\n            var startChain, startResi, endChain, endResi;\n\n            if (recordName.indexOf(\"END\") == 0) {\n                if (options.multimodel) {\n                    if (!options.onemol)\n                        atoms.push([]);\n                    continue;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (recordName == 'ATOM  ' || recordName == 'HETATM') {\n                // I would have liked to split based solely on whitespace, but\n                // it seems that there is no guarantee that all the fields will\n                // be filled out (e.g. the chain) so this doesn't work\n                var serial = parseInt(line.substr(6, 5));\n                var atom = line.substr(12, 4).replace(/ /g, \"\");\n                var resn = line.substr(17, 3);\n                var chain = line.substr(21, 1);\n                var resi = parseInt(line.substr(22, 4));\n                // however let's split the coordinates, charge and radius by\n                // whitespace\n                // to support extra precision\n                var vals = line.substr(30).trim().split(/\\s+/);\n                var x = parseFloat(vals[0]);\n                var y = parseFloat(vals[1]);\n                var z = parseFloat(vals[2]);\n                var charge = parseFloat(vals[3]);\n                var radius = parseFloat(vals[4]);\n\n                var elem = atom[0];\n                if (atom.length > 1 && atom[1].toUpperCase() != atom[1]) {\n                    // slight hack - identify two character elements by the\n                    // second character in the atom name being lowercase\n                    elem = atom.substr(0, 2);\n                }\n\n                if (line[0] == 'H')\n                    hetflag = true;\n                else\n                    hetflag = false;\n                serialToIndex[serial] = atoms[atoms.length-1].length;\n                atoms[atoms.length-1].push({\n                    'resn' : resn,\n                    'x' : x,\n                    'y' : y,\n                    'z' : z,\n                    'elem' : elem,\n                    'hetflag' : hetflag,\n                    'chain' : chain,\n                    'resi' : resi,\n                    'serial' : serial,\n                    'atom' : atom,\n                    'bonds' : [],\n                    'ss' : 'c',\n                    'bondOrder' : [],\n                    'properties' : {\n                        'charge' : charge,\n                        'partialCharge' : charge,\n                        'radius' : radius\n                    },\n                    'pdbline' : line\n                });\n            } else if (recordName == 'CONECT') {\n                // MEMO: We don't have to parse SSBOND, LINK because both are\n                // also\n                // described in CONECT. But what about 2JYT???\n                var from = parseInt(line.substr(6, 5));\n                var fromAtom = atoms[atoms.length-1][serialToIndex[from]];\n                for (j = 0; j < 4; j++) {\n                    var to = parseInt(line.substr([ 11, 16, 21, 26 ][j], 5));\n                    var toAtom = atoms[atoms.length-1][serialToIndex[to]];\n                    if (fromAtom !== undefined && toAtom !== undefined) {\n                        fromAtom.bonds.push(serialToIndex[to]);\n                        fromAtom.bondOrder.push(1);\n                    }\n                }\n            }\n        }\n\n        // assign bonds - yuck, can't count on connect records\n        for (var i = 0; i < atoms.length; i++) {\n            assignPDBBonds(atoms[i]);\n            if (computeStruct)\n                computeSecondaryStructure(atoms[i]);\n        }\n\n        return atoms;\n    };\n\n    var fromCharCode = function( charCodeArray ){\n        return String.fromCharCode.apply( null, charCodeArray ).replace(/\\0/g, '');\n    };\n\n    var convertSS = function(val) {\n      //convert mmtf code to 3dmol code\n        if(val == 2) return 'h';\n        if(val == 3) return 's';\n        return 'c';\n    };\n\n\n    //mmtf shoul be passed as a binary UInt8Array buffer\n    parsers.mmtf = parsers.MMTF = function(bindata, options) {\n\n        var noH = !options.keepH; // suppress hydrogens by default\n        var mmtfData = MMTF.decode( bindata );\n        var atoms = [[]];\n        var modelData = atoms.modelData = [];\n\n        // setup index counters\n        var modelIndex = 0;\n        var chainIndex = 0;\n        var groupIndex = 0;\n        var atomIndex = 0;\n\n        // setup optional fields\n        var chainNameList = mmtfData.chainNameList;\n        var secStructList = mmtfData.secStructList;\n        var insCodeList = mmtfData.insCodeList;\n        var sequenceIndexList = mmtfData.sequenceIndexList;\n        var bFactorList = mmtfData.bFactorList;\n        var altLocList = mmtfData.altLocList;\n        var occupancyList = mmtfData.occupancyList;\n        var bondAtomList = mmtfData.bondAtomList;\n        var bondOrderList = mmtfData.bondOrderList;\n\n        var numModels = mmtfData.numModels;\n        if (numModels == 0) return atoms;\n        if (!options.multimodel) numModels = 1; //first only\n        // hoisted loop variables\n        var i, j, k, kl, m, n;\n\n        //extract symmetries - only take first assembly, apply to all models (ignoring changes for now)\n        var noAssembly = !options.doAssembly; // don't assemble by default\n        var copyMatrix = !options.duplicateAssemblyAtoms; //default true\n        var assemblyIndex = options.assemblyIndex ? options.assemblyIndex : 0;\n\n        var symmetries = [];\n        if(mmtfData.bioAssemblyList && mmtfData.bioAssemblyList.length > 0) {\n            var transforms = mmtfData.bioAssemblyList[assemblyIndex].transformList;\n            for(i = 0, n = transforms.length; i < n; i++) {\n                var matrix = new $3Dmol.Matrix4(transforms[i].matrix);\n                matrix.transpose();\n                symmetries.push(matrix);\n            }\n        }\n\n        var bondAtomListStart = 0; //for current model\n        //loop over models,\n        for (m = 0; m < numModels; m++ ) {\n            var modelChainCount = mmtfData.chainsPerModel[m];\n            var matoms = atoms[atoms.length-1];\n            var serialToIndex = []; // map to matoms index, needed for noh\n\n            modelData.push({symmetries:symmetries});\n            for( i = 0; i < modelChainCount; ++i ){\n\n                var chainGroupCount = mmtfData.groupsPerChain[ chainIndex ];\n                var chainId = fromCharCode(\n                    mmtfData.chainIdList.subarray( chainIndex * 4, chainIndex * 4 + 4 )\n                );\n\n                var startGroup = groupIndex;\n                for( j = 0; j < chainGroupCount; ++j ){ //over residues (groups)\n\n                    var groupData = mmtfData.groupList[ mmtfData.groupTypeList[ groupIndex ] ];\n                    var groupAtomCount = groupData.atomNameList.length;\n                    var secStruct = 0;\n                    if( secStructList ){\n                        secStruct = secStructList[ groupIndex ];\n                    }\n                    var insCode = null;\n                    if( mmtfData.insCodeList ){\n                        insCode = String.fromCharCode( insCodeList[ groupIndex ] );\n                    }\n                    var sequenceIndex = null;\n                    if( sequenceIndexList ){\n                        sequenceIndex = sequenceIndexList[ groupIndex ];\n                    }\n\n                    var groupId = mmtfData.groupIdList[ groupIndex ];\n                    var groupName = groupData.groupName;\n                    var startAtom = atomIndex;\n\n                    for( k = 0; k < groupAtomCount; ++k ){\n\n                        var element = groupData.elementList[ k ];\n                        if(noH && element == 'H') {\n                            atomIndex += 1;\n                            continue;\n                        }\n\n                        var bFactor = '';\n                        if( bFactorList ){\n                            bFactor = bFactorList[ atomIndex ];\n                        }\n                        var altLoc = ' ';\n                        if( altLocList ){\n                            altLoc = String.fromCharCode( altLocList[ atomIndex ] );\n                        }\n                        var occupancy = '';\n                        if( occupancyList ){\n                            occupancy = occupancyList[ atomIndex ];\n                        }\n\n                        var atomId = mmtfData.atomIdList[ atomIndex ];\n                        var atomName = groupData.atomNameList[ k ];\n                        var atomCharge = 0;\n                        if(groupData.atomChargeList) atomCharge = groupData.atomChargeList[ k ];\n                        var xCoord = mmtfData.xCoordList[ atomIndex ];\n                        var yCoord = mmtfData.yCoordList[ atomIndex ];\n                        var zCoord = mmtfData.zCoordList[ atomIndex ];\n\n                        serialToIndex[atomIndex] = matoms.length;\n                        matoms.push({\n                            'resn' : groupName,\n                            'x' : xCoord,\n                            'y' : yCoord,\n                            'z' : zCoord,\n                            'elem' : element,\n                            'hetflag' : secStruct < 0,\n                            'chain' : chainId,\n                            'resi' : groupId,\n                            'icode' : altLoc,\n                            'rescode' : groupId + (altLoc != ' ' ? \"^\" + altLoc : \"\"), // combo\n                            // resi\n                            // and\n                            // icode\n                            'serial' : atomId,\n                            'atom' : atomName,\n                            'bonds' : [],\n                            'ss' : convertSS(secStruct),\n                            'bondOrder' : [],\n                            'properties' : {charge: atomCharge, occupancy:occupancy},\n                            'b' : bFactor,\n                        });\n\n                        atomIndex += 1;\n                    }\n\n                    // intra group bonds\n                    var groupBondAtomList = groupData.bondAtomList;\n                    for( k = 0, kl = groupData.bondOrderList.length; k < kl; ++k ){\n                        var atomIndex1 = startAtom + groupBondAtomList[ k * 2 ];\n                        var atomIndex2 = startAtom + groupBondAtomList[ k * 2 + 1 ];\n                        var bondOrder = groupData.bondOrderList[ k ];\n\n                        //I assume bonds are only recorded once\n                        var i1 = serialToIndex[atomIndex1];\n                        var i2 = serialToIndex[atomIndex2];\n                        var a1 = matoms[i1];\n                        var a2 = matoms[i2];\n                        if(a1 && a2) {\n                            a1.bonds.push(i2)\n                            a1.bondOrder.push(bondOrder);\n                            a2.bonds.push(i1);\n                            a2.bondOrder.push(bondOrder);\n                        }\n                    }\n\n                    groupIndex += 1;\n                }\n\n                //reset for bonds\n                groupIndex = startGroup;\n                for( j = 0; j < chainGroupCount; ++j ){ //over residues (groups)\n\n                    groupIndex += 1;\n\n                }\n\n                chainIndex += 1;\n            }\n\n\n            // inter group bonds\n            if( bondAtomList ){\n                for( k = bondAtomListStart, kl = bondAtomList.length; k < kl; k += 2 ){\n                     var atomIndex1 = bondAtomList[ k ];\n                     var atomIndex2 = bondAtomList[ k + 1 ];\n                     var bondOrder = bondOrderList ? bondOrderList[ k / 2 ] : 1;\n\n                     if(atomIndex1 >= atomIndex) {\n                         bondAtomListStart = k;\n                         break; //on next model\n                     }\n                     //I assume bonds are only recorded once\n                     var i1 = serialToIndex[atomIndex1];\n                     var i2 = serialToIndex[atomIndex2];\n                     var a1 = matoms[i1];\n                     var a2 = matoms[i2];\n                     if(a1 && a2) {\n                         a1.bonds.push(i2)\n                         a1.bondOrder.push(bondOrder);\n                         a2.bonds.push(i1);\n                         a2.bondOrder.push(bondOrder);\n                     }\n                }\n            }\n\n            if (options.multimodel) {\n                if (!options.onemol) atoms.push([]);\n            }\n            modelIndex += 1;\n        }\n\n\n        for (var n = 0; n < atoms.length; n++) {\n            if (!noAssembly)\n                processSymmetries(modelData[n].symmetries, copyMatrix, atoms[n]);\n        }\n\n        return atoms;\n    };\n\n    /**\n     * Parse a prmtop file from str and create atoms\n     */\n    parsers.prmtop = parsers.PRMTOP = function(str, options) {\n  var atoms = [];\n  var count = 0;\n        var lines = str.split(/\\r?\\n|\\r/);\n  if(lines.length > 0 && lines[0].includes(\"VERSION\")){\n      var sectionList = lines.filter(function (line){  //store the relevant section lists\n    return line.includes(\"POINTERS\") || line.includes(\"ATOM_NAME\") ||\n    line.includes(\"CHARGE\") || line.includes(\"RADII\") || line.includes(\"BONDS_INC_HYDROGEN\") ||\n    line.includes(\"BONDS_WITHOUT_HYDROGEN\");\n      });\n      var index = getIndex(\"POINTERS\");\n      if (index == -1)\n    return [];\n      var col = getColEleSize(index);\n      var atomCount = parseInt(lines[index+1].slice(0,col[1]));\n            if (isNaN(atomCount) || atomCount <= 0)\n                return [];\n      index = getIndex(\"ATOM_NAME\");\n      if (index == -1)\n    return [];\n      col = getColEleSize(index);\n      var noOfCol = col[0];\n      for (i = 0; i < atomCount/col[0]; i++){\n    if (i == parseInt(atomCount/col[0]))\n        noOfCol = atomCount % col[0];\n    for(j=0; j < noOfCol; j++){\n        var atom = {};\n        var properties = {\"charge\":\"\", \"radii\":\"\"};\n            atom.serial = count;\n        atom.x = 0;\n        atom.y = 0;\n        atom.z = 0;\n        atom.atom = lines[index+1].slice(col[1]*j, col[1]*(j+1));\n        atom.elem = lines[index+1].slice(col[1]*j, col[1]*j+1);\n        atom.properties = properties;\n        atom.bonds = [];\n        atom.bondOrder = [];\n        atoms.push(atom);\n        count++;\n    }\n    index++;\n      }\n      index = getIndex(\"CHARGE\");\n      if (index != -1){\n          col = getColEleSize(index);\n          count = 0;\n    noOfCol = col[0];\n          for (i = 0; i < atomCount/col[0]; i++){\n        if (i == parseInt(atomCount/col[0]))\n      noOfCol = atomCount % col[0];\n        for(j = 0; j < noOfCol; j++){\n           atoms[count].properties[\"charge\"] = lines[index+1].slice(col[1]*j, col[1]*(j+1));\n            count++;\n        }\n        index++;\n          }\n      }\n      index = getIndex(\"RADII\");\n      if (index != -1){\n    col = getColEleSize(index);\n    count = 0;\n    noOfCol = col[0];\n    for (i = 0; i < atomCount/col[0]; i++){\n        if (i == parseInt(atomCount/col[0]))\n      noOfCol = atomCount % col[0];\n        for(j = 0; j < noOfCol; j++){\n      atoms[count].properties.radii = lines[index+1].slice(col[1]*j, col[1]*(j+1));\n      count++;\n        }\n        index++;\n    }\n      }\n      index = getIndex(\"BONDS_WITHOUT_HYDROGEN\");\n      if (index != -1){\n    col = getColEleSize(index);\n    count = 0;\n    noOfCol = col[0];\n    var atomIndex;\n    for (i = 0; i < atomCount/col[0]; i++){\n        if (i == parseInt(atomCount/col[0]))\n      noOfCol = atomCount % col[0];\n        for (j = 0; j < noOfCol; j++){\n      if (count%3 == 0){\n          atomIndex = parseInt(lines[index+1].slice(col[1]*j, col[1]*(j+1))/3 + 1);\n      }\n      if (count%3 == 1){\n          atoms[atomIndex].bonds.push(parseInt(lines[index+1].slice(col[1]*j, col[1]*(j+1))/3 + 1));\n      }\n        count++;\n        }\n    index++;\n    }\n      }\n      index = getIndex(\"BONDS_INC_HYDROGEN\");\n      if (index != -1){\n    col = getColEleSize(index);\n    count = 0;\n    noOfCol = col[0];\n    var atomIndex;\n    for (i = 0; i < atomCount/col[0]; i++){\n        if (i == parseInt(atomCount/col[0]))\n      noOfCol = atomCount % col[0];\n        for (j = 0; j < noOfCol; j++){\n      if (count%3 == 0){\n          atomIndex = parseInt(lines[index+1].slice(col[1]*j, col[1]*(j+1))/3 + 1);\n      }\n      if (count%3 == 1){\n          atoms[atomIndex].bonds.push(parseInt(lines[index+1].slice(col[1]*j, col[1]*(j+1))/3 + 1));\n      }\n        count++;\n        }\n    index++;\n    }\n      }\n  }\n  else{\n      return [];\n  }\n  function getIndex(section){\n      var index = lines.indexOf(sectionList.filter(function (line){\n    return line.includes(section);\n      })[0]);  //returns the index of the line containing FLAG POINTERS\n      if (Number.isInteger(index) && index > 0){\n    while(!lines[index].includes(\"FORMAT\"))  //doing this so as to take comments into consideration\n        index++;\n        return index;\n      }\n      else{\n    return -1;\n      }\n  }\n  function getColEleSize(i){\n      var numberOfCol = lines[i].match(/\\((\\d*)\\S*/); // stores the number of columns\n      var elementSize = lines[i].match(/[a-zA-Z](\\d*)\\)\\s*/);\n      if(elementSize == null){\n    elementSize = lines[i].match(/[a-zA-Z](\\d*)\\.\\d*\\)\\s*/); //stores the element size\n      }\n      return [numberOfCol[1], elementSize[1]];\n  }\n        return [atoms];\n    };\n\n    return parsers;\n})();\nvar $3Dmol = $3Dmol || {};\n\n//properties for mapping\n\n/* partial charges for proteins */\n$3Dmol.partialCharges = {\n\"ALA:N\": -0.15,\n\"ALA:CA\": 0.10,\n\"ALA:CB\": 0.00,\n\"ALA:C\": 0.60,\n\"ALA:O\": -0.55,\n\"ARG:N\": -0.15,\n\"ARG:CA\": 0.10,\n\"ARG:CB\": 0.00,\n\"ARG:CG\": 0.00,\n\"ARG:CD\": 0.10,\n\"ARG:NE\": -0.10,\n\"ARG:CZ\": 0.50,\n\"ARG:NH1\": 0.25,\n\"ARG:NH2\": 0.25,\n\"ARG:C\": 0.60,\n\"ARG:O\": -0.55,\n\"ASN:N\": -0.15,\n\"ASN:CA\": 0.10,\n\"ASN:CB\": 0.00,\n\"ASN:CG\": 0.55,\n\"ASN:OD1\": -0.55,\n\"ASN:ND2\": 0.00,\n\"ASN:C\": 0.60,\n\"ASN:O\": -0.55,\n\"ASP:N\": -0.15,\n\"ASP:CA\": 0.10,\n\"ASP:CB\": 0.00,\n\"ASP:CG\": 0.14,\n\"ASP:OD1\": -0.57,\n\"ASP:OD2\": -0.57,\n\"ASP:C\": 0.60,\n\"ASP:O\": -0.55,\n\"CYS:N\": -0.15,\n\"CYS:CA\": 0.10,\n\"CYS:CB\": 0.19,\n\"CYS:SG\": -0.19,\n\"CYS:C\": 0.60,\n\"CYS:O\": -0.55,\n\"GLN:N\": -0.15,\n\"GLN:CA\": 0.10,\n\"GLN:CB\": 0.00,\n\"GLN:CG\": 0.00,\n\"GLN:CD\": 0.55,\n\"GLN:OE1\": -0.55,\n\"GLN:NE2\": 0.00,\n\"GLN:C\": 0.60,\n\"GLN:O\": -0.55,\n\"GLU:N\": -0.15,\n\"GLU:CA\": 0.10,\n\"GLU:CB\": 0.00,\n\"GLU:CG\": 0.00,\n\"GLU:CD\": 0.14,\n\"GLU:OE1\": -0.57,\n\"GLU:OE2\": -0.57,\n\"GLU:C\": 0.60,\n\"GLU:O\": -0.55,\n\"GLY:N\": -0.15,\n\"GLY:CA\": 0.10,\n\"GLY:C\": 0.60,\n\"GLY:O\": -0.55,\n\"HIS:N\": -0.15,\n\"HIS:CA\": 0.10,\n\"HIS:CB\": 0.00,\n\"HIS:CG\": 0.10,\n\"HIS:ND1\": -0.10,\n\"HIS:CD2\": 0.10,\n\"HIS:NE2\": -0.40,\n\"HIS:CE1\": 0.30,\n\"HIS:C\": 0.60,\n\"HIS:O\": -0.55,\n\"ILE:N\": -0.15,\n\"ILE:CA\": 0.10,\n\"ILE:CB\": 0.00,\n\"ILE:CG2\": 0.00,\n\"ILE:CG1\": 0.00,\n\"ILE:CD\": 0.00,\n\"ILE:C\": 0.60,\n\"ILE:O\": -0.55,\n\"LEU:N\": -0.15,\n\"LEU:CA\": 0.10,\n\"LEU:CB\": 0.00,\n\"LEU:CG\": 0.00,\n\"LEU:CD1\": 0.00,\n\"LEU:CD2\": 0.00,\n\"LEU:C\": 0.60,\n\"LEU:O\": -0.55,\n\"LYS:N\": -0.15,\n\"LYS:CA\": 0.10,\n\"LYS:CB\": 0.00,\n\"LYS:CG\": 0.00,\n\"LYS:CD\": 0.00,\n\"LYS:CE\": 0.25,\n\"LYS:NZ\": 0.75,\n\"LYS:C\": 0.60,\n\"LYS:O\": -0.55,\n\"MET:N\": -0.15,\n\"MET:CA\": 0.10,\n\"MET:CB\": 0.00,\n\"MET:CG\": 0.06,\n\"MET:SD\": -0.12,\n\"MET:CE\": 0.06,\n\"MET:C\": 0.60,\n\"MET:O\": -0.55,\n\"PHE:N\": -0.15,\n\"PHE:CA\": 0.10,\n\"PHE:CB\": 0.00,\n\"PHE:CG\": 0.00,\n\"PHE:CD1\": 0.00,\n\"PHE:CD2\": 0.00,\n\"PHE:CE1\": 0.00,\n\"PHE:CE2\": 0.00,\n\"PHE:CZ\": 0.00,\n\"PHE:C\": 0.60,\n\"PHE:O\": -0.55,\n\"PRO:N\": -0.25,\n\"PRO:CD\": 0.10,\n\"PRO:CA\": 0.10,\n\"PRO:CB\": 0.00,\n\"PRO:CG\": 0.00,\n\"PRO:C\": 0.60,\n\"PRO:O\": -0.55,\n\"SER:N\": -0.15,\n\"SER:CA\": 0.10,\n\"SER:CB\": 0.25,\n\"SER:OG\": -0.25,\n\"SER:C\": 0.60,\n\"SER:O\": -0.55,\n\"THR:N\": -0.15,\n\"THR:CA\": 0.10,\n\"THR:CB\": 0.25,\n\"THR:OG1\": -0.25,\n\"THR:CG2\": 0.00,\n\"THR:C\": 0.60,\n\"THR:O\": -0.55,\n\"TRP:N\": -0.15,\n\"TRP:CA\": 0.10,\n\"TRP:CB\": 0.00,\n\"TRP:CG\": -0.03,\n\"TRP:CD2\": 0.10,\n\"TRP:CE2\": -0.04,\n\"TRP:CE3\": -0.03,\n\"TRP:CD1\": 0.06,\n\"TRP:NE1\": -0.06,\n\"TRP:CZ2\": 0.00,\n\"TRP:CZ3\": 0.00,\n\"TRP:CH2\": 0.00,\n\"TRP:C\": 0.60,\n\"TRP:O\": -0.55,\n\"TYR:N\": -0.15,\n\"TYR:CA\": 0.10,\n\"TYR:CB\": 0.00,\n\"TYR:CG\": 0.00,\n\"TYR:CD1\": 0.00,\n\"TYR:CE1\": 0.00,\n\"TYR:CD2\": 0.00,\n\"TYR:CE2\": 0.00,\n\"TYR:CZ\": 0.25,\n\"TYR:OH\": -0.25,\n\"TYR:C\": 0.60,\n\"TYR:O\": -0.55,\n\"VAL:N\": -0.15,\n\"VAL:CA\": 0.10,\n\"VAL:CB\": 0.00,\n\"VAL:CG1\": 0.00,\n\"VAL:CG2\": 0.00,\n\"VAL:C\": 0.60,\n\"VAL:O\": -0.55\n};\n\n//this can be supplied to mapAtomProperties\n$3Dmol.applyPartialCharges = function(atom, keepexisting) {\n    if(!keepexisting || typeof(atom.partialCharge) === \"undefined\") {\n        if(atom.resn && atom.atom) {\n            var key = atom.resn+\":\"+atom.atom;\n            atom.properties['partialCharge'] = $3Dmol.partialCharges[key];\n        }\n    }\n};// Specifications for various object types used in 3Dmol.js\n// This is primarily for documentation\n(function() {\n/**\n * GLViewer input specification\n * @typedef ViewerSpec\n * @prop {Object} defaultcolors - map of elements to colors\n * @prop {boolean} nomouse - if true, disable handling of mouse events\n * @prop {ColorSpec} backgroundColor - color of background\n */\n\n/**\n * Atom representation. Depending on the input file format, not all fields may be defined.\n * @typedef AtomSpec\n * @prop {string} resn - Parent residue name\n * @prop {number} x - Atom's x coordinate\n * @prop {number} y - Atom's y coordinate\n * @prop {number} z - Atom's z coordinate\n * @prop {ColorSpec} color - Atom's color, as hex code or built-in color string\n * @prop {ColorSpec} surfaceColor - Hex code for color to be used for surface patch over this atom\n * @prop {string} elem - Element abbreviation (e.g. 'H', 'Ca', etc)\n * @prop {boolean} hetflag - Set to true if atom is a heteroatom\n * @prop {string} chain - Chain this atom belongs to, if specified in input file (e.g 'A' for chain A)\n * @prop {number} resi - Residue number\n * @prop {number} icode\n * @prop {number} rescode\n * @prop {number} serial - Atom's serial id number\n * @prop {string} atom - Atom name; may be more specific than 'elem' (e.g 'CA' for alpha carbon)\n * @prop {Array.<number>} bonds - Array of atom ids this atom is bonded to\n * @prop {string} ss - Secondary structure identifier (for cartoon render; e.g. 'h' for helix)\n * @prop {boolean} singleBonds - true if this atom forms only single bonds or no bonds at all\n * @prop {Array.<number>} bondOrder - Array of this atom's bond orders, corresponding to bonds identfied by 'bonds'\n * @prop {Object} properties - Optional mapping of additional properties\n * @prop {number} b - Atom b factor data\n * @prop {string} pdbline - If applicable, this atom's record entry from the input PDB file (used to output new PDB from models)\n * @prop {boolean} clickable - Set this flag to true to enable click selection handling for this atom\n * @prop {function(this, $3Dmol.GLViewer)} callback - Callback click handler function to be executed on this atom and its parent viewer\n * @prop {boolean} invert - for selection, inverts the meaning of the selection\n */\n\n\n/**\n * Atom selection object. Used to specify what atoms should be selected.  Can include\n * any field from {@link AtomSpec} in which case atoms must equal the specified value.\n * All fields must match for the selection to hold. If values\n * are provided as a list, then only one value of the list must match.\n *\n * @example\n * viewer.addResLabels({resi: [1,2,3,4,5], atom: 'CA'}); // will label alpha carbons (CA) of residues 1-5\n *\n * @typedef AtomSelectionSpec\n * @prop {AtomSpec} ... - any field from {@link AtomSpec}, values may be singletons or lists\n * @prop {GLModel} model - a single model or list of models from which atoms should be selected\n * @prop {number} bonds - overloaded to select number of bonds, e.g. {bonds: 0} will select all nonbonded atoms\n * @prop {function} predicate - user supplied function that gets passed an {AtomSpec} and should return true if the atom should be selected\n * @prop {boolean} invert - if set, inverts the meaning of the selection\n * @prop {boolean} byres - if set, expands the selection to include all atoms of any residue that has any atom selected\n * @prop {number} expand - expands the selection to include all atoms within a given distance from the selection\n * @prop {WithinSelectionSpec} within - intersects the selection with the set of atoms within a given distance from another selection\n */\n\n/**\n * Within selection object. Used to find the subset of an atom selection that is within\n * some distance from another atom selection. When added as a field of an {@link AtomSelectionSpec},\n * intersects the set of atoms in that selection with the set of atoms within a given\n * distance from the given {@link AtomSelectionSpec}.\n *\n * @example\n * viewer.setStyle({chain: 'A', within:{distance: 10, sel:{chain: 'B'}}}, {sphere:{}}); // stylizes atoms in chain A that are within 10 angstroms of an atom in chain B\n *\n * @typedef WithinSelectionSpec\n * @prop {number} distance - the distance in angstroms away from the atom selection to include atoms in the parent selection\n * @prop {AtomSelectionSpec} sel - the selection of atoms against which to measure the distance from the parent atom selection\n */\n\n\n\n/**\n * @typedef AtomStyleSpec\n * @prop {LineStyleSpec} line - draw bonds as lines\n * @prop {CrossStyleSpec} cross - draw atoms as crossed lines (aka stars)\n * @prop {StickStyleSpec} stick  - draw bonds as capped cylinders\n * @prop {SphereStyleSpec} sphere - draw atoms as spheres\n * @prop {CartoonStyleSpec} cartoon - draw cartoon representation of secondary structure\n */\n\n/**\n * @typedef SurfaceStyleSpec\n * @prop {number} opacity - sets the transparency: 0 to hide, 1 for fully opaque\n * @prop {ColorschemeSpec} colorscheme - element based coloring\n * @prop {ColorSpec} color - fixed coloring, overrides colorscheme\n * @prop {$3Dmol.VolumeData} voldata - volumetric data for vertex coloring\n * @prop {$3Dmol.Gradient} volscheme - coloring scheme for mapping volumetric data to vertex color\n * @prop {Object} map - specifies a numeric atom property (prop) and color mapping (scheme) such as {@link $3Dmol.Gradient.RWB}.  Deprecated, use colorscheme instead.\n *\n * @example\n * viewer.addSurface($3Dmol.SurfaceType.MS, {map:{prop:'partialCharge',scheme:new $3Dmol.Gradient.RWB(-.6,.6)}, opacity:0.85});\n\n */\n\n/**\n * Isosurface style specification\n * @typedef IsoSurfaceSpec\n * @prop {number} isoval - specifies the isovalue to draw surface at\n * @propr {boolean} voxel - if true uses voxel style rendering\n * @prop {ColorSpec} color - solid color\n * @prop {number} opacity - transparency, between 0 and 1\n * @prop {boolean} wireframe - draw as wireframe, not surface\n * @prop {number} linewidth - width of line for wireframe rendering\n * @prop {number} smoothness - amount to smooth surface (default 1)\n * @prop {AtomSelectionSpec} sel - selection around which to show data\n * @prop {list} coords - coordinates around which to include data\n * @prop {number} seldist - distance around selection/coords to include data [default = 2.0]\n * @prop {boolean} clickable - if true, user can click on object to trigger callback\n * @prop {function} callback - function to call on click\n */\n\n/**\n * GLShape style specification\n * @typedef ShapeSpec\n * @prop {ColorSpec} color - solid color\n * @prop {number} alpha - transparency\n * @prop {boolean} wireframe - draw as wireframe, not surface\n * @prop {number} linewidth - width of line for wireframe rendering\n * @prop {boolean} clickable - if true, user can click on object to trigger callback\n * @prop {function} callback - function to call on click\n */\n\n\n/**\n * Specification for adding custom shape. Extends {@link ShapeSpec}.\n * @typedef CustomShapeSpec\n * @augments ShapeSpec\n * @prop {Array.<$3Dmol.Vector3>} vertexArr - List of vertex positions\n * @prop {Array.<$3Dmol.Vector3>} normalArr - List of normal vectors for each vertex\n * @prop {Array.<number>} faceArr - List of triangles to build the custom shape. Each triangle is defined by the indices of 3 vertices in vertexArr, so the array length should be 3 times the number of faces.\n * @prop {ColorSpec | Array.<ColorSpec>} color - Either a single color for the whole object or an array specifying the color at each vertex.\n */\n\n/**\n * Sphere shape specification. Extends {@link ShapeSpec}\n *\n * @typedef SphereSpec\n * @prop {$3Dmol.Vector3} center\n * @prop {number} radius\n *\n */\n\n\n/**\n * Arrow shape specification.  Extends {@link ShapeSpec}\n * @typedef ArrowSpec\n * @prop {$3Dmol.Vector3} start\n * @prop {$3Dmol.Vector3} end\n * @prop {number} radius\n * @prop {number} radiusRatio - ratio of arrow base to cylinder (1.618034 default)\n * @prop {number} mid - relative position of arrow base (0.618034 default)\n */\n\n\n/**\n * Cylinder shape specification.  Extends {@link ShapeSpec}\n * @typedef CylinderSpec\n * @prop {$3Dmol.Vector3} start\n * @prop {$3Dmol.Vector3} end\n * @prop {number} radius\n * @prop {boolean} fromCap\n * @prop {boolean} toCap\n */\n\n/**\n * Line shape specification.  Extends {@link ShapeSpec}  (but defaults to wireframe)\n * @typedef LineSpec\n * @prop {$3Dmol.Vector3} start\n * @prop {$3Dmol.Vector3} end\n */\n\n});\n/**\n * $3Dmol.VolumeData stores volumetric data. This includes file parsing\n * functionality.\n *\n * @class\n * @param {string} str - volumetric data\n * @param {string} format - format of supplied data (cube)\n * @param {Object} options - normalize (zero mean, unit variance), negate\n */\n$3Dmol.VolumeData = function(str, format, options) {\n\n    this.unit = {\n        x : 1,\n        y : 1,\n        z : 1\n    }; // scale of each voxel\n    this.origin = {\n        x : 0,\n        y : 0,\n        z : 0\n    }; // origin (bottom \"left\", not center)\n    this.size = {\n        x : 0,\n        y : 0,\n        z : 0\n    }; // number of voxels in each direction\n    this.data = new Float32Array([]); // actual floating point data, arranged\n                                        // x->y->z\n\n    this.matrix = null; //if set must transform data\n    format = format.toLowerCase();\n\n    if(/\\.gz$/.test(format)) {\n        //unzip gzipped files\n        format = format.replace(/\\.gz$/,'');\n        try {\n            str = pako.inflate(str);\n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    if (this[format]) {\n        this[format](str);\n    }\n\n    if(options) {\n        if(options.negate) {\n            for(var i = 0, n = this.data.length; i < n; i++) {\n                this.data[i] = -this.data[i];\n            }\n        }\n        if(options.normalize) {\n            var total = 0.0;\n            for(var i = 0, n = this.data.length; i < n; i++) {\n                total += this.data[i];\n            }\n            var mean = total/this.data.length;\n            console.log(\"computed mean: \"+mean);\n            total = 0;\n            for(var i = 0, n = this.data.length; i < n; i++) {\n                var diff = this.data[i]-mean;\n                total += diff*diff; //variance is ave of squared difference with mean\n            }\n            var variance = total/this.data.length;\n            console.log(\"Computed variance: \"+variance);\n            //now normalize\n            for(var i = 0, n = this.data.length; i < n; i++) {\n                this.data[i] = (this.data[i]-mean)/variance;\n            }\n        }\n    }\n};\n\n/**\n * @function $3Dmol.VolumeData.getVal\n * @param {number} x,y,z - the coordinates\n * @returns - value closest to provided coordinate; zero if coordinate invalid\n */\n$3Dmol.VolumeData.prototype.getVal = function(x,y,z) {\n    x -= this.origin.x;\n    y -= this.origin.y;\n    z -= this.origin.z;\n\n    x /= this.unit.x;\n    y /= this.unit.y;\n    z /= this.unit.z;\n\n    x = Math.round(x);\n    y = Math.round(y);\n    z = Math.round(z);\n\n    if(x < 0 || x >= this.size.x) return 0;\n    if(y < 0 || y >= this.size.y) return 0;\n    if(z < 0 || z >= this.size.z) return 0;\n\n    return this.data[x*this.size.y*this.size.z + y*this.size.z + z];\n};\n\n$3Dmol.VolumeData.prototype.getCoordinates = function(index){\n\n    var x = index/(this.size.y*this.size.z);\n    var y = index % (this.size.y*this.size.z);\n    var z = index % this.size.z;\n\n    x *= this.unit.x;\n    y *= this.unit.y;\n    z *= this.unit.z;\n\n    x += this.origin.x;\n    y += this.origin.y;\n    z += this.origin.z;\n    //console.log(\"getCoordinates : \"+x+\" , \"+y+\" , \"+z);\n    //console.log(\"val : \"+data.getVal(x,y,z));\n    //console.log(\"actual : \"+data.data[index]);\n    return {x:x,y:y,z:z};\n    /*\n    Y = (int)(index / Width)\n    X = index - (Y * Width)\n    */\n}\n\n/*\n * parse vasp data\n * Essentially this parser converts the CHGCAR data into\n * cube data. It has been adapted from 'chg2cube.pl' found in\n * http://theory.cm.utexas.edu/vtsttools/\n */\n$3Dmol.VolumeData.prototype.vasp = function(str) {\n\n    var lines = str.replace(/^\\s+/, \"\").split(/[\\n\\r]/);\n\n    var atomicData = $3Dmol.Parsers.vasp(str)[0];\n    var natoms = atomicData.length;\n\n    if (natoms == 0) {\n      console.log(\"No good formating of CHG or CHGCAR file, not atomic information provided in the file.\");\n      this.data = [];\n      return;\n    }\n\n\n\n    // Assume atomic units\n    var unittype = \"bohr/hartree\";\n    var l_units = 1.889725992;\n    var e_units = 0.036749309;\n\n    // copied from $3Dmol.Parsers.vasp\n    var convFactor = parseFloat(lines[1]);\n    // This is how Vasp reads in the basis We need the l_units in order to\n    // compute the volume of the cell. Afterwards to obtain the axis for the\n    // voxels we have to remove this unit and divide by the number of voxels in\n    // each dimension\n    var v;\n    v=lines[2].replace(/^\\s+/, \"\").split(/\\s+/);\n    var xVec = new $3Dmol.Vector3(parseFloat(v[0]),parseFloat(v[1]),parseFloat(v[2])).multiplyScalar(convFactor*l_units);\n    v=lines[3].replace(/^\\s+/, \"\").split(/\\s+/);\n    var yVec = new $3Dmol.Vector3(parseFloat(v[0]),parseFloat(v[1]),parseFloat(v[2])).multiplyScalar(convFactor*l_units);\n    v=lines[4].replace(/^\\s+/, \"\").split(/\\s+/);\n    var zVec = new $3Dmol.Vector3(parseFloat(v[0]),parseFloat(v[1]),parseFloat(v[2])).multiplyScalar(convFactor*l_units);\n\n    // correct volume for non-orthognal box (expansion by minors)\n    var vol = xVec.x*(yVec.y*zVec.z - zVec.y*yVec.z) - yVec.x*(xVec.y*zVec.z - zVec.y*xVec.z) + zVec.x*(xVec.y*yVec.z - yVec.y*xVec.z);\n\n    vol = Math.abs(vol)/(Math.pow(l_units,3));\n    var vol_scale = 1.0/(vol); //This Only for CHGCAR files\n\n    // We splice the structure information\n    // 2 (header) + 3 (vectors) + 2 (atoms) + 1 (vaspMode) + natoms (coords) + 1 (blank line)\n    lines.splice(0,2+3+2+1+natoms+1);\n\n\n    var lineArr = lines[0].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n\n    var nX = Math.abs(lineArr[0]);\n    var nY = Math.abs(lineArr[1]);\n    var nZ = Math.abs(lineArr[2]);\n\n    var origin = this.origin = new $3Dmol.Vector3(0,0,0);\n\n    this.size = {x:nX, y:nY, z:nZ};\n    this.unit = new $3Dmol.Vector3(xVec.x, yVec.y, zVec.z);\n\n    // resize the vectors accordingly\n    xVec = xVec.multiplyScalar(1/(l_units*nX));\n    yVec = yVec.multiplyScalar(1/(l_units*nY));\n    zVec = zVec.multiplyScalar(1/(l_units*nZ));\n\n    if (xVec.y != 0 || xVec.z != 0 || yVec.x != 0 || yVec.z != 0 || zVec.x != 0\n            || zVec.y != 0) {\n        //need a transformation matrix\n        this.matrix =  new $3Dmol.Matrix4(xVec.x, yVec.x, zVec.x, 0, xVec.y, yVec.y, zVec.y, 0, xVec.z, yVec.z, zVec.z, 0, 0,0,0,1);\n        //include translation in matrix\n        this.matrix = this.matrix.multiplyMatrices(this.matrix,\n                new $3Dmol.Matrix4().makeTranslation(origin.x, origin.y, origin.z));\n        //all translation and scaling done by matrix, so reset origin and unit\n        this.origin = new $3Dmol.Vector3(0,0,0);\n        this.unit = new $3Dmol.Vector3(1,1,1);\n    }\n\n\n    lines.splice(0,1); //Remove the dimension line\n    var raw = lines.join(\" \");\n\n    raw = raw.replace(/^\\s+/,'');\n    raw = raw.split(/[\\s\\r]+/);\n    raw.splice(nX*nY*nZ+1);\n\n    var preConvertedData = new Float32Array(raw); //We still have to format it to get the density\n\n    for (var i = 0; i< preConvertedData.length; i++){\n      preConvertedData[i] = preConvertedData[i]*vol_scale*e_units;\n    }\n\n    this.data = preConvertedData;\n\n    //console.log(xVec);\n    //console.log(yVec);\n    //console.log(zVec);\n    //console.log(this.unit);\n    //console.log(this.origin);\n    //console.log(this.matrix);\n    //console.log(this.data);\n\n};\n\n// parse cube data\n$3Dmol.VolumeData.prototype.cube = function(str) {\n    var lines = str.replace(/^\\s+/, \"\").split(/[\\n\\r]+/);\n\n    if (lines.length < 6)\n        return;\n\n    var lineArr = lines[2].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n\n    var atomsnum = parseFloat(lineArr[0]); //includes sign, which indicates presence of oribital line in header\n    var natoms = Math.abs(atomsnum);\n\n    var origin = this.origin = new $3Dmol.Vector3(parseFloat(lineArr[1]),\n            parseFloat(lineArr[2]), parseFloat(lineArr[3]));\n\n    lineArr = lines[3].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n\n    // might have to convert from bohr units to angstroms\n    // there is a great deal of confusion here:\n    // n>0 means angstroms: http://www.gaussian.com/g_tech/g_ur/u_cubegen.htm\n    // n<0 means angstroms: http://paulbourke.net/dataformats/cube/\n    // always assume bohr: openbabel source code\n    // always assume angstrom: http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/cubeplugin.html\n    // we are going to go with n<0 means angstrom - note this is just the first n\n    var convFactor = (lineArr[0] > 0) ? 0.529177 : 1;\n    origin.multiplyScalar(convFactor);\n\n    var nX = Math.abs(lineArr[0]);\n    var xVec = new $3Dmol.Vector3(parseFloat(lineArr[1]),\n            parseFloat(lineArr[2]), parseFloat(lineArr[3]))\n            .multiplyScalar(convFactor);\n\n    lineArr = lines[4].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n    var nY = Math.abs(lineArr[0]);\n    var yVec = new $3Dmol.Vector3(parseFloat(lineArr[1]),\n            parseFloat(lineArr[2]), parseFloat(lineArr[3]))\n            .multiplyScalar(convFactor);\n\n    lineArr = lines[5].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n    var nZ = Math.abs(lineArr[0]);\n    var zVec = new $3Dmol.Vector3(parseFloat(lineArr[1]),\n            parseFloat(lineArr[2]), parseFloat(lineArr[3]))\n            .multiplyScalar(convFactor);\n\n    this.size = {x:nX, y:nY, z:nZ};\n    this.unit = new $3Dmol.Vector3(xVec.x, yVec.y, zVec.z);\n\n    if (xVec.y != 0 || xVec.z != 0 || yVec.x != 0 || yVec.z != 0 || zVec.x != 0\n            || zVec.y != 0) {\n        //need a transformation matrix\n        this.matrix =  new $3Dmol.Matrix4(xVec.x, yVec.x, zVec.x, 0, xVec.y, yVec.y, zVec.y, 0, xVec.z, yVec.z, zVec.z, 0, 0,0,0,1);\n        //include translation in matrix\n        this.matrix = this.matrix.multiplyMatrices(this.matrix,\n                new $3Dmol.Matrix4().makeTranslation(origin.x, origin.y, origin.z));\n        //all translation and scaling done by matrix, so reset origin and unit\n        this.origin = new $3Dmol.Vector3(0,0,0);\n        this.unit = new $3Dmol.Vector3(1,1,1);\n    }\n\n    var headerlines = 6;\n    if(atomsnum < 0) headerlines++; //see: http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/cubeplugin.html\n    var raw = lines.splice(natoms + headerlines).join(\" \");\n    raw = raw.replace(/^\\s+/,'');\n    raw = raw.split(/[\\s\\r]+/);\n    this.data = new Float32Array(raw);\n\n};\n\n//parse cp4 files\n$3Dmol.VolumeData.prototype.ccp4 = function(bin) {\n\n    // http://www.ccp4.ac.uk/html/maplib.html#description\n    //code from ngl: https://github.com/arose/ngl/blob/master/js/ngl/parser.js\n    var header = {};\n    bin = new Int8Array(bin);\n    var intView = new Int32Array( bin.buffer, 0, 56 );\n    var floatView = new Float32Array( bin.buffer, 0, 56 );\n    var dv = new DataView( bin.buffer );\n\n\n    // 53  MAP         Character string 'MAP ' to identify file type\n    header.MAP = String.fromCharCode(\n        dv.getUint8( 52 * 4 ), dv.getUint8( 52 * 4 + 1 ),\n        dv.getUint8( 52 * 4 + 2 ), dv.getUint8( 52 * 4 + 3 )\n    );\n\n    // 54  MACHST      Machine stamp indicating machine type which wrote file\n    //                 17 and 17 for big-endian or 68 and 65 for little-endian\n    header.MACHST = [ dv.getUint8( 53 * 4 ), dv.getUint8( 53 * 4 + 1 ) ];\n\n    // swap byte order when big endian\n    if( header.MACHST[ 0 ] === 17 && header.MACHST[ 1 ] === 17 ){\n        var n = bin.byteLength;\n        for( var i = 0; i < n; i+=4 ){\n            dv.setFloat32( i, dv.getFloat32( i ), true );\n        }\n    }\n\n    header.NX = intView[ 0 ];  // NC - columns (fastest changing)\n    header.NY = intView[ 1 ];  // NR - rows\n    header.NZ = intView[ 2 ];  // NS - sections (slowest changing)\n\n    // mode\n    //  0 image : signed 8-bit bytes range -128 to 127\n    //  1 image : 16-bit halfwords\n    //  2 image : 32-bit reals\n    //  3 transform : complex 16-bit integers\n    //  4 transform : complex 32-bit reals\n    //  6 image : unsigned 16-bit range 0 to 65535\n    // 16 image: unsigned char * 3 (for rgb data, non-standard)\n    //\n    // Note: Mode 2 is the normal mode used in the CCP4 programs.\n    //       Other modes than 2 and 0 may NOT WORK\n    header.MODE = intView[ 3 ];\n\n    // start\n    header.NXSTART = intView[ 4 ];  // NCSTART - first column\n    header.NYSTART = intView[ 5 ];  // NRSTART - first row\n    header.NZSTART = intView[ 6 ];  // NSSTART - first section\n\n    // intervals\n    header.MX = intView[ 7 ];  // intervals along x\n    header.MY = intView[ 8 ];  // intervals along y\n    header.MZ = intView[ 9 ];  // intervals along z\n\n    // cell length (Angstroms in CCP4)\n    header.xlen = floatView[ 10 ];\n    header.ylen = floatView[ 11 ];\n    header.zlen = floatView[ 12 ];\n\n    // cell angle (Degrees)\n    header.alpha = floatView[ 13 ];\n    header.beta  = floatView[ 14 ];\n    header.gamma = floatView[ 15 ];\n\n    // axis correspondence (1,2,3 for X,Y,Z)\n    header.MAPC = intView[ 16 ];  // column\n    header.MAPR = intView[ 17 ];  // row\n    header.MAPS = intView[ 18 ];  // section\n\n    // density statistics\n    header.DMIN  = floatView[ 19 ];\n    header.DMAX  = floatView[ 20 ];\n    header.DMEAN = floatView[ 21 ];\n\n    // space group number 0 or 1 (default=0)\n    header.ISPG = intView[ 22 ];\n\n    // number of bytes used for symmetry data (0 or 80)\n    header.NSYMBT = intView[ 23 ];\n\n    // Flag for skew transformation, =0 none, =1 if foll\n    header.LSKFLG = intView[ 24 ];\n\n    // 26-34  SKWMAT  Skew matrix S (in order S11, S12, S13, S21 etc) if\n    //                LSKFLG .ne. 0.\n    // 35-37  SKWTRN  Skew translation t if LSKFLG != 0.\n    //                Skew transformation is from standard orthogonal\n    //                coordinate frame (as used for atoms) to orthogonal\n    //                map frame, as Xo(map) = S * (Xo(atoms) - t)\n\n    // 38      future use       (some of these are used by the MSUBSX routines\n    //  .          \"              in MAPBRICK, MAPCONT and FRODO)\n    //  .          \"   (all set to zero by default)\n    //  .          \"\n    // 52          \"\n\n    // 50-52 origin in X,Y,Z used for transforms\n    header.originX = floatView[ 49 ];\n    header.originY = floatView[ 50 ];\n    header.originZ = floatView[ 51 ];\n\n    // 53  MAP         Character string 'MAP ' to identify file type\n    // => see top of this parser\n\n    // 54  MACHST      Machine stamp indicating machine type which wrote file\n    // => see top of this parser\n\n    // Rms deviation of map from mean density\n    header.ARMS = floatView[ 54 ];\n\n    // 56      NLABL           Number of labels being used\n    // 57-256  LABEL(20,10)    10  80 character text labels (ie. A4 format)\n    console.log(\"Map has min,mean,average,rmsddv: \"+header.DMIN+\",\"+header.DMAX+\",\"+header.DMEAN+\",\"+header.ARMS);\n\n    //create transformation matrix, code mostly copied from ngl\n    var h = header;\n    var basisX = [\n          h.xlen,\n          0,\n          0\n      ];\n\n      var basisY = [\n          h.ylen * Math.cos( Math.PI / 180.0 * h.gamma ),\n          h.ylen * Math.sin( Math.PI / 180.0 * h.gamma ),\n          0\n      ];\n\n      var basisZ = [\n          h.zlen * Math.cos( Math.PI / 180.0 * h.beta ),\n          h.zlen * (\n                  Math.cos( Math.PI / 180.0 * h.alpha )\n                  - Math.cos( Math.PI / 180.0 * h.gamma )\n                  * Math.cos( Math.PI / 180.0 * h.beta )\n              ) / Math.sin( Math.PI / 180.0 * h.gamma ),\n          0\n      ];\n      basisZ[ 2 ] = Math.sqrt(\n          h.zlen * h.zlen * Math.sin( Math.PI / 180.0 * h.beta ) *\n          Math.sin( Math.PI / 180.0 * h.beta ) - basisZ[ 1 ] * basisZ[ 1 ]\n      );\n\n      var basis = [ 0, basisX, basisY, basisZ ];\n      var nxyz = [ 0, h.MX, h.MY, h.MZ ];\n      var mapcrs = [ 0, h.MAPC, h.MAPR, h.MAPS ];\n\n      this.matrix = new $3Dmol.Matrix4();\n\n      this.matrix.set(\n\n          basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\n          basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\n          basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\n          0,\n\n          basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\n          basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\n          basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\n          0,\n\n          basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\n          basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\n          basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\n          0,\n\n          0, 0, 0, 1\n\n      );\n      //include translation in matrix\n      this.matrix = this.matrix.multiplyMatrices(this.matrix,\n              new $3Dmol.Matrix4().makeTranslation(\n                      h.NXSTART + h.originX,\n                      h.NYSTART + h.originY,\n                      h.NZSTART + h.originZ));\n      //all translation and scaling done by matrix, so reset origin and unit\n      this.origin = new $3Dmol.Vector3(0,0,0);\n      this.unit = new $3Dmol.Vector3(1,1,1);\n      this.size = {x:header.NX, y:header.NY, z:header.NZ};\n      var data = new Float32Array(bin.buffer, 1024 + header.NSYMBT);\n      //data must by (slowest changing) x,y,z (fastest changing)\n\n      var NX = header.NX, NY = header.NY, NZ = header.NZ;\n      this.data = new Float32Array(NX*NY*NZ);\n      for(var i = 0; i < NX; i++) {\n          for(var j = 0; j < NY; j++) {\n              for(var k = 0; k < NZ; k++) {\n                  //should I be concerned that I'm not using mapc?\n                  this.data[((i*NY)+j)*NZ+k] = data[((k*NY)+j)*NX+i];\n              }\n          }\n      }\n\n};\n//Hackish way to create webworker (independent of $3Dmol namespace) within minified file\n$3Dmol.workerString = function(){\n\n    self.onmessage = function(oEvent) {\n        var obj = oEvent.data;\n        var type = obj.type;\n        if (type < 0) // sending atom data, initialize\n        {\n            self.atomData = obj.atoms;\n            self.volume = obj.volume;\n            self.ps = new ProteinSurface();\n        } else {\n            var ps = self.ps;\n            ps.initparm(obj.expandedExtent, (type == 1) ? false : true, self.volume);\n            ps.fillvoxels(self.atomData, obj.extendedAtoms);\n            ps.buildboundary();\n            if (type === 4 || type === 2) {\n                ps.fastdistancemap();\n                ps.boundingatom(false);\n                ps.fillvoxelswaals(self.atomData, obj.extendedAtoms);\n            }\n            ps.marchingcube(type);\n            var VandF = ps.getFacesAndVertices(obj.atomsToShow);\n            self.postMessage(VandF);\n        }\n    };\n\n}.toString().replace(/(^.*?\\{|\\}$)/g, \"\");\n\n$3Dmol.workerString += \"; var ProteinSurface=\" + $3Dmol.ProteinSurface.toString().replace(/\\$3Dmol.MarchingCube./g, \"MarchingCube.\");\n$3Dmol.workerString += \",MarchingCube=(\"+$3Dmol.MarchingCubeInitializer.toString() +\")();\";\n\n$3Dmol.SurfaceWorker = window.URL.createObjectURL(new Blob([$3Dmol.workerString],{type: 'text/javascript'}));\n\n$3Dmol['workerString'] = $3Dmol.workerString;\n$3Dmol['SurfaceWorker'] = $3Dmol.SurfaceWorker;\n\nmodule.exports = $3Dmol;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vendor/3Dmol.js\n **/","import React from 'react';\nimport MolWidget3DModel from '../models/mol_widget_3d_model';\nimport MolWidget3DView from '../views/mol_widget_3d_view';\n\nclass Nbmolviz3dReact extends React.Component {\n  componentDidMount() {\n    this.renderNbmolviz();\n  }\n\n  componentDidUpdate() {\n    this.renderNbmolviz();\n  }\n\n  renderNbmolviz() {\n    const model = new MolWidget3DModel({\n      model_data: this.props.modelData,\n    });\n    const view = new MolWidget3DView({\n      model,\n      el: this.container,\n    });\n    view.render();\n  }\n\n  render() {\n    return (\n      <div ref={(c) => { this.container = c; }} />\n    );\n  }\n}\n\nNbmolviz3dReact.propTypes = {\n  modelData: React.PropTypes.string.isRequired,\n};\n\nexport default Nbmolviz3dReact;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/views/nbmolviz3d_react.jsx\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = require(\"keymirror\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"keymirror\"\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = require(\"react\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 15\n ** module chunks = 0\n **/"],"sourceRoot":""}