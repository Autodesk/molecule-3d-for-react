{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap e9add07a09bd7c19af3f","webpack:///./src/constants/selection_types_constants.js","webpack:///./src/components/molecule_3d.jsx","webpack:///./src/constants/shape_constants.js","webpack:///./src/main.js","webpack:///./src/utils/lib_utils.js","webpack:///./src/utils/molecule_utils.js","webpack:///external \"3dmol\"","webpack:///external \"immutable\"","webpack:///external \"jquery\"","webpack:///external \"prop-types\"","webpack:///external \"react\""],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","selectionTypeConstants","ATOM","RESIDUE","CHAIN","default","_interopRequireDefault","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_jquery","_jquery2","_react","_react2","_propTypes","_propTypes2","_lib_utils","_lib_utils2","_molecule_utils","_molecule_utils2","_selection_types_constants","_selection_types_constants2","window","$","jQuery","$3Dmol","DEFAULT_FONT_SIZE","ORBITAL_COLOR_POSITIVE","ORBITAL_COLOR_NEGATIVE","ORBITAL_DEFAULT_OPACITY","Molecule3d","_React$Component","this","_this","getPrototypeOf","onClickAtom","glAtom","atoms","modelData","atom","serial","selectionType","newSelectedAtomIds","moleculeUtils","addSelection","state","selectedAtomIds","setState","onChangeSelection","lastOutline","width","bonds","glviewer","clear","isModelDataEmpty","addModel","modelDataToCDJSON","keepH","getModel","selectedAtoms","forEach","modifiedAtom","resn","residue_name","replace","name","chain","resi","residue_index","shapes","removeAllShapes","shape","type","libUtils","getShapeSpec","labels","removeAllLabels","label","addLabel","text","orbital","cube_file","volumeData","VolumeData","addIsosurface","isoval","iso_val","color","positiveVolumetricColor","opacity","negativeVolumetricColor","render3dMol","nextProps","_this2","createViewer","container","defaultcolors","elementColors","rasmol","renderingSameModelData","modelDataEquivalent","oldModelData","lastStylesByAtom","render3dMolModel","outlineWidth","outlineColor","style","setViewStyle","styleUpdates","stylesByAtom","selected","indexOf","libStyle","getLibStyle","atomLabelsShown","styles","fontSize","position","x","positions","y","z","libStyleString","JSON","stringify","entries","_ref","_ref2","atomSerials","setStyle","parse","render3dMolShapes","render3dMolLabels","render3dMolOrbital","customSlab","nearClip","farClip","setSlab","setBackgroundColor","colorStringToNumber","backgroundColor","backgroundOpacity","setClickable","render","zoom","zoomTo","fitSlab","onRenderNewData","intId","setInterval","children","offsetParent","resize","clearInterval","_this3","createElement","className","height","margin","ref","React","Component","defaultProps","selectionTypesConstants","propTypes","PropTypes","bool","string","number","array","isRequired","func","arrayOf","oneOf","object","objectOf","shapeConstants","ARROW","SPHERE","CYLINDER","_molecule_3d","_molecule_3d2","_shape_constants","_shape_constants2","DEFAULT_VISUALIZATION_TYPE","colorString","colorInt","parseInt","substr","isNaN","callback","shapeSpec","assign","alpha","clickable","radius","start","end","center","Error","fromCap","toCap","arguments","visualizationType","visualization_type","styleKey","styleValue","_immutable","map","l","elem","mass","mass_magnitude","bond","b","atom1_index","e","atom2_index","o","bond_order","a","clickedAtom","selectedAtomsOut","slice","clickedIndex","toggleOn","splice","isSameGroup","filter","atomSerial","atomA","atomB","modelDataA","modelDataB","atomIdsA","ISet","atomIdsB","bondRelationsA","bondRelationsB","haveSameAtoms","equals","haveSameBonds","atomIdsToPositions","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","set","return","every","get","index","positionsAtomB","require"],"mappings":"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","file":"bundle.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/js/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(4);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar selectionTypeConstants = {\n\t  ATOM: 'Atom',\n\t  RESIDUE: 'Residue',\n\t  CHAIN: 'Chain'\n\t};\n\t\n\texports.default = selectionTypeConstants;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _jquery = __webpack_require__(9);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _react = __webpack_require__(11);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(10);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _lib_utils = __webpack_require__(5);\n\t\n\tvar _lib_utils2 = _interopRequireDefault(_lib_utils);\n\t\n\tvar _molecule_utils = __webpack_require__(6);\n\t\n\tvar _molecule_utils2 = _interopRequireDefault(_molecule_utils);\n\t\n\tvar _selection_types_constants = __webpack_require__(1);\n\t\n\tvar _selection_types_constants2 = _interopRequireDefault(_selection_types_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\twindow.$ = _jquery2.default;\n\tvar $3Dmol = __webpack_require__(7);\n\t\n\tvar DEFAULT_FONT_SIZE = 14;\n\tvar ORBITAL_COLOR_POSITIVE = 0xff0000;\n\tvar ORBITAL_COLOR_NEGATIVE = 0x0000ff;\n\tvar ORBITAL_DEFAULT_OPACITY = 0.8;\n\t\n\tvar Molecule3d = function (_React$Component) {\n\t  _inherits(Molecule3d, _React$Component);\n\t\n\t  _createClass(Molecule3d, null, [{\n\t    key: 'isModelDataEmpty',\n\t    value: function isModelDataEmpty(modelData) {\n\t      return modelData.atoms.length === 0 && modelData.bonds.length === 0;\n\t    }\n\t  }, {\n\t    key: 'render3dMolModel',\n\t    value: function render3dMolModel(glviewer, modelData) {\n\t      glviewer.clear();\n\t\n\t      if (Molecule3d.isModelDataEmpty(modelData)) {\n\t        return;\n\t      }\n\t\n\t      glviewer.addModel(_molecule_utils2.default.modelDataToCDJSON(modelData), 'json', {\n\t        keepH: true\n\t      });\n\t\n\t      // Hack in chain and residue data, since it's not supported by chemdoodle json\n\t      glviewer.getModel().selectedAtoms().forEach(function (atom) {\n\t        var modifiedAtom = atom;\n\t        var resn = (modelData.atoms[atom.serial].residue_name || '').replace(/[0-9]+/, '');\n\t        modifiedAtom.atom = modelData.atoms[atom.serial].name;\n\t        modifiedAtom.chain = modelData.atoms[atom.serial].chain;\n\t        modifiedAtom.resi = modelData.atoms[atom.serial].residue_index;\n\t        modifiedAtom.resn = resn;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render3dMolShapes',\n\t    value: function render3dMolShapes(glviewer, shapes) {\n\t      glviewer.removeAllShapes();\n\t      shapes.forEach(function (shape) {\n\t        if (shape.type) {\n\t          glviewer['add' + shape.type](_lib_utils2.default.getShapeSpec(shape));\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render3dMolLabels',\n\t    value: function render3dMolLabels(glviewer, labels) {\n\t      glviewer.removeAllLabels();\n\t      labels.forEach(function (label) {\n\t        glviewer.addLabel(label.text, label);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render3dMolOrbital',\n\t    value: function render3dMolOrbital(glviewer, orbital) {\n\t      if (orbital.cube_file) {\n\t        var volumeData = new $3Dmol.VolumeData(orbital.cube_file, 'cube');\n\t        glviewer.addIsosurface(volumeData, {\n\t          isoval: orbital.iso_val,\n\t          color: orbital.positiveVolumetricColor || ORBITAL_COLOR_POSITIVE,\n\t          opacity: orbital.opacity || ORBITAL_DEFAULT_OPACITY\n\t        });\n\t        glviewer.addIsosurface(volumeData, {\n\t          isoval: -orbital.iso_val,\n\t          color: orbital.negativeVolumetricColor || ORBITAL_COLOR_NEGATIVE,\n\t          opacity: orbital.opacity || ORBITAL_DEFAULT_OPACITY\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  function Molecule3d(props) {\n\t    _classCallCheck(this, Molecule3d);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Molecule3d.__proto__ || Object.getPrototypeOf(Molecule3d)).call(this, props));\n\t\n\t    _this.onClickAtom = function (glAtom) {\n\t      var atoms = _this.props.modelData.atoms;\n\t      var atom = atoms[glAtom.serial];\n\t      var selectionType = _this.props.selectionType;\n\t      var newSelectedAtomIds = _molecule_utils2.default.addSelection(atoms, _this.state.selectedAtomIds, atom, selectionType);\n\t\n\t      _this.setState({\n\t        selectedAtomIds: newSelectedAtomIds\n\t      });\n\t\n\t      if (_this.props.onChangeSelection) {\n\t        _this.props.onChangeSelection(newSelectedAtomIds);\n\t      }\n\t    };\n\t\n\t    _this.state = {\n\t      selectedAtomIds: props.selectedAtomIds\n\t    };\n\t\n\t    _this.lastOutline = { width: 0.0 };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Molecule3d, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.render3dMol();\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.setState({\n\t        selectedAtomIds: nextProps.selectedAtomIds\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function componentDidUpdate() {\n\t      this.render3dMol();\n\t    }\n\t  }, {\n\t    key: 'render3dMol',\n\t    value: function render3dMol() {\n\t      var _this2 = this;\n\t\n\t      if (!this.glviewer && Molecule3d.isModelDataEmpty(this.props.modelData)) {\n\t        return;\n\t      }\n\t\n\t      var glviewer = this.glviewer || $3Dmol.createViewer((0, _jquery2.default)(this.container), {\n\t        defaultcolors: $3Dmol.elementColors.rasmol\n\t      });\n\t\n\t      var renderingSameModelData = _molecule_utils2.default.modelDataEquivalent(this.oldModelData, this.props.modelData);\n\t      if (!renderingSameModelData) {\n\t        this.lastStylesByAtom = null;\n\t        Molecule3d.render3dMolModel(glviewer, this.props.modelData);\n\t      }\n\t\n\t      if (this.props.outlineWidth !== this.lastOutline.width || this.props.outlineColor !== this.lastOutline.color) {\n\t        if (this.props.outlineWidth) {\n\t          this.lastOutline = {\n\t            style: 'outline',\n\t            width: this.props.outlineWidth,\n\t            color: this.props.outlineColor\n\t          };\n\t        } else {\n\t          this.lastOutline = {};\n\t        }\n\t        glviewer.setViewStyle(this.lastOutline);\n\t      }\n\t\n\t      var styleUpdates = Object.create(null); // style update strings to atom ids needed\n\t      var stylesByAtom = Object.create(null); // all atom ids to style string\n\t      this.props.modelData.atoms.forEach(function (atom, i) {\n\t        var selected = _this2.state.selectedAtomIds.indexOf(atom.serial) !== -1;\n\t        var libStyle = _lib_utils2.default.getLibStyle(atom, selected, _this2.props.atomLabelsShown, _this2.props.styles[i]);\n\t\n\t        if (_this2.props.atomLabelsShown) {\n\t          glviewer.addLabel(atom.name, {\n\t            fontSize: DEFAULT_FONT_SIZE,\n\t            position: {\n\t              x: atom.positions[0],\n\t              y: atom.positions[1],\n\t              z: atom.positions[2]\n\t            }\n\t          });\n\t        }\n\t\n\t        var libStyleString = JSON.stringify(libStyle);\n\t        stylesByAtom[atom.serial] = libStyleString;\n\t\n\t        // If the style string for this atom is the same as last time, then no\n\t        // need to set it again\n\t        if (_this2.lastStylesByAtom && _this2.lastStylesByAtom[atom.serial] === libStyleString) {\n\t          return;\n\t        }\n\t\n\t        // Initialize list of atom serials for this style string, if needed\n\t        if (!styleUpdates[libStyleString]) {\n\t          styleUpdates[libStyleString] = [];\n\t        }\n\t\n\t        styleUpdates[libStyleString].push(atom.serial);\n\t      });\n\t\n\t      this.lastStylesByAtom = stylesByAtom;\n\t\n\t      // Set these style types using a minimum number of calls to 3DMol\n\t      Object.entries(styleUpdates).forEach(function (_ref) {\n\t        var _ref2 = _slicedToArray(_ref, 2),\n\t            libStyleString = _ref2[0],\n\t            atomSerials = _ref2[1];\n\t\n\t        glviewer.setStyle({ serial: atomSerials }, JSON.parse(libStyleString));\n\t      });\n\t\n\t      Molecule3d.render3dMolShapes(glviewer, this.props.shapes);\n\t      Molecule3d.render3dMolLabels(glviewer, this.props.labels);\n\t      Molecule3d.render3dMolOrbital(glviewer, this.props.orbital);\n\t\n\t      var customSlab = false;\n\t\n\t      if (typeof this.props.nearClip === 'number' && typeof this.props.farClip === 'number') {\n\t        glviewer.setSlab(this.props.nearClip, this.props.farClip);\n\t        customSlab = true;\n\t      }\n\t\n\t      glviewer.setBackgroundColor(_lib_utils2.default.colorStringToNumber(this.props.backgroundColor), this.props.backgroundOpacity);\n\t\n\t      glviewer.setClickable({}, true, this.onClickAtom);\n\t      glviewer.render();\n\t\n\t      if (!this.oldModelData) {\n\t        glviewer.zoom();\n\t        glviewer.zoomTo(0.8);\n\t      }\n\t\n\t      if (!renderingSameModelData) {\n\t        if (!customSlab) glviewer.fitSlab();\n\t        this.props.onRenderNewData(glviewer);\n\t      }\n\t\n\t      if (!this.glviewer) {\n\t        // AMV: hack to correctly expand viewer when first rendered\n\t        var self = this;\n\t\n\t        var intId = setInterval(function () {\n\t          // wait for canvas to be visible\n\t          if (self.container.children.length > 0 && self.container.children[0].offsetParent) {\n\t            glviewer.resize();\n\t            clearInterval(intId);\n\t          }\n\t        }, 50); // polling time in ms\n\t      }\n\t\n\t      this.oldModelData = this.props.modelData;\n\t      this.glviewer = glviewer;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      return _react2.default.createElement('div', {\n\t        className: 'molecule-3d',\n\t        style: {\n\t          width: this.props.width,\n\t          height: this.props.height,\n\t          position: 'relative',\n\t          margin: '0 auto'\n\t        },\n\t        ref: function ref(c) {\n\t          _this3.container = c;\n\t        }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Molecule3d;\n\t}(_react2.default.Component);\n\t\n\tMolecule3d.defaultProps = {\n\t  atomLabelsShown: false,\n\t  backgroundOpacity: 1.0,\n\t  backgroundColor: '#73757c',\n\t  height: '500px',\n\t  onRenderNewData: function onRenderNewData() {},\n\t  orbital: {},\n\t  selectedAtomIds: [],\n\t  selectionType: _selection_types_constants2.default.ATOM,\n\t  shapes: [],\n\t  labels: [],\n\t  styles: {},\n\t  width: '500px',\n\t  outlineWidth: 0.0,\n\t  outlineColor: '#000000',\n\t  nearClip: null,\n\t  farClip: null\n\t};\n\tMolecule3d.propTypes = {\n\t  atomLabelsShown: _propTypes2.default.bool,\n\t  backgroundColor: _propTypes2.default.string,\n\t  backgroundOpacity: _propTypes2.default.number,\n\t  height: _propTypes2.default.string,\n\t  modelData: _propTypes2.default.shape({\n\t    atoms: _propTypes2.default.array,\n\t    bonds: _propTypes2.default.array\n\t  }).isRequired,\n\t  onChangeSelection: _propTypes2.default.func,\n\t  onRenderNewData: _propTypes2.default.func,\n\t  orbital: _propTypes2.default.shape({\n\t    cube_file: _propTypes2.default.string,\n\t    iso_val: _propTypes2.default.number,\n\t    opacity: _propTypes2.default.number,\n\t    positiveVolumetricColor: _propTypes2.default.string,\n\t    negativeVolumetricColor: _propTypes2.default.string\n\t  }),\n\t  selectedAtomIds: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t  selectionType: _propTypes2.default.oneOf([_selection_types_constants2.default.ATOM, _selection_types_constants2.default.RESIDUE, _selection_types_constants2.default.CHAIN]),\n\t  shapes: _propTypes2.default.arrayOf(_propTypes2.default.object),\n\t  labels: _propTypes2.default.arrayOf(_propTypes2.default.object),\n\t  styles: _propTypes2.default.objectOf(_propTypes2.default.object),\n\t  width: _propTypes2.default.string,\n\t  nearClip: _propTypes2.default.number,\n\t  farClip: _propTypes2.default.number,\n\t  outlineWidth: _propTypes2.default.number,\n\t  outlineColor: _propTypes2.default.string\n\t};\n\texports.default = Molecule3d;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar shapeConstants = {\n\t  ARROW: 'Arrow',\n\t  SPHERE: 'Sphere',\n\t  CYLINDER: 'Cylinder'\n\t};\n\t\n\texports.default = shapeConstants;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _molecule_3d = __webpack_require__(2);\n\t\n\tvar _molecule_3d2 = _interopRequireDefault(_molecule_3d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = _molecule_3d2.default; /**\n\t                                          * Copyright 2016 Autodesk Inc.\n\t                                          *\n\t                                          * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t                                          * you may not use this file except in compliance with the License.\n\t                                          * You may obtain a copy of the License at\n\t                                          *\n\t                                          *     http://www.apache.org/licenses/LICENSE-2.0\n\t                                          *\n\t                                          * Unless required by applicable law or agreed to in writing, software\n\t                                          * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t                                          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t                                          * See the License for the specific language governing permissions and\n\t                                          * limitations under the License.\n\t                                          */\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _shape_constants = __webpack_require__(3);\n\t\n\tvar _shape_constants2 = _interopRequireDefault(_shape_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar DEFAULT_VISUALIZATION_TYPE = 'stick';\n\t\n\t/**\n\t * Utils for working with the 3dmol.js library\n\t */\n\tvar libUtils = {\n\t  /**\n\t   * Given a color string (like #abcdef), return its Number representation\n\t   * If invalid input given, return the input\n\t   * @param colorString {String}\n\t   * @returns {Number}\n\t   */\n\t  colorStringToNumber: function colorStringToNumber(colorString) {\n\t    if (colorString.length !== 4 && colorString.length !== 7) {\n\t      return colorString;\n\t    }\n\t    if (colorString[0] !== '#') {\n\t      return colorString;\n\t    }\n\t\n\t    var colorInt = parseInt(colorString.substr(1, colorString.length - 1), 16);\n\t\n\t    if (isNaN(colorInt)) {\n\t      return colorString;\n\t    }\n\t\n\t    return colorInt;\n\t  },\n\t\n\t\n\t  /**\n\t   * Given a shape object from the main model, return a shape spec ready to go into 3Dmol.js\n\t   * @param shape {Object}\n\t   * @returns {Object}\n\t   */\n\t  getShapeSpec: function getShapeSpec(shape, callback) {\n\t    var color = void 0;\n\t    if (shape.color) {\n\t      color = libUtils.colorStringToNumber(shape.color);\n\t    }\n\t\n\t    var shapeSpec = Object.assign({}, {\n\t      alpha: 0.8,\n\t      callback: callback,\n\t      clickable: false,\n\t      color: 0x00FE03,\n\t      radius: shape.radius\n\t    }, shape, { color: color });\n\t\n\t    if (shape.type === _shape_constants2.default.ARROW) {\n\t      shapeSpec.start = shape.start;\n\t      shapeSpec.end = shape.end;\n\t    } else if (shape.type === _shape_constants2.default.SPHERE) {\n\t      shapeSpec.center = shape.center;\n\t    } else if (shape.type === _shape_constants2.default.CYLINDER) {\n\t      shapeSpec.fromCap = true;\n\t      shapeSpec.toCap = true;\n\t      shapeSpec.start = shape.start;\n\t      shapeSpec.end = shape.end;\n\t    } else {\n\t      throw new Error('Invalid shape type.');\n\t    }\n\t\n\t    return shapeSpec;\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the style object needed by 3dMol for the given atom\n\t   * @param atom {Object}\n\t   * @returns {Object}\n\t   */\n\t  getLibStyle: function getLibStyle(atom, selected, atomLabelsShown) {\n\t    var style = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t\n\t    var libStyle = {};\n\t    var visualizationType = style.visualization_type || DEFAULT_VISUALIZATION_TYPE;\n\t\n\t    libStyle[visualizationType] = {};\n\t    Object.entries(style).forEach(function (_ref) {\n\t      var _ref2 = _slicedToArray(_ref, 2),\n\t          styleKey = _ref2[0],\n\t          styleValue = _ref2[1];\n\t\n\t      if (styleKey !== 'visualization_type') {\n\t        libStyle[visualizationType][styleKey] = styleValue;\n\t      }\n\t    });\n\t\n\t    if (selected) {\n\t      libStyle[visualizationType].color = 0x1FF3FE;\n\t    }\n\t\n\t    if (typeof libStyle[visualizationType].color === 'string') {\n\t      libStyle[visualizationType].color = libUtils.colorStringToNumber(libStyle[visualizationType].color);\n\t    }\n\t\n\t    return libStyle;\n\t  }\n\t};\n\t\n\texports.default = libUtils;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _immutable = __webpack_require__(8);\n\t\n\tvar _selection_types_constants = __webpack_require__(1);\n\t\n\tvar _selection_types_constants2 = _interopRequireDefault(_selection_types_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar moleculeUtils = {\n\t  /**\n\t   * Given molecule model data, return a JSON object in ChemDoodle format\n\t   * @param modelData {Object}\n\t   * @returns {String}\n\t   */\n\t  modelDataToCDJSON: function modelDataToCDJSON(modelData) {\n\t    var atoms = modelData.atoms.map(function (atom) {\n\t      return {\n\t        l: atom.elem,\n\t        x: atom.positions[0],\n\t        y: atom.positions[1],\n\t        z: atom.positions[2],\n\t        mass: atom.mass_magnitude\n\t      };\n\t    });\n\t\n\t    var bonds = modelData.bonds.map(function (bond) {\n\t      return {\n\t        b: bond.atom1_index,\n\t        e: bond.atom2_index,\n\t        o: bond.bond_order\n\t      };\n\t    });\n\t\n\t    return {\n\t      m: [{\n\t        a: atoms,\n\t        b: bonds\n\t      }]\n\t    };\n\t  },\n\t\n\t\n\t  /**\n\t   * Return a new selection of atoms considering a clicked atom, the current selection type, and\n\t   * the currently selected atoms\n\t   * @param atoms {Array of Atoms}\n\t   * @param selectedAtoms {Array of Atoms}\n\t   * @param clickedAtom {Atom}\n\t   * @param selectionType {String}\n\t   * @returns {Array of Atoms}\n\t   */\n\t  addSelection: function addSelection(atoms, selectedAtoms, clickedAtom, selectionType) {\n\t    var selectedAtomsOut = selectedAtoms.slice();\n\t    var clickedIndex = selectedAtoms.indexOf(clickedAtom.serial);\n\t    var toggleOn = clickedIndex === -1;\n\t\n\t    if (selectionType === _selection_types_constants2.default.ATOM) {\n\t      if (toggleOn) {\n\t        selectedAtomsOut.push(clickedAtom.serial);\n\t      } else {\n\t        selectedAtomsOut.splice(clickedIndex, 1);\n\t      }\n\t\n\t      return selectedAtomsOut;\n\t    }\n\t\n\t    if (toggleOn) {\n\t      atoms.forEach(function (atom) {\n\t        if (moleculeUtils.isSameGroup(clickedAtom, atom, selectionType)) {\n\t          selectedAtomsOut.push(atom.serial);\n\t        }\n\t      });\n\t    } else {\n\t      selectedAtomsOut = selectedAtomsOut.filter(function (atomSerial) {\n\t        var atom = atoms[atomSerial];\n\t        return !moleculeUtils.isSameGroup(clickedAtom, atom, selectionType);\n\t      });\n\t    }\n\t\n\t    return selectedAtomsOut;\n\t  },\n\t\n\t\n\t  /**\n\t   * Returns a boolean indicating if the given atoms are of the same type (residue or chain)\n\t   * @param atomA {Atom}\n\t   * @param atomB {Atom}\n\t   * @param selectionType {String}\n\t   * @returns {Boolean}\n\t   */\n\t  isSameGroup: function isSameGroup(atomA, atomB, selectionType) {\n\t    if (selectionType === _selection_types_constants2.default.RESIDUE) {\n\t      return atomA.residue_index === atomB.residue_index;\n\t    }\n\t    if (selectionType === _selection_types_constants2.default.CHAIN) {\n\t      return atomA.chain === atomB.chain;\n\t    }\n\t\n\t    throw new Error('selectionType must be either residue or chain');\n\t  },\n\t\n\t\n\t  /**\n\t   * Checks to see if each modelData contains the same atoms and bonds.\n\t   * Saves time by not checking every last piece of data right now.\n\t   * Currently checks atom and bond ids, and atom positions\n\t   * @param modalDataA {Object}\n\t   * @param modelDataB {Object}\n\t   * @returns {Boolean}\n\t   */\n\t  modelDataEquivalent: function modelDataEquivalent(modelDataA, modelDataB) {\n\t    if (!modelDataA || !modelDataB) {\n\t      return false;\n\t    }\n\t\n\t    var atomIdsA = new _immutable.Set(modelDataA.atoms.map(function (atom) {\n\t      return atom.serial;\n\t    }));\n\t    var atomIdsB = new _immutable.Set(modelDataB.atoms.map(function (atom) {\n\t      return atom.serial;\n\t    }));\n\t    var bondRelationsA = new _immutable.Set(modelDataA.bonds.map(function (bond) {\n\t      return bond.atom1_index + '=>' + bond.atom2_index;\n\t    }));\n\t    var bondRelationsB = new _immutable.Set(modelDataB.bonds.map(function (bond) {\n\t      return bond.atom1_index + '=>' + bond.atom2_index;\n\t    }));\n\t\n\t    var haveSameAtoms = atomIdsA.equals(atomIdsB);\n\t    var haveSameBonds = bondRelationsA.equals(bondRelationsB);\n\t\n\t    if (!haveSameAtoms || !haveSameBonds) {\n\t      return false;\n\t    }\n\t\n\t    var atomIdsToPositions = new Map();\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t      for (var _iterator = modelDataA.atoms[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var atom = _step.value;\n\t\n\t        atomIdsToPositions.set(atom.serial, atom.positions || []);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t\n\t    return modelDataB.atoms.every(function (atom) {\n\t      return atomIdsToPositions.get(atom.serial).every(function (position, index) {\n\t        var positionsAtomB = atom.positions || [];\n\t        return positionsAtomB[index] === position;\n\t      });\n\t    });\n\t  }\n\t};\n\t\n\texports.default = moleculeUtils;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"3dmol\");\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"immutable\");\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"jquery\");\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"prop-types\");\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"react\");\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e9add07a09bd7c19af3f","const selectionTypeConstants = {\n  ATOM: 'Atom',\n  RESIDUE: 'Residue',\n  CHAIN: 'Chain',\n};\n\nexport default selectionTypeConstants;\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/selection_types_constants.js","import jQuery from 'jquery';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport libUtils from '../utils/lib_utils';\nimport moleculeUtils from '../utils/molecule_utils';\nimport selectionTypesConstants from '../constants/selection_types_constants';\n\nwindow.$ = jQuery;\nconst $3Dmol = require('3dmol');\n\nconst DEFAULT_FONT_SIZE = 14;\nconst ORBITAL_COLOR_POSITIVE = 0xff0000;\nconst ORBITAL_COLOR_NEGATIVE = 0x0000ff;\nconst ORBITAL_DEFAULT_OPACITY = 0.8;\n\nclass Molecule3d extends React.Component {\n  static defaultProps = {\n    atomLabelsShown: false,\n    backgroundOpacity: 1.0,\n    backgroundColor: '#73757c',\n    height: '500px',\n    onRenderNewData: () => {},\n    orbital: {},\n    selectedAtomIds: [],\n    selectionType: selectionTypesConstants.ATOM,\n    shapes: [],\n    labels: [],\n    styles: {},\n    width: '500px',\n    outlineWidth: 0.0,\n    outlineColor: '#000000',\n    nearClip: null,\n    farClip: null,\n  }\n\n  static propTypes = {\n    atomLabelsShown: PropTypes.bool,\n    backgroundColor: PropTypes.string,\n    backgroundOpacity: PropTypes.number,\n    height: PropTypes.string,\n    modelData: PropTypes.shape({\n      atoms: PropTypes.array,\n      bonds: PropTypes.array,\n    }).isRequired,\n    onChangeSelection: PropTypes.func,\n    onRenderNewData: PropTypes.func,\n    orbital: PropTypes.shape({\n      cube_file: PropTypes.string,\n      iso_val: PropTypes.number,\n      opacity: PropTypes.number,\n      positiveVolumetricColor: PropTypes.string,\n      negativeVolumetricColor: PropTypes.string,\n    }),\n    selectedAtomIds: PropTypes.arrayOf(PropTypes.number),\n    selectionType: PropTypes.oneOf([\n      selectionTypesConstants.ATOM,\n      selectionTypesConstants.RESIDUE,\n      selectionTypesConstants.CHAIN,\n    ]),\n    shapes: PropTypes.arrayOf(PropTypes.object),\n    labels: PropTypes.arrayOf(PropTypes.object),\n    styles: PropTypes.objectOf(PropTypes.object),\n    width: PropTypes.string,\n    nearClip: PropTypes.number,\n    farClip: PropTypes.number,\n    outlineWidth: PropTypes.number,\n    outlineColor: PropTypes.string,\n  }\n\n  static isModelDataEmpty(modelData) {\n    return modelData.atoms.length === 0 && modelData.bonds.length === 0;\n  }\n\n  static render3dMolModel(glviewer, modelData) {\n    glviewer.clear();\n\n    if (Molecule3d.isModelDataEmpty(modelData)) {\n      return;\n    }\n\n    glviewer.addModel(moleculeUtils.modelDataToCDJSON(modelData), 'json', {\n      keepH: true,\n    });\n\n    // Hack in chain and residue data, since it's not supported by chemdoodle json\n    glviewer.getModel().selectedAtoms().forEach((atom) => {\n      const modifiedAtom = atom;\n      const resn = (modelData.atoms[atom.serial].residue_name || '').replace(\n        /[0-9]+/, ''\n      );\n      modifiedAtom.atom = modelData.atoms[atom.serial].name;\n      modifiedAtom.chain = modelData.atoms[atom.serial].chain;\n      modifiedAtom.resi = modelData.atoms[atom.serial].residue_index;\n      modifiedAtom.resn = resn;\n    });\n  }\n\n  static render3dMolShapes(glviewer, shapes) {\n    glviewer.removeAllShapes();\n    shapes.forEach((shape) => {\n      if (shape.type) {\n        glviewer[`add${shape.type}`](libUtils.getShapeSpec(shape));\n      }\n    });\n  }\n\n  static render3dMolLabels(glviewer, labels) {\n    glviewer.removeAllLabels();\n    labels.forEach((label) => {\n      glviewer.addLabel(label.text, label);\n    });\n  }\n\n  static render3dMolOrbital(glviewer, orbital) {\n    if (orbital.cube_file) {\n      const volumeData = new $3Dmol.VolumeData(orbital.cube_file, 'cube');\n      glviewer.addIsosurface(volumeData, {\n        isoval: orbital.iso_val,\n        color: orbital.positiveVolumetricColor || ORBITAL_COLOR_POSITIVE,\n        opacity: orbital.opacity || ORBITAL_DEFAULT_OPACITY,\n      });\n      glviewer.addIsosurface(volumeData, {\n        isoval: -orbital.iso_val,\n        color: orbital.negativeVolumetricColor || ORBITAL_COLOR_NEGATIVE,\n        opacity: orbital.opacity || ORBITAL_DEFAULT_OPACITY,\n      });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedAtomIds: props.selectedAtomIds,\n    };\n\n    this.lastOutline = { width: 0.0 };\n  }\n\n  componentDidMount() {\n    this.render3dMol();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedAtomIds: nextProps.selectedAtomIds,\n    });\n  }\n\n  componentDidUpdate() {\n    this.render3dMol();\n  }\n\n  onClickAtom = (glAtom) => {\n    const atoms = this.props.modelData.atoms;\n    const atom = atoms[glAtom.serial];\n    const selectionType = this.props.selectionType;\n    const newSelectedAtomIds = moleculeUtils.addSelection(\n      atoms,\n      this.state.selectedAtomIds,\n      atom,\n      selectionType\n    );\n\n    this.setState({\n      selectedAtomIds: newSelectedAtomIds,\n    });\n\n    if (this.props.onChangeSelection) {\n      this.props.onChangeSelection(newSelectedAtomIds);\n    }\n  }\n\n  render3dMol() {\n    if (!this.glviewer && Molecule3d.isModelDataEmpty(this.props.modelData)) {\n      return;\n    }\n\n    const glviewer = this.glviewer || $3Dmol.createViewer(jQuery(this.container), {\n      defaultcolors: $3Dmol.elementColors.rasmol,\n    });\n\n    const renderingSameModelData = moleculeUtils.modelDataEquivalent(\n      this.oldModelData, this.props.modelData\n    );\n    if (!renderingSameModelData) {\n      this.lastStylesByAtom = null;\n      Molecule3d.render3dMolModel(glviewer, this.props.modelData);\n    }\n\n    if (this.props.outlineWidth !== this.lastOutline.width ||\n        this.props.outlineColor !== this.lastOutline.color) {\n      if (this.props.outlineWidth) {\n        this.lastOutline = {\n          style: 'outline',\n          width: this.props.outlineWidth,\n          color: this.props.outlineColor,\n        };\n      } else {\n        this.lastOutline = {};\n      }\n      glviewer.setViewStyle(this.lastOutline);\n    }\n\n    const styleUpdates = Object.create(null); // style update strings to atom ids needed\n    const stylesByAtom = Object.create(null); // all atom ids to style string\n    this.props.modelData.atoms.forEach((atom, i) => {\n      const selected = this.state.selectedAtomIds.indexOf(atom.serial) !== -1;\n      const libStyle = libUtils.getLibStyle(\n        atom, selected, this.props.atomLabelsShown, this.props.styles[i]\n      );\n\n      if (this.props.atomLabelsShown) {\n        glviewer.addLabel(atom.name, {\n          fontSize: DEFAULT_FONT_SIZE,\n          position: {\n            x: atom.positions[0],\n            y: atom.positions[1],\n            z: atom.positions[2],\n          },\n        });\n      }\n\n      const libStyleString = JSON.stringify(libStyle);\n      stylesByAtom[atom.serial] = libStyleString;\n\n      // If the style string for this atom is the same as last time, then no\n      // need to set it again\n      if (this.lastStylesByAtom &&\n        this.lastStylesByAtom[atom.serial] === libStyleString) {\n        return;\n      }\n\n      // Initialize list of atom serials for this style string, if needed\n      if (!styleUpdates[libStyleString]) {\n        styleUpdates[libStyleString] = [];\n      }\n\n      styleUpdates[libStyleString].push(atom.serial);\n    });\n\n    this.lastStylesByAtom = stylesByAtom;\n\n    // Set these style types using a minimum number of calls to 3DMol\n    Object.entries(styleUpdates).forEach(([libStyleString, atomSerials]) => {\n      glviewer.setStyle(\n        { serial: atomSerials }, JSON.parse(libStyleString)\n      );\n    });\n\n    Molecule3d.render3dMolShapes(glviewer, this.props.shapes);\n    Molecule3d.render3dMolLabels(glviewer, this.props.labels);\n    Molecule3d.render3dMolOrbital(glviewer, this.props.orbital);\n\n    let customSlab = false;\n\n    if (typeof (this.props.nearClip) === 'number' &&\n        typeof (this.props.farClip) === 'number') {\n      glviewer.setSlab(this.props.nearClip, this.props.farClip);\n      customSlab = true;\n    }\n\n    glviewer.setBackgroundColor(\n      libUtils.colorStringToNumber(this.props.backgroundColor),\n      this.props.backgroundOpacity\n    );\n\n    glviewer.setClickable({}, true, this.onClickAtom);\n    glviewer.render();\n\n    if (!this.oldModelData) {\n      glviewer.zoom();\n      glviewer.zoomTo(0.8);\n    }\n\n\n    if (!renderingSameModelData) {\n      if (!customSlab) glviewer.fitSlab();\n      this.props.onRenderNewData(glviewer);\n    }\n\n    if (!this.glviewer) {\n      // AMV: hack to correctly expand viewer when first rendered\n      const self = this;\n\n      const intId = setInterval(() => {\n        // wait for canvas to be visible\n        if (self.container.children.length > 0 && self.container.children[0].offsetParent) {\n          glviewer.resize();\n          clearInterval(intId);\n        }\n      }, 50); // polling time in ms\n    }\n\n    this.oldModelData = this.props.modelData;\n    this.glviewer = glviewer;\n  }\n\n  render() {\n    return (\n      <div\n        className=\"molecule-3d\"\n        style={{\n          width: this.props.width,\n          height: this.props.height,\n          position: 'relative',\n          margin: '0 auto',\n        }}\n        ref={(c) => { this.container = c; }}\n      />\n    );\n  }\n}\n\nexport default Molecule3d;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/molecule_3d.jsx","const shapeConstants = {\n  ARROW: 'Arrow',\n  SPHERE: 'Sphere',\n  CYLINDER: 'Cylinder',\n};\n\nexport default shapeConstants;\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/shape_constants.js","/**\n * Copyright 2016 Autodesk Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Molecule3d from './components/molecule_3d.jsx';\n\nexport default Molecule3d;\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import shapeConstants from '../constants/shape_constants';\n\nconst DEFAULT_VISUALIZATION_TYPE = 'stick';\n\n/**\n * Utils for working with the 3dmol.js library\n */\nconst libUtils = {\n  /**\n   * Given a color string (like #abcdef), return its Number representation\n   * If invalid input given, return the input\n   * @param colorString {String}\n   * @returns {Number}\n   */\n  colorStringToNumber(colorString) {\n    if (colorString.length !== 4 && colorString.length !== 7) {\n      return colorString;\n    }\n    if (colorString[0] !== '#') {\n      return colorString;\n    }\n\n    const colorInt = parseInt(colorString.substr(1, colorString.length - 1), 16);\n\n    if (isNaN(colorInt)) {\n      return colorString;\n    }\n\n    return colorInt;\n  },\n\n  /**\n   * Given a shape object from the main model, return a shape spec ready to go into 3Dmol.js\n   * @param shape {Object}\n   * @returns {Object}\n   */\n  getShapeSpec(shape, callback) {\n    let color;\n    if (shape.color) {\n      color = libUtils.colorStringToNumber(shape.color);\n    }\n\n    const shapeSpec = Object.assign({}, {\n      alpha: 0.8,\n      callback,\n      clickable: false,\n      color: 0x00FE03,\n      radius: shape.radius,\n    }, shape, { color });\n\n    if (shape.type === shapeConstants.ARROW) {\n      shapeSpec.start = shape.start;\n      shapeSpec.end = shape.end;\n    } else if (shape.type === shapeConstants.SPHERE) {\n      shapeSpec.center = shape.center;\n    } else if (shape.type === shapeConstants.CYLINDER) {\n      shapeSpec.fromCap = true;\n      shapeSpec.toCap = true;\n      shapeSpec.start = shape.start;\n      shapeSpec.end = shape.end;\n    } else {\n      throw new Error('Invalid shape type.');\n    }\n\n    return shapeSpec;\n  },\n\n  /**\n   * Get the style object needed by 3dMol for the given atom\n   * @param atom {Object}\n   * @returns {Object}\n   */\n  getLibStyle(atom, selected, atomLabelsShown, style = {}) {\n    const libStyle = {};\n    const visualizationType = style.visualization_type || DEFAULT_VISUALIZATION_TYPE;\n\n    libStyle[visualizationType] = {};\n    Object.entries(style).forEach(([styleKey, styleValue]) => {\n      if (styleKey !== 'visualization_type') {\n        libStyle[visualizationType][styleKey] = styleValue;\n      }\n    });\n\n    if (selected) {\n      libStyle[visualizationType].color = 0x1FF3FE;\n    }\n\n    if (typeof libStyle[visualizationType].color === 'string') {\n      libStyle[visualizationType].color = libUtils.colorStringToNumber(\n        libStyle[visualizationType].color\n      );\n    }\n\n    return libStyle;\n  },\n};\n\nexport default libUtils;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/lib_utils.js","import { Set as ISet } from 'immutable';\nimport selectionTypesConstants from '../constants/selection_types_constants';\n\nconst moleculeUtils = {\n  /**\n   * Given molecule model data, return a JSON object in ChemDoodle format\n   * @param modelData {Object}\n   * @returns {String}\n   */\n  modelDataToCDJSON(modelData) {\n    const atoms = modelData.atoms.map(atom => ({\n      l: atom.elem,\n      x: atom.positions[0],\n      y: atom.positions[1],\n      z: atom.positions[2],\n      mass: atom.mass_magnitude,\n    }));\n\n    const bonds = modelData.bonds.map(bond => ({\n      b: bond.atom1_index,\n      e: bond.atom2_index,\n      o: bond.bond_order,\n    }));\n\n    return {\n      m: [{\n        a: atoms,\n        b: bonds,\n      }],\n    };\n  },\n\n  /**\n   * Return a new selection of atoms considering a clicked atom, the current selection type, and\n   * the currently selected atoms\n   * @param atoms {Array of Atoms}\n   * @param selectedAtoms {Array of Atoms}\n   * @param clickedAtom {Atom}\n   * @param selectionType {String}\n   * @returns {Array of Atoms}\n   */\n  addSelection(atoms, selectedAtoms, clickedAtom, selectionType) {\n    let selectedAtomsOut = selectedAtoms.slice();\n    const clickedIndex = selectedAtoms.indexOf(clickedAtom.serial);\n    const toggleOn = clickedIndex === -1;\n\n    if (selectionType === selectionTypesConstants.ATOM) {\n      if (toggleOn) {\n        selectedAtomsOut.push(clickedAtom.serial);\n      } else {\n        selectedAtomsOut.splice(clickedIndex, 1);\n      }\n\n      return selectedAtomsOut;\n    }\n\n    if (toggleOn) {\n      atoms.forEach((atom) => {\n        if (moleculeUtils.isSameGroup(clickedAtom, atom, selectionType)) {\n          selectedAtomsOut.push(atom.serial);\n        }\n      });\n    } else {\n      selectedAtomsOut = selectedAtomsOut.filter((atomSerial) => {\n        const atom = atoms[atomSerial];\n        return !moleculeUtils.isSameGroup(clickedAtom, atom, selectionType);\n      });\n    }\n\n    return selectedAtomsOut;\n  },\n\n  /**\n   * Returns a boolean indicating if the given atoms are of the same type (residue or chain)\n   * @param atomA {Atom}\n   * @param atomB {Atom}\n   * @param selectionType {String}\n   * @returns {Boolean}\n   */\n  isSameGroup(atomA, atomB, selectionType) {\n    if (selectionType === selectionTypesConstants.RESIDUE) {\n      return atomA.residue_index === atomB.residue_index;\n    }\n    if (selectionType === selectionTypesConstants.CHAIN) {\n      return atomA.chain === atomB.chain;\n    }\n\n    throw new Error('selectionType must be either residue or chain');\n  },\n\n  /**\n   * Checks to see if each modelData contains the same atoms and bonds.\n   * Saves time by not checking every last piece of data right now.\n   * Currently checks atom and bond ids, and atom positions\n   * @param modalDataA {Object}\n   * @param modelDataB {Object}\n   * @returns {Boolean}\n   */\n  modelDataEquivalent(modelDataA, modelDataB) {\n    if (!modelDataA || !modelDataB) {\n      return false;\n    }\n\n    const atomIdsA = new ISet(modelDataA.atoms.map(atom => atom.serial));\n    const atomIdsB = new ISet(modelDataB.atoms.map(atom => atom.serial));\n    const bondRelationsA = new ISet(modelDataA.bonds.map(bond =>\n      `${bond.atom1_index}=>${bond.atom2_index}`)\n    );\n    const bondRelationsB = new ISet(modelDataB.bonds.map(bond =>\n      `${bond.atom1_index}=>${bond.atom2_index}`)\n    );\n\n    const haveSameAtoms = atomIdsA.equals(atomIdsB);\n    const haveSameBonds = bondRelationsA.equals(bondRelationsB);\n\n    if (!haveSameAtoms || !haveSameBonds) {\n      return false;\n    }\n\n    const atomIdsToPositions = new Map();\n    for (const atom of modelDataA.atoms) {\n      atomIdsToPositions.set(atom.serial, atom.positions || []);\n    }\n    return modelDataB.atoms.every(atom =>\n      atomIdsToPositions.get(atom.serial).every((position, index) => {\n        const positionsAtomB = atom.positions || [];\n        return positionsAtomB[index] === position;\n      })\n    );\n  },\n};\n\nexport default moleculeUtils;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/molecule_utils.js","module.exports = require(\"3dmol\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"3dmol\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutable\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"jquery\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}